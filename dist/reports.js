(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?factory(exports,require('@supportpal/sweetalert2'),require('datatables.net-dt')):typeof define==='function'&&define.amd?define(['exports','@supportpal/sweetalert2','datatables.net-dt'],factory):(global=typeof globalThis!=='undefined'?globalThis:global||self,factory(global.Reports={},global.Swal,global.$.fn.dataTable));})(this,function(exports,Swal,DataTable){'use strict';function styleInject(css,ref){if(ref===void 0)ref={};var insertAt=ref.insertAt;if(!css||typeof document==='undefined'){return;}var head=document.head||document.getElementsByTagName('head')[0];var style=document.createElement('style');style.type='text/css';if(insertAt==='top'){if(head.firstChild){head.insertBefore(style,head.firstChild);}else{head.appendChild(style);}}else{head.appendChild(style);}if(style.styleSheet){style.styleSheet.cssText=css;}else{style.appendChild(document.createTextNode(css));}}var css_248z$2=".grid-stack{position:relative}.grid-stack-rtl{direction:ltr}.grid-stack-rtl>.grid-stack-item{direction:rtl}.grid-stack-placeholder>.placeholder-content{background-color:rgba(0,0,0,.1);margin:0;position:absolute;width:auto;z-index:0!important}.grid-stack>.grid-stack-item{position:absolute;padding:0}.grid-stack>.grid-stack-item>.grid-stack-item-content{margin:0;position:absolute;width:auto;overflow-x:hidden;overflow-y:auto}.grid-stack>.grid-stack-item.size-to-content:not(.size-to-content-max)>.grid-stack-item-content{overflow-y:hidden}.grid-stack-item>.ui-resizable-handle{position:absolute;font-size:.1px;display:block;touch-action:none}.grid-stack-item.ui-resizable-autohide>.ui-resizable-handle,.grid-stack-item.ui-resizable-disabled>.ui-resizable-handle{display:none}.grid-stack-item>.ui-resizable-ne,.grid-stack-item>.ui-resizable-nw,.grid-stack-item>.ui-resizable-se,.grid-stack-item>.ui-resizable-sw{background-image:url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"%23666\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewBox=\"0 0 20 20\"><path d=\"m10 3 2 2H8l2-2v14l-2-2h4l-2 2\"/></svg>');background-repeat:no-repeat;background-position:center}.grid-stack-item>.ui-resizable-ne{transform:rotate(45deg)}.grid-stack-item>.ui-resizable-sw{transform:rotate(45deg)}.grid-stack-item>.ui-resizable-nw{transform:rotate(-45deg)}.grid-stack-item>.ui-resizable-se{transform:rotate(-45deg)}.grid-stack-item>.ui-resizable-nw{cursor:nw-resize;width:20px;height:20px;top:0}.grid-stack-item>.ui-resizable-n{cursor:n-resize;height:10px;top:0;left:25px;right:25px}.grid-stack-item>.ui-resizable-ne{cursor:ne-resize;width:20px;height:20px;top:0}.grid-stack-item>.ui-resizable-e{cursor:e-resize;width:10px;top:15px;bottom:15px}.grid-stack-item>.ui-resizable-se{cursor:se-resize;width:20px;height:20px}.grid-stack-item>.ui-resizable-s{cursor:s-resize;height:10px;left:25px;bottom:0;right:25px}.grid-stack-item>.ui-resizable-sw{cursor:sw-resize;width:20px;height:20px}.grid-stack-item>.ui-resizable-w{cursor:w-resize;width:10px;top:15px;bottom:15px}.grid-stack-item.ui-draggable-dragging>.ui-resizable-handle{display:none!important}.grid-stack-item.ui-draggable-dragging{will-change:left,top;cursor:move}.grid-stack-item.ui-resizable-resizing{will-change:width,height}.ui-draggable-dragging,.ui-resizable-resizing{z-index:10000}.ui-draggable-dragging>.grid-stack-item-content,.ui-resizable-resizing>.grid-stack-item-content{box-shadow:1px 4px 6px rgba(0,0,0,.2);opacity:.8}.grid-stack-animate,.grid-stack-animate .grid-stack-item{transition:left .3s,top .3s,height .3s,width .3s}.grid-stack-animate .grid-stack-item.grid-stack-placeholder,.grid-stack-animate .grid-stack-item.ui-draggable-dragging,.grid-stack-animate .grid-stack-item.ui-resizable-resizing{transition:left 0s,top 0s,height 0s,width 0s}.grid-stack>.grid-stack-item[gs-y=\"0\"]{top:0}.grid-stack>.grid-stack-item[gs-x=\"0\"]{left:0}.gs-12>.grid-stack-item{width:8.333%}.gs-12>.grid-stack-item[gs-x=\"1\"]{left:8.333%}.gs-12>.grid-stack-item[gs-w=\"2\"]{width:16.667%}.gs-12>.grid-stack-item[gs-x=\"2\"]{left:16.667%}.gs-12>.grid-stack-item[gs-w=\"3\"]{width:25%}.gs-12>.grid-stack-item[gs-x=\"3\"]{left:25%}.gs-12>.grid-stack-item[gs-w=\"4\"]{width:33.333%}.gs-12>.grid-stack-item[gs-x=\"4\"]{left:33.333%}.gs-12>.grid-stack-item[gs-w=\"5\"]{width:41.667%}.gs-12>.grid-stack-item[gs-x=\"5\"]{left:41.667%}.gs-12>.grid-stack-item[gs-w=\"6\"]{width:50%}.gs-12>.grid-stack-item[gs-x=\"6\"]{left:50%}.gs-12>.grid-stack-item[gs-w=\"7\"]{width:58.333%}.gs-12>.grid-stack-item[gs-x=\"7\"]{left:58.333%}.gs-12>.grid-stack-item[gs-w=\"8\"]{width:66.667%}.gs-12>.grid-stack-item[gs-x=\"8\"]{left:66.667%}.gs-12>.grid-stack-item[gs-w=\"9\"]{width:75%}.gs-12>.grid-stack-item[gs-x=\"9\"]{left:75%}.gs-12>.grid-stack-item[gs-w=\"10\"]{width:83.333%}.gs-12>.grid-stack-item[gs-x=\"10\"]{left:83.333%}.gs-12>.grid-stack-item[gs-w=\"11\"]{width:91.667%}.gs-12>.grid-stack-item[gs-x=\"11\"]{left:91.667%}.gs-12>.grid-stack-item[gs-w=\"12\"]{width:100%}.gs-1>.grid-stack-item{width:100%}";styleInject(css_248z$2);var css_248z$1=".gs-2>.grid-stack-item{width:50%}.gs-2>.grid-stack-item[gs-x=\"1\"]{left:50%}.gs-2>.grid-stack-item[gs-w=\"2\"]{width:100%}.gs-3>.grid-stack-item{width:33.333%}.gs-3>.grid-stack-item[gs-x=\"1\"]{left:33.333%}.gs-3>.grid-stack-item[gs-w=\"2\"]{width:66.667%}.gs-3>.grid-stack-item[gs-x=\"2\"]{left:66.667%}.gs-3>.grid-stack-item[gs-w=\"3\"]{width:100%}.gs-4>.grid-stack-item{width:25%}.gs-4>.grid-stack-item[gs-x=\"1\"]{left:25%}.gs-4>.grid-stack-item[gs-w=\"2\"]{width:50%}.gs-4>.grid-stack-item[gs-x=\"2\"]{left:50%}.gs-4>.grid-stack-item[gs-w=\"3\"]{width:75%}.gs-4>.grid-stack-item[gs-x=\"3\"]{left:75%}.gs-4>.grid-stack-item[gs-w=\"4\"]{width:100%}.gs-5>.grid-stack-item{width:20%}.gs-5>.grid-stack-item[gs-x=\"1\"]{left:20%}.gs-5>.grid-stack-item[gs-w=\"2\"]{width:40%}.gs-5>.grid-stack-item[gs-x=\"2\"]{left:40%}.gs-5>.grid-stack-item[gs-w=\"3\"]{width:60%}.gs-5>.grid-stack-item[gs-x=\"3\"]{left:60%}.gs-5>.grid-stack-item[gs-w=\"4\"]{width:80%}.gs-5>.grid-stack-item[gs-x=\"4\"]{left:80%}.gs-5>.grid-stack-item[gs-w=\"5\"]{width:100%}.gs-6>.grid-stack-item{width:16.667%}.gs-6>.grid-stack-item[gs-x=\"1\"]{left:16.667%}.gs-6>.grid-stack-item[gs-w=\"2\"]{width:33.333%}.gs-6>.grid-stack-item[gs-x=\"2\"]{left:33.333%}.gs-6>.grid-stack-item[gs-w=\"3\"]{width:50%}.gs-6>.grid-stack-item[gs-x=\"3\"]{left:50%}.gs-6>.grid-stack-item[gs-w=\"4\"]{width:66.667%}.gs-6>.grid-stack-item[gs-x=\"4\"]{left:66.667%}.gs-6>.grid-stack-item[gs-w=\"5\"]{width:83.333%}.gs-6>.grid-stack-item[gs-x=\"5\"]{left:83.333%}.gs-6>.grid-stack-item[gs-w=\"6\"]{width:100%}.gs-7>.grid-stack-item{width:14.286%}.gs-7>.grid-stack-item[gs-x=\"1\"]{left:14.286%}.gs-7>.grid-stack-item[gs-w=\"2\"]{width:28.571%}.gs-7>.grid-stack-item[gs-x=\"2\"]{left:28.571%}.gs-7>.grid-stack-item[gs-w=\"3\"]{width:42.857%}.gs-7>.grid-stack-item[gs-x=\"3\"]{left:42.857%}.gs-7>.grid-stack-item[gs-w=\"4\"]{width:57.143%}.gs-7>.grid-stack-item[gs-x=\"4\"]{left:57.143%}.gs-7>.grid-stack-item[gs-w=\"5\"]{width:71.429%}.gs-7>.grid-stack-item[gs-x=\"5\"]{left:71.429%}.gs-7>.grid-stack-item[gs-w=\"6\"]{width:85.714%}.gs-7>.grid-stack-item[gs-x=\"6\"]{left:85.714%}.gs-7>.grid-stack-item[gs-w=\"7\"]{width:100%}.gs-8>.grid-stack-item{width:12.5%}.gs-8>.grid-stack-item[gs-x=\"1\"]{left:12.5%}.gs-8>.grid-stack-item[gs-w=\"2\"]{width:25%}.gs-8>.grid-stack-item[gs-x=\"2\"]{left:25%}.gs-8>.grid-stack-item[gs-w=\"3\"]{width:37.5%}.gs-8>.grid-stack-item[gs-x=\"3\"]{left:37.5%}.gs-8>.grid-stack-item[gs-w=\"4\"]{width:50%}.gs-8>.grid-stack-item[gs-x=\"4\"]{left:50%}.gs-8>.grid-stack-item[gs-w=\"5\"]{width:62.5%}.gs-8>.grid-stack-item[gs-x=\"5\"]{left:62.5%}.gs-8>.grid-stack-item[gs-w=\"6\"]{width:75%}.gs-8>.grid-stack-item[gs-x=\"6\"]{left:75%}.gs-8>.grid-stack-item[gs-w=\"7\"]{width:87.5%}.gs-8>.grid-stack-item[gs-x=\"7\"]{left:87.5%}.gs-8>.grid-stack-item[gs-w=\"8\"]{width:100%}.gs-9>.grid-stack-item{width:11.111%}.gs-9>.grid-stack-item[gs-x=\"1\"]{left:11.111%}.gs-9>.grid-stack-item[gs-w=\"2\"]{width:22.222%}.gs-9>.grid-stack-item[gs-x=\"2\"]{left:22.222%}.gs-9>.grid-stack-item[gs-w=\"3\"]{width:33.333%}.gs-9>.grid-stack-item[gs-x=\"3\"]{left:33.333%}.gs-9>.grid-stack-item[gs-w=\"4\"]{width:44.444%}.gs-9>.grid-stack-item[gs-x=\"4\"]{left:44.444%}.gs-9>.grid-stack-item[gs-w=\"5\"]{width:55.556%}.gs-9>.grid-stack-item[gs-x=\"5\"]{left:55.556%}.gs-9>.grid-stack-item[gs-w=\"6\"]{width:66.667%}.gs-9>.grid-stack-item[gs-x=\"6\"]{left:66.667%}.gs-9>.grid-stack-item[gs-w=\"7\"]{width:77.778%}.gs-9>.grid-stack-item[gs-x=\"7\"]{left:77.778%}.gs-9>.grid-stack-item[gs-w=\"8\"]{width:88.889%}.gs-9>.grid-stack-item[gs-x=\"8\"]{left:88.889%}.gs-9>.grid-stack-item[gs-w=\"9\"]{width:100%}.gs-10>.grid-stack-item{width:10%}.gs-10>.grid-stack-item[gs-x=\"1\"]{left:10%}.gs-10>.grid-stack-item[gs-w=\"2\"]{width:20%}.gs-10>.grid-stack-item[gs-x=\"2\"]{left:20%}.gs-10>.grid-stack-item[gs-w=\"3\"]{width:30%}.gs-10>.grid-stack-item[gs-x=\"3\"]{left:30%}.gs-10>.grid-stack-item[gs-w=\"4\"]{width:40%}.gs-10>.grid-stack-item[gs-x=\"4\"]{left:40%}.gs-10>.grid-stack-item[gs-w=\"5\"]{width:50%}.gs-10>.grid-stack-item[gs-x=\"5\"]{left:50%}.gs-10>.grid-stack-item[gs-w=\"6\"]{width:60%}.gs-10>.grid-stack-item[gs-x=\"6\"]{left:60%}.gs-10>.grid-stack-item[gs-w=\"7\"]{width:70%}.gs-10>.grid-stack-item[gs-x=\"7\"]{left:70%}.gs-10>.grid-stack-item[gs-w=\"8\"]{width:80%}.gs-10>.grid-stack-item[gs-x=\"8\"]{left:80%}.gs-10>.grid-stack-item[gs-w=\"9\"]{width:90%}.gs-10>.grid-stack-item[gs-x=\"9\"]{left:90%}.gs-10>.grid-stack-item[gs-w=\"10\"]{width:100%}.gs-11>.grid-stack-item{width:9.091%}.gs-11>.grid-stack-item[gs-x=\"1\"]{left:9.091%}.gs-11>.grid-stack-item[gs-w=\"2\"]{width:18.182%}.gs-11>.grid-stack-item[gs-x=\"2\"]{left:18.182%}.gs-11>.grid-stack-item[gs-w=\"3\"]{width:27.273%}.gs-11>.grid-stack-item[gs-x=\"3\"]{left:27.273%}.gs-11>.grid-stack-item[gs-w=\"4\"]{width:36.364%}.gs-11>.grid-stack-item[gs-x=\"4\"]{left:36.364%}.gs-11>.grid-stack-item[gs-w=\"5\"]{width:45.455%}.gs-11>.grid-stack-item[gs-x=\"5\"]{left:45.455%}.gs-11>.grid-stack-item[gs-w=\"6\"]{width:54.545%}.gs-11>.grid-stack-item[gs-x=\"6\"]{left:54.545%}.gs-11>.grid-stack-item[gs-w=\"7\"]{width:63.636%}.gs-11>.grid-stack-item[gs-x=\"7\"]{left:63.636%}.gs-11>.grid-stack-item[gs-w=\"8\"]{width:72.727%}.gs-11>.grid-stack-item[gs-x=\"8\"]{left:72.727%}.gs-11>.grid-stack-item[gs-w=\"9\"]{width:81.818%}.gs-11>.grid-stack-item[gs-x=\"9\"]{left:81.818%}.gs-11>.grid-stack-item[gs-w=\"10\"]{width:90.909%}.gs-11>.grid-stack-item[gs-x=\"10\"]{left:90.909%}.gs-11>.grid-stack-item[gs-w=\"11\"]{width:100%}";styleInject(css_248z$1);var css_248z=".grid-stack {\n\n    margin: -0.75rem\n}\n\n.grid-stack-item-content {\n\n    margin-bottom: 1.5rem;\n\n    border-radius: 0.25rem;\n\n    border-width: 1px;\n\n    border-color: var(--color-background-tertiary);\n\n    background-color: var(--color-background-primary);\n\n    color: var(--color-text-primary)\n}\n\n.sp-action-bar {\n\n    margin-bottom: 0px;\n\n    display: inline-block;\n\n    border-radius: 0.25rem;\n\n    border-width: 1px;\n\n    border-color: var(--color-background-tertiary);\n\n    background-color: var(--color-background-secondary)\n}\n\n.sp-action-bar .sp-option {\n\n    height: 100%;\n\n    border-radius: 0px;\n\n    border-inline-end-width: 1px;\n\n    border-color: var(--color-background-tertiary);\n\n    padding-left: 1rem;\n\n    padding-right: 1rem;\n\n    padding-top: 0.5rem;\n\n    padding-bottom: 0.5rem\n}\n\n.sp-action-bar .sp-option:last-child {\n\n    border-inline-end-width: 0px\n}\n\n.sp-action-bar .sp-option.selected {\n\n    background-color: var(--color-background-tertiary);\n\n    font-weight: 700\n}\n\n.sp-action-bar .sp-filter-datepicker-text-wrapper,\n.sp-action-bar .sp-filter-datepicker-text-wrapper .sp-filter-datepicker-text {\n\n    padding-inline-start: 0.5rem\n}\n\n.table-card div.dt-container .dt-paging {\n\n    margin-left: 0.75rem;\n\n    margin-right: 0.75rem;\n\n    padding-top: 0.75rem;\n\n    padding-bottom: 0.75rem\n}\n\n.table-card div.dt-container .dt-paging button {\n\n    --tw-shadow: 0 0 #0000;\n\n    --tw-shadow-colored: 0 0 #0000;\n\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\n}\n\n.table-card table.dataTable.dtr-inline.collapsed > thead > tr > th:first-child {\n\n    border-start-start-radius: 0.25rem\n}\n\n.table-card table.dataTable.dtr-inline.collapsed > thead > tr > th:last-child {\n\n    border-start-end-radius: 0.25rem\n}\n";styleInject(css_248z);(function(factory){typeof define==='function'&&define.amd?define(factory):factory();})(function(){function getDefaultExportFromCjs(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,'default')?x['default']:x;}var intlTelInput$1={exports:{}};/*
  	 * International Telephone Input v25.3.1
  	 * https://github.com/jackocnr/intl-tel-input.git
  	 * Licensed under the MIT license
  	 */var hasRequiredIntlTelInput;function requireIntlTelInput(){if(hasRequiredIntlTelInput)return intlTelInput$1.exports;hasRequiredIntlTelInput=1;(function(module){// UMD
(function(factory){if(module.exports){module.exports=factory();}else{window.intlTelInput=factory();}})(()=>{var factoryOutput=(()=>{var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __hasOwnProp=Object.prototype.hasOwnProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true});};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from==="object"||typeof from==="function"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});}return to;};var __toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:true}),mod);// src/js/intl-tel-input.ts
var intl_tel_input_exports={};__export(intl_tel_input_exports,{Iti:()=>Iti,default:()=>intl_tel_input_default});// src/js/intl-tel-input/data.ts
var rawCountryData=[["af",// Afghanistan
"93"],["ax",// Åland Islands
"358",1],["al",// Albania
"355"],["dz",// Algeria
"213"],["as",// American Samoa
"1",5,["684"]],["ad",// Andorra
"376"],["ao",// Angola
"244"],["ai",// Anguilla
"1",6,["264"]],["ag",// Antigua and Barbuda
"1",7,["268"]],["ar",// Argentina
"54"],["am",// Armenia
"374"],["aw",// Aruba
"297"],["ac",// Ascension Island
"247"],["au",// Australia
"61",0,null,"0"],["at",// Austria
"43"],["az",// Azerbaijan
"994"],["bs",// Bahamas
"1",8,["242"]],["bh",// Bahrain
"973"],["bd",// Bangladesh
"880"],["bb",// Barbados
"1",9,["246"]],["by",// Belarus
"375"],["be",// Belgium
"32"],["bz",// Belize
"501"],["bj",// Benin
"229"],["bm",// Bermuda
"1",10,["441"]],["bt",// Bhutan
"975"],["bo",// Bolivia
"591"],["ba",// Bosnia and Herzegovina
"387"],["bw",// Botswana
"267"],["br",// Brazil
"55"],["io",// British Indian Ocean Territory
"246"],["vg",// British Virgin Islands
"1",11,["284"]],["bn",// Brunei
"673"],["bg",// Bulgaria
"359"],["bf",// Burkina Faso
"226"],["bi",// Burundi
"257"],["kh",// Cambodia
"855"],["cm",// Cameroon
"237"],["ca",// Canada
"1",1,["204","226","236","249","250","263","289","306","343","354","365","367","368","382","387","403","416","418","428","431","437","438","450","584","468","474","506","514","519","548","579","581","584","587","604","613","639","647","672","683","705","709","742","753","778","780","782","807","819","825","867","873","879","902","905"]],["cv",// Cape Verde
"238"],["bq",// Caribbean Netherlands
"599",1,["3","4","7"]],["ky",// Cayman Islands
"1",12,["345"]],["cf",// Central African Republic
"236"],["td",// Chad
"235"],["cl",// Chile
"56"],["cn",// China
"86"],["cx",// Christmas Island
"61",2,["89164"],"0"],["cc",// Cocos (Keeling) Islands
"61",1,["89162"],"0"],["co",// Colombia
"57"],["km",// Comoros
"269"],["cg",// Congo (Brazzaville)
"242"],["cd",// Congo (Kinshasa)
"243"],["ck",// Cook Islands
"682"],["cr",// Costa Rica
"506"],["ci",// Côte d'Ivoire
"225"],["hr",// Croatia
"385"],["cu",// Cuba
"53"],["cw",// Curaçao
"599",0],["cy",// Cyprus
"357"],["cz",// Czech Republic
"420"],["dk",// Denmark
"45"],["dj",// Djibouti
"253"],["dm",// Dominica
"1",13,["767"]],["do",// Dominican Republic
"1",2,["809","829","849"]],["ec",// Ecuador
"593"],["eg",// Egypt
"20"],["sv",// El Salvador
"503"],["gq",// Equatorial Guinea
"240"],["er",// Eritrea
"291"],["ee",// Estonia
"372"],["sz",// Eswatini
"268"],["et",// Ethiopia
"251"],["fk",// Falkland Islands (Malvinas)
"500"],["fo",// Faroe Islands
"298"],["fj",// Fiji
"679"],["fi",// Finland
"358",0],["fr",// France
"33"],["gf",// French Guiana
"594"],["pf",// French Polynesia
"689"],["ga",// Gabon
"241"],["gm",// Gambia
"220"],["ge",// Georgia
"995"],["de",// Germany
"49"],["gh",// Ghana
"233"],["gi",// Gibraltar
"350"],["gr",// Greece
"30"],["gl",// Greenland
"299"],["gd",// Grenada
"1",14,["473"]],["gp",// Guadeloupe
"590",0],["gu",// Guam
"1",15,["671"]],["gt",// Guatemala
"502"],["gg",// Guernsey
"44",1,["1481","7781","7839","7911"],"0"],["gn",// Guinea
"224"],["gw",// Guinea-Bissau
"245"],["gy",// Guyana
"592"],["ht",// Haiti
"509"],["hn",// Honduras
"504"],["hk",// Hong Kong SAR China
"852"],["hu",// Hungary
"36"],["is",// Iceland
"354"],["in",// India
"91"],["id",// Indonesia
"62"],["ir",// Iran
"98"],["iq",// Iraq
"964"],["ie",// Ireland
"353"],["im",// Isle of Man
"44",2,["1624","74576","7524","7924","7624"],"0"],["il",// Israel
"972"],["it",// Italy
"39",0],["jm",// Jamaica
"1",4,["876","658"]],["jp",// Japan
"81"],["je",// Jersey
"44",3,["1534","7509","7700","7797","7829","7937"],"0"],["jo",// Jordan
"962"],["kz",// Kazakhstan
"7",1,["33","7"],"8"],["ke",// Kenya
"254"],["ki",// Kiribati
"686"],["xk",// Kosovo
"383"],["kw",// Kuwait
"965"],["kg",// Kyrgyzstan
"996"],["la",// Laos
"856"],["lv",// Latvia
"371"],["lb",// Lebanon
"961"],["ls",// Lesotho
"266"],["lr",// Liberia
"231"],["ly",// Libya
"218"],["li",// Liechtenstein
"423"],["lt",// Lithuania
"370"],["lu",// Luxembourg
"352"],["mo",// Macao SAR China
"853"],["mg",// Madagascar
"261"],["mw",// Malawi
"265"],["my",// Malaysia
"60"],["mv",// Maldives
"960"],["ml",// Mali
"223"],["mt",// Malta
"356"],["mh",// Marshall Islands
"692"],["mq",// Martinique
"596"],["mr",// Mauritania
"222"],["mu",// Mauritius
"230"],["yt",// Mayotte
"262",1,["269","639"],"0"],["mx",// Mexico
"52"],["fm",// Micronesia
"691"],["md",// Moldova
"373"],["mc",// Monaco
"377"],["mn",// Mongolia
"976"],["me",// Montenegro
"382"],["ms",// Montserrat
"1",16,["664"]],["ma",// Morocco
"212",0,null,"0"],["mz",// Mozambique
"258"],["mm",// Myanmar (Burma)
"95"],["na",// Namibia
"264"],["nr",// Nauru
"674"],["np",// Nepal
"977"],["nl",// Netherlands
"31"],["nc",// New Caledonia
"687"],["nz",// New Zealand
"64"],["ni",// Nicaragua
"505"],["ne",// Niger
"227"],["ng",// Nigeria
"234"],["nu",// Niue
"683"],["nf",// Norfolk Island
"672"],["kp",// North Korea
"850"],["mk",// North Macedonia
"389"],["mp",// Northern Mariana Islands
"1",17,["670"]],["no",// Norway
"47",0],["om",// Oman
"968"],["pk",// Pakistan
"92"],["pw",// Palau
"680"],["ps",// Palestinian Territories
"970"],["pa",// Panama
"507"],["pg",// Papua New Guinea
"675"],["py",// Paraguay
"595"],["pe",// Peru
"51"],["ph",// Philippines
"63"],["pl",// Poland
"48"],["pt",// Portugal
"351"],["pr",// Puerto Rico
"1",3,["787","939"]],["qa",// Qatar
"974"],["re",// Réunion
"262",0,null,"0"],["ro",// Romania
"40"],["ru",// Russia
"7",0,null,"8"],["rw",// Rwanda
"250"],["ws",// Samoa
"685"],["sm",// San Marino
"378"],["st",// São Tomé & Príncipe
"239"],["sa",// Saudi Arabia
"966"],["sn",// Senegal
"221"],["rs",// Serbia
"381"],["sc",// Seychelles
"248"],["sl",// Sierra Leone
"232"],["sg",// Singapore
"65"],["sx",// Sint Maarten
"1",21,["721"]],["sk",// Slovakia
"421"],["si",// Slovenia
"386"],["sb",// Solomon Islands
"677"],["so",// Somalia
"252"],["za",// South Africa
"27"],["kr",// South Korea
"82"],["ss",// South Sudan
"211"],["es",// Spain
"34"],["lk",// Sri Lanka
"94"],["bl",// St. Barthélemy
"590",1],["sh",// St. Helena
"290"],["kn",// St. Kitts & Nevis
"1",18,["869"]],["lc",// St. Lucia
"1",19,["758"]],["mf",// St. Martin
"590",2],["pm",// St. Pierre & Miquelon
"508"],["vc",// St. Vincent & Grenadines
"1",20,["784"]],["sd",// Sudan
"249"],["sr",// Suriname
"597"],["sj",// Svalbard & Jan Mayen
"47",1,["79"]],["se",// Sweden
"46"],["ch",// Switzerland
"41"],["sy",// Syria
"963"],["tw",// Taiwan
"886"],["tj",// Tajikistan
"992"],["tz",// Tanzania
"255"],["th",// Thailand
"66"],["tl",// Timor-Leste
"670"],["tg",// Togo
"228"],["tk",// Tokelau
"690"],["to",// Tonga
"676"],["tt",// Trinidad & Tobago
"1",22,["868"]],["tn",// Tunisia
"216"],["tr",// Turkey
"90"],["tm",// Turkmenistan
"993"],["tc",// Turks & Caicos Islands
"1",23,["649"]],["tv",// Tuvalu
"688"],["ug",// Uganda
"256"],["ua",// Ukraine
"380"],["ae",// United Arab Emirates
"971"],["gb",// United Kingdom
"44",0,null,"0"],["us",// United States
"1",0],["uy",// Uruguay
"598"],["vi",// U.S. Virgin Islands
"1",24,["340"]],["uz",// Uzbekistan
"998"],["vu",// Vanuatu
"678"],["va",// Vatican City
"39",1,["06698"]],["ve",// Venezuela
"58"],["vn",// Vietnam
"84"],["wf",// Wallis & Futuna
"681"],["eh",// Western Sahara
"212",1,["5288","5289"],"0"],["ye",// Yemen
"967"],["zm",// Zambia
"260"],["zw",// Zimbabwe
"263"]];var allCountries=[];for(let i=0;i<rawCountryData.length;i++){const c=rawCountryData[i];allCountries[i]={name:"",// this is now populated in the plugin
iso2:c[0],dialCode:c[1],priority:c[2]||0,areaCodes:c[3]||null,nodeById:{},nationalPrefix:c[4]||null};}var data_default=allCountries;// src/js/intl-tel-input/i18n/en/countries.ts
var countryTranslations={ad:"Andorra",ae:"United Arab Emirates",af:"Afghanistan",ag:"Antigua & Barbuda",ai:"Anguilla",al:"Albania",am:"Armenia",ao:"Angola",ar:"Argentina",as:"American Samoa",at:"Austria",au:"Australia",aw:"Aruba",ax:"\xC5land Islands",az:"Azerbaijan",ba:"Bosnia & Herzegovina",bb:"Barbados",bd:"Bangladesh",be:"Belgium",bf:"Burkina Faso",bg:"Bulgaria",bh:"Bahrain",bi:"Burundi",bj:"Benin",bl:"St. Barth\xE9lemy",bm:"Bermuda",bn:"Brunei",bo:"Bolivia",bq:"Caribbean Netherlands",br:"Brazil",bs:"Bahamas",bt:"Bhutan",bw:"Botswana",by:"Belarus",bz:"Belize",ca:"Canada",cc:"Cocos (Keeling) Islands",cd:"Congo - Kinshasa",cf:"Central African Republic",cg:"Congo - Brazzaville",ch:"Switzerland",ci:"C\xF4te d\u2019Ivoire",ck:"Cook Islands",cl:"Chile",cm:"Cameroon",cn:"China",co:"Colombia",cr:"Costa Rica",cu:"Cuba",cv:"Cape Verde",cw:"Cura\xE7ao",cx:"Christmas Island",cy:"Cyprus",cz:"Czechia",de:"Germany",dj:"Djibouti",dk:"Denmark",dm:"Dominica",do:"Dominican Republic",dz:"Algeria",ec:"Ecuador",ee:"Estonia",eg:"Egypt",eh:"Western Sahara",er:"Eritrea",es:"Spain",et:"Ethiopia",fi:"Finland",fj:"Fiji",fk:"Falkland Islands",fm:"Micronesia",fo:"Faroe Islands",fr:"France",ga:"Gabon",gb:"United Kingdom",gd:"Grenada",ge:"Georgia",gf:"French Guiana",gg:"Guernsey",gh:"Ghana",gi:"Gibraltar",gl:"Greenland",gm:"Gambia",gn:"Guinea",gp:"Guadeloupe",gq:"Equatorial Guinea",gr:"Greece",gt:"Guatemala",gu:"Guam",gw:"Guinea-Bissau",gy:"Guyana",hk:"Hong Kong SAR China",hn:"Honduras",hr:"Croatia",ht:"Haiti",hu:"Hungary",id:"Indonesia",ie:"Ireland",il:"Israel",im:"Isle of Man",in:"India",io:"British Indian Ocean Territory",iq:"Iraq",ir:"Iran",is:"Iceland",it:"Italy",je:"Jersey",jm:"Jamaica",jo:"Jordan",jp:"Japan",ke:"Kenya",kg:"Kyrgyzstan",kh:"Cambodia",ki:"Kiribati",km:"Comoros",kn:"St. Kitts & Nevis",kp:"North Korea",kr:"South Korea",kw:"Kuwait",ky:"Cayman Islands",kz:"Kazakhstan",la:"Laos",lb:"Lebanon",lc:"St. Lucia",li:"Liechtenstein",lk:"Sri Lanka",lr:"Liberia",ls:"Lesotho",lt:"Lithuania",lu:"Luxembourg",lv:"Latvia",ly:"Libya",ma:"Morocco",mc:"Monaco",md:"Moldova",me:"Montenegro",mf:"St. Martin",mg:"Madagascar",mh:"Marshall Islands",mk:"North Macedonia",ml:"Mali",mm:"Myanmar (Burma)",mn:"Mongolia",mo:"Macao SAR China",mp:"Northern Mariana Islands",mq:"Martinique",mr:"Mauritania",ms:"Montserrat",mt:"Malta",mu:"Mauritius",mv:"Maldives",mw:"Malawi",mx:"Mexico",my:"Malaysia",mz:"Mozambique",na:"Namibia",nc:"New Caledonia",ne:"Niger",nf:"Norfolk Island",ng:"Nigeria",ni:"Nicaragua",nl:"Netherlands",no:"Norway",np:"Nepal",nr:"Nauru",nu:"Niue",nz:"New Zealand",om:"Oman",pa:"Panama",pe:"Peru",pf:"French Polynesia",pg:"Papua New Guinea",ph:"Philippines",pk:"Pakistan",pl:"Poland",pm:"St. Pierre & Miquelon",pr:"Puerto Rico",ps:"Palestinian Territories",pt:"Portugal",pw:"Palau",py:"Paraguay",qa:"Qatar",re:"R\xE9union",ro:"Romania",rs:"Serbia",ru:"Russia",rw:"Rwanda",sa:"Saudi Arabia",sb:"Solomon Islands",sc:"Seychelles",sd:"Sudan",se:"Sweden",sg:"Singapore",sh:"St. Helena",si:"Slovenia",sj:"Svalbard & Jan Mayen",sk:"Slovakia",sl:"Sierra Leone",sm:"San Marino",sn:"Senegal",so:"Somalia",sr:"Suriname",ss:"South Sudan",st:"S\xE3o Tom\xE9 & Pr\xEDncipe",sv:"El Salvador",sx:"Sint Maarten",sy:"Syria",sz:"Eswatini",tc:"Turks & Caicos Islands",td:"Chad",tg:"Togo",th:"Thailand",tj:"Tajikistan",tk:"Tokelau",tl:"Timor-Leste",tm:"Turkmenistan",tn:"Tunisia",to:"Tonga",tr:"Turkey",tt:"Trinidad & Tobago",tv:"Tuvalu",tw:"Taiwan",tz:"Tanzania",ua:"Ukraine",ug:"Uganda",us:"United States",uy:"Uruguay",uz:"Uzbekistan",va:"Vatican City",vc:"St. Vincent & Grenadines",ve:"Venezuela",vg:"British Virgin Islands",vi:"U.S. Virgin Islands",vn:"Vietnam",vu:"Vanuatu",wf:"Wallis & Futuna",ws:"Samoa",ye:"Yemen",yt:"Mayotte",za:"South Africa",zm:"Zambia",zw:"Zimbabwe"};var countries_default=countryTranslations;// src/js/intl-tel-input/i18n/en/interface.ts
var interfaceTranslations={selectedCountryAriaLabel:"Selected country",noCountrySelected:"No country selected",countryListAriaLabel:"List of countries",searchPlaceholder:"Search",zeroSearchResults:"No results found",oneSearchResult:"1 result found",multipleSearchResults:"${count} results found",// additional countries (not supported by country-list library)
ac:"Ascension Island",xk:"Kosovo"};var interface_default=interfaceTranslations;// src/js/intl-tel-input/i18n/en/index.ts
var allTranslations={...countries_default,...interface_default};var en_default=allTranslations;// src/js/intl-tel-input.ts
for(let i=0;i<data_default.length;i++){data_default[i].name=en_default[data_default[i].iso2];}var id=0;var defaults={//* Whether or not to allow the dropdown.
allowDropdown:true,//* Add a placeholder in the input with an example number for the selected country.
autoPlaceholder:"polite",//* Modify the parentClass.
containerClass:"",//* The order of the countries in the dropdown. Defaults to alphabetical.
countryOrder:null,//* Add a country search input at the top of the dropdown.
countrySearch:true,//* Modify the auto placeholder.
customPlaceholder:null,//* Append menu to specified element.
dropdownContainer:null,//* Don't display these countries.
excludeCountries:[],//* Fix the dropdown width to the input width (rather than being as wide as the longest country name).
fixDropdownWidth:true,//* Format the number as the user types
formatAsYouType:true,//* Format the input value during initialisation and on setNumber.
formatOnDisplay:true,//* geoIp lookup function.
geoIpLookup:null,//* Inject a hidden input with the name returned from this function, and on submit, populate it with the result of getNumber.
hiddenInput:null,//* Internationalise the plugin text e.g. search input placeholder, country names.
i18n:{},//* Initial country.
initialCountry:"",//* A function to load the utils script.
loadUtils:null,//* National vs international formatting for numbers e.g. placeholders and displaying existing numbers.
nationalMode:true,//* Display only these countries.
onlyCountries:[],//* Number type to use for placeholders.
placeholderNumberType:"MOBILE",//* Show flags - for both the selected country, and in the country dropdown
showFlags:true,//* Display the international dial code next to the selected flag.
separateDialCode:false,//* Only allow certain chars e.g. a plus followed by numeric digits, and cap at max valid length.
strictMode:false,//* Use full screen popup instead of dropdown for country list.
useFullscreenPopup:typeof navigator!=="undefined"&&typeof window!=="undefined"?//* We cannot just test screen size as some smartphones/website meta tags will report desktop resolutions.
//* Note: to target Android Mobiles (and not Tablets), we must find 'Android' and 'Mobile'
/Android.+Mobile|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||window.innerWidth<=500:false,//* The number type to enforce during validation.
validationNumberTypes:["MOBILE"]};var regionlessNanpNumbers=["800","822","833","844","855","866","877","880","881","882","883","884","885","886","887","888","889"];var getNumeric=s=>s.replace(/\D/g,"");var normaliseString=(s="")=>s.normalize("NFD").replace(/[\u0300-\u036f]/g,"").toLowerCase();var isRegionlessNanp=number=>{const numeric=getNumeric(number);if(numeric.charAt(0)==="1"){const areaCode=numeric.substr(1,3);return regionlessNanpNumbers.includes(areaCode);}return false;};var translateCursorPosition=(relevantChars,formattedValue,prevCaretPos,isDeleteForwards)=>{if(prevCaretPos===0&&!isDeleteForwards){return 0;}let count=0;for(let i=0;i<formattedValue.length;i++){if(/[+0-9]/.test(formattedValue[i])){count++;}if(count===relevantChars&&!isDeleteForwards){return i+1;}if(isDeleteForwards&&count===relevantChars+1){return i;}}return formattedValue.length;};var createEl=(name,attrs,container)=>{const el=document.createElement(name);if(attrs){Object.entries(attrs).forEach(([key,value])=>el.setAttribute(key,value));}if(container){container.appendChild(el);}return el;};var forEachInstance=(method,...args)=>{const{instances}=intlTelInput;Object.values(instances).forEach(instance=>instance[method](...args));};var Iti=class{constructor(input,customOptions={}){this.id=id++;this.telInput=input;this.highlightedItem=null;this.options=Object.assign({},defaults,customOptions);this.hadInitialPlaceholder=Boolean(input.getAttribute("placeholder"));}//* Can't be private as it's called from intlTelInput convenience wrapper.
_init(){if(this.options.useFullscreenPopup){this.options.fixDropdownWidth=false;}if(this.options.onlyCountries.length===1){this.options.initialCountry=this.options.onlyCountries[0];}if(this.options.separateDialCode){this.options.nationalMode=false;}if(this.options.allowDropdown&&!this.options.showFlags&&!this.options.separateDialCode){this.options.nationalMode=false;}if(this.options.useFullscreenPopup&&!this.options.dropdownContainer){this.options.dropdownContainer=document.body;}this.isAndroid=typeof navigator!=="undefined"?/Android/i.test(navigator.userAgent):false;this.isRTL=!!this.telInput.closest("[dir=rtl]");const showOnDefaultSide=this.options.allowDropdown||this.options.separateDialCode;this.showSelectedCountryOnLeft=this.isRTL?!showOnDefaultSide:showOnDefaultSide;if(this.options.separateDialCode){if(this.isRTL){this.originalPaddingRight=this.telInput.style.paddingRight;}else{this.originalPaddingLeft=this.telInput.style.paddingLeft;}}this.options.i18n={...en_default,...this.options.i18n};const autoCountryPromise=new Promise((resolve,reject)=>{this.resolveAutoCountryPromise=resolve;this.rejectAutoCountryPromise=reject;});const utilsScriptPromise=new Promise((resolve,reject)=>{this.resolveUtilsScriptPromise=resolve;this.rejectUtilsScriptPromise=reject;});this.promise=Promise.all([autoCountryPromise,utilsScriptPromise]);this.selectedCountryData={};this._processCountryData();this._generateMarkup();this._setInitialState();this._initListeners();this._initRequests();}//********************
//*  PRIVATE METHODS
//********************
//* Prepare all of the country data, including onlyCountries, excludeCountries, countryOrder options.
_processCountryData(){this._processAllCountries();this._processDialCodes();this._translateCountryNames();this._sortCountries();}//* Sort countries by countryOrder option (if present), then name.
_sortCountries(){if(this.options.countryOrder){this.options.countryOrder=this.options.countryOrder.map(country=>country.toLowerCase());}this.countries.sort((a,b)=>{const{countryOrder}=this.options;if(countryOrder){const aIndex=countryOrder.indexOf(a.iso2);const bIndex=countryOrder.indexOf(b.iso2);const aIndexExists=aIndex>-1;const bIndexExists=bIndex>-1;if(aIndexExists||bIndexExists){if(aIndexExists&&bIndexExists){return aIndex-bIndex;}return aIndexExists?-1:1;}}return a.name.localeCompare(b.name);});}//* Add a dial code to this.dialCodeToIso2Map.
_addToDialCodeMap(iso2,dialCode,priority){if(dialCode.length>this.dialCodeMaxLen){this.dialCodeMaxLen=dialCode.length;}if(!this.dialCodeToIso2Map.hasOwnProperty(dialCode)){this.dialCodeToIso2Map[dialCode]=[];}for(let i=0;i<this.dialCodeToIso2Map[dialCode].length;i++){if(this.dialCodeToIso2Map[dialCode][i]===iso2){return;}}const index=priority!==void 0?priority:this.dialCodeToIso2Map[dialCode].length;this.dialCodeToIso2Map[dialCode][index]=iso2;}//* Process onlyCountries or excludeCountries array if present.
_processAllCountries(){const{onlyCountries,excludeCountries}=this.options;if(onlyCountries.length){const lowerCaseOnlyCountries=onlyCountries.map(country=>country.toLowerCase());this.countries=data_default.filter(country=>lowerCaseOnlyCountries.includes(country.iso2));}else if(excludeCountries.length){const lowerCaseExcludeCountries=excludeCountries.map(country=>country.toLowerCase());this.countries=data_default.filter(country=>!lowerCaseExcludeCountries.includes(country.iso2));}else{this.countries=data_default;}}//* Translate Countries by object literal provided on config.
_translateCountryNames(){for(let i=0;i<this.countries.length;i++){const iso2=this.countries[i].iso2.toLowerCase();if(this.options.i18n.hasOwnProperty(iso2)){this.countries[i].name=this.options.i18n[iso2];}}}//* Generate this.dialCodes and this.dialCodeToIso2Map.
_processDialCodes(){this.dialCodes={};this.dialCodeMaxLen=0;this.dialCodeToIso2Map={};for(let i=0;i<this.countries.length;i++){const c=this.countries[i];if(!this.dialCodes[c.dialCode]){this.dialCodes[c.dialCode]=true;}this._addToDialCodeMap(c.iso2,c.dialCode,c.priority);}for(let i=0;i<this.countries.length;i++){const c=this.countries[i];if(c.areaCodes){const rootIso2Code=this.dialCodeToIso2Map[c.dialCode][0];for(let j=0;j<c.areaCodes.length;j++){const areaCode=c.areaCodes[j];for(let k=1;k<areaCode.length;k++){const partialAreaCode=areaCode.substr(0,k);const partialDialCode=c.dialCode+partialAreaCode;this._addToDialCodeMap(rootIso2Code,partialDialCode);this._addToDialCodeMap(c.iso2,partialDialCode);}this._addToDialCodeMap(c.iso2,c.dialCode+areaCode);}}}}//* Generate all of the markup for the plugin: the selected country overlay, and the dropdown.
_generateMarkup(){this.telInput.classList.add("iti__tel-input");if(!this.telInput.hasAttribute("autocomplete")&&!(this.telInput.form&&this.telInput.form.hasAttribute("autocomplete"))){this.telInput.setAttribute("autocomplete","off");}const{allowDropdown,separateDialCode,showFlags,containerClass,hiddenInput,dropdownContainer,fixDropdownWidth,useFullscreenPopup,countrySearch,i18n}=this.options;let parentClass="iti";if(allowDropdown){parentClass+=" iti--allow-dropdown";}if(showFlags){parentClass+=" iti--show-flags";}if(containerClass){parentClass+=` ${containerClass}`;}if(!useFullscreenPopup){parentClass+=" iti--inline-dropdown";}const wrapper=createEl("div",{class:parentClass});this.telInput.parentNode?.insertBefore(wrapper,this.telInput);if(allowDropdown||showFlags||separateDialCode){this.countryContainer=createEl("div",{class:"iti__country-container"},wrapper);if(this.showSelectedCountryOnLeft){this.countryContainer.style.left="0px";}else{this.countryContainer.style.right="0px";}if(allowDropdown){this.selectedCountry=createEl("button",{type:"button",class:"iti__selected-country","aria-expanded":"false","aria-label":this.options.i18n.selectedCountryAriaLabel,"aria-haspopup":"true","aria-controls":`iti-${this.id}__dropdown-content`,"role":"combobox"},this.countryContainer);if(this.telInput.disabled){this.selectedCountry.setAttribute("disabled","true");}}else{this.selectedCountry=createEl("div",{class:"iti__selected-country"},this.countryContainer);}const selectedCountryPrimary=createEl("div",{class:"iti__selected-country-primary"},this.selectedCountry);this.selectedCountryInner=createEl("div",{class:"iti__flag"},selectedCountryPrimary);this.selectedCountryA11yText=createEl("span",{class:"iti__a11y-text"},this.selectedCountryInner);if(allowDropdown){this.dropdownArrow=createEl("div",{class:"iti__arrow","aria-hidden":"true"},selectedCountryPrimary);}if(separateDialCode){this.selectedDialCode=createEl("div",{class:"iti__selected-dial-code"},this.selectedCountry);}if(allowDropdown){const extraClasses=fixDropdownWidth?"":"iti--flexible-dropdown-width";this.dropdownContent=createEl("div",{id:`iti-${this.id}__dropdown-content`,class:`iti__dropdown-content iti__hide ${extraClasses}`});if(countrySearch){this.searchInput=createEl("input",{type:"text",class:"iti__search-input",placeholder:i18n.searchPlaceholder,role:"combobox","aria-expanded":"true","aria-label":i18n.searchPlaceholder,"aria-controls":`iti-${this.id}__country-listbox`,"aria-autocomplete":"list","autocomplete":"off"},this.dropdownContent);this.searchResultsA11yText=createEl("span",{class:"iti__a11y-text"},this.dropdownContent);}this.countryList=createEl("ul",{class:"iti__country-list",id:`iti-${this.id}__country-listbox`,role:"listbox","aria-label":i18n.countryListAriaLabel},this.dropdownContent);this._appendListItems();if(countrySearch){this._updateSearchResultsText();}if(dropdownContainer){let dropdownClasses="iti iti--container";if(useFullscreenPopup){dropdownClasses+=" iti--fullscreen-popup";}else{dropdownClasses+=" iti--inline-dropdown";}this.dropdown=createEl("div",{class:dropdownClasses});this.dropdown.appendChild(this.dropdownContent);}else{this.countryContainer.appendChild(this.dropdownContent);}}}wrapper.appendChild(this.telInput);this._updateInputPadding();if(hiddenInput){const telInputName=this.telInput.getAttribute("name")||"";const names=hiddenInput(telInputName);if(names.phone){const existingInput=this.telInput.form?.querySelector(`input[name="${names.phone}"]`);if(existingInput){this.hiddenInput=existingInput;}else{this.hiddenInput=createEl("input",{type:"hidden",name:names.phone});wrapper.appendChild(this.hiddenInput);}}if(names.country){const existingInput=this.telInput.form?.querySelector(`input[name="${names.country}"]`);if(existingInput){this.hiddenInputCountry=existingInput;}else{this.hiddenInputCountry=createEl("input",{type:"hidden",name:names.country});wrapper.appendChild(this.hiddenInputCountry);}}}}//* For each country: add a country list item <li> to the countryList <ul> container.
_appendListItems(){for(let i=0;i<this.countries.length;i++){const c=this.countries[i];const extraClass=i===0?"iti__highlight":"";const listItem=createEl("li",{id:`iti-${this.id}__item-${c.iso2}`,class:`iti__country ${extraClass}`,tabindex:"-1",role:"option","data-dial-code":c.dialCode,"data-country-code":c.iso2,"aria-selected":"false"},this.countryList);c.nodeById[this.id]=listItem;let content="";if(this.options.showFlags){content+=`<div class='iti__flag iti__${c.iso2}'></div>`;}content+=`<span class='iti__country-name'>${c.name}</span>`;content+=`<span class='iti__dial-code'>+${c.dialCode}</span>`;listItem.insertAdjacentHTML("beforeend",content);}}//* Set the initial state of the input value and the selected country by:
//* 1. Extracting a dial code from the given number
//* 2. Using explicit initialCountry
_setInitialState(overrideAutoCountry=false){const attributeValue=this.telInput.getAttribute("value");const inputValue=this.telInput.value;const useAttribute=attributeValue&&attributeValue.charAt(0)==="+"&&(!inputValue||inputValue.charAt(0)!=="+");const val=useAttribute?attributeValue:inputValue;const dialCode=this._getDialCode(val);const isRegionlessNanpNumber=isRegionlessNanp(val);const{initialCountry,geoIpLookup}=this.options;const isAutoCountry=initialCountry==="auto"&&geoIpLookup;if(dialCode&&!isRegionlessNanpNumber){this._updateCountryFromNumber(val);}else if(!isAutoCountry||overrideAutoCountry){const lowerInitialCountry=initialCountry?initialCountry.toLowerCase():"";const isValidInitialCountry=lowerInitialCountry&&this._getCountryData(lowerInitialCountry,true);if(isValidInitialCountry){this._setCountry(lowerInitialCountry);}else{if(dialCode&&isRegionlessNanpNumber){this._setCountry("us");}else{this._setCountry();}}}if(val){this._updateValFromNumber(val);}}//* Initialise the main event listeners: input keyup, and click selected country.
_initListeners(){this._initTelInputListeners();if(this.options.allowDropdown){this._initDropdownListeners();}if((this.hiddenInput||this.hiddenInputCountry)&&this.telInput.form){this._initHiddenInputListener();}}//* Update hidden input on form submit.
_initHiddenInputListener(){this._handleHiddenInputSubmit=()=>{if(this.hiddenInput){this.hiddenInput.value=this.getNumber();}if(this.hiddenInputCountry){this.hiddenInputCountry.value=this.getSelectedCountryData().iso2||"";}};this.telInput.form?.addEventListener("submit",this._handleHiddenInputSubmit);}//* initialise the dropdown listeners.
_initDropdownListeners(){this._handleLabelClick=e=>{if(this.dropdownContent.classList.contains("iti__hide")){this.telInput.focus();}else{e.preventDefault();}};const label=this.telInput.closest("label");if(label){label.addEventListener("click",this._handleLabelClick);}this._handleClickSelectedCountry=()=>{if(this.dropdownContent.classList.contains("iti__hide")&&!this.telInput.disabled&&!this.telInput.readOnly){this._openDropdown();}};this.selectedCountry.addEventListener("click",this._handleClickSelectedCountry);this._handleCountryContainerKeydown=e=>{const isDropdownHidden=this.dropdownContent.classList.contains("iti__hide");if(isDropdownHidden&&["ArrowUp","ArrowDown"," ","Enter"].includes(e.key)){e.preventDefault();e.stopPropagation();this._openDropdown();}if(e.key==="Tab"){this._closeDropdown();}};this.countryContainer.addEventListener("keydown",this._handleCountryContainerKeydown);}//* Init many requests: utils script / geo ip lookup.
_initRequests(){let{loadUtils,initialCountry,geoIpLookup}=this.options;if(loadUtils&&!intlTelInput.utils){this._handlePageLoad=()=>{window.removeEventListener("load",this._handlePageLoad);intlTelInput.attachUtils(loadUtils)?.catch(()=>{});};if(intlTelInput.documentReady()){this._handlePageLoad();}else{window.addEventListener("load",this._handlePageLoad);}}else{this.resolveUtilsScriptPromise();}const isAutoCountry=initialCountry==="auto"&&geoIpLookup;if(isAutoCountry&&!this.selectedCountryData.iso2){this._loadAutoCountry();}else{this.resolveAutoCountryPromise();}}//* Perform the geo ip lookup.
_loadAutoCountry(){if(intlTelInput.autoCountry){this.handleAutoCountry();}else if(!intlTelInput.startedLoadingAutoCountry){intlTelInput.startedLoadingAutoCountry=true;if(typeof this.options.geoIpLookup==="function"){this.options.geoIpLookup((iso2="")=>{const iso2Lower=iso2.toLowerCase();const isValidIso2=iso2Lower&&this._getCountryData(iso2Lower,true);if(isValidIso2){intlTelInput.autoCountry=iso2Lower;setTimeout(()=>forEachInstance("handleAutoCountry"));}else{this._setInitialState(true);forEachInstance("rejectAutoCountryPromise");}},()=>{this._setInitialState(true);forEachInstance("rejectAutoCountryPromise");});}}}_openDropdownWithPlus(){this._openDropdown();this.searchInput.value="+";this._filterCountries("",true);}//* Initialize the tel input listeners.
_initTelInputListeners(){const{strictMode,formatAsYouType,separateDialCode,formatOnDisplay,allowDropdown,countrySearch}=this.options;let userOverrideFormatting=false;if(/\p{L}/u.test(this.telInput.value)){userOverrideFormatting=true;}this._handleInputEvent=e=>{if(this.isAndroid&&e?.data==="+"&&separateDialCode&&allowDropdown&&countrySearch){const currentCaretPos=this.telInput.selectionStart||0;const valueBeforeCaret=this.telInput.value.substring(0,currentCaretPos-1);const valueAfterCaret=this.telInput.value.substring(currentCaretPos);this.telInput.value=valueBeforeCaret+valueAfterCaret;this._openDropdownWithPlus();return;}if(this._updateCountryFromNumber(this.telInput.value)){this._triggerCountryChange();}const isFormattingChar=e?.data&&/[^+0-9]/.test(e.data);const isPaste=e?.inputType==="insertFromPaste"&&this.telInput.value;if(isFormattingChar||isPaste&&!strictMode){userOverrideFormatting=true;}else if(!/[^+0-9]/.test(this.telInput.value)){userOverrideFormatting=false;}const disableFormatOnSetNumber=e?.detail&&e.detail["isSetNumber"]&&!formatOnDisplay;if(formatAsYouType&&!userOverrideFormatting&&!disableFormatOnSetNumber){const currentCaretPos=this.telInput.selectionStart||0;const valueBeforeCaret=this.telInput.value.substring(0,currentCaretPos);const relevantCharsBeforeCaret=valueBeforeCaret.replace(/[^+0-9]/g,"").length;const isDeleteForwards=e?.inputType==="deleteContentForward";const formattedValue=this._formatNumberAsYouType();const newCaretPos=translateCursorPosition(relevantCharsBeforeCaret,formattedValue,currentCaretPos,isDeleteForwards);this.telInput.value=formattedValue;this.telInput.setSelectionRange(newCaretPos,newCaretPos);}};this.telInput.addEventListener("input",this._handleInputEvent);if(strictMode||separateDialCode){this._handleKeydownEvent=e=>{if(e.key&&e.key.length===1&&!e.altKey&&!e.ctrlKey&&!e.metaKey){if(separateDialCode&&allowDropdown&&countrySearch&&e.key==="+"){e.preventDefault();this._openDropdownWithPlus();return;}if(strictMode){const value=this.telInput.value;const alreadyHasPlus=value.charAt(0)==="+";const isInitialPlus=!alreadyHasPlus&&this.telInput.selectionStart===0&&e.key==="+";const isNumeric=/^[0-9]$/.test(e.key);const isAllowedChar=separateDialCode?isNumeric:isInitialPlus||isNumeric;const newValue=value.slice(0,this.telInput.selectionStart)+e.key+value.slice(this.telInput.selectionEnd);const newFullNumber=this._getFullNumber(newValue);const coreNumber=intlTelInput.utils.getCoreNumber(newFullNumber,this.selectedCountryData.iso2);const hasExceededMaxLength=this.maxCoreNumberLength&&coreNumber.length>this.maxCoreNumberLength;let isChangingDialCode=false;if(alreadyHasPlus){const currentCountry=this.selectedCountryData.iso2;const newCountry=this._getCountryFromNumber(newFullNumber);isChangingDialCode=newCountry!==currentCountry;}if(!isAllowedChar||hasExceededMaxLength&&!isChangingDialCode&&!isInitialPlus){e.preventDefault();}}}};this.telInput.addEventListener("keydown",this._handleKeydownEvent);}}//* Adhere to the input's maxlength attr.
_cap(number){const max=parseInt(this.telInput.getAttribute("maxlength")||"",10);return max&&number.length>max?number.substr(0,max):number;}//* Trigger a custom event on the input.
_trigger(name,detailProps={}){const e=new CustomEvent(name,{bubbles:true,cancelable:true,detail:detailProps});this.telInput.dispatchEvent(e);}//* Open the dropdown.
_openDropdown(){const{fixDropdownWidth,countrySearch}=this.options;if(fixDropdownWidth){this.dropdownContent.style.width=`${this.telInput.offsetWidth}px`;}this.dropdownContent.classList.remove("iti__hide");this.selectedCountry.setAttribute("aria-expanded","true");this._setDropdownPosition();if(countrySearch){const firstCountryItem=this.countryList.firstElementChild;if(firstCountryItem){this._highlightListItem(firstCountryItem,false);this.countryList.scrollTop=0;}this.searchInput.focus();}this._bindDropdownListeners();this.dropdownArrow.classList.add("iti__arrow--up");this._trigger("open:countrydropdown");}//* Set the dropdown position
_setDropdownPosition(){if(this.options.dropdownContainer){this.options.dropdownContainer.appendChild(this.dropdown);}if(!this.options.useFullscreenPopup){const inputPosRelativeToVP=this.telInput.getBoundingClientRect();const inputHeight=this.telInput.offsetHeight;if(this.options.dropdownContainer){this.dropdown.style.top=`${inputPosRelativeToVP.top+inputHeight}px`;this.dropdown.style.left=`${inputPosRelativeToVP.left}px`;this._handleWindowScroll=()=>this._closeDropdown();window.addEventListener("scroll",this._handleWindowScroll);}}}//* We only bind dropdown listeners when the dropdown is open.
_bindDropdownListeners(){this._handleMouseoverCountryList=e=>{const listItem=e.target?.closest(".iti__country");if(listItem){this._highlightListItem(listItem,false);}};this.countryList.addEventListener("mouseover",this._handleMouseoverCountryList);this._handleClickCountryList=e=>{const listItem=e.target?.closest(".iti__country");if(listItem){this._selectListItem(listItem);}};this.countryList.addEventListener("click",this._handleClickCountryList);let isOpening=true;this._handleClickOffToClose=()=>{if(!isOpening){this._closeDropdown();}isOpening=false;};document.documentElement.addEventListener("click",this._handleClickOffToClose);let query="";let queryTimer=null;this._handleKeydownOnDropdown=e=>{if(["ArrowUp","ArrowDown","Enter","Escape"].includes(e.key)){e.preventDefault();e.stopPropagation();if(e.key==="ArrowUp"||e.key==="ArrowDown"){this._handleUpDownKey(e.key);}else if(e.key==="Enter"){this._handleEnterKey();}else if(e.key==="Escape"){this._closeDropdown();}}if(!this.options.countrySearch&&/^[a-zA-ZÀ-ÿа-яА-Я ]$/.test(e.key)){e.stopPropagation();if(queryTimer){clearTimeout(queryTimer);}query+=e.key.toLowerCase();this._searchForCountry(query);queryTimer=setTimeout(()=>{query="";},1e3);}};document.addEventListener("keydown",this._handleKeydownOnDropdown);if(this.options.countrySearch){const doFilter=()=>{const inputQuery=this.searchInput.value.trim();if(inputQuery){this._filterCountries(inputQuery);}else{this._filterCountries("",true);}};let keyupTimer=null;this._handleSearchChange=()=>{if(keyupTimer){clearTimeout(keyupTimer);}keyupTimer=setTimeout(()=>{doFilter();keyupTimer=null;},100);};this.searchInput.addEventListener("input",this._handleSearchChange);this.searchInput.addEventListener("click",e=>e.stopPropagation());}}//* Hidden search (countrySearch disabled): Find the first list item whose name starts with the query string.
_searchForCountry(query){for(let i=0;i<this.countries.length;i++){const c=this.countries[i];const startsWith=c.name.substr(0,query.length).toLowerCase()===query;if(startsWith){const listItem=c.nodeById[this.id];this._highlightListItem(listItem,false);this._scrollTo(listItem);break;}}}//* Country search enabled: Filter the countries according to the search query.
_filterCountries(query,isReset=false){let noCountriesAddedYet=true;this.countryList.innerHTML="";const normalisedQuery=normaliseString(query);for(let i=0;i<this.countries.length;i++){const c=this.countries[i];const normalisedCountryName=normaliseString(c.name);const countryInitials=c.name.split(/[^a-zA-ZÀ-ÿа-яА-Я]/).map(word=>word[0]).join("").toLowerCase();const fullDialCode=`+${c.dialCode}`;if(isReset||normalisedCountryName.includes(normalisedQuery)||fullDialCode.includes(normalisedQuery)||c.iso2.includes(normalisedQuery)||countryInitials.includes(normalisedQuery)){const listItem=c.nodeById[this.id];if(listItem){this.countryList.appendChild(listItem);}if(noCountriesAddedYet){this._highlightListItem(listItem,false);noCountriesAddedYet=false;}}}if(noCountriesAddedYet){this._highlightListItem(null,false);}this.countryList.scrollTop=0;this._updateSearchResultsText();}//* Update search results text (for a11y).
_updateSearchResultsText(){const{i18n}=this.options;const count=this.countryList.childElementCount;let searchText;if(count===0){searchText=i18n.zeroSearchResults;}else if(count===1){searchText=i18n.oneSearchResult;}else{searchText=i18n.multipleSearchResults.replace("${count}",count.toString());}this.searchResultsA11yText.textContent=searchText;}//* Highlight the next/prev item in the list (and ensure it is visible).
_handleUpDownKey(key){let next=key==="ArrowUp"?this.highlightedItem?.previousElementSibling:this.highlightedItem?.nextElementSibling;if(!next&&this.countryList.childElementCount>1){next=key==="ArrowUp"?this.countryList.lastElementChild:this.countryList.firstElementChild;}if(next){this._scrollTo(next);this._highlightListItem(next,false);}}//* Select the currently highlighted item.
_handleEnterKey(){if(this.highlightedItem){this._selectListItem(this.highlightedItem);}}//* Update the input's value to the given val (format first if possible)
//* NOTE: this is called from _setInitialState, handleUtils and setNumber.
_updateValFromNumber(fullNumber){let number=fullNumber;if(this.options.formatOnDisplay&&intlTelInput.utils&&this.selectedCountryData){const useNational=this.options.nationalMode||number.charAt(0)!=="+"&&!this.options.separateDialCode;const{NATIONAL,INTERNATIONAL}=intlTelInput.utils.numberFormat;const format=useNational?NATIONAL:INTERNATIONAL;number=intlTelInput.utils.formatNumber(number,this.selectedCountryData.iso2,format);}number=this._beforeSetNumber(number);this.telInput.value=number;}//* Check if need to select a new country based on the given number
//* Note: called from _setInitialState, keyup handler, setNumber.
_updateCountryFromNumber(fullNumber){const iso2=this._getCountryFromNumber(fullNumber);if(iso2!==null){return this._setCountry(iso2);}return false;}_ensureHasDialCode(number){const{dialCode,nationalPrefix}=this.selectedCountryData;const alreadyHasPlus=number.charAt(0)==="+";if(alreadyHasPlus||!dialCode){return number;}const hasPrefix=nationalPrefix&&number.charAt(0)===nationalPrefix&&!this.options.separateDialCode;const cleanNumber=hasPrefix?number.substring(1):number;return`+${dialCode}${cleanNumber}`;}_getCountryFromNumber(fullNumber){const plusIndex=fullNumber.indexOf("+");let number=plusIndex?fullNumber.substring(plusIndex):fullNumber;const selectedIso2=this.selectedCountryData.iso2;const selectedDialCode=this.selectedCountryData.dialCode;number=this._ensureHasDialCode(number);const dialCodeMatch=this._getDialCode(number,true);const numeric=getNumeric(number);if(dialCodeMatch){const dialCodeMatchNumeric=getNumeric(dialCodeMatch);const iso2Codes=this.dialCodeToIso2Map[dialCodeMatchNumeric];if(!selectedIso2&&this.defaultCountry&&iso2Codes.includes(this.defaultCountry)){return this.defaultCountry;}const alreadySelected=selectedIso2&&iso2Codes.includes(selectedIso2)&&(numeric.length===dialCodeMatchNumeric.length||!this.selectedCountryData.areaCodes);const isRegionlessNanpNumber=selectedDialCode==="1"&&isRegionlessNanp(numeric);if(!isRegionlessNanpNumber&&!alreadySelected){for(let j=0;j<iso2Codes.length;j++){if(iso2Codes[j]){return iso2Codes[j];}}}}else if(number.charAt(0)==="+"&&numeric.length){return"";}else if((!number||number==="+")&&!this.selectedCountryData.iso2){return this.defaultCountry;}return null;}//* Remove highlighting from other list items and highlight the given item.
_highlightListItem(listItem,shouldFocus){const prevItem=this.highlightedItem;if(prevItem){prevItem.classList.remove("iti__highlight");prevItem.setAttribute("aria-selected","false");}this.highlightedItem=listItem;if(this.highlightedItem){this.highlightedItem.classList.add("iti__highlight");this.highlightedItem.setAttribute("aria-selected","true");const activeDescendant=this.highlightedItem.getAttribute("id")||"";this.selectedCountry.setAttribute("aria-activedescendant",activeDescendant);if(this.options.countrySearch){this.searchInput.setAttribute("aria-activedescendant",activeDescendant);}}if(shouldFocus){this.highlightedItem.focus();}}//* Find the country data for the given iso2 code
//* the ignoreOnlyCountriesOption is only used during init() while parsing the onlyCountries array
_getCountryData(iso2,allowFail){for(let i=0;i<this.countries.length;i++){if(this.countries[i].iso2===iso2){return this.countries[i];}}if(allowFail){return null;}throw new Error(`No country data for '${iso2}'`);}//* Update the selected country, dial code (if separateDialCode), placeholder, title, and active list item.
//* Note: called from _setInitialState, _updateCountryFromNumber, _selectListItem, setCountry.
_setCountry(iso2){const{separateDialCode,showFlags,i18n}=this.options;const prevCountry=this.selectedCountryData.iso2?this.selectedCountryData:{};this.selectedCountryData=iso2?this._getCountryData(iso2,false)||{}:{};if(this.selectedCountryData.iso2){this.defaultCountry=this.selectedCountryData.iso2;}if(this.selectedCountryInner){let flagClass="";let a11yText="";if(iso2&&showFlags){flagClass=`iti__flag iti__${iso2}`;a11yText=`${this.selectedCountryData.name} +${this.selectedCountryData.dialCode}`;}else{flagClass="iti__flag iti__globe";a11yText=i18n.noCountrySelected;}this.selectedCountryInner.className=flagClass;this.selectedCountryA11yText.textContent=a11yText;}this._setSelectedCountryTitleAttribute(iso2,separateDialCode);if(separateDialCode){const dialCode=this.selectedCountryData.dialCode?`+${this.selectedCountryData.dialCode}`:"";this.selectedDialCode.innerHTML=dialCode;this._updateInputPadding();}this._updatePlaceholder();this._updateMaxLength();return prevCountry.iso2!==iso2;}//* Update the input padding to make space for the selected country/dial code.
_updateInputPadding(){if(this.selectedCountry){const selectedCountryWidth=this.selectedCountry.offsetWidth||this._getHiddenSelectedCountryWidth();const inputPadding=selectedCountryWidth+6;if(this.showSelectedCountryOnLeft){this.telInput.style.paddingLeft=`${inputPadding}px`;}else{this.telInput.style.paddingRight=`${inputPadding}px`;}}}//* Update the maximum valid number length for the currently selected country.
_updateMaxLength(){const{strictMode,placeholderNumberType,validationNumberTypes}=this.options;const{iso2}=this.selectedCountryData;if(strictMode&&intlTelInput.utils){if(iso2){const numberType=intlTelInput.utils.numberType[placeholderNumberType];let exampleNumber=intlTelInput.utils.getExampleNumber(iso2,false,numberType,true);let validNumber=exampleNumber;while(intlTelInput.utils.isPossibleNumber(exampleNumber,iso2,validationNumberTypes)){validNumber=exampleNumber;exampleNumber+="0";}const coreNumber=intlTelInput.utils.getCoreNumber(validNumber,iso2);this.maxCoreNumberLength=coreNumber.length;if(iso2==="by"){this.maxCoreNumberLength=coreNumber.length+1;}}else{this.maxCoreNumberLength=null;}}}_setSelectedCountryTitleAttribute(iso2=null,separateDialCode){if(!this.selectedCountry){return;}let title;if(iso2&&!separateDialCode){title=`${this.selectedCountryData.name}: +${this.selectedCountryData.dialCode}`;}else if(iso2){title=this.selectedCountryData.name;}else{title="Unknown";}this.selectedCountry.setAttribute("title",title);}//* When the input is in a hidden container during initialisation, we must inject some markup
//* into the end of the DOM to calculate the correct offsetWidth.
//* NOTE: this is only used when separateDialCode is enabled, so countryContainer and selectedCountry
//* will definitely exist.
_getHiddenSelectedCountryWidth(){if(this.telInput.parentNode){const containerClone=this.telInput.parentNode.cloneNode(false);containerClone.style.visibility="hidden";document.body.appendChild(containerClone);const countryContainerClone=this.countryContainer.cloneNode();containerClone.appendChild(countryContainerClone);const selectedCountryClone=this.selectedCountry.cloneNode(true);countryContainerClone.appendChild(selectedCountryClone);const width=selectedCountryClone.offsetWidth;document.body.removeChild(containerClone);return width;}return 0;}//* Update the input placeholder to an example number from the currently selected country.
_updatePlaceholder(){const{autoPlaceholder,placeholderNumberType,nationalMode,customPlaceholder}=this.options;const shouldSetPlaceholder=autoPlaceholder==="aggressive"||!this.hadInitialPlaceholder&&autoPlaceholder==="polite";if(intlTelInput.utils&&shouldSetPlaceholder){const numberType=intlTelInput.utils.numberType[placeholderNumberType];let placeholder=this.selectedCountryData.iso2?intlTelInput.utils.getExampleNumber(this.selectedCountryData.iso2,nationalMode,numberType):"";placeholder=this._beforeSetNumber(placeholder);if(typeof customPlaceholder==="function"){placeholder=customPlaceholder(placeholder,this.selectedCountryData);}this.telInput.setAttribute("placeholder",placeholder);}}//* Called when the user selects a list item from the dropdown.
_selectListItem(listItem){const countryChanged=this._setCountry(listItem.getAttribute("data-country-code"));this._closeDropdown();this._updateDialCode(listItem.getAttribute("data-dial-code"));this.telInput.focus();if(countryChanged){this._triggerCountryChange();}}//* Close the dropdown and unbind any listeners.
_closeDropdown(){this.dropdownContent.classList.add("iti__hide");this.selectedCountry.setAttribute("aria-expanded","false");this.selectedCountry.removeAttribute("aria-activedescendant");if(this.highlightedItem){this.highlightedItem.setAttribute("aria-selected","false");}if(this.options.countrySearch){this.searchInput.removeAttribute("aria-activedescendant");}this.dropdownArrow.classList.remove("iti__arrow--up");document.removeEventListener("keydown",this._handleKeydownOnDropdown);if(this.options.countrySearch){this.searchInput.removeEventListener("input",this._handleSearchChange);}document.documentElement.removeEventListener("click",this._handleClickOffToClose);this.countryList.removeEventListener("mouseover",this._handleMouseoverCountryList);this.countryList.removeEventListener("click",this._handleClickCountryList);if(this.options.dropdownContainer){if(!this.options.useFullscreenPopup){window.removeEventListener("scroll",this._handleWindowScroll);}if(this.dropdown.parentNode){this.dropdown.parentNode.removeChild(this.dropdown);}}if(this._handlePageLoad){window.removeEventListener("load",this._handlePageLoad);}this._trigger("close:countrydropdown");}//* Check if an element is visible within it's container, else scroll until it is.
_scrollTo(element){const container=this.countryList;const scrollTop=document.documentElement.scrollTop;const containerHeight=container.offsetHeight;const containerTop=container.getBoundingClientRect().top+scrollTop;const containerBottom=containerTop+containerHeight;const elementHeight=element.offsetHeight;const elementTop=element.getBoundingClientRect().top+scrollTop;const elementBottom=elementTop+elementHeight;const newScrollTop=elementTop-containerTop+container.scrollTop;if(elementTop<containerTop){container.scrollTop=newScrollTop;}else if(elementBottom>containerBottom){const heightDifference=containerHeight-elementHeight;container.scrollTop=newScrollTop-heightDifference;}}//* Replace any existing dial code with the new one
//* Note: called from _selectListItem and setCountry
_updateDialCode(newDialCodeBare){const inputVal=this.telInput.value;const newDialCode=`+${newDialCodeBare}`;let newNumber;if(inputVal.charAt(0)==="+"){const prevDialCode=this._getDialCode(inputVal);if(prevDialCode){newNumber=inputVal.replace(prevDialCode,newDialCode);}else{newNumber=newDialCode;}this.telInput.value=newNumber;}}//* Try and extract a valid international dial code from a full telephone number.
//* Note: returns the raw string inc plus character and any whitespace/dots etc.
_getDialCode(number,includeAreaCode){let dialCode="";if(number.charAt(0)==="+"){let numericChars="";for(let i=0;i<number.length;i++){const c=number.charAt(i);if(!isNaN(parseInt(c,10))){numericChars+=c;if(includeAreaCode){if(this.dialCodeToIso2Map[numericChars]){dialCode=number.substr(0,i+1);}}else{if(this.dialCodes[numericChars]){dialCode=number.substr(0,i+1);break;}}if(numericChars.length===this.dialCodeMaxLen){break;}}}}return dialCode;}//* Get the input val, adding the dial code if separateDialCode is enabled.
_getFullNumber(overrideVal){const val=overrideVal||this.telInput.value.trim();const{dialCode}=this.selectedCountryData;let prefix;const numericVal=getNumeric(val);if(this.options.separateDialCode&&val.charAt(0)!=="+"&&dialCode&&numericVal){prefix=`+${dialCode}`;}else{prefix="";}return prefix+val;}//* Remove the dial code if separateDialCode is enabled also cap the length if the input has a maxlength attribute
_beforeSetNumber(fullNumber){let number=fullNumber;if(this.options.separateDialCode){let dialCode=this._getDialCode(number);if(dialCode){dialCode=`+${this.selectedCountryData.dialCode}`;const start=number[dialCode.length]===" "||number[dialCode.length]==="-"?dialCode.length+1:dialCode.length;number=number.substr(start);}}return this._cap(number);}//* Trigger the 'countrychange' event.
_triggerCountryChange(){this._trigger("countrychange");}//* Format the number as the user types.
_formatNumberAsYouType(){const val=this._getFullNumber();const result=intlTelInput.utils?intlTelInput.utils.formatNumberAsYouType(val,this.selectedCountryData.iso2):val;const{dialCode}=this.selectedCountryData;if(this.options.separateDialCode&&this.telInput.value.charAt(0)!=="+"&&result.includes(`+${dialCode}`)){const afterDialCode=result.split(`+${dialCode}`)[1]||"";return afterDialCode.trim();}return result;}//**************************
//*  SECRET PUBLIC METHODS
//**************************
//* This is called when the geoip call returns.
handleAutoCountry(){if(this.options.initialCountry==="auto"&&intlTelInput.autoCountry){this.defaultCountry=intlTelInput.autoCountry;const hasSelectedCountryOrGlobe=this.selectedCountryData.iso2||this.selectedCountryInner.classList.contains("iti__globe");if(!hasSelectedCountryOrGlobe){this.setCountry(this.defaultCountry);}this.resolveAutoCountryPromise();}}//* This is called when the utils request completes.
handleUtils(){if(intlTelInput.utils){if(this.telInput.value){this._updateValFromNumber(this.telInput.value);}if(this.selectedCountryData.iso2){this._updatePlaceholder();this._updateMaxLength();}}this.resolveUtilsScriptPromise();}//********************
//*  PUBLIC METHODS
//********************
//* Remove plugin.
destroy(){const{allowDropdown,separateDialCode}=this.options;if(allowDropdown){this._closeDropdown();this.selectedCountry.removeEventListener("click",this._handleClickSelectedCountry);this.countryContainer.removeEventListener("keydown",this._handleCountryContainerKeydown);const label=this.telInput.closest("label");if(label){label.removeEventListener("click",this._handleLabelClick);}}const{form}=this.telInput;if(this._handleHiddenInputSubmit&&form){form.removeEventListener("submit",this._handleHiddenInputSubmit);}this.telInput.removeEventListener("input",this._handleInputEvent);if(this._handleKeydownEvent){this.telInput.removeEventListener("keydown",this._handleKeydownEvent);}this.telInput.removeAttribute("data-intl-tel-input-id");if(separateDialCode){if(this.isRTL){this.telInput.style.paddingRight=this.originalPaddingRight;}else{this.telInput.style.paddingLeft=this.originalPaddingLeft;}}const wrapper=this.telInput.parentNode;wrapper?.parentNode?.insertBefore(this.telInput,wrapper);wrapper?.parentNode?.removeChild(wrapper);delete intlTelInput.instances[this.id];}//* Get the extension from the current number.
getExtension(){if(intlTelInput.utils){return intlTelInput.utils.getExtension(this._getFullNumber(),this.selectedCountryData.iso2);}return"";}//* Format the number to the given format.
getNumber(format){if(intlTelInput.utils){const{iso2}=this.selectedCountryData;return intlTelInput.utils.formatNumber(this._getFullNumber(),iso2,format);}return"";}//* Get the type of the entered number e.g. landline/mobile.
getNumberType(){if(intlTelInput.utils){return intlTelInput.utils.getNumberType(this._getFullNumber(),this.selectedCountryData.iso2);}return-99;}//* Get the country data for the currently selected country.
getSelectedCountryData(){return this.selectedCountryData;}//* Get the validation error.
getValidationError(){if(intlTelInput.utils){const{iso2}=this.selectedCountryData;return intlTelInput.utils.getValidationError(this._getFullNumber(),iso2);}return-99;}//* Validate the input val
isValidNumber(){if(!this.selectedCountryData.iso2){return false;}const val=this._getFullNumber();const alphaCharPosition=val.search(/\p{L}/u);if(alphaCharPosition>-1){const beforeAlphaChar=val.substring(0,alphaCharPosition);const beforeAlphaIsValid=this._utilsIsPossibleNumber(beforeAlphaChar);const isValid=this._utilsIsPossibleNumber(val);return beforeAlphaIsValid&&isValid;}return this._utilsIsPossibleNumber(val);}_utilsIsPossibleNumber(val){return intlTelInput.utils?intlTelInput.utils.isPossibleNumber(val,this.selectedCountryData.iso2,this.options.validationNumberTypes):null;}//* Validate the input val (precise)
isValidNumberPrecise(){if(!this.selectedCountryData.iso2){return false;}const val=this._getFullNumber();const alphaCharPosition=val.search(/\p{L}/u);if(alphaCharPosition>-1){const beforeAlphaChar=val.substring(0,alphaCharPosition);const beforeAlphaIsValid=this._utilsIsValidNumber(beforeAlphaChar);const isValid=this._utilsIsValidNumber(val);return beforeAlphaIsValid&&isValid;}return this._utilsIsValidNumber(val);}_utilsIsValidNumber(val){return intlTelInput.utils?intlTelInput.utils.isValidNumber(val,this.selectedCountryData.iso2,this.options.validationNumberTypes):null;}//* Update the selected country, and update the input val accordingly.
setCountry(iso2){const iso2Lower=iso2?.toLowerCase();const currentCountry=this.selectedCountryData.iso2;const isCountryChange=iso2&&iso2Lower!==currentCountry||!iso2&&currentCountry;if(isCountryChange){this._setCountry(iso2Lower);this._updateDialCode(this.selectedCountryData.dialCode);this._triggerCountryChange();}}//* Set the input value and update the country.
setNumber(number){const countryChanged=this._updateCountryFromNumber(number);this._updateValFromNumber(number);if(countryChanged){this._triggerCountryChange();}this._trigger("input",{isSetNumber:true});}//* Set the placeholder number typ
setPlaceholderNumberType(type){this.options.placeholderNumberType=type;this._updatePlaceholder();}setDisabled(disabled){this.telInput.disabled=disabled;if(disabled){this.selectedCountry.setAttribute("disabled","true");}else{this.selectedCountry.removeAttribute("disabled");}}};var attachUtils=source=>{if(!intlTelInput.utils&&!intlTelInput.startedLoadingUtilsScript){let loadCall;if(typeof source==="function"){try{loadCall=Promise.resolve(source());}catch(error){return Promise.reject(error);}}else{return Promise.reject(new TypeError(`The argument passed to attachUtils must be a function that returns a promise for the utilities module, not ${typeof source}`));}intlTelInput.startedLoadingUtilsScript=true;return loadCall.then(module=>{const utils=module?.default;if(!utils||typeof utils!=="object"){throw new TypeError("The loader function passed to attachUtils did not resolve to a module object with utils as its default export.");}intlTelInput.utils=utils;forEachInstance("handleUtils");return true;}).catch(error=>{forEachInstance("rejectUtilsScriptPromise",error);throw error;});}return null;};var intlTelInput=Object.assign((input,options)=>{const iti=new Iti(input,options);iti._init();input.setAttribute("data-intl-tel-input-id",iti.id.toString());intlTelInput.instances[iti.id]=iti;return iti;},{defaults,//* Using a static var like this allows us to mock it in the tests.
documentReady:()=>document.readyState==="complete",//* Get the country data object.
getCountryData:()=>data_default,//* A getter for the plugin instance.
getInstance:input=>{const id2=input.getAttribute("data-intl-tel-input-id");return id2?intlTelInput.instances[id2]:null;},//* A map from instance ID to instance object.
instances:{},attachUtils,startedLoadingUtilsScript:false,startedLoadingAutoCountry:false,version:"25.3.1"});var intl_tel_input_default=intlTelInput;return __toCommonJS(intl_tel_input_exports);})();// UMD
return factoryOutput.default;});})(intlTelInput$1);return intlTelInput$1.exports;}var intlTelInputExports=requireIntlTelInput();var intlTelInput=/*@__PURE__*/getDefaultExportFromCjs(intlTelInputExports);const interfaceTranslations={selectedCountryAriaLabel:Lang.get('core.selected_country_aria_label'),noCountrySelected:Lang.get('core.no_country_selected'),countryListAriaLabel:Lang.get('core.country_list_aria_label'),searchPlaceholder:Lang.get('general.search'),zeroSearchResults:Lang.get('core.zero_search_results'),oneSearchResult:Lang.get('core.one_search_result'),multipleSearchResults:Lang.get('core.multiple_search_results')};const countryTranslations={ad:Lang.get('locale.country.AD'),ae:Lang.get('locale.country.AE'),af:Lang.get('locale.country.AF'),ag:Lang.get('locale.country.AG'),ai:Lang.get('locale.country.AI'),al:Lang.get('locale.country.AL'),am:Lang.get('locale.country.AM'),ao:Lang.get('locale.country.AO'),ar:Lang.get('locale.country.AR'),as:Lang.get('locale.country.AS'),at:Lang.get('locale.country.AT'),au:Lang.get('locale.country.AU'),aw:Lang.get('locale.country.AW'),ax:Lang.get('locale.country.AX'),az:Lang.get('locale.country.AZ'),ba:Lang.get('locale.country.BA'),bb:Lang.get('locale.country.BB'),bd:Lang.get('locale.country.BD'),be:Lang.get('locale.country.BE'),bf:Lang.get('locale.country.BF'),bg:Lang.get('locale.country.BG'),bh:Lang.get('locale.country.BH'),bi:Lang.get('locale.country.BI'),bj:Lang.get('locale.country.BJ'),bl:Lang.get('locale.country.BL'),bm:Lang.get('locale.country.BM'),bn:Lang.get('locale.country.BN'),bo:Lang.get('locale.country.BO'),bq:Lang.get('locale.country.BQ'),br:Lang.get('locale.country.BR'),bs:Lang.get('locale.country.BS'),bt:Lang.get('locale.country.BT'),bw:Lang.get('locale.country.BW'),by:Lang.get('locale.country.BY'),bz:Lang.get('locale.country.BZ'),ca:Lang.get('locale.country.CA'),cd:Lang.get('locale.country.CD'),cf:Lang.get('locale.country.CF'),cg:Lang.get('locale.country.CG'),ch:Lang.get('locale.country.CH'),ci:Lang.get('locale.country.CI'),ck:Lang.get('locale.country.CK'),cl:Lang.get('locale.country.CL'),cm:Lang.get('locale.country.CM'),cn:Lang.get('locale.country.CN'),co:Lang.get('locale.country.CO'),cr:Lang.get('locale.country.CR'),cu:Lang.get('locale.country.CU'),cv:Lang.get('locale.country.CV'),cw:Lang.get('locale.country.CW'),cy:Lang.get('locale.country.CY'),cz:Lang.get('locale.country.CZ'),de:Lang.get('locale.country.DE'),dj:Lang.get('locale.country.DJ'),dk:Lang.get('locale.country.DK'),dm:Lang.get('locale.country.DM'),do:Lang.get('locale.country.DO'),dz:Lang.get('locale.country.DZ'),ec:Lang.get('locale.country.EC'),ee:Lang.get('locale.country.EE'),eg:Lang.get('locale.country.EG'),eh:Lang.get('locale.country.EH'),er:Lang.get('locale.country.ER'),es:Lang.get('locale.country.ES'),et:Lang.get('locale.country.ET'),fi:Lang.get('locale.country.FI'),fj:Lang.get('locale.country.FJ'),fk:Lang.get('locale.country.FK'),fm:Lang.get('locale.country.FM'),fo:Lang.get('locale.country.FO'),fr:Lang.get('locale.country.FR'),ga:Lang.get('locale.country.GA'),gb:Lang.get('locale.country.GB'),gd:Lang.get('locale.country.GD'),ge:Lang.get('locale.country.GE'),gg:Lang.get('locale.country.GG'),gh:Lang.get('locale.country.GH'),gl:Lang.get('locale.country.GL'),gm:Lang.get('locale.country.GM'),gn:Lang.get('locale.country.GN'),gq:Lang.get('locale.country.GQ'),gr:Lang.get('locale.country.GR'),gt:Lang.get('locale.country.GT'),gu:Lang.get('locale.country.GU'),gw:Lang.get('locale.country.GW'),gy:Lang.get('locale.country.GY'),hk:Lang.get('locale.country.HK'),hn:Lang.get('locale.country.HN'),hr:Lang.get('locale.country.HR'),ht:Lang.get('locale.country.HT'),hu:Lang.get('locale.country.HU'),id:Lang.get('locale.country.ID'),ie:Lang.get('locale.country.IE'),il:Lang.get('locale.country.IL'),im:Lang.get('locale.country.IM'),in:Lang.get('locale.country.IN'),io:Lang.get('locale.country.IO'),iq:Lang.get('locale.country.IQ'),ir:Lang.get('locale.country.IR'),is:Lang.get('locale.country.IS'),it:Lang.get('locale.country.IT'),je:Lang.get('locale.country.JE'),jm:Lang.get('locale.country.JM'),jo:Lang.get('locale.country.JO'),jp:Lang.get('locale.country.JP'),ke:Lang.get('locale.country.KE'),kg:Lang.get('locale.country.KG'),kh:Lang.get('locale.country.KH'),ki:Lang.get('locale.country.KI'),km:Lang.get('locale.country.KM'),kn:Lang.get('locale.country.KN'),kp:Lang.get('locale.country.KP'),kr:Lang.get('locale.country.KR'),kw:Lang.get('locale.country.KW'),ky:Lang.get('locale.country.KY'),kz:Lang.get('locale.country.KZ'),la:Lang.get('locale.country.LA'),lb:Lang.get('locale.country.LB'),lc:Lang.get('locale.country.LC'),li:Lang.get('locale.country.LI'),lk:Lang.get('locale.country.LK'),lr:Lang.get('locale.country.LR'),ls:Lang.get('locale.country.LS'),lt:Lang.get('locale.country.LT'),lu:Lang.get('locale.country.LU'),lv:Lang.get('locale.country.LV'),ly:Lang.get('locale.country.LY'),ma:Lang.get('locale.country.MA'),mc:Lang.get('locale.country.MC'),md:Lang.get('locale.country.MD'),me:Lang.get('locale.country.ME'),mf:Lang.get('locale.country.MF'),mg:Lang.get('locale.country.MG'),mh:Lang.get('locale.country.MH'),mk:Lang.get('locale.country.MK'),ml:Lang.get('locale.country.ML'),mm:Lang.get('locale.country.MM'),mn:Lang.get('locale.country.MN'),mo:Lang.get('locale.country.MO'),mp:Lang.get('locale.country.MP'),mr:Lang.get('locale.country.MR'),ms:Lang.get('locale.country.MS'),mt:Lang.get('locale.country.MT'),mu:Lang.get('locale.country.MU'),mv:Lang.get('locale.country.MV'),mw:Lang.get('locale.country.MW'),mx:Lang.get('locale.country.MX'),my:Lang.get('locale.country.MY'),mz:Lang.get('locale.country.MZ'),na:Lang.get('locale.country.NA'),nc:Lang.get('locale.country.NC'),ne:Lang.get('locale.country.NE'),nf:Lang.get('locale.country.NF'),ng:Lang.get('locale.country.NG'),ni:Lang.get('locale.country.NI'),nl:Lang.get('locale.country.NL'),no:Lang.get('locale.country.NO'),np:Lang.get('locale.country.NP'),nr:Lang.get('locale.country.NR'),nu:Lang.get('locale.country.NU'),nz:Lang.get('locale.country.NZ'),om:Lang.get('locale.country.OM'),pa:Lang.get('locale.country.PA'),pe:Lang.get('locale.country.PE'),pf:Lang.get('locale.country.PF'),pg:Lang.get('locale.country.PG'),ph:Lang.get('locale.country.PH'),pk:Lang.get('locale.country.PK'),pl:Lang.get('locale.country.PL'),pm:Lang.get('locale.country.PM'),pr:Lang.get('locale.country.PR'),ps:Lang.get('locale.country.PS'),pt:Lang.get('locale.country.PT'),pw:Lang.get('locale.country.PW'),py:Lang.get('locale.country.PY'),qa:Lang.get('locale.country.QA'),ro:Lang.get('locale.country.RO'),rs:Lang.get('locale.country.RS'),ru:Lang.get('locale.country.RU'),rw:Lang.get('locale.country.RW'),sa:Lang.get('locale.country.SA'),sb:Lang.get('locale.country.SB'),sc:Lang.get('locale.country.SC'),sd:Lang.get('locale.country.SD'),se:Lang.get('locale.country.SE'),sg:Lang.get('locale.country.SG'),sh:Lang.get('locale.country.SH'),si:Lang.get('locale.country.SI'),sk:Lang.get('locale.country.SK'),sl:Lang.get('locale.country.SL'),sm:Lang.get('locale.country.SM'),sn:Lang.get('locale.country.SN'),so:Lang.get('locale.country.SO'),sr:Lang.get('locale.country.SR'),ss:Lang.get('locale.country.SS'),st:Lang.get('locale.country.ST'),sv:Lang.get('locale.country.SV'),sx:Lang.get('locale.country.SX'),sy:Lang.get('locale.country.SY'),sz:Lang.get('locale.country.SZ'),tc:Lang.get('locale.country.TC'),td:Lang.get('locale.country.TD'),tg:Lang.get('locale.country.TG'),th:Lang.get('locale.country.TH'),tj:Lang.get('locale.country.TJ'),tl:Lang.get('locale.country.TL'),tm:Lang.get('locale.country.TM'),tn:Lang.get('locale.country.TN'),to:Lang.get('locale.country.TO'),tr:Lang.get('locale.country.TR'),tt:Lang.get('locale.country.TT'),tv:Lang.get('locale.country.TV'),tw:Lang.get('locale.country.TW'),tz:Lang.get('locale.country.TZ'),ua:Lang.get('locale.country.UA'),ug:Lang.get('locale.country.UG'),us:Lang.get('locale.country.US'),uy:Lang.get('locale.country.UY'),uz:Lang.get('locale.country.UZ'),va:Lang.get('locale.country.VA'),vc:Lang.get('locale.country.VC'),ve:Lang.get('locale.country.VE'),vg:Lang.get('locale.country.VG'),vi:Lang.get('locale.country.VI'),vn:Lang.get('locale.country.VN'),vu:Lang.get('locale.country.VU'),wf:Lang.get('locale.country.WF'),ws:Lang.get('locale.country.WS'),ye:Lang.get('locale.country.YE'),za:Lang.get('locale.country.ZA'),zm:Lang.get('locale.country.ZM'),zw:Lang.get('locale.country.ZW')};const allTranslations={...countryTranslations,...interfaceTranslations};const config={autoPlaceholder:'off',formatOnDisplay:false,initialCountry:$('meta[name=default_country]').prop('content'),countryOrder:[$('meta[name=default_country]').prop('content')],separateDialCode:true,// Not included in SupportPal locale
excludeCountries:['cc','cx','gf','gi','gp','mq','re','sj','tk','yt'],i18n:allTranslations,utilsScript:laroute.asset('resources/assets/libs/intltelinput/js/utils.js')};(function($,undefined$1){var pluginName='phoneinput';/**
  	     * @param {HTMLElement} element The DOM element where plugin is applied
  	     * @param {Object} options Options passed to the constructor
  	     */function Plugin(element,options){this.el=element;this.$el=$(element);this.options=$.extend({},$.fn[pluginName].defaults,options);this.init();// Update hidden input on changing number or country code.
this.$el.on('change countrychange',function(){$(this).phoneinput('sync');});}/**
  	     * Usage: $('#element').phoneinput('method');
  	     */Plugin.prototype={init:function(){this.instance=intlTelInput(this.el,this.options);// Add hidden input after which contains the full number with country code.
$('<input>').attr('type','hidden').attr('name',this.$el.attr('name').replace('[number]','[full_number]')).insertAfter(this.$el);// Set value in hidden input.
this.sync();},destroy:function(){this.$el.removeData();},sync:function(){var countryData=this.instance.getSelectedCountryData();this.$el.next('input[type="hidden"]').val('+'+countryData.dialCode+this.$el.val());}};$.fn[pluginName]=function(options){var args=arguments;if(options===undefined$1||typeof options==='object'){// Creates a new plugin instance, for each selected element, and
// stores a reference within the element's data
return this.each(function(){if(!$.data(this,'plugin_'+pluginName)){$.data(this,'plugin_'+pluginName,new Plugin(this,options));}});}else if(typeof options==='string'&&options[0]!=='_'&&options!=='init'){// Call a public plugin method (not starting with an underscore) for each
// selected element.
if(Array.prototype.slice.call(args,1).length===0&&$.inArray(options,$.fn[pluginName].getters)!==-1){// If the user does not pass any arguments and the method allows to
// work as a getter then break the chain so we can return a value
// instead the element reference.
var instance=$.data(this[0],'plugin_'+pluginName);return instance[options].apply(instance,Array.prototype.slice.call(args,1));}else{// Invoke the specified method on each selected element
return this.each(function(){var instance=$.data(this,'plugin_'+pluginName);if(instance instanceof Plugin&&typeof instance[options]==='function'){instance[options].apply(instance,Array.prototype.slice.call(args,1));}});}}};$.fn[pluginName].getters=[];$.fn[pluginName].defaults=config;})(jQuery);});function Filtering(){}/**
   * Fetch a unique group ID.
   *
   * @returns {number}
   */Filtering.getUniqueGroupId=function(){var re=/^\w+\[(\d+)?]\[\w+]?$/;var m,index=0;// loop over all group IDs (selecting elements by those starting with "conditiongroups" and ending with "[id]"
$('.sp-condition-group input[name ^=conditiongroups][name $="[id]"]').each(function(){if((m=re.exec($(this).attr('name')))!==null){if(typeof m[1]!='undefined'){if((m=parseInt(m[1]))>=index){index=m+1;}}}});return index;};/**
   * Remove any condition items that have an empty value dropdown.
   *
   * @param context
   */Filtering.removeEmpty=function(context){$(context).find('.condition-value select').each(function(){if(!$(this).find('option').length){$(context).find('.condition-item select').find('option[value="'+$(this).data('item')+'"]').remove();}});};/**
   * Show a given condition.
   *
   * @param context
   */Filtering.showCondition=function(context){var item=parseInt($(context).val()),$selectedOption=$(context).find(':selected');$(context).parents('tr').find('.condition-value :input').prop('disabled',true).addClass('sp-hidden');$(context).parents('tr').find('.condition-value :input[data-item="'+item+'"]').prop('disabled',false).removeClass('sp-hidden');$(context).parents('tr').find('.condition-value .sp-description').addClass('sp-hidden');$(context).parents('tr').find('.condition-value .sp-description[data-item="'+item+'"]').removeClass('sp-hidden');$(context).parents('tr').find('.condition-operator select').prop('disabled',true).addClass('sp-hidden');var operator=$(context).parents('tr').find('.condition-value :input[data-item="'+item+'"]').data('operator');$(context).parents('tr').find('.condition-operator select.operator'+operator).prop('disabled',false).removeClass('sp-hidden');// Remove any items that have an empty dropdown
Filtering.removeEmpty($(context).parents('tr'));// Special case: If a date picker, initialise flatpickr
if(operator===2||operator===7){$(context).parents('tr').find('.datepicker').datepicker();}// Special case: If a phone input, initialise intl-tel-input
if(item===71){$(context).parents('tr').find('.sp-phone-number').phoneinput();}// Special case: need to enable the custom field ID value for custom fields (hide and disable it otherwise)
var ids=[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58];$(context).parents('tr').find('.condition-value select[name*="[value]"]').filter(function(){return ids.indexOf($(this).data('item'))>-1;}).prop('disabled',true).addClass('sp-hidden');if($.inArray(item,ids)!==-1){$(context).parents('tr').find('.condition-value select[data-item='+item+'][name*="[value]"]').prop('disabled',false).val($selectedOption.data('field'));}// Special case: only show options relevant to the selected custom field.
if(item==45||item==47||item==50||item==52||item==55||item==57){var $conditionValue=$(context).parents('tr').find('.condition-value select[data-item='+item+'][name*="[value_extra]"]');$conditionValue.find('option').each(function(){if($(this).is('[data-field="'+$selectedOption.data('field')+'"]')){$(this).prop('disabled',false).removeClass('sp-hidden');}else{$(this).prop('disabled',true).addClass('sp-hidden');}});// Select the first option if currently selected value is not valid.
if($conditionValue.find('option:selected').is(':disabled')){$conditionValue.find('option:selected').prop('selected',false);$conditionValue.find('option:not(:disabled):first').prop('selected',true);}}};/**
   * Initialise the filtering menus.
   */Filtering.initialise=function(){// Add custom fields to every condition-item drop-down (the hidden <tr> used for new conditions and any other
// <tr> for current conditions).
// Important: We need to do this before we delete empty dropdowns.
var ids=[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],$ticketCustomFields=$('.condition .condition-item select').find('option[value=44]'),$userCustomFields=$('.condition .condition-item select').find('option[value=49]'),$organisationCustomFields=$('.condition .condition-item select').find('option[value=54]');// Only get custom fields from the first condition, otherwise we get several duplicates...
var customFields=$('.condition:first .condition-value select[name*="[value]"]').filter(function(){return ids.indexOf($(this).data('item'))>-1;}).find('option').map(function(){return{item:$(this).parents('select').data('item'),option:this};}).sort(function(a,b){// Sort alphabetically, and then flip it because we insert backwards...
return a.option.text.toUpperCase().localeCompare(b.option.text.toUpperCase());}).get().reverse();// Insert the custom field conditions.
$(customFields).each(function(index,value){var condition=parseInt(value.item);// Target the right section
if(condition<=48){var $text=Lang.get('conditions.ticket_custom_field'),$section=$ticketCustomFields;}else if(condition>=49&&condition<=53){var $text=Lang.get('conditions.user_custom_field'),$section=$userCustomFields;}else{var $text=Lang.get('conditions.user_organisation_custom_field'),$section=$organisationCustomFields;}var $option=$('<option>',{value:condition,text:$text+': '+value.option.text,"data-field":value.option.value});$section.after($option);});$ticketCustomFields.remove();$userCustomFields.remove();$organisationCustomFields.remove();// Remove any items that have an empty dropdown
Filtering.removeEmpty('.condition:first');// Ensure right operator and value is showing for each condition.
$('.condition-item select').each(function(){// Set selected item for existing conditions.
var data=$(this).data();if(typeof data.selected!=='undefined'&&data.field!==''){$(this).find('option[value="'+data.selected+'"][data-field="'+data.field+'"]').prop('selected',true);}// Show relevant condition fields.
Filtering.showCondition(this);});// Disable items in first (hidden) row
$(".sp-condition-group:first:not(:visible) :input, .condition:first :input").prop('disabled',true);$('.sp-condition-group .add-condition, .sp-condition-group-buttons button').prop('disabled',false);// If we have default conditions, show them.
if($('.condition:not(.hide)').length){$('.sp-condition-group table').removeClass('sp-hidden');}// If we more than one condition group, show the plan conditiongroup type dropdown
if($('.sp-condition-group:visible').length>1){$('.plan-conditiongroup-type').removeClass('sp-hidden');}else{$('.plan-conditiongroup-type').addClass('sp-hidden');}// Show the condition group type dropdown if conditiongroup has 2 or more conditions
// Show the remove button always if using in grid filtering or in reports
$('.sp-condition-group').each(function(){if($(this).find('.condition:visible').length>1||$(this).parents('.grid-options').length||$(this).hasClass('sp-report-filtering')){$(this).find('.sp-condition-group-type, .condition .remove-button').removeClass('sp-hidden');}else{$(this).find('.sp-condition-group-type, .condition .remove-button').addClass('sp-hidden');}});};$(function(){// Toggle filtering
$('.sp-quick-actions').on('mousedown','button.sp-filter-results',function(){// If we're toggling to show and it's currently empty, insert new condition group
if($('.sp-condition-group').parent().toggle().is(':visible')&&!$('.sp-condition-group:not(.sp-hidden)').length){$('.add-conditiongroup').trigger('click');}});Filtering.initialise();/**
       * When selecting a condition, show the appropriate operator and value fields.
       */$(document.body).on('change','.condition-item select',function(){Filtering.showCondition(this);});/**
       * Add Condition Group.
       */$(document.body).on('click','.add-conditiongroup',function(){// Get unique index for this new group (before we insert the new DOM)
var index=Filtering.getUniqueGroupId();// Insert new group into the DOM
addNewItem('.sp-condition-group');// This needs to be here, after we've added the item above.
var $this=$('.sp-condition-group:last');// Add a condition by default
$this.find('.condition').removeClass('sp-hidden');// Disable unnecessary condition operator and values
$this.find('.condition-operator, .condition-value').find(':input:not(:visible)').prop('disabled',true);// Hide the delete button for now as there's only one condition
$this.find('.sp-condition-group-type, .condition .remove-button').addClass('sp-hidden');// Set condition group ID on condition
$this.find('input[name^=conditiongroups][name$="[local_id]"], .conditiongroup-id, .condition-group-id').val(index);// If we more than one conditiongroup now, show the plan conditiongroup type dropdown
if($('.sp-condition-group:visible').length>1){$('.plan-conditiongroup-type').removeClass('sp-hidden');}else{$('.plan-conditiongroup-type').addClass('sp-hidden');}});/**
       * Remove Condition Group.
       */$(document.body).on('click','.sp-condition-group-header .remove-button',function(){// Hide the plan conditiongroup type dropdown if just one conditiongroup now
$(this).parents('.sp-condition-group').remove();if($('.sp-condition-group:visible').length>1){$('.plan-conditiongroup-type').removeClass('sp-hidden');}else{$('.plan-conditiongroup-type').addClass('sp-hidden');}});/**
       * Add filtering condition
       */$(document.body).on('click','.add-condition',function(){addNewItem('.condition',$(this).parents('.sp-condition-group').find('table'));// Set condition group ID on condition
var $this=$(this).parents('.sp-condition-group'),index=$this.find('input[name$="[local_id]"').val();$this.find('.condition-group-id').val(index);// Show table
$this.find('table').removeClass('sp-hidden');// Disable and hide fields that are not needed now
$this.find('.condition:last .condition-value :input, .condition:last .condition-operator :input').prop('disabled',true).addClass('sp-hidden');// Show the right condition options and values
var selected=$this.find('.condition:last .condition-item select').val();$this.find('.condition:last .condition-value :input[data-item="'+selected+'"]').prop('disabled',false).removeClass('sp-hidden');var operator=$this.find('.condition:last .condition-value :input[data-item="'+selected+'"]').data('operator');$this.find('.condition:last .condition-operator select.operator'+operator).prop('disabled',false).removeClass('sp-hidden');if(operator===2){$this.find('.condition:last').find('.datepicker').datepicker();}// Show the conditiongroup type dropdown and condition remove button if conditiongroup now has 2 or more conditions
// Show the remove button always if using in grid filtering or in reports
if($this.find('.condition:visible').length>1||$this.parents('.grid-options').length||$(this).parents('.sp-report-filtering').length){$this.find('.sp-condition-group-type, .condition .remove-button').removeClass('sp-hidden');}else{$this.find('.sp-condition-group-type, .condition .remove-button').addClass('sp-hidden');}});/**
       * Remove filtering condition
       */$(document.body).on('click','.condition .remove-button',function(){var $group=$(this).parents('.sp-condition-group');// Hide the conditiongroup type dropdown if conditiongroup has at least 3 conditions before deleting this one
// Show the remove button always if using in grid filtering or in reports
if($group.find('.condition:visible').length>2||$(this).parents('.grid-options').length||$(this).parents('.sp-report-filtering').length){$group.find('.sp-condition-group-type, .condition .remove-button').removeClass('sp-hidden');}else{$group.find('.sp-condition-group-type, .condition .remove-button').addClass('sp-hidden');}// Remove the condition row
$(this).parents('.condition').remove();// Hide table if no conditions left
if($group.find('.condition:visible').length===0){$group.find('table').addClass('sp-hidden');}});});/******************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */ /* global Reflect, Promise, SuppressedError, Symbol, Iterator */var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p];};return extendStatics(d,b);};function __extends(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());}typeof SuppressedError==="function"?SuppressedError:function(error,suppressed,message){var e=new Error(message);return e.name="SuppressedError",e.error=error,e.suppressed=suppressed,e;};function cssvar(name){return window.getComputedStyle(document.documentElement).getPropertyValue(name);}function url(url,params){var hasParams=typeof new URL(url).searchParams.entries().next().value!=='undefined';return url+(hasParams?'&':'?')+$.param(params);}function wordwrap(str,width,cut){width=width||75;cut=cut||false;if(!str){return[str];}var regex='.{1,'+width+'}(\\s|$)'+(cut?'|.{'+width+'}|.+$':'|\\S+?(\\s|$)');var matches=str.match(RegExp(regex,'g'));if(matches===null){return[str];}return Array.from(matches.values());}function obj_get(obj,key){if(key.length===0){return obj;}return key.split('.').reduce(function(a,b){return a[b];},obj);}function UnderlyingData(){}UnderlyingData.show=function(route,exportRoute){Swal.showLoading();$.get(route).done(function(response){Swal.fire({title:Lang.get('report.underlying_data'),html:response.data.table,width:'97%',showCloseButton:true,showConfirmButton:true,showLoaderOnConfirm:true,confirmButtonText:Lang.get('report.export_csv'),didOpen:function(){Swal.getHtmlContainer().style.textAlign='left';$('#'+response.data.id).dataTable(JSON.parse(response.data.options));},preConfirm:function(){return $.get(exportRoute).then(function(response){if(response.status=='success'){return response;}throw new Error(response.statusText);}).catch(function(){Swal.fire(Lang.get('messages.error'),Lang.get('report.export_error'),'error');return false;});}}).then(function(result){if(result.value){Swal.fire(Lang.get('messages.success'),Lang.get('report.export_scheduled'),'success');}});});};var Card=/** @class */function(){function Card(filters,$elm){this.opts={};this.filters=filters;this.$elm=$elm;}Card.prototype.registerHandlers=function(){var instance=this;this.$elm.on('click','.refresh-btn',function(){return instance.refresh();}).on('click','.export-csv-btn',function(){Swal.showLoading();var $item=$(this).parents('.grid-stack-item');var route=url($item.data('downloadCsvRoute'),instance.filters.all());$.get(route).done(function(){return Swal.fire(Lang.get('messages.success'),Lang.get('report.export_scheduled'),'success');});}).on('click','.print-btn',function(){var $item=$(this).parents('.grid-stack-item');var route=url($item.data('printRoute'),instance.filters.all());window.open(route,'_blank');}).on('click','.underlying-btn',function(){var $item=$(this).parents('.grid-stack-item');UnderlyingData.show(url($item.data('underlyingView'),instance.filters.all()),url($item.data('underlyingExport'),instance.filters.all()));});};Card.prototype.print=function(){this.refresh().then(function(){return setTimeout(function(){return window.print();},250);});};Card.prototype.setOptions=function(opts){this.opts=opts;return this;};Card.prototype.underlyingDataRoute=function(){return this.$elm.data('underlyingView');};Card.prototype.underlyingDataExportRoute=function(){return this.$elm.data('underlyingExport');};Card.prototype.underlyingDataValueKey=function(){return this.$elm.data('underlyingValueKey');};Card.prototype.implementsUnderlyingData=function(){return typeof this.underlyingDataRoute()!=='undefined';};return Card;}();var NumberCard=/** @class */function(_super){__extends(NumberCard,_super);function NumberCard(){return _super!==null&&_super.apply(this,arguments)||this;}NumberCard.prototype.refresh=function(){var _this=this;this.toggleLoading(true);return $.get(this.$elm.data('route'),this.filters.all()).done(function(response){return _this.$elm.find('.number-value').html(response.data||$('<span>').addClass('sp-description sp-text-2xl').text(Lang.get('report.no_data_found')));}).always(function(){return _this.toggleLoading(false);});};NumberCard.prototype.toggleLoading=function(show){this.$elm.find('.number-card .fa-spinner').toggle(show);this.$elm.find('.number-card .number-value').toggle(!show);};return NumberCard;}(Card);//! moment.js
//! version : 2.29.4
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com
(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory():typeof define==='function'&&define.amd?define(factory):global.moment=factory();})(window,function(){var hookCallback;function hooks(){return hookCallback.apply(null,arguments);}// This is done to register the method called with moment()
// without creating circular dependencies.
function setHookCallback(callback){hookCallback=callback;}function isArray(input){return input instanceof Array||Object.prototype.toString.call(input)==='[object Array]';}function isObject(input){// IE8 will treat undefined and null as object if it wasn't for
// input != null
return input!=null&&Object.prototype.toString.call(input)==='[object Object]';}function hasOwnProp(a,b){return Object.prototype.hasOwnProperty.call(a,b);}function isObjectEmpty(obj){if(Object.getOwnPropertyNames){return Object.getOwnPropertyNames(obj).length===0;}else{var k;for(k in obj){if(hasOwnProp(obj,k)){return false;}}return true;}}function isUndefined(input){return input===void 0;}function isNumber(input){return typeof input==='number'||Object.prototype.toString.call(input)==='[object Number]';}function isDate(input){return input instanceof Date||Object.prototype.toString.call(input)==='[object Date]';}function map(arr,fn){var res=[],i,arrLen=arr.length;for(i=0;i<arrLen;++i){res.push(fn(arr[i],i));}return res;}function extend(a,b){for(var i in b){if(hasOwnProp(b,i)){a[i]=b[i];}}if(hasOwnProp(b,'toString')){a.toString=b.toString;}if(hasOwnProp(b,'valueOf')){a.valueOf=b.valueOf;}return a;}function createUTC(input,format,locale,strict){return createLocalOrUTC(input,format,locale,strict,true).utc();}function defaultParsingFlags(){// We need to deep clone this object.
return{empty:false,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:false,invalidEra:null,invalidMonth:null,invalidFormat:false,userInvalidated:false,iso:false,parsedDateParts:[],era:null,meridiem:null,rfc2822:false,weekdayMismatch:false};}function getParsingFlags(m){if(m._pf==null){m._pf=defaultParsingFlags();}return m._pf;}var some;if(Array.prototype.some){some=Array.prototype.some;}else{some=function(fun){var t=Object(this),len=t.length>>>0,i;for(i=0;i<len;i++){if(i in t&&fun.call(this,t[i],i,t)){return true;}}return false;};}function isValid(m){if(m._isValid==null){var flags=getParsingFlags(m),parsedParts=some.call(flags.parsedDateParts,function(i){return i!=null;}),isNowValid=!isNaN(m._d.getTime())&&flags.overflow<0&&!flags.empty&&!flags.invalidEra&&!flags.invalidMonth&&!flags.invalidWeekday&&!flags.weekdayMismatch&&!flags.nullInput&&!flags.invalidFormat&&!flags.userInvalidated&&(!flags.meridiem||flags.meridiem&&parsedParts);if(m._strict){isNowValid=isNowValid&&flags.charsLeftOver===0&&flags.unusedTokens.length===0&&flags.bigHour===undefined;}if(Object.isFrozen==null||!Object.isFrozen(m)){m._isValid=isNowValid;}else{return isNowValid;}}return m._isValid;}function createInvalid(flags){var m=createUTC(NaN);if(flags!=null){extend(getParsingFlags(m),flags);}else{getParsingFlags(m).userInvalidated=true;}return m;}// Plugins that add properties should also add the key here (null value),
// so we can properly clone ourselves.
var momentProperties=hooks.momentProperties=[],updateInProgress=false;function copyConfig(to,from){var i,prop,val,momentPropertiesLen=momentProperties.length;if(!isUndefined(from._isAMomentObject)){to._isAMomentObject=from._isAMomentObject;}if(!isUndefined(from._i)){to._i=from._i;}if(!isUndefined(from._f)){to._f=from._f;}if(!isUndefined(from._l)){to._l=from._l;}if(!isUndefined(from._strict)){to._strict=from._strict;}if(!isUndefined(from._tzm)){to._tzm=from._tzm;}if(!isUndefined(from._isUTC)){to._isUTC=from._isUTC;}if(!isUndefined(from._offset)){to._offset=from._offset;}if(!isUndefined(from._pf)){to._pf=getParsingFlags(from);}if(!isUndefined(from._locale)){to._locale=from._locale;}if(momentPropertiesLen>0){for(i=0;i<momentPropertiesLen;i++){prop=momentProperties[i];val=from[prop];if(!isUndefined(val)){to[prop]=val;}}}return to;}// Moment prototype object
function Moment(config){copyConfig(this,config);this._d=new Date(config._d!=null?config._d.getTime():NaN);if(!this.isValid()){this._d=new Date(NaN);}// Prevent infinite loop in case updateOffset creates new moment
// objects.
if(updateInProgress===false){updateInProgress=true;hooks.updateOffset(this);updateInProgress=false;}}function isMoment(obj){return obj instanceof Moment||obj!=null&&obj._isAMomentObject!=null;}function warn(msg){if(hooks.suppressDeprecationWarnings===false&&typeof console!=='undefined'&&console.warn){void 0;}}function deprecate(msg,fn){var firstTime=true;return extend(function(){if(hooks.deprecationHandler!=null){hooks.deprecationHandler(null,msg);}if(firstTime){var args=[],arg,i,key,argLen=arguments.length;for(i=0;i<argLen;i++){arg='';if(typeof arguments[i]==='object'){arg+='\n['+i+'] ';for(key in arguments[0]){if(hasOwnProp(arguments[0],key)){arg+=key+': '+arguments[0][key]+', ';}}arg=arg.slice(0,-2);// Remove trailing comma and space
}else{arg=arguments[i];}args.push(arg);}warn(msg+'\nArguments: '+Array.prototype.slice.call(args).join('')+'\n'+new Error().stack);firstTime=false;}return fn.apply(this,arguments);},fn);}var deprecations={};function deprecateSimple(name,msg){if(hooks.deprecationHandler!=null){hooks.deprecationHandler(name,msg);}if(!deprecations[name]){warn(msg);deprecations[name]=true;}}hooks.suppressDeprecationWarnings=false;hooks.deprecationHandler=null;function isFunction(input){return typeof Function!=='undefined'&&input instanceof Function||Object.prototype.toString.call(input)==='[object Function]';}function set(config){var prop,i;for(i in config){if(hasOwnProp(config,i)){prop=config[i];if(isFunction(prop)){this[i]=prop;}else{this['_'+i]=prop;}}}this._config=config;// Lenient ordinal parsing accepts just a number in addition to
// number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
// TODO: Remove "ordinalParse" fallback in next major release.
this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+'|'+/\d{1,2}/.source);}function mergeConfigs(parentConfig,childConfig){var res=extend({},parentConfig),prop;for(prop in childConfig){if(hasOwnProp(childConfig,prop)){if(isObject(parentConfig[prop])&&isObject(childConfig[prop])){res[prop]={};extend(res[prop],parentConfig[prop]);extend(res[prop],childConfig[prop]);}else if(childConfig[prop]!=null){res[prop]=childConfig[prop];}else{delete res[prop];}}}for(prop in parentConfig){if(hasOwnProp(parentConfig,prop)&&!hasOwnProp(childConfig,prop)&&isObject(parentConfig[prop])){// make sure changes to properties don't modify parent config
res[prop]=extend({},res[prop]);}}return res;}function Locale(config){if(config!=null){this.set(config);}}var keys;if(Object.keys){keys=Object.keys;}else{keys=function(obj){var i,res=[];for(i in obj){if(hasOwnProp(obj,i)){res.push(i);}}return res;};}var defaultCalendar={sameDay:'[Today at] LT',nextDay:'[Tomorrow at] LT',nextWeek:'dddd [at] LT',lastDay:'[Yesterday at] LT',lastWeek:'[Last] dddd [at] LT',sameElse:'L'};function calendar(key,mom,now){var output=this._calendar[key]||this._calendar['sameElse'];return isFunction(output)?output.call(mom,now):output;}function zeroFill(number,targetLength,forceSign){var absNumber=''+Math.abs(number),zerosToFill=targetLength-absNumber.length,sign=number>=0;return(sign?forceSign?'+':'':'-')+Math.pow(10,Math.max(0,zerosToFill)).toString().substr(1)+absNumber;}var formattingTokens=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,localFormattingTokens=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,formatFunctions={},formatTokenFunctions={};// token:    'M'
// padded:   ['MM', 2]
// ordinal:  'Mo'
// callback: function () { this.month() + 1 }
function addFormatToken(token,padded,ordinal,callback){var func=callback;if(typeof callback==='string'){func=function(){return this[callback]();};}if(token){formatTokenFunctions[token]=func;}if(padded){formatTokenFunctions[padded[0]]=function(){return zeroFill(func.apply(this,arguments),padded[1],padded[2]);};}if(ordinal){formatTokenFunctions[ordinal]=function(){return this.localeData().ordinal(func.apply(this,arguments),token);};}}function removeFormattingTokens(input){if(input.match(/\[[\s\S]/)){return input.replace(/^\[|\]$/g,'');}return input.replace(/\\/g,'');}function makeFormatFunction(format){var array=format.match(formattingTokens),i,length;for(i=0,length=array.length;i<length;i++){if(formatTokenFunctions[array[i]]){array[i]=formatTokenFunctions[array[i]];}else{array[i]=removeFormattingTokens(array[i]);}}return function(mom){var output='',i;for(i=0;i<length;i++){output+=isFunction(array[i])?array[i].call(mom,format):array[i];}return output;};}// format date using native date object
function formatMoment(m,format){if(!m.isValid()){return m.localeData().invalidDate();}format=expandFormat(format,m.localeData());formatFunctions[format]=formatFunctions[format]||makeFormatFunction(format);return formatFunctions[format](m);}function expandFormat(format,locale){var i=5;function replaceLongDateFormatTokens(input){return locale.longDateFormat(input)||input;}localFormattingTokens.lastIndex=0;while(i>=0&&localFormattingTokens.test(format)){format=format.replace(localFormattingTokens,replaceLongDateFormatTokens);localFormattingTokens.lastIndex=0;i-=1;}return format;}var defaultLongDateFormat={LTS:'h:mm:ss A',LT:'h:mm A',L:'MM/DD/YYYY',LL:'MMMM D, YYYY',LLL:'MMMM D, YYYY h:mm A',LLLL:'dddd, MMMM D, YYYY h:mm A'};function longDateFormat(key){var format=this._longDateFormat[key],formatUpper=this._longDateFormat[key.toUpperCase()];if(format||!formatUpper){return format;}this._longDateFormat[key]=formatUpper.match(formattingTokens).map(function(tok){if(tok==='MMMM'||tok==='MM'||tok==='DD'||tok==='dddd'){return tok.slice(1);}return tok;}).join('');return this._longDateFormat[key];}var defaultInvalidDate='Invalid date';function invalidDate(){return this._invalidDate;}var defaultOrdinal='%d',defaultDayOfMonthOrdinalParse=/\d{1,2}/;function ordinal(number){return this._ordinal.replace('%d',number);}var defaultRelativeTime={future:'in %s',past:'%s ago',s:'a few seconds',ss:'%d seconds',m:'a minute',mm:'%d minutes',h:'an hour',hh:'%d hours',d:'a day',dd:'%d days',w:'a week',ww:'%d weeks',M:'a month',MM:'%d months',y:'a year',yy:'%d years'};function relativeTime(number,withoutSuffix,string,isFuture){var output=this._relativeTime[string];return isFunction(output)?output(number,withoutSuffix,string,isFuture):output.replace(/%d/i,number);}function pastFuture(diff,output){var format=this._relativeTime[diff>0?'future':'past'];return isFunction(format)?format(output):format.replace(/%s/i,output);}var aliases={};function addUnitAlias(unit,shorthand){var lowerCase=unit.toLowerCase();aliases[lowerCase]=aliases[lowerCase+'s']=aliases[shorthand]=unit;}function normalizeUnits(units){return typeof units==='string'?aliases[units]||aliases[units.toLowerCase()]:undefined;}function normalizeObjectUnits(inputObject){var normalizedInput={},normalizedProp,prop;for(prop in inputObject){if(hasOwnProp(inputObject,prop)){normalizedProp=normalizeUnits(prop);if(normalizedProp){normalizedInput[normalizedProp]=inputObject[prop];}}}return normalizedInput;}var priorities={};function addUnitPriority(unit,priority){priorities[unit]=priority;}function getPrioritizedUnits(unitsObj){var units=[],u;for(u in unitsObj){if(hasOwnProp(unitsObj,u)){units.push({unit:u,priority:priorities[u]});}}units.sort(function(a,b){return a.priority-b.priority;});return units;}function isLeapYear(year){return year%4===0&&year%100!==0||year%400===0;}function absFloor(number){if(number<0){// -0 -> 0
return Math.ceil(number)||0;}else{return Math.floor(number);}}function toInt(argumentForCoercion){var coercedNumber=+argumentForCoercion,value=0;if(coercedNumber!==0&&isFinite(coercedNumber)){value=absFloor(coercedNumber);}return value;}function makeGetSet(unit,keepTime){return function(value){if(value!=null){set$1(this,unit,value);hooks.updateOffset(this,keepTime);return this;}else{return get(this,unit);}};}function get(mom,unit){return mom.isValid()?mom._d['get'+(mom._isUTC?'UTC':'')+unit]():NaN;}function set$1(mom,unit,value){if(mom.isValid()&&!isNaN(value)){if(unit==='FullYear'&&isLeapYear(mom.year())&&mom.month()===1&&mom.date()===29){value=toInt(value);mom._d['set'+(mom._isUTC?'UTC':'')+unit](value,mom.month(),daysInMonth(value,mom.month()));}else{mom._d['set'+(mom._isUTC?'UTC':'')+unit](value);}}}// MOMENTS
function stringGet(units){units=normalizeUnits(units);if(isFunction(this[units])){return this[units]();}return this;}function stringSet(units,value){if(typeof units==='object'){units=normalizeObjectUnits(units);var prioritized=getPrioritizedUnits(units),i,prioritizedLen=prioritized.length;for(i=0;i<prioritizedLen;i++){this[prioritized[i].unit](units[prioritized[i].unit]);}}else{units=normalizeUnits(units);if(isFunction(this[units])){return this[units](value);}}return this;}var match1=/\d/,//       0 - 9
match2=/\d\d/,//      00 - 99
match3=/\d{3}/,//     000 - 999
match4=/\d{4}/,//    0000 - 9999
match6=/[+-]?\d{6}/,// -999999 - 999999
match1to2=/\d\d?/,//       0 - 99
match3to4=/\d\d\d\d?/,//     999 - 9999
match5to6=/\d\d\d\d\d\d?/,//   99999 - 999999
match1to3=/\d{1,3}/,//       0 - 999
match1to4=/\d{1,4}/,//       0 - 9999
match1to6=/[+-]?\d{1,6}/,// -999999 - 999999
matchUnsigned=/\d+/,//       0 - inf
matchSigned=/[+-]?\d+/,//    -inf - inf
matchOffset=/Z|[+-]\d\d:?\d\d/gi,// +00:00 -00:00 +0000 -0000 or Z
matchShortOffset=/Z|[+-]\d\d(?::?\d\d)?/gi,// +00 -00 +00:00 -00:00 +0000 -0000 or Z
matchTimestamp=/[+-]?\d+(\.\d{1,3})?/,// 123456789 123456789.123
// any word (or two) characters or numbers including two/three word month in arabic.
// includes scottish gaelic two word and hyphenated months
matchWord=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,regexes;regexes={};function addRegexToken(token,regex,strictRegex){regexes[token]=isFunction(regex)?regex:function(isStrict,localeData){return isStrict&&strictRegex?strictRegex:regex;};}function getParseRegexForToken(token,config){if(!hasOwnProp(regexes,token)){return new RegExp(unescapeFormat(token));}return regexes[token](config._strict,config._locale);}// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
function unescapeFormat(s){return regexEscape(s.replace('\\','').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(matched,p1,p2,p3,p4){return p1||p2||p3||p4;}));}function regexEscape(s){return s.replace(/[-\/\\^$*+?.()|[\]{}]/g,'\\$&');}var tokens={};function addParseToken(token,callback){var i,func=callback,tokenLen;if(typeof token==='string'){token=[token];}if(isNumber(callback)){func=function(input,array){array[callback]=toInt(input);};}tokenLen=token.length;for(i=0;i<tokenLen;i++){tokens[token[i]]=func;}}function addWeekParseToken(token,callback){addParseToken(token,function(input,array,config,token){config._w=config._w||{};callback(input,config._w,config,token);});}function addTimeToArrayFromToken(token,input,config){if(input!=null&&hasOwnProp(tokens,token)){tokens[token](input,config._a,config,token);}}var YEAR=0,MONTH=1,DATE=2,HOUR=3,MINUTE=4,SECOND=5,MILLISECOND=6,WEEK=7,WEEKDAY=8;function mod(n,x){return(n%x+x)%x;}var indexOf;if(Array.prototype.indexOf){indexOf=Array.prototype.indexOf;}else{indexOf=function(o){// I know
var i;for(i=0;i<this.length;++i){if(this[i]===o){return i;}}return-1;};}function daysInMonth(year,month){if(isNaN(year)||isNaN(month)){return NaN;}var modMonth=mod(month,12);year+=(month-modMonth)/12;return modMonth===1?isLeapYear(year)?29:28:31-modMonth%7%2;}// FORMATTING
addFormatToken('M',['MM',2],'Mo',function(){return this.month()+1;});addFormatToken('MMM',0,0,function(format){return this.localeData().monthsShort(this,format);});addFormatToken('MMMM',0,0,function(format){return this.localeData().months(this,format);});// ALIASES
addUnitAlias('month','M');// PRIORITY
addUnitPriority('month',8);// PARSING
addRegexToken('M',match1to2);addRegexToken('MM',match1to2,match2);addRegexToken('MMM',function(isStrict,locale){return locale.monthsShortRegex(isStrict);});addRegexToken('MMMM',function(isStrict,locale){return locale.monthsRegex(isStrict);});addParseToken(['M','MM'],function(input,array){array[MONTH]=toInt(input)-1;});addParseToken(['MMM','MMMM'],function(input,array,config,token){var month=config._locale.monthsParse(input,token,config._strict);// if we didn't find a month name, mark the date as invalid.
if(month!=null){array[MONTH]=month;}else{getParsingFlags(config).invalidMonth=input;}});// LOCALES
var defaultLocaleMonths='January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),defaultLocaleMonthsShort='Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),MONTHS_IN_FORMAT=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,defaultMonthsShortRegex=matchWord,defaultMonthsRegex=matchWord;function localeMonths(m,format){if(!m){return isArray(this._months)?this._months:this._months['standalone'];}return isArray(this._months)?this._months[m.month()]:this._months[(this._months.isFormat||MONTHS_IN_FORMAT).test(format)?'format':'standalone'][m.month()];}function localeMonthsShort(m,format){if(!m){return isArray(this._monthsShort)?this._monthsShort:this._monthsShort['standalone'];}return isArray(this._monthsShort)?this._monthsShort[m.month()]:this._monthsShort[MONTHS_IN_FORMAT.test(format)?'format':'standalone'][m.month()];}function handleStrictParse(monthName,format,strict){var i,ii,mom,llc=monthName.toLocaleLowerCase();if(!this._monthsParse){// this is not used
this._monthsParse=[];this._longMonthsParse=[];this._shortMonthsParse=[];for(i=0;i<12;++i){mom=createUTC([2000,i]);this._shortMonthsParse[i]=this.monthsShort(mom,'').toLocaleLowerCase();this._longMonthsParse[i]=this.months(mom,'').toLocaleLowerCase();}}if(strict){if(format==='MMM'){ii=indexOf.call(this._shortMonthsParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._longMonthsParse,llc);return ii!==-1?ii:null;}}else{if(format==='MMM'){ii=indexOf.call(this._shortMonthsParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._longMonthsParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._longMonthsParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortMonthsParse,llc);return ii!==-1?ii:null;}}}function localeMonthsParse(monthName,format,strict){var i,mom,regex;if(this._monthsParseExact){return handleStrictParse.call(this,monthName,format,strict);}if(!this._monthsParse){this._monthsParse=[];this._longMonthsParse=[];this._shortMonthsParse=[];}// TODO: add sorting
// Sorting makes sure if one month (or abbr) is a prefix of another
// see sorting in computeMonthsParse
for(i=0;i<12;i++){// make the regex if we don't have it already
mom=createUTC([2000,i]);if(strict&&!this._longMonthsParse[i]){this._longMonthsParse[i]=new RegExp('^'+this.months(mom,'').replace('.','')+'$','i');this._shortMonthsParse[i]=new RegExp('^'+this.monthsShort(mom,'').replace('.','')+'$','i');}if(!strict&&!this._monthsParse[i]){regex='^'+this.months(mom,'')+'|^'+this.monthsShort(mom,'');this._monthsParse[i]=new RegExp(regex.replace('.',''),'i');}// test the regex
if(strict&&format==='MMMM'&&this._longMonthsParse[i].test(monthName)){return i;}else if(strict&&format==='MMM'&&this._shortMonthsParse[i].test(monthName)){return i;}else if(!strict&&this._monthsParse[i].test(monthName)){return i;}}}// MOMENTS
function setMonth(mom,value){var dayOfMonth;if(!mom.isValid()){// No op
return mom;}if(typeof value==='string'){if(/^\d+$/.test(value)){value=toInt(value);}else{value=mom.localeData().monthsParse(value);// TODO: Another silent failure?
if(!isNumber(value)){return mom;}}}dayOfMonth=Math.min(mom.date(),daysInMonth(mom.year(),value));mom._d['set'+(mom._isUTC?'UTC':'')+'Month'](value,dayOfMonth);return mom;}function getSetMonth(value){if(value!=null){setMonth(this,value);hooks.updateOffset(this,true);return this;}else{return get(this,'Month');}}function getDaysInMonth(){return daysInMonth(this.year(),this.month());}function monthsShortRegex(isStrict){if(this._monthsParseExact){if(!hasOwnProp(this,'_monthsRegex')){computeMonthsParse.call(this);}if(isStrict){return this._monthsShortStrictRegex;}else{return this._monthsShortRegex;}}else{if(!hasOwnProp(this,'_monthsShortRegex')){this._monthsShortRegex=defaultMonthsShortRegex;}return this._monthsShortStrictRegex&&isStrict?this._monthsShortStrictRegex:this._monthsShortRegex;}}function monthsRegex(isStrict){if(this._monthsParseExact){if(!hasOwnProp(this,'_monthsRegex')){computeMonthsParse.call(this);}if(isStrict){return this._monthsStrictRegex;}else{return this._monthsRegex;}}else{if(!hasOwnProp(this,'_monthsRegex')){this._monthsRegex=defaultMonthsRegex;}return this._monthsStrictRegex&&isStrict?this._monthsStrictRegex:this._monthsRegex;}}function computeMonthsParse(){function cmpLenRev(a,b){return b.length-a.length;}var shortPieces=[],longPieces=[],mixedPieces=[],i,mom;for(i=0;i<12;i++){// make the regex if we don't have it already
mom=createUTC([2000,i]);shortPieces.push(this.monthsShort(mom,''));longPieces.push(this.months(mom,''));mixedPieces.push(this.months(mom,''));mixedPieces.push(this.monthsShort(mom,''));}// Sorting makes sure if one month (or abbr) is a prefix of another it
// will match the longer piece.
shortPieces.sort(cmpLenRev);longPieces.sort(cmpLenRev);mixedPieces.sort(cmpLenRev);for(i=0;i<12;i++){shortPieces[i]=regexEscape(shortPieces[i]);longPieces[i]=regexEscape(longPieces[i]);}for(i=0;i<24;i++){mixedPieces[i]=regexEscape(mixedPieces[i]);}this._monthsRegex=new RegExp('^('+mixedPieces.join('|')+')','i');this._monthsShortRegex=this._monthsRegex;this._monthsStrictRegex=new RegExp('^('+longPieces.join('|')+')','i');this._monthsShortStrictRegex=new RegExp('^('+shortPieces.join('|')+')','i');}// FORMATTING
addFormatToken('Y',0,0,function(){var y=this.year();return y<=9999?zeroFill(y,4):'+'+y;});addFormatToken(0,['YY',2],0,function(){return this.year()%100;});addFormatToken(0,['YYYY',4],0,'year');addFormatToken(0,['YYYYY',5],0,'year');addFormatToken(0,['YYYYYY',6,true],0,'year');// ALIASES
addUnitAlias('year','y');// PRIORITIES
addUnitPriority('year',1);// PARSING
addRegexToken('Y',matchSigned);addRegexToken('YY',match1to2,match2);addRegexToken('YYYY',match1to4,match4);addRegexToken('YYYYY',match1to6,match6);addRegexToken('YYYYYY',match1to6,match6);addParseToken(['YYYYY','YYYYYY'],YEAR);addParseToken('YYYY',function(input,array){array[YEAR]=input.length===2?hooks.parseTwoDigitYear(input):toInt(input);});addParseToken('YY',function(input,array){array[YEAR]=hooks.parseTwoDigitYear(input);});addParseToken('Y',function(input,array){array[YEAR]=parseInt(input,10);});// HELPERS
function daysInYear(year){return isLeapYear(year)?366:365;}// HOOKS
hooks.parseTwoDigitYear=function(input){return toInt(input)+(toInt(input)>68?1900:2000);};// MOMENTS
var getSetYear=makeGetSet('FullYear',true);function getIsLeapYear(){return isLeapYear(this.year());}function createDate(y,m,d,h,M,s,ms){// can't just apply() to create a date:
// https://stackoverflow.com/q/181348
var date;// the date constructor remaps years 0-99 to 1900-1999
if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
date=new Date(y+400,m,d,h,M,s,ms);if(isFinite(date.getFullYear())){date.setFullYear(y);}}else{date=new Date(y,m,d,h,M,s,ms);}return date;}function createUTCDate(y){var date,args;// the Date.UTC function remaps years 0-99 to 1900-1999
if(y<100&&y>=0){args=Array.prototype.slice.call(arguments);// preserve leap years using a full 400 year cycle, then reset
args[0]=y+400;date=new Date(Date.UTC.apply(null,args));if(isFinite(date.getUTCFullYear())){date.setUTCFullYear(y);}}else{date=new Date(Date.UTC.apply(null,arguments));}return date;}// start-of-first-week - start-of-year
function firstWeekOffset(year,dow,doy){var// first-week day -- which january is always in the first week (4 for iso, 1 for other)
fwd=7+dow-doy,// first-week day local weekday -- which local weekday is fwd
fwdlw=(7+createUTCDate(year,0,fwd).getUTCDay()-dow)%7;return-fwdlw+fwd-1;}// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
function dayOfYearFromWeeks(year,week,weekday,dow,doy){var localWeekday=(7+weekday-dow)%7,weekOffset=firstWeekOffset(year,dow,doy),dayOfYear=1+7*(week-1)+localWeekday+weekOffset,resYear,resDayOfYear;if(dayOfYear<=0){resYear=year-1;resDayOfYear=daysInYear(resYear)+dayOfYear;}else if(dayOfYear>daysInYear(year)){resYear=year+1;resDayOfYear=dayOfYear-daysInYear(year);}else{resYear=year;resDayOfYear=dayOfYear;}return{year:resYear,dayOfYear:resDayOfYear};}function weekOfYear(mom,dow,doy){var weekOffset=firstWeekOffset(mom.year(),dow,doy),week=Math.floor((mom.dayOfYear()-weekOffset-1)/7)+1,resWeek,resYear;if(week<1){resYear=mom.year()-1;resWeek=week+weeksInYear(resYear,dow,doy);}else if(week>weeksInYear(mom.year(),dow,doy)){resWeek=week-weeksInYear(mom.year(),dow,doy);resYear=mom.year()+1;}else{resYear=mom.year();resWeek=week;}return{week:resWeek,year:resYear};}function weeksInYear(year,dow,doy){var weekOffset=firstWeekOffset(year,dow,doy),weekOffsetNext=firstWeekOffset(year+1,dow,doy);return(daysInYear(year)-weekOffset+weekOffsetNext)/7;}// FORMATTING
addFormatToken('w',['ww',2],'wo','week');addFormatToken('W',['WW',2],'Wo','isoWeek');// ALIASES
addUnitAlias('week','w');addUnitAlias('isoWeek','W');// PRIORITIES
addUnitPriority('week',5);addUnitPriority('isoWeek',5);// PARSING
addRegexToken('w',match1to2);addRegexToken('ww',match1to2,match2);addRegexToken('W',match1to2);addRegexToken('WW',match1to2,match2);addWeekParseToken(['w','ww','W','WW'],function(input,week,config,token){week[token.substr(0,1)]=toInt(input);});// HELPERS
// LOCALES
function localeWeek(mom){return weekOfYear(mom,this._week.dow,this._week.doy).week;}var defaultLocaleWeek={dow:0,// Sunday is the first day of the week.
doy:6// The week that contains Jan 6th is the first week of the year.
};function localeFirstDayOfWeek(){return this._week.dow;}function localeFirstDayOfYear(){return this._week.doy;}// MOMENTS
function getSetWeek(input){var week=this.localeData().week(this);return input==null?week:this.add((input-week)*7,'d');}function getSetISOWeek(input){var week=weekOfYear(this,1,4).week;return input==null?week:this.add((input-week)*7,'d');}// FORMATTING
addFormatToken('d',0,'do','day');addFormatToken('dd',0,0,function(format){return this.localeData().weekdaysMin(this,format);});addFormatToken('ddd',0,0,function(format){return this.localeData().weekdaysShort(this,format);});addFormatToken('dddd',0,0,function(format){return this.localeData().weekdays(this,format);});addFormatToken('e',0,0,'weekday');addFormatToken('E',0,0,'isoWeekday');// ALIASES
addUnitAlias('day','d');addUnitAlias('weekday','e');addUnitAlias('isoWeekday','E');// PRIORITY
addUnitPriority('day',11);addUnitPriority('weekday',11);addUnitPriority('isoWeekday',11);// PARSING
addRegexToken('d',match1to2);addRegexToken('e',match1to2);addRegexToken('E',match1to2);addRegexToken('dd',function(isStrict,locale){return locale.weekdaysMinRegex(isStrict);});addRegexToken('ddd',function(isStrict,locale){return locale.weekdaysShortRegex(isStrict);});addRegexToken('dddd',function(isStrict,locale){return locale.weekdaysRegex(isStrict);});addWeekParseToken(['dd','ddd','dddd'],function(input,week,config,token){var weekday=config._locale.weekdaysParse(input,token,config._strict);// if we didn't get a weekday name, mark the date as invalid
if(weekday!=null){week.d=weekday;}else{getParsingFlags(config).invalidWeekday=input;}});addWeekParseToken(['d','e','E'],function(input,week,config,token){week[token]=toInt(input);});// HELPERS
function parseWeekday(input,locale){if(typeof input!=='string'){return input;}if(!isNaN(input)){return parseInt(input,10);}input=locale.weekdaysParse(input);if(typeof input==='number'){return input;}return null;}function parseIsoWeekday(input,locale){if(typeof input==='string'){return locale.weekdaysParse(input)%7||7;}return isNaN(input)?null:input;}// LOCALES
function shiftWeekdays(ws,n){return ws.slice(n,7).concat(ws.slice(0,n));}var defaultLocaleWeekdays='Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),defaultLocaleWeekdaysShort='Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),defaultLocaleWeekdaysMin='Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),defaultWeekdaysRegex=matchWord,defaultWeekdaysShortRegex=matchWord,defaultWeekdaysMinRegex=matchWord;function localeWeekdays(m,format){var weekdays=isArray(this._weekdays)?this._weekdays:this._weekdays[m&&m!==true&&this._weekdays.isFormat.test(format)?'format':'standalone'];return m===true?shiftWeekdays(weekdays,this._week.dow):m?weekdays[m.day()]:weekdays;}function localeWeekdaysShort(m){return m===true?shiftWeekdays(this._weekdaysShort,this._week.dow):m?this._weekdaysShort[m.day()]:this._weekdaysShort;}function localeWeekdaysMin(m){return m===true?shiftWeekdays(this._weekdaysMin,this._week.dow):m?this._weekdaysMin[m.day()]:this._weekdaysMin;}function handleStrictParse$1(weekdayName,format,strict){var i,ii,mom,llc=weekdayName.toLocaleLowerCase();if(!this._weekdaysParse){this._weekdaysParse=[];this._shortWeekdaysParse=[];this._minWeekdaysParse=[];for(i=0;i<7;++i){mom=createUTC([2000,1]).day(i);this._minWeekdaysParse[i]=this.weekdaysMin(mom,'').toLocaleLowerCase();this._shortWeekdaysParse[i]=this.weekdaysShort(mom,'').toLocaleLowerCase();this._weekdaysParse[i]=this.weekdays(mom,'').toLocaleLowerCase();}}if(strict){if(format==='dddd'){ii=indexOf.call(this._weekdaysParse,llc);return ii!==-1?ii:null;}else if(format==='ddd'){ii=indexOf.call(this._shortWeekdaysParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}}else{if(format==='dddd'){ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}else if(format==='ddd'){ii=indexOf.call(this._shortWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._minWeekdaysParse,llc);return ii!==-1?ii:null;}else{ii=indexOf.call(this._minWeekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._weekdaysParse,llc);if(ii!==-1){return ii;}ii=indexOf.call(this._shortWeekdaysParse,llc);return ii!==-1?ii:null;}}}function localeWeekdaysParse(weekdayName,format,strict){var i,mom,regex;if(this._weekdaysParseExact){return handleStrictParse$1.call(this,weekdayName,format,strict);}if(!this._weekdaysParse){this._weekdaysParse=[];this._minWeekdaysParse=[];this._shortWeekdaysParse=[];this._fullWeekdaysParse=[];}for(i=0;i<7;i++){// make the regex if we don't have it already
mom=createUTC([2000,1]).day(i);if(strict&&!this._fullWeekdaysParse[i]){this._fullWeekdaysParse[i]=new RegExp('^'+this.weekdays(mom,'').replace('.','\\.?')+'$','i');this._shortWeekdaysParse[i]=new RegExp('^'+this.weekdaysShort(mom,'').replace('.','\\.?')+'$','i');this._minWeekdaysParse[i]=new RegExp('^'+this.weekdaysMin(mom,'').replace('.','\\.?')+'$','i');}if(!this._weekdaysParse[i]){regex='^'+this.weekdays(mom,'')+'|^'+this.weekdaysShort(mom,'')+'|^'+this.weekdaysMin(mom,'');this._weekdaysParse[i]=new RegExp(regex.replace('.',''),'i');}// test the regex
if(strict&&format==='dddd'&&this._fullWeekdaysParse[i].test(weekdayName)){return i;}else if(strict&&format==='ddd'&&this._shortWeekdaysParse[i].test(weekdayName)){return i;}else if(strict&&format==='dd'&&this._minWeekdaysParse[i].test(weekdayName)){return i;}else if(!strict&&this._weekdaysParse[i].test(weekdayName)){return i;}}}// MOMENTS
function getSetDayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}var day=this._isUTC?this._d.getUTCDay():this._d.getDay();if(input!=null){input=parseWeekday(input,this.localeData());return this.add(input-day,'d');}else{return day;}}function getSetLocaleDayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}var weekday=(this.day()+7-this.localeData()._week.dow)%7;return input==null?weekday:this.add(input-weekday,'d');}function getSetISODayOfWeek(input){if(!this.isValid()){return input!=null?this:NaN;}// behaves the same as moment#day except
// as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
// as a setter, sunday should belong to the previous week.
if(input!=null){var weekday=parseIsoWeekday(input,this.localeData());return this.day(this.day()%7?weekday:weekday-7);}else{return this.day()||7;}}function weekdaysRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysStrictRegex;}else{return this._weekdaysRegex;}}else{if(!hasOwnProp(this,'_weekdaysRegex')){this._weekdaysRegex=defaultWeekdaysRegex;}return this._weekdaysStrictRegex&&isStrict?this._weekdaysStrictRegex:this._weekdaysRegex;}}function weekdaysShortRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysShortStrictRegex;}else{return this._weekdaysShortRegex;}}else{if(!hasOwnProp(this,'_weekdaysShortRegex')){this._weekdaysShortRegex=defaultWeekdaysShortRegex;}return this._weekdaysShortStrictRegex&&isStrict?this._weekdaysShortStrictRegex:this._weekdaysShortRegex;}}function weekdaysMinRegex(isStrict){if(this._weekdaysParseExact){if(!hasOwnProp(this,'_weekdaysRegex')){computeWeekdaysParse.call(this);}if(isStrict){return this._weekdaysMinStrictRegex;}else{return this._weekdaysMinRegex;}}else{if(!hasOwnProp(this,'_weekdaysMinRegex')){this._weekdaysMinRegex=defaultWeekdaysMinRegex;}return this._weekdaysMinStrictRegex&&isStrict?this._weekdaysMinStrictRegex:this._weekdaysMinRegex;}}function computeWeekdaysParse(){function cmpLenRev(a,b){return b.length-a.length;}var minPieces=[],shortPieces=[],longPieces=[],mixedPieces=[],i,mom,minp,shortp,longp;for(i=0;i<7;i++){// make the regex if we don't have it already
mom=createUTC([2000,1]).day(i);minp=regexEscape(this.weekdaysMin(mom,''));shortp=regexEscape(this.weekdaysShort(mom,''));longp=regexEscape(this.weekdays(mom,''));minPieces.push(minp);shortPieces.push(shortp);longPieces.push(longp);mixedPieces.push(minp);mixedPieces.push(shortp);mixedPieces.push(longp);}// Sorting makes sure if one weekday (or abbr) is a prefix of another it
// will match the longer piece.
minPieces.sort(cmpLenRev);shortPieces.sort(cmpLenRev);longPieces.sort(cmpLenRev);mixedPieces.sort(cmpLenRev);this._weekdaysRegex=new RegExp('^('+mixedPieces.join('|')+')','i');this._weekdaysShortRegex=this._weekdaysRegex;this._weekdaysMinRegex=this._weekdaysRegex;this._weekdaysStrictRegex=new RegExp('^('+longPieces.join('|')+')','i');this._weekdaysShortStrictRegex=new RegExp('^('+shortPieces.join('|')+')','i');this._weekdaysMinStrictRegex=new RegExp('^('+minPieces.join('|')+')','i');}// FORMATTING
function hFormat(){return this.hours()%12||12;}function kFormat(){return this.hours()||24;}addFormatToken('H',['HH',2],0,'hour');addFormatToken('h',['hh',2],0,hFormat);addFormatToken('k',['kk',2],0,kFormat);addFormatToken('hmm',0,0,function(){return''+hFormat.apply(this)+zeroFill(this.minutes(),2);});addFormatToken('hmmss',0,0,function(){return''+hFormat.apply(this)+zeroFill(this.minutes(),2)+zeroFill(this.seconds(),2);});addFormatToken('Hmm',0,0,function(){return''+this.hours()+zeroFill(this.minutes(),2);});addFormatToken('Hmmss',0,0,function(){return''+this.hours()+zeroFill(this.minutes(),2)+zeroFill(this.seconds(),2);});function meridiem(token,lowercase){addFormatToken(token,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),lowercase);});}meridiem('a',true);meridiem('A',false);// ALIASES
addUnitAlias('hour','h');// PRIORITY
addUnitPriority('hour',13);// PARSING
function matchMeridiem(isStrict,locale){return locale._meridiemParse;}addRegexToken('a',matchMeridiem);addRegexToken('A',matchMeridiem);addRegexToken('H',match1to2);addRegexToken('h',match1to2);addRegexToken('k',match1to2);addRegexToken('HH',match1to2,match2);addRegexToken('hh',match1to2,match2);addRegexToken('kk',match1to2,match2);addRegexToken('hmm',match3to4);addRegexToken('hmmss',match5to6);addRegexToken('Hmm',match3to4);addRegexToken('Hmmss',match5to6);addParseToken(['H','HH'],HOUR);addParseToken(['k','kk'],function(input,array,config){var kInput=toInt(input);array[HOUR]=kInput===24?0:kInput;});addParseToken(['a','A'],function(input,array,config){config._isPm=config._locale.isPM(input);config._meridiem=input;});addParseToken(['h','hh'],function(input,array,config){array[HOUR]=toInt(input);getParsingFlags(config).bigHour=true;});addParseToken('hmm',function(input,array,config){var pos=input.length-2;array[HOUR]=toInt(input.substr(0,pos));array[MINUTE]=toInt(input.substr(pos));getParsingFlags(config).bigHour=true;});addParseToken('hmmss',function(input,array,config){var pos1=input.length-4,pos2=input.length-2;array[HOUR]=toInt(input.substr(0,pos1));array[MINUTE]=toInt(input.substr(pos1,2));array[SECOND]=toInt(input.substr(pos2));getParsingFlags(config).bigHour=true;});addParseToken('Hmm',function(input,array,config){var pos=input.length-2;array[HOUR]=toInt(input.substr(0,pos));array[MINUTE]=toInt(input.substr(pos));});addParseToken('Hmmss',function(input,array,config){var pos1=input.length-4,pos2=input.length-2;array[HOUR]=toInt(input.substr(0,pos1));array[MINUTE]=toInt(input.substr(pos1,2));array[SECOND]=toInt(input.substr(pos2));});// LOCALES
function localeIsPM(input){// IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
// Using charAt should be more compatible.
return(input+'').toLowerCase().charAt(0)==='p';}var defaultLocaleMeridiemParse=/[ap]\.?m?\.?/i,// Setting the hour should keep the time, because the user explicitly
// specified which hour they want. So trying to maintain the same hour (in
// a new timezone) makes sense. Adding/subtracting hours does not follow
// this rule.
getSetHour=makeGetSet('Hours',true);function localeMeridiem(hours,minutes,isLower){if(hours>11){return isLower?'pm':'PM';}else{return isLower?'am':'AM';}}var baseConfig={calendar:defaultCalendar,longDateFormat:defaultLongDateFormat,invalidDate:defaultInvalidDate,ordinal:defaultOrdinal,dayOfMonthOrdinalParse:defaultDayOfMonthOrdinalParse,relativeTime:defaultRelativeTime,months:defaultLocaleMonths,monthsShort:defaultLocaleMonthsShort,week:defaultLocaleWeek,weekdays:defaultLocaleWeekdays,weekdaysMin:defaultLocaleWeekdaysMin,weekdaysShort:defaultLocaleWeekdaysShort,meridiemParse:defaultLocaleMeridiemParse};// internal storage for locale config files
var locales={},localeFamilies={},globalLocale;function commonPrefix(arr1,arr2){var i,minl=Math.min(arr1.length,arr2.length);for(i=0;i<minl;i+=1){if(arr1[i]!==arr2[i]){return i;}}return minl;}function normalizeLocale(key){return key?key.toLowerCase().replace('_','-'):key;}// pick the locale from the array
// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
function chooseLocale(names){var i=0,j,next,locale,split;while(i<names.length){split=normalizeLocale(names[i]).split('-');j=split.length;next=normalizeLocale(names[i+1]);next=next?next.split('-'):null;while(j>0){locale=loadLocale(split.slice(0,j).join('-'));if(locale){return locale;}if(next&&next.length>=j&&commonPrefix(split,next)>=j-1){//the next array item is better than a shallower substring of this one
break;}j--;}i++;}return globalLocale;}function isLocaleNameSane(name){// Prevent names that look like filesystem paths, i.e contain '/' or '\'
return name.match('^[^/\\\\]*$')!=null;}function loadLocale(name){var oldLocale=null,aliasedRequire;// TODO: Find a better way to register and load all the locales in Node
if(locales[name]===undefined&&typeof module!=='undefined'&&module&&module.exports&&isLocaleNameSane(name)){try{oldLocale=globalLocale._abbr;aliasedRequire=require;aliasedRequire('./locale/'+name);getSetGlobalLocale(oldLocale);}catch(e){// mark as not found to avoid repeating expensive file require call causing high CPU
// when trying to find en-US, en_US, en-us for every format call
locales[name]=null;// null means not found
}}return locales[name];}// This function will load locale and then set the global locale.  If
// no arguments are passed in, it will simply return the current global
// locale key.
function getSetGlobalLocale(key,values){var data;if(key){if(isUndefined(values)){data=getLocale(key);}else{data=defineLocale(key,values);}if(data){// moment.duration._locale = moment._locale = data;
globalLocale=data;}else{if(typeof console!=='undefined'&&console.warn){//warn user if arguments are passed but the locale could not be set
void 0;}}}return globalLocale._abbr;}function defineLocale(name,config){if(config!==null){var locale,parentConfig=baseConfig;config.abbr=name;if(locales[name]!=null){deprecateSimple('defineLocaleOverride','use moment.updateLocale(localeName, config) to change '+'an existing locale. moment.defineLocale(localeName, '+'config) should only be used for creating a new locale '+'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');parentConfig=locales[name]._config;}else if(config.parentLocale!=null){if(locales[config.parentLocale]!=null){parentConfig=locales[config.parentLocale]._config;}else{locale=loadLocale(config.parentLocale);if(locale!=null){parentConfig=locale._config;}else{if(!localeFamilies[config.parentLocale]){localeFamilies[config.parentLocale]=[];}localeFamilies[config.parentLocale].push({name:name,config:config});return null;}}}locales[name]=new Locale(mergeConfigs(parentConfig,config));if(localeFamilies[name]){localeFamilies[name].forEach(function(x){defineLocale(x.name,x.config);});}// backwards compat for now: also set the locale
// make sure we set the locale AFTER all child locales have been
// created, so we won't end up with the child locale set.
getSetGlobalLocale(name);return locales[name];}else{// useful for testing
delete locales[name];return null;}}function updateLocale(name,config){if(config!=null){var locale,tmpLocale,parentConfig=baseConfig;if(locales[name]!=null&&locales[name].parentLocale!=null){// Update existing child locale in-place to avoid memory-leaks
locales[name].set(mergeConfigs(locales[name]._config,config));}else{// MERGE
tmpLocale=loadLocale(name);if(tmpLocale!=null){parentConfig=tmpLocale._config;}config=mergeConfigs(parentConfig,config);if(tmpLocale==null){// updateLocale is called for creating a new locale
// Set abbr so it will have a name (getters return
// undefined otherwise).
config.abbr=name;}locale=new Locale(config);locale.parentLocale=locales[name];locales[name]=locale;}// backwards compat for now: also set the locale
getSetGlobalLocale(name);}else{// pass null for config to unupdate, useful for tests
if(locales[name]!=null){if(locales[name].parentLocale!=null){locales[name]=locales[name].parentLocale;if(name===getSetGlobalLocale()){getSetGlobalLocale(name);}}else if(locales[name]!=null){delete locales[name];}}}return locales[name];}// returns locale data
function getLocale(key){var locale;if(key&&key._locale&&key._locale._abbr){key=key._locale._abbr;}if(!key){return globalLocale;}if(!isArray(key)){//short-circuit everything else
locale=loadLocale(key);if(locale){return locale;}key=[key];}return chooseLocale(key);}function listLocales(){return keys(locales);}function checkOverflow(m){var overflow,a=m._a;if(a&&getParsingFlags(m).overflow===-2){overflow=a[MONTH]<0||a[MONTH]>11?MONTH:a[DATE]<1||a[DATE]>daysInMonth(a[YEAR],a[MONTH])?DATE:a[HOUR]<0||a[HOUR]>24||a[HOUR]===24&&(a[MINUTE]!==0||a[SECOND]!==0||a[MILLISECOND]!==0)?HOUR:a[MINUTE]<0||a[MINUTE]>59?MINUTE:a[SECOND]<0||a[SECOND]>59?SECOND:a[MILLISECOND]<0||a[MILLISECOND]>999?MILLISECOND:-1;if(getParsingFlags(m)._overflowDayOfYear&&(overflow<YEAR||overflow>DATE)){overflow=DATE;}if(getParsingFlags(m)._overflowWeeks&&overflow===-1){overflow=WEEK;}if(getParsingFlags(m)._overflowWeekday&&overflow===-1){overflow=WEEKDAY;}getParsingFlags(m).overflow=overflow;}return m;}// iso 8601 regex
// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
var extendedIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,basicIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,tzRegex=/Z|[+-]\d\d(?::?\d\d)?/,isoDates=[['YYYYYY-MM-DD',/[+-]\d{6}-\d\d-\d\d/],['YYYY-MM-DD',/\d{4}-\d\d-\d\d/],['GGGG-[W]WW-E',/\d{4}-W\d\d-\d/],['GGGG-[W]WW',/\d{4}-W\d\d/,false],['YYYY-DDD',/\d{4}-\d{3}/],['YYYY-MM',/\d{4}-\d\d/,false],['YYYYYYMMDD',/[+-]\d{10}/],['YYYYMMDD',/\d{8}/],['GGGG[W]WWE',/\d{4}W\d{3}/],['GGGG[W]WW',/\d{4}W\d{2}/,false],['YYYYDDD',/\d{7}/],['YYYYMM',/\d{6}/,false],['YYYY',/\d{4}/,false]],// iso time formats and regexes
isoTimes=[['HH:mm:ss.SSSS',/\d\d:\d\d:\d\d\.\d+/],['HH:mm:ss,SSSS',/\d\d:\d\d:\d\d,\d+/],['HH:mm:ss',/\d\d:\d\d:\d\d/],['HH:mm',/\d\d:\d\d/],['HHmmss.SSSS',/\d\d\d\d\d\d\.\d+/],['HHmmss,SSSS',/\d\d\d\d\d\d,\d+/],['HHmmss',/\d\d\d\d\d\d/],['HHmm',/\d\d\d\d/],['HH',/\d\d/]],aspNetJsonRegex=/^\/?Date\((-?\d+)/i,// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
rfc2822=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,obsOffsets={UT:0,GMT:0,EDT:-4*60,EST:-5*60,CDT:-5*60,CST:-6*60,MDT:-6*60,MST:-7*60,PDT:-7*60,PST:-8*60};// date from iso format
function configFromISO(config){var i,l,string=config._i,match=extendedIsoRegex.exec(string)||basicIsoRegex.exec(string),allowTime,dateFormat,timeFormat,tzFormat,isoDatesLen=isoDates.length,isoTimesLen=isoTimes.length;if(match){getParsingFlags(config).iso=true;for(i=0,l=isoDatesLen;i<l;i++){if(isoDates[i][1].exec(match[1])){dateFormat=isoDates[i][0];allowTime=isoDates[i][2]!==false;break;}}if(dateFormat==null){config._isValid=false;return;}if(match[3]){for(i=0,l=isoTimesLen;i<l;i++){if(isoTimes[i][1].exec(match[3])){// match[2] should be 'T' or space
timeFormat=(match[2]||' ')+isoTimes[i][0];break;}}if(timeFormat==null){config._isValid=false;return;}}if(!allowTime&&timeFormat!=null){config._isValid=false;return;}if(match[4]){if(tzRegex.exec(match[4])){tzFormat='Z';}else{config._isValid=false;return;}}config._f=dateFormat+(timeFormat||'')+(tzFormat||'');configFromStringAndFormat(config);}else{config._isValid=false;}}function extractFromRFC2822Strings(yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr){var result=[untruncateYear(yearStr),defaultLocaleMonthsShort.indexOf(monthStr),parseInt(dayStr,10),parseInt(hourStr,10),parseInt(minuteStr,10)];if(secondStr){result.push(parseInt(secondStr,10));}return result;}function untruncateYear(yearStr){var year=parseInt(yearStr,10);if(year<=49){return 2000+year;}else if(year<=999){return 1900+year;}return year;}function preprocessRFC2822(s){// Remove comments and folding whitespace and replace multiple-spaces with a single space
return s.replace(/\([^()]*\)|[\n\t]/g,' ').replace(/(\s\s+)/g,' ').replace(/^\s\s*/,'').replace(/\s\s*$/,'');}function checkWeekday(weekdayStr,parsedInput,config){if(weekdayStr){// TODO: Replace the vanilla JS Date object with an independent day-of-week check.
var weekdayProvided=defaultLocaleWeekdaysShort.indexOf(weekdayStr),weekdayActual=new Date(parsedInput[0],parsedInput[1],parsedInput[2]).getDay();if(weekdayProvided!==weekdayActual){getParsingFlags(config).weekdayMismatch=true;config._isValid=false;return false;}}return true;}function calculateOffset(obsOffset,militaryOffset,numOffset){if(obsOffset){return obsOffsets[obsOffset];}else if(militaryOffset){// the only allowed military tz is Z
return 0;}else{var hm=parseInt(numOffset,10),m=hm%100,h=(hm-m)/100;return h*60+m;}}// date and time from ref 2822 format
function configFromRFC2822(config){var match=rfc2822.exec(preprocessRFC2822(config._i)),parsedArray;if(match){parsedArray=extractFromRFC2822Strings(match[4],match[3],match[2],match[5],match[6],match[7]);if(!checkWeekday(match[1],parsedArray,config)){return;}config._a=parsedArray;config._tzm=calculateOffset(match[8],match[9],match[10]);config._d=createUTCDate.apply(null,config._a);config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm);getParsingFlags(config).rfc2822=true;}else{config._isValid=false;}}// date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict
function configFromString(config){var matched=aspNetJsonRegex.exec(config._i);if(matched!==null){config._d=new Date(+matched[1]);return;}configFromISO(config);if(config._isValid===false){delete config._isValid;}else{return;}configFromRFC2822(config);if(config._isValid===false){delete config._isValid;}else{return;}if(config._strict){config._isValid=false;}else{// Final attempt, use Input Fallback
hooks.createFromInputFallback(config);}}hooks.createFromInputFallback=deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), '+'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are '+'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',function(config){config._d=new Date(config._i+(config._useUTC?' UTC':''));});// Pick the first defined of two or three arguments.
function defaults(a,b,c){if(a!=null){return a;}if(b!=null){return b;}return c;}function currentDateArray(config){// hooks is actually the exported moment object
var nowValue=new Date(hooks.now());if(config._useUTC){return[nowValue.getUTCFullYear(),nowValue.getUTCMonth(),nowValue.getUTCDate()];}return[nowValue.getFullYear(),nowValue.getMonth(),nowValue.getDate()];}// convert an array to a date.
// the array should mirror the parameters below
// note: all values past the year are optional and will default to the lowest possible value.
// [year, month, day , hour, minute, second, millisecond]
function configFromArray(config){var i,date,input=[],currentDate,expectedWeekday,yearToUse;if(config._d){return;}currentDate=currentDateArray(config);//compute day of the year from weeks and weekdays
if(config._w&&config._a[DATE]==null&&config._a[MONTH]==null){dayOfYearFromWeekInfo(config);}//if the day of the year is set, figure out what it is
if(config._dayOfYear!=null){yearToUse=defaults(config._a[YEAR],currentDate[YEAR]);if(config._dayOfYear>daysInYear(yearToUse)||config._dayOfYear===0){getParsingFlags(config)._overflowDayOfYear=true;}date=createUTCDate(yearToUse,0,config._dayOfYear);config._a[MONTH]=date.getUTCMonth();config._a[DATE]=date.getUTCDate();}// Default to current date.
// * if no year, month, day of month are given, default to today
// * if day of month is given, default month and year
// * if month is given, default only year
// * if year is given, don't default anything
for(i=0;i<3&&config._a[i]==null;++i){config._a[i]=input[i]=currentDate[i];}// Zero out whatever was not defaulted, including time
for(;i<7;i++){config._a[i]=input[i]=config._a[i]==null?i===2?1:0:config._a[i];}// Check for 24:00:00.000
if(config._a[HOUR]===24&&config._a[MINUTE]===0&&config._a[SECOND]===0&&config._a[MILLISECOND]===0){config._nextDay=true;config._a[HOUR]=0;}config._d=(config._useUTC?createUTCDate:createDate).apply(null,input);expectedWeekday=config._useUTC?config._d.getUTCDay():config._d.getDay();// Apply timezone offset from input. The actual utcOffset can be changed
// with parseZone.
if(config._tzm!=null){config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm);}if(config._nextDay){config._a[HOUR]=24;}// check for mismatching day of week
if(config._w&&typeof config._w.d!=='undefined'&&config._w.d!==expectedWeekday){getParsingFlags(config).weekdayMismatch=true;}}function dayOfYearFromWeekInfo(config){var w,weekYear,week,weekday,dow,doy,temp,weekdayOverflow,curWeek;w=config._w;if(w.GG!=null||w.W!=null||w.E!=null){dow=1;doy=4;// TODO: We need to take the current isoWeekYear, but that depends on
// how we interpret now (local, utc, fixed offset). So create
// a now version of current config (take local/utc/offset flags, and
// create now).
weekYear=defaults(w.GG,config._a[YEAR],weekOfYear(createLocal(),1,4).year);week=defaults(w.W,1);weekday=defaults(w.E,1);if(weekday<1||weekday>7){weekdayOverflow=true;}}else{dow=config._locale._week.dow;doy=config._locale._week.doy;curWeek=weekOfYear(createLocal(),dow,doy);weekYear=defaults(w.gg,config._a[YEAR],curWeek.year);// Default to current week.
week=defaults(w.w,curWeek.week);if(w.d!=null){// weekday -- low day numbers are considered next week
weekday=w.d;if(weekday<0||weekday>6){weekdayOverflow=true;}}else if(w.e!=null){// local weekday -- counting starts from beginning of week
weekday=w.e+dow;if(w.e<0||w.e>6){weekdayOverflow=true;}}else{// default to beginning of week
weekday=dow;}}if(week<1||week>weeksInYear(weekYear,dow,doy)){getParsingFlags(config)._overflowWeeks=true;}else if(weekdayOverflow!=null){getParsingFlags(config)._overflowWeekday=true;}else{temp=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy);config._a[YEAR]=temp.year;config._dayOfYear=temp.dayOfYear;}}// constant that refers to the ISO standard
hooks.ISO_8601=function(){};// constant that refers to the RFC 2822 form
hooks.RFC_2822=function(){};// date from string and format string
function configFromStringAndFormat(config){// TODO: Move this to another part of the creation flow to prevent circular deps
if(config._f===hooks.ISO_8601){configFromISO(config);return;}if(config._f===hooks.RFC_2822){configFromRFC2822(config);return;}config._a=[];getParsingFlags(config).empty=true;// This array is used to make a Date, either with `new Date` or `Date.UTC`
var string=''+config._i,i,parsedInput,tokens,token,skipped,stringLength=string.length,totalParsedInputLength=0,era,tokenLen;tokens=expandFormat(config._f,config._locale).match(formattingTokens)||[];tokenLen=tokens.length;for(i=0;i<tokenLen;i++){token=tokens[i];parsedInput=(string.match(getParseRegexForToken(token,config))||[])[0];if(parsedInput){skipped=string.substr(0,string.indexOf(parsedInput));if(skipped.length>0){getParsingFlags(config).unusedInput.push(skipped);}string=string.slice(string.indexOf(parsedInput)+parsedInput.length);totalParsedInputLength+=parsedInput.length;}// don't parse if it's not a known token
if(formatTokenFunctions[token]){if(parsedInput){getParsingFlags(config).empty=false;}else{getParsingFlags(config).unusedTokens.push(token);}addTimeToArrayFromToken(token,parsedInput,config);}else if(config._strict&&!parsedInput){getParsingFlags(config).unusedTokens.push(token);}}// add remaining unparsed input length to the string
getParsingFlags(config).charsLeftOver=stringLength-totalParsedInputLength;if(string.length>0){getParsingFlags(config).unusedInput.push(string);}// clear _12h flag if hour is <= 12
if(config._a[HOUR]<=12&&getParsingFlags(config).bigHour===true&&config._a[HOUR]>0){getParsingFlags(config).bigHour=undefined;}getParsingFlags(config).parsedDateParts=config._a.slice(0);getParsingFlags(config).meridiem=config._meridiem;// handle meridiem
config._a[HOUR]=meridiemFixWrap(config._locale,config._a[HOUR],config._meridiem);// handle era
era=getParsingFlags(config).era;if(era!==null){config._a[YEAR]=config._locale.erasConvertYear(era,config._a[YEAR]);}configFromArray(config);checkOverflow(config);}function meridiemFixWrap(locale,hour,meridiem){var isPm;if(meridiem==null){// nothing to do
return hour;}if(locale.meridiemHour!=null){return locale.meridiemHour(hour,meridiem);}else if(locale.isPM!=null){// Fallback
isPm=locale.isPM(meridiem);if(isPm&&hour<12){hour+=12;}if(!isPm&&hour===12){hour=0;}return hour;}else{// this is not supposed to happen
return hour;}}// date from string and array of format strings
function configFromStringAndArray(config){var tempConfig,bestMoment,scoreToBeat,i,currentScore,validFormatFound,bestFormatIsValid=false,configfLen=config._f.length;if(configfLen===0){getParsingFlags(config).invalidFormat=true;config._d=new Date(NaN);return;}for(i=0;i<configfLen;i++){currentScore=0;validFormatFound=false;tempConfig=copyConfig({},config);if(config._useUTC!=null){tempConfig._useUTC=config._useUTC;}tempConfig._f=config._f[i];configFromStringAndFormat(tempConfig);if(isValid(tempConfig)){validFormatFound=true;}// if there is any input that was not parsed add a penalty for that format
currentScore+=getParsingFlags(tempConfig).charsLeftOver;//or tokens
currentScore+=getParsingFlags(tempConfig).unusedTokens.length*10;getParsingFlags(tempConfig).score=currentScore;if(!bestFormatIsValid){if(scoreToBeat==null||currentScore<scoreToBeat||validFormatFound){scoreToBeat=currentScore;bestMoment=tempConfig;if(validFormatFound){bestFormatIsValid=true;}}}else{if(currentScore<scoreToBeat){scoreToBeat=currentScore;bestMoment=tempConfig;}}}extend(config,bestMoment||tempConfig);}function configFromObject(config){if(config._d){return;}var i=normalizeObjectUnits(config._i),dayOrDate=i.day===undefined?i.date:i.day;config._a=map([i.year,i.month,dayOrDate,i.hour,i.minute,i.second,i.millisecond],function(obj){return obj&&parseInt(obj,10);});configFromArray(config);}function createFromConfig(config){var res=new Moment(checkOverflow(prepareConfig(config)));if(res._nextDay){// Adding is smart enough around DST
res.add(1,'d');res._nextDay=undefined;}return res;}function prepareConfig(config){var input=config._i,format=config._f;config._locale=config._locale||getLocale(config._l);if(input===null||format===undefined&&input===''){return createInvalid({nullInput:true});}if(typeof input==='string'){config._i=input=config._locale.preparse(input);}if(isMoment(input)){return new Moment(checkOverflow(input));}else if(isDate(input)){config._d=input;}else if(isArray(format)){configFromStringAndArray(config);}else if(format){configFromStringAndFormat(config);}else{configFromInput(config);}if(!isValid(config)){config._d=null;}return config;}function configFromInput(config){var input=config._i;if(isUndefined(input)){config._d=new Date(hooks.now());}else if(isDate(input)){config._d=new Date(input.valueOf());}else if(typeof input==='string'){configFromString(config);}else if(isArray(input)){config._a=map(input.slice(0),function(obj){return parseInt(obj,10);});configFromArray(config);}else if(isObject(input)){configFromObject(config);}else if(isNumber(input)){// from milliseconds
config._d=new Date(input);}else{hooks.createFromInputFallback(config);}}function createLocalOrUTC(input,format,locale,strict,isUTC){var c={};if(format===true||format===false){strict=format;format=undefined;}if(locale===true||locale===false){strict=locale;locale=undefined;}if(isObject(input)&&isObjectEmpty(input)||isArray(input)&&input.length===0){input=undefined;}// object construction must be done this way.
// https://github.com/moment/moment/issues/1423
c._isAMomentObject=true;c._useUTC=c._isUTC=isUTC;c._l=locale;c._i=input;c._f=format;c._strict=strict;return createFromConfig(c);}function createLocal(input,format,locale,strict){return createLocalOrUTC(input,format,locale,strict,false);}var prototypeMin=deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',function(){var other=createLocal.apply(null,arguments);if(this.isValid()&&other.isValid()){return other<this?this:other;}else{return createInvalid();}}),prototypeMax=deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',function(){var other=createLocal.apply(null,arguments);if(this.isValid()&&other.isValid()){return other>this?this:other;}else{return createInvalid();}});// Pick a moment m from moments so that m[fn](other) is true for all
// other. This relies on the function fn to be transitive.
//
// moments should either be an array of moment objects or an array, whose
// first element is an array of moment objects.
function pickBy(fn,moments){var res,i;if(moments.length===1&&isArray(moments[0])){moments=moments[0];}if(!moments.length){return createLocal();}res=moments[0];for(i=1;i<moments.length;++i){if(!moments[i].isValid()||moments[i][fn](res)){res=moments[i];}}return res;}// TODO: Use [].sort instead?
function min(){var args=[].slice.call(arguments,0);return pickBy('isBefore',args);}function max(){var args=[].slice.call(arguments,0);return pickBy('isAfter',args);}var now=function(){return Date.now?Date.now():+new Date();};var ordering=['year','quarter','month','week','day','hour','minute','second','millisecond'];function isDurationValid(m){var key,unitHasDecimal=false,i,orderLen=ordering.length;for(key in m){if(hasOwnProp(m,key)&&!(indexOf.call(ordering,key)!==-1&&(m[key]==null||!isNaN(m[key])))){return false;}}for(i=0;i<orderLen;++i){if(m[ordering[i]]){if(unitHasDecimal){return false;// only allow non-integers for smallest unit
}if(parseFloat(m[ordering[i]])!==toInt(m[ordering[i]])){unitHasDecimal=true;}}}return true;}function isValid$1(){return this._isValid;}function createInvalid$1(){return createDuration(NaN);}function Duration(duration){var normalizedInput=normalizeObjectUnits(duration),years=normalizedInput.year||0,quarters=normalizedInput.quarter||0,months=normalizedInput.month||0,weeks=normalizedInput.week||normalizedInput.isoWeek||0,days=normalizedInput.day||0,hours=normalizedInput.hour||0,minutes=normalizedInput.minute||0,seconds=normalizedInput.second||0,milliseconds=normalizedInput.millisecond||0;this._isValid=isDurationValid(normalizedInput);// representation for dateAddRemove
this._milliseconds=+milliseconds+seconds*1e3+// 1000
minutes*6e4+// 1000 * 60
hours*1000*60*60;//using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
// Because of dateAddRemove treats 24 hours as different from a
// day when working around DST, we need to store them separately
this._days=+days+weeks*7;// It is impossible to translate months into days without knowing
// which months you are are talking about, so we have to store
// it separately.
this._months=+months+quarters*3+years*12;this._data={};this._locale=getLocale();this._bubble();}function isDuration(obj){return obj instanceof Duration;}function absRound(number){if(number<0){return Math.round(-1*number)*-1;}else{return Math.round(number);}}// compare two arrays, return the number of differences
function compareArrays(array1,array2,dontConvert){var len=Math.min(array1.length,array2.length),lengthDiff=Math.abs(array1.length-array2.length),diffs=0,i;for(i=0;i<len;i++){if(toInt(array1[i])!==toInt(array2[i])){diffs++;}}return diffs+lengthDiff;}// FORMATTING
function offset(token,separator){addFormatToken(token,0,0,function(){var offset=this.utcOffset(),sign='+';if(offset<0){offset=-offset;sign='-';}return sign+zeroFill(~~(offset/60),2)+separator+zeroFill(~~offset%60,2);});}offset('Z',':');offset('ZZ','');// PARSING
addRegexToken('Z',matchShortOffset);addRegexToken('ZZ',matchShortOffset);addParseToken(['Z','ZZ'],function(input,array,config){config._useUTC=true;config._tzm=offsetFromString(matchShortOffset,input);});// HELPERS
// timezone chunker
// '+10:00' > ['10',  '00']
// '-1530'  > ['-15', '30']
var chunkOffset=/([\+\-]|\d\d)/gi;function offsetFromString(matcher,string){var matches=(string||'').match(matcher),chunk,parts,minutes;if(matches===null){return null;}chunk=matches[matches.length-1]||[];parts=(chunk+'').match(chunkOffset)||['-',0,0];minutes=+(parts[1]*60)+toInt(parts[2]);return minutes===0?0:parts[0]==='+'?minutes:-minutes;}// Return a moment from input, that is local/utc/zone equivalent to model.
function cloneWithOffset(input,model){var res,diff;if(model._isUTC){res=model.clone();diff=(isMoment(input)||isDate(input)?input.valueOf():createLocal(input).valueOf())-res.valueOf();// Use low-level api, because this fn is low-level api.
res._d.setTime(res._d.valueOf()+diff);hooks.updateOffset(res,false);return res;}else{return createLocal(input).local();}}function getDateOffset(m){// On Firefox.24 Date#getTimezoneOffset returns a floating point.
// https://github.com/moment/moment/pull/1871
return-Math.round(m._d.getTimezoneOffset());}// HOOKS
// This function will be called whenever a moment is mutated.
// It is intended to keep the offset in sync with the timezone.
hooks.updateOffset=function(){};// MOMENTS
// keepLocalTime = true means only change the timezone, without
// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
// +0200, so we adjust the time as needed, to be valid.
//
// Keeping the time actually adds/subtracts (one hour)
// from the actual represented time. That is why we call updateOffset
// a second time. In case it wants us to change the offset again
// _changeInProgress == true case, then we have to adjust, because
// there is no such time in the given timezone.
function getSetOffset(input,keepLocalTime,keepMinutes){var offset=this._offset||0,localAdjust;if(!this.isValid()){return input!=null?this:NaN;}if(input!=null){if(typeof input==='string'){input=offsetFromString(matchShortOffset,input);if(input===null){return this;}}else if(Math.abs(input)<16&&!keepMinutes){input=input*60;}if(!this._isUTC&&keepLocalTime){localAdjust=getDateOffset(this);}this._offset=input;this._isUTC=true;if(localAdjust!=null){this.add(localAdjust,'m');}if(offset!==input){if(!keepLocalTime||this._changeInProgress){addSubtract(this,createDuration(input-offset,'m'),1,false);}else if(!this._changeInProgress){this._changeInProgress=true;hooks.updateOffset(this,true);this._changeInProgress=null;}}return this;}else{return this._isUTC?offset:getDateOffset(this);}}function getSetZone(input,keepLocalTime){if(input!=null){if(typeof input!=='string'){input=-input;}this.utcOffset(input,keepLocalTime);return this;}else{return-this.utcOffset();}}function setOffsetToUTC(keepLocalTime){return this.utcOffset(0,keepLocalTime);}function setOffsetToLocal(keepLocalTime){if(this._isUTC){this.utcOffset(0,keepLocalTime);this._isUTC=false;if(keepLocalTime){this.subtract(getDateOffset(this),'m');}}return this;}function setOffsetToParsedOffset(){if(this._tzm!=null){this.utcOffset(this._tzm,false,true);}else if(typeof this._i==='string'){var tZone=offsetFromString(matchOffset,this._i);if(tZone!=null){this.utcOffset(tZone);}else{this.utcOffset(0,true);}}return this;}function hasAlignedHourOffset(input){if(!this.isValid()){return false;}input=input?createLocal(input).utcOffset():0;return(this.utcOffset()-input)%60===0;}function isDaylightSavingTime(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset();}function isDaylightSavingTimeShifted(){if(!isUndefined(this._isDSTShifted)){return this._isDSTShifted;}var c={},other;copyConfig(c,this);c=prepareConfig(c);if(c._a){other=c._isUTC?createUTC(c._a):createLocal(c._a);this._isDSTShifted=this.isValid()&&compareArrays(c._a,other.toArray())>0;}else{this._isDSTShifted=false;}return this._isDSTShifted;}function isLocal(){return this.isValid()?!this._isUTC:false;}function isUtcOffset(){return this.isValid()?this._isUTC:false;}function isUtc(){return this.isValid()?this._isUTC&&this._offset===0:false;}// ASP.NET json date format regex
var aspNetRegex=/^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
// and further modified to allow for strings containing both week and day
isoRegex=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function createDuration(input,key){var duration=input,// matching against regexp is expensive, do it on demand
match=null,sign,ret,diffRes;if(isDuration(input)){duration={ms:input._milliseconds,d:input._days,M:input._months};}else if(isNumber(input)||!isNaN(+input)){duration={};if(key){duration[key]=+input;}else{duration.milliseconds=+input;}}else if(match=aspNetRegex.exec(input)){sign=match[1]==='-'?-1:1;duration={y:0,d:toInt(match[DATE])*sign,h:toInt(match[HOUR])*sign,m:toInt(match[MINUTE])*sign,s:toInt(match[SECOND])*sign,ms:toInt(absRound(match[MILLISECOND]*1000))*sign// the millisecond decimal point is included in the match
};}else if(match=isoRegex.exec(input)){sign=match[1]==='-'?-1:1;duration={y:parseIso(match[2],sign),M:parseIso(match[3],sign),w:parseIso(match[4],sign),d:parseIso(match[5],sign),h:parseIso(match[6],sign),m:parseIso(match[7],sign),s:parseIso(match[8],sign)};}else if(duration==null){// checks for null or undefined
duration={};}else if(typeof duration==='object'&&('from'in duration||'to'in duration)){diffRes=momentsDifference(createLocal(duration.from),createLocal(duration.to));duration={};duration.ms=diffRes.milliseconds;duration.M=diffRes.months;}ret=new Duration(duration);if(isDuration(input)&&hasOwnProp(input,'_locale')){ret._locale=input._locale;}if(isDuration(input)&&hasOwnProp(input,'_isValid')){ret._isValid=input._isValid;}return ret;}createDuration.fn=Duration.prototype;createDuration.invalid=createInvalid$1;function parseIso(inp,sign){// We'd normally use ~~inp for this, but unfortunately it also
// converts floats to ints.
// inp may be undefined, so careful calling replace on it.
var res=inp&&parseFloat(inp.replace(',','.'));// apply sign while we're at it
return(isNaN(res)?0:res)*sign;}function positiveMomentsDifference(base,other){var res={};res.months=other.month()-base.month()+(other.year()-base.year())*12;if(base.clone().add(res.months,'M').isAfter(other)){--res.months;}res.milliseconds=+other-+base.clone().add(res.months,'M');return res;}function momentsDifference(base,other){var res;if(!(base.isValid()&&other.isValid())){return{milliseconds:0,months:0};}other=cloneWithOffset(other,base);if(base.isBefore(other)){res=positiveMomentsDifference(base,other);}else{res=positiveMomentsDifference(other,base);res.milliseconds=-res.milliseconds;res.months=-res.months;}return res;}// TODO: remove 'name' arg after deprecation is removed
function createAdder(direction,name){return function(val,period){var dur,tmp;//invert the arguments, but complain about it
if(period!==null&&!isNaN(+period)){deprecateSimple(name,'moment().'+name+'(period, number) is deprecated. Please use moment().'+name+'(number, period). '+'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');tmp=val;val=period;period=tmp;}dur=createDuration(val,period);addSubtract(this,dur,direction);return this;};}function addSubtract(mom,duration,isAdding,updateOffset){var milliseconds=duration._milliseconds,days=absRound(duration._days),months=absRound(duration._months);if(!mom.isValid()){// No op
return;}updateOffset=updateOffset==null?true:updateOffset;if(months){setMonth(mom,get(mom,'Month')+months*isAdding);}if(days){set$1(mom,'Date',get(mom,'Date')+days*isAdding);}if(milliseconds){mom._d.setTime(mom._d.valueOf()+milliseconds*isAdding);}if(updateOffset){hooks.updateOffset(mom,days||months);}}var add=createAdder(1,'add'),subtract=createAdder(-1,'subtract');function isString(input){return typeof input==='string'||input instanceof String;}// type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined
function isMomentInput(input){return isMoment(input)||isDate(input)||isString(input)||isNumber(input)||isNumberOrStringArray(input)||isMomentInputObject(input)||input===null||input===undefined;}function isMomentInputObject(input){var objectTest=isObject(input)&&!isObjectEmpty(input),propertyTest=false,properties=['years','year','y','months','month','M','days','day','d','dates','date','D','hours','hour','h','minutes','minute','m','seconds','second','s','milliseconds','millisecond','ms'],i,property,propertyLen=properties.length;for(i=0;i<propertyLen;i+=1){property=properties[i];propertyTest=propertyTest||hasOwnProp(input,property);}return objectTest&&propertyTest;}function isNumberOrStringArray(input){var arrayTest=isArray(input),dataTypeTest=false;if(arrayTest){dataTypeTest=input.filter(function(item){return!isNumber(item)&&isString(input);}).length===0;}return arrayTest&&dataTypeTest;}function isCalendarSpec(input){var objectTest=isObject(input)&&!isObjectEmpty(input),propertyTest=false,properties=['sameDay','nextDay','lastDay','nextWeek','lastWeek','sameElse'],i,property;for(i=0;i<properties.length;i+=1){property=properties[i];propertyTest=propertyTest||hasOwnProp(input,property);}return objectTest&&propertyTest;}function getCalendarFormat(myMoment,now){var diff=myMoment.diff(now,'days',true);return diff<-6?'sameElse':diff<-1?'lastWeek':diff<0?'lastDay':diff<1?'sameDay':diff<2?'nextDay':diff<7?'nextWeek':'sameElse';}function calendar$1(time,formats){// Support for single parameter, formats only overload to the calendar function
if(arguments.length===1){if(!arguments[0]){time=undefined;formats=undefined;}else if(isMomentInput(arguments[0])){time=arguments[0];formats=undefined;}else if(isCalendarSpec(arguments[0])){formats=arguments[0];time=undefined;}}// We want to compare the start of today, vs this.
// Getting start-of-today depends on whether we're local/utc/offset or not.
var now=time||createLocal(),sod=cloneWithOffset(now,this).startOf('day'),format=hooks.calendarFormat(this,sod)||'sameElse',output=formats&&(isFunction(formats[format])?formats[format].call(this,now):formats[format]);return this.format(output||this.localeData().calendar(format,this,createLocal(now)));}function clone(){return new Moment(this);}function isAfter(input,units){var localInput=isMoment(input)?input:createLocal(input);if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()>localInput.valueOf();}else{return localInput.valueOf()<this.clone().startOf(units).valueOf();}}function isBefore(input,units){var localInput=isMoment(input)?input:createLocal(input);if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()<localInput.valueOf();}else{return this.clone().endOf(units).valueOf()<localInput.valueOf();}}function isBetween(from,to,units,inclusivity){var localFrom=isMoment(from)?from:createLocal(from),localTo=isMoment(to)?to:createLocal(to);if(!(this.isValid()&&localFrom.isValid()&&localTo.isValid())){return false;}inclusivity=inclusivity||'()';return(inclusivity[0]==='('?this.isAfter(localFrom,units):!this.isBefore(localFrom,units))&&(inclusivity[1]===')'?this.isBefore(localTo,units):!this.isAfter(localTo,units));}function isSame(input,units){var localInput=isMoment(input)?input:createLocal(input),inputMs;if(!(this.isValid()&&localInput.isValid())){return false;}units=normalizeUnits(units)||'millisecond';if(units==='millisecond'){return this.valueOf()===localInput.valueOf();}else{inputMs=localInput.valueOf();return this.clone().startOf(units).valueOf()<=inputMs&&inputMs<=this.clone().endOf(units).valueOf();}}function isSameOrAfter(input,units){return this.isSame(input,units)||this.isAfter(input,units);}function isSameOrBefore(input,units){return this.isSame(input,units)||this.isBefore(input,units);}function diff(input,units,asFloat){var that,zoneDelta,output;if(!this.isValid()){return NaN;}that=cloneWithOffset(input,this);if(!that.isValid()){return NaN;}zoneDelta=(that.utcOffset()-this.utcOffset())*6e4;units=normalizeUnits(units);switch(units){case'year':output=monthDiff(this,that)/12;break;case'month':output=monthDiff(this,that);break;case'quarter':output=monthDiff(this,that)/3;break;case'second':output=(this-that)/1e3;break;// 1000
case'minute':output=(this-that)/6e4;break;// 1000 * 60
case'hour':output=(this-that)/36e5;break;// 1000 * 60 * 60
case'day':output=(this-that-zoneDelta)/864e5;break;// 1000 * 60 * 60 * 24, negate dst
case'week':output=(this-that-zoneDelta)/6048e5;break;// 1000 * 60 * 60 * 24 * 7, negate dst
default:output=this-that;}return asFloat?output:absFloor(output);}function monthDiff(a,b){if(a.date()<b.date()){// end-of-month calculations work correct when the start month has more
// days than the end month.
return-monthDiff(b,a);}// difference in months
var wholeMonthDiff=(b.year()-a.year())*12+(b.month()-a.month()),// b is in (anchor - 1 month, anchor + 1 month)
anchor=a.clone().add(wholeMonthDiff,'months'),anchor2,adjust;if(b-anchor<0){anchor2=a.clone().add(wholeMonthDiff-1,'months');// linear across the month
adjust=(b-anchor)/(anchor-anchor2);}else{anchor2=a.clone().add(wholeMonthDiff+1,'months');// linear across the month
adjust=(b-anchor)/(anchor2-anchor);}//check for negative zero, return zero if negative zero
return-(wholeMonthDiff+adjust)||0;}hooks.defaultFormat='YYYY-MM-DDTHH:mm:ssZ';hooks.defaultFormatUtc='YYYY-MM-DDTHH:mm:ss[Z]';function toString(){return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');}function toISOString(keepOffset){if(!this.isValid()){return null;}var utc=keepOffset!==true,m=utc?this.clone().utc():this;if(m.year()<0||m.year()>9999){return formatMoment(m,utc?'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]':'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');}if(isFunction(Date.prototype.toISOString)){// native implementation is ~50x faster, use it when we can
if(utc){return this.toDate().toISOString();}else{return new Date(this.valueOf()+this.utcOffset()*60*1000).toISOString().replace('Z',formatMoment(m,'Z'));}}return formatMoment(m,utc?'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]':'YYYY-MM-DD[T]HH:mm:ss.SSSZ');}/**
       * Return a human readable representation of a moment that can
       * also be evaluated to get a new moment which is the same
       *
       * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
       */function inspect(){if(!this.isValid()){return'moment.invalid(/* '+this._i+' */)';}var func='moment',zone='',prefix,year,datetime,suffix;if(!this.isLocal()){func=this.utcOffset()===0?'moment.utc':'moment.parseZone';zone='Z';}prefix='['+func+'("]';year=0<=this.year()&&this.year()<=9999?'YYYY':'YYYYYY';datetime='-MM-DD[T]HH:mm:ss.SSS';suffix=zone+'[")]';return this.format(prefix+year+datetime+suffix);}function format(inputString){if(!inputString){inputString=this.isUtc()?hooks.defaultFormatUtc:hooks.defaultFormat;}var output=formatMoment(this,inputString);return this.localeData().postformat(output);}function from(time,withoutSuffix){if(this.isValid()&&(isMoment(time)&&time.isValid()||createLocal(time).isValid())){return createDuration({to:this,from:time}).locale(this.locale()).humanize(!withoutSuffix);}else{return this.localeData().invalidDate();}}function fromNow(withoutSuffix){return this.from(createLocal(),withoutSuffix);}function to(time,withoutSuffix){if(this.isValid()&&(isMoment(time)&&time.isValid()||createLocal(time).isValid())){return createDuration({from:this,to:time}).locale(this.locale()).humanize(!withoutSuffix);}else{return this.localeData().invalidDate();}}function toNow(withoutSuffix){return this.to(createLocal(),withoutSuffix);}// If passed a locale key, it will set the locale for this
// instance.  Otherwise, it will return the locale configuration
// variables for this instance.
function locale(key){var newLocaleData;if(key===undefined){return this._locale._abbr;}else{newLocaleData=getLocale(key);if(newLocaleData!=null){this._locale=newLocaleData;}return this;}}var lang=deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',function(key){if(key===undefined){return this.localeData();}else{return this.locale(key);}});function localeData(){return this._locale;}var MS_PER_SECOND=1000,MS_PER_MINUTE=60*MS_PER_SECOND,MS_PER_HOUR=60*MS_PER_MINUTE,MS_PER_400_YEARS=(365*400+97)*24*MS_PER_HOUR;// actual modulo - handles negative numbers (for dates before 1970):
function mod$1(dividend,divisor){return(dividend%divisor+divisor)%divisor;}function localStartOfDate(y,m,d){// the date constructor remaps years 0-99 to 1900-1999
if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
return new Date(y+400,m,d)-MS_PER_400_YEARS;}else{return new Date(y,m,d).valueOf();}}function utcStartOfDate(y,m,d){// Date.UTC remaps years 0-99 to 1900-1999
if(y<100&&y>=0){// preserve leap years using a full 400 year cycle, then reset
return Date.UTC(y+400,m,d)-MS_PER_400_YEARS;}else{return Date.UTC(y,m,d);}}function startOf(units){var time,startOfDate;units=normalizeUnits(units);if(units===undefined||units==='millisecond'||!this.isValid()){return this;}startOfDate=this._isUTC?utcStartOfDate:localStartOfDate;switch(units){case'year':time=startOfDate(this.year(),0,1);break;case'quarter':time=startOfDate(this.year(),this.month()-this.month()%3,1);break;case'month':time=startOfDate(this.year(),this.month(),1);break;case'week':time=startOfDate(this.year(),this.month(),this.date()-this.weekday());break;case'isoWeek':time=startOfDate(this.year(),this.month(),this.date()-(this.isoWeekday()-1));break;case'day':case'date':time=startOfDate(this.year(),this.month(),this.date());break;case'hour':time=this._d.valueOf();time-=mod$1(time+(this._isUTC?0:this.utcOffset()*MS_PER_MINUTE),MS_PER_HOUR);break;case'minute':time=this._d.valueOf();time-=mod$1(time,MS_PER_MINUTE);break;case'second':time=this._d.valueOf();time-=mod$1(time,MS_PER_SECOND);break;}this._d.setTime(time);hooks.updateOffset(this,true);return this;}function endOf(units){var time,startOfDate;units=normalizeUnits(units);if(units===undefined||units==='millisecond'||!this.isValid()){return this;}startOfDate=this._isUTC?utcStartOfDate:localStartOfDate;switch(units){case'year':time=startOfDate(this.year()+1,0,1)-1;break;case'quarter':time=startOfDate(this.year(),this.month()-this.month()%3+3,1)-1;break;case'month':time=startOfDate(this.year(),this.month()+1,1)-1;break;case'week':time=startOfDate(this.year(),this.month(),this.date()-this.weekday()+7)-1;break;case'isoWeek':time=startOfDate(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1;break;case'day':case'date':time=startOfDate(this.year(),this.month(),this.date()+1)-1;break;case'hour':time=this._d.valueOf();time+=MS_PER_HOUR-mod$1(time+(this._isUTC?0:this.utcOffset()*MS_PER_MINUTE),MS_PER_HOUR)-1;break;case'minute':time=this._d.valueOf();time+=MS_PER_MINUTE-mod$1(time,MS_PER_MINUTE)-1;break;case'second':time=this._d.valueOf();time+=MS_PER_SECOND-mod$1(time,MS_PER_SECOND)-1;break;}this._d.setTime(time);hooks.updateOffset(this,true);return this;}function valueOf(){return this._d.valueOf()-(this._offset||0)*60000;}function unix(){return Math.floor(this.valueOf()/1000);}function toDate(){return new Date(this.valueOf());}function toArray(){var m=this;return[m.year(),m.month(),m.date(),m.hour(),m.minute(),m.second(),m.millisecond()];}function toObject(){var m=this;return{years:m.year(),months:m.month(),date:m.date(),hours:m.hours(),minutes:m.minutes(),seconds:m.seconds(),milliseconds:m.milliseconds()};}function toJSON(){// new Date(NaN).toJSON() === null
return this.isValid()?this.toISOString():null;}function isValid$2(){return isValid(this);}function parsingFlags(){return extend({},getParsingFlags(this));}function invalidAt(){return getParsingFlags(this).overflow;}function creationData(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict};}addFormatToken('N',0,0,'eraAbbr');addFormatToken('NN',0,0,'eraAbbr');addFormatToken('NNN',0,0,'eraAbbr');addFormatToken('NNNN',0,0,'eraName');addFormatToken('NNNNN',0,0,'eraNarrow');addFormatToken('y',['y',1],'yo','eraYear');addFormatToken('y',['yy',2],0,'eraYear');addFormatToken('y',['yyy',3],0,'eraYear');addFormatToken('y',['yyyy',4],0,'eraYear');addRegexToken('N',matchEraAbbr);addRegexToken('NN',matchEraAbbr);addRegexToken('NNN',matchEraAbbr);addRegexToken('NNNN',matchEraName);addRegexToken('NNNNN',matchEraNarrow);addParseToken(['N','NN','NNN','NNNN','NNNNN'],function(input,array,config,token){var era=config._locale.erasParse(input,token,config._strict);if(era){getParsingFlags(config).era=era;}else{getParsingFlags(config).invalidEra=input;}});addRegexToken('y',matchUnsigned);addRegexToken('yy',matchUnsigned);addRegexToken('yyy',matchUnsigned);addRegexToken('yyyy',matchUnsigned);addRegexToken('yo',matchEraYearOrdinal);addParseToken(['y','yy','yyy','yyyy'],YEAR);addParseToken(['yo'],function(input,array,config,token){var match;if(config._locale._eraYearOrdinalRegex){match=input.match(config._locale._eraYearOrdinalRegex);}if(config._locale.eraYearOrdinalParse){array[YEAR]=config._locale.eraYearOrdinalParse(input,match);}else{array[YEAR]=parseInt(input,10);}});function localeEras(m,format){var i,l,date,eras=this._eras||getLocale('en')._eras;for(i=0,l=eras.length;i<l;++i){switch(typeof eras[i].since){case'string':// truncate time
date=hooks(eras[i].since).startOf('day');eras[i].since=date.valueOf();break;}switch(typeof eras[i].until){case'undefined':eras[i].until=+Infinity;break;case'string':// truncate time
date=hooks(eras[i].until).startOf('day').valueOf();eras[i].until=date.valueOf();break;}}return eras;}function localeErasParse(eraName,format,strict){var i,l,eras=this.eras(),name,abbr,narrow;eraName=eraName.toUpperCase();for(i=0,l=eras.length;i<l;++i){name=eras[i].name.toUpperCase();abbr=eras[i].abbr.toUpperCase();narrow=eras[i].narrow.toUpperCase();if(strict){switch(format){case'N':case'NN':case'NNN':if(abbr===eraName){return eras[i];}break;case'NNNN':if(name===eraName){return eras[i];}break;case'NNNNN':if(narrow===eraName){return eras[i];}break;}}else if([name,abbr,narrow].indexOf(eraName)>=0){return eras[i];}}}function localeErasConvertYear(era,year){var dir=era.since<=era.until?1:-1;if(year===undefined){return hooks(era.since).year();}else{return hooks(era.since).year()+(year-era.offset)*dir;}}function getEraName(){var i,l,val,eras=this.localeData().eras();for(i=0,l=eras.length;i<l;++i){// truncate time
val=this.clone().startOf('day').valueOf();if(eras[i].since<=val&&val<=eras[i].until){return eras[i].name;}if(eras[i].until<=val&&val<=eras[i].since){return eras[i].name;}}return'';}function getEraNarrow(){var i,l,val,eras=this.localeData().eras();for(i=0,l=eras.length;i<l;++i){// truncate time
val=this.clone().startOf('day').valueOf();if(eras[i].since<=val&&val<=eras[i].until){return eras[i].narrow;}if(eras[i].until<=val&&val<=eras[i].since){return eras[i].narrow;}}return'';}function getEraAbbr(){var i,l,val,eras=this.localeData().eras();for(i=0,l=eras.length;i<l;++i){// truncate time
val=this.clone().startOf('day').valueOf();if(eras[i].since<=val&&val<=eras[i].until){return eras[i].abbr;}if(eras[i].until<=val&&val<=eras[i].since){return eras[i].abbr;}}return'';}function getEraYear(){var i,l,dir,val,eras=this.localeData().eras();for(i=0,l=eras.length;i<l;++i){dir=eras[i].since<=eras[i].until?1:-1;// truncate time
val=this.clone().startOf('day').valueOf();if(eras[i].since<=val&&val<=eras[i].until||eras[i].until<=val&&val<=eras[i].since){return(this.year()-hooks(eras[i].since).year())*dir+eras[i].offset;}}return this.year();}function erasNameRegex(isStrict){if(!hasOwnProp(this,'_erasNameRegex')){computeErasParse.call(this);}return isStrict?this._erasNameRegex:this._erasRegex;}function erasAbbrRegex(isStrict){if(!hasOwnProp(this,'_erasAbbrRegex')){computeErasParse.call(this);}return isStrict?this._erasAbbrRegex:this._erasRegex;}function erasNarrowRegex(isStrict){if(!hasOwnProp(this,'_erasNarrowRegex')){computeErasParse.call(this);}return isStrict?this._erasNarrowRegex:this._erasRegex;}function matchEraAbbr(isStrict,locale){return locale.erasAbbrRegex(isStrict);}function matchEraName(isStrict,locale){return locale.erasNameRegex(isStrict);}function matchEraNarrow(isStrict,locale){return locale.erasNarrowRegex(isStrict);}function matchEraYearOrdinal(isStrict,locale){return locale._eraYearOrdinalRegex||matchUnsigned;}function computeErasParse(){var abbrPieces=[],namePieces=[],narrowPieces=[],mixedPieces=[],i,l,eras=this.eras();for(i=0,l=eras.length;i<l;++i){namePieces.push(regexEscape(eras[i].name));abbrPieces.push(regexEscape(eras[i].abbr));narrowPieces.push(regexEscape(eras[i].narrow));mixedPieces.push(regexEscape(eras[i].name));mixedPieces.push(regexEscape(eras[i].abbr));mixedPieces.push(regexEscape(eras[i].narrow));}this._erasRegex=new RegExp('^('+mixedPieces.join('|')+')','i');this._erasNameRegex=new RegExp('^('+namePieces.join('|')+')','i');this._erasAbbrRegex=new RegExp('^('+abbrPieces.join('|')+')','i');this._erasNarrowRegex=new RegExp('^('+narrowPieces.join('|')+')','i');}// FORMATTING
addFormatToken(0,['gg',2],0,function(){return this.weekYear()%100;});addFormatToken(0,['GG',2],0,function(){return this.isoWeekYear()%100;});function addWeekYearFormatToken(token,getter){addFormatToken(0,[token,token.length],0,getter);}addWeekYearFormatToken('gggg','weekYear');addWeekYearFormatToken('ggggg','weekYear');addWeekYearFormatToken('GGGG','isoWeekYear');addWeekYearFormatToken('GGGGG','isoWeekYear');// ALIASES
addUnitAlias('weekYear','gg');addUnitAlias('isoWeekYear','GG');// PRIORITY
addUnitPriority('weekYear',1);addUnitPriority('isoWeekYear',1);// PARSING
addRegexToken('G',matchSigned);addRegexToken('g',matchSigned);addRegexToken('GG',match1to2,match2);addRegexToken('gg',match1to2,match2);addRegexToken('GGGG',match1to4,match4);addRegexToken('gggg',match1to4,match4);addRegexToken('GGGGG',match1to6,match6);addRegexToken('ggggg',match1to6,match6);addWeekParseToken(['gggg','ggggg','GGGG','GGGGG'],function(input,week,config,token){week[token.substr(0,2)]=toInt(input);});addWeekParseToken(['gg','GG'],function(input,week,config,token){week[token]=hooks.parseTwoDigitYear(input);});// MOMENTS
function getSetWeekYear(input){return getSetWeekYearHelper.call(this,input,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy);}function getSetISOWeekYear(input){return getSetWeekYearHelper.call(this,input,this.isoWeek(),this.isoWeekday(),1,4);}function getISOWeeksInYear(){return weeksInYear(this.year(),1,4);}function getISOWeeksInISOWeekYear(){return weeksInYear(this.isoWeekYear(),1,4);}function getWeeksInYear(){var weekInfo=this.localeData()._week;return weeksInYear(this.year(),weekInfo.dow,weekInfo.doy);}function getWeeksInWeekYear(){var weekInfo=this.localeData()._week;return weeksInYear(this.weekYear(),weekInfo.dow,weekInfo.doy);}function getSetWeekYearHelper(input,week,weekday,dow,doy){var weeksTarget;if(input==null){return weekOfYear(this,dow,doy).year;}else{weeksTarget=weeksInYear(input,dow,doy);if(week>weeksTarget){week=weeksTarget;}return setWeekAll.call(this,input,week,weekday,dow,doy);}}function setWeekAll(weekYear,week,weekday,dow,doy){var dayOfYearData=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy),date=createUTCDate(dayOfYearData.year,0,dayOfYearData.dayOfYear);this.year(date.getUTCFullYear());this.month(date.getUTCMonth());this.date(date.getUTCDate());return this;}// FORMATTING
addFormatToken('Q',0,'Qo','quarter');// ALIASES
addUnitAlias('quarter','Q');// PRIORITY
addUnitPriority('quarter',7);// PARSING
addRegexToken('Q',match1);addParseToken('Q',function(input,array){array[MONTH]=(toInt(input)-1)*3;});// MOMENTS
function getSetQuarter(input){return input==null?Math.ceil((this.month()+1)/3):this.month((input-1)*3+this.month()%3);}// FORMATTING
addFormatToken('D',['DD',2],'Do','date');// ALIASES
addUnitAlias('date','D');// PRIORITY
addUnitPriority('date',9);// PARSING
addRegexToken('D',match1to2);addRegexToken('DD',match1to2,match2);addRegexToken('Do',function(isStrict,locale){// TODO: Remove "ordinalParse" fallback in next major release.
return isStrict?locale._dayOfMonthOrdinalParse||locale._ordinalParse:locale._dayOfMonthOrdinalParseLenient;});addParseToken(['D','DD'],DATE);addParseToken('Do',function(input,array){array[DATE]=toInt(input.match(match1to2)[0]);});// MOMENTS
var getSetDayOfMonth=makeGetSet('Date',true);// FORMATTING
addFormatToken('DDD',['DDDD',3],'DDDo','dayOfYear');// ALIASES
addUnitAlias('dayOfYear','DDD');// PRIORITY
addUnitPriority('dayOfYear',4);// PARSING
addRegexToken('DDD',match1to3);addRegexToken('DDDD',match3);addParseToken(['DDD','DDDD'],function(input,array,config){config._dayOfYear=toInt(input);});// HELPERS
// MOMENTS
function getSetDayOfYear(input){var dayOfYear=Math.round((this.clone().startOf('day')-this.clone().startOf('year'))/864e5)+1;return input==null?dayOfYear:this.add(input-dayOfYear,'d');}// FORMATTING
addFormatToken('m',['mm',2],0,'minute');// ALIASES
addUnitAlias('minute','m');// PRIORITY
addUnitPriority('minute',14);// PARSING
addRegexToken('m',match1to2);addRegexToken('mm',match1to2,match2);addParseToken(['m','mm'],MINUTE);// MOMENTS
var getSetMinute=makeGetSet('Minutes',false);// FORMATTING
addFormatToken('s',['ss',2],0,'second');// ALIASES
addUnitAlias('second','s');// PRIORITY
addUnitPriority('second',15);// PARSING
addRegexToken('s',match1to2);addRegexToken('ss',match1to2,match2);addParseToken(['s','ss'],SECOND);// MOMENTS
var getSetSecond=makeGetSet('Seconds',false);// FORMATTING
addFormatToken('S',0,0,function(){return~~(this.millisecond()/100);});addFormatToken(0,['SS',2],0,function(){return~~(this.millisecond()/10);});addFormatToken(0,['SSS',3],0,'millisecond');addFormatToken(0,['SSSS',4],0,function(){return this.millisecond()*10;});addFormatToken(0,['SSSSS',5],0,function(){return this.millisecond()*100;});addFormatToken(0,['SSSSSS',6],0,function(){return this.millisecond()*1000;});addFormatToken(0,['SSSSSSS',7],0,function(){return this.millisecond()*10000;});addFormatToken(0,['SSSSSSSS',8],0,function(){return this.millisecond()*100000;});addFormatToken(0,['SSSSSSSSS',9],0,function(){return this.millisecond()*1000000;});// ALIASES
addUnitAlias('millisecond','ms');// PRIORITY
addUnitPriority('millisecond',16);// PARSING
addRegexToken('S',match1to3,match1);addRegexToken('SS',match1to3,match2);addRegexToken('SSS',match1to3,match3);var token,getSetMillisecond;for(token='SSSS';token.length<=9;token+='S'){addRegexToken(token,matchUnsigned);}function parseMs(input,array){array[MILLISECOND]=toInt(('0.'+input)*1000);}for(token='S';token.length<=9;token+='S'){addParseToken(token,parseMs);}getSetMillisecond=makeGetSet('Milliseconds',false);// FORMATTING
addFormatToken('z',0,0,'zoneAbbr');addFormatToken('zz',0,0,'zoneName');// MOMENTS
function getZoneAbbr(){return this._isUTC?'UTC':'';}function getZoneName(){return this._isUTC?'Coordinated Universal Time':'';}var proto=Moment.prototype;proto.add=add;proto.calendar=calendar$1;proto.clone=clone;proto.diff=diff;proto.endOf=endOf;proto.format=format;proto.from=from;proto.fromNow=fromNow;proto.to=to;proto.toNow=toNow;proto.get=stringGet;proto.invalidAt=invalidAt;proto.isAfter=isAfter;proto.isBefore=isBefore;proto.isBetween=isBetween;proto.isSame=isSame;proto.isSameOrAfter=isSameOrAfter;proto.isSameOrBefore=isSameOrBefore;proto.isValid=isValid$2;proto.lang=lang;proto.locale=locale;proto.localeData=localeData;proto.max=prototypeMax;proto.min=prototypeMin;proto.parsingFlags=parsingFlags;proto.set=stringSet;proto.startOf=startOf;proto.subtract=subtract;proto.toArray=toArray;proto.toObject=toObject;proto.toDate=toDate;proto.toISOString=toISOString;proto.inspect=inspect;if(typeof Symbol!=='undefined'&&Symbol.for!=null){proto[Symbol.for('nodejs.util.inspect.custom')]=function(){return'Moment<'+this.format()+'>';};}proto.toJSON=toJSON;proto.toString=toString;proto.unix=unix;proto.valueOf=valueOf;proto.creationData=creationData;proto.eraName=getEraName;proto.eraNarrow=getEraNarrow;proto.eraAbbr=getEraAbbr;proto.eraYear=getEraYear;proto.year=getSetYear;proto.isLeapYear=getIsLeapYear;proto.weekYear=getSetWeekYear;proto.isoWeekYear=getSetISOWeekYear;proto.quarter=proto.quarters=getSetQuarter;proto.month=getSetMonth;proto.daysInMonth=getDaysInMonth;proto.week=proto.weeks=getSetWeek;proto.isoWeek=proto.isoWeeks=getSetISOWeek;proto.weeksInYear=getWeeksInYear;proto.weeksInWeekYear=getWeeksInWeekYear;proto.isoWeeksInYear=getISOWeeksInYear;proto.isoWeeksInISOWeekYear=getISOWeeksInISOWeekYear;proto.date=getSetDayOfMonth;proto.day=proto.days=getSetDayOfWeek;proto.weekday=getSetLocaleDayOfWeek;proto.isoWeekday=getSetISODayOfWeek;proto.dayOfYear=getSetDayOfYear;proto.hour=proto.hours=getSetHour;proto.minute=proto.minutes=getSetMinute;proto.second=proto.seconds=getSetSecond;proto.millisecond=proto.milliseconds=getSetMillisecond;proto.utcOffset=getSetOffset;proto.utc=setOffsetToUTC;proto.local=setOffsetToLocal;proto.parseZone=setOffsetToParsedOffset;proto.hasAlignedHourOffset=hasAlignedHourOffset;proto.isDST=isDaylightSavingTime;proto.isLocal=isLocal;proto.isUtcOffset=isUtcOffset;proto.isUtc=isUtc;proto.isUTC=isUtc;proto.zoneAbbr=getZoneAbbr;proto.zoneName=getZoneName;proto.dates=deprecate('dates accessor is deprecated. Use date instead.',getSetDayOfMonth);proto.months=deprecate('months accessor is deprecated. Use month instead',getSetMonth);proto.years=deprecate('years accessor is deprecated. Use year instead',getSetYear);proto.zone=deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',getSetZone);proto.isDSTShifted=deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',isDaylightSavingTimeShifted);function createUnix(input){return createLocal(input*1000);}function createInZone(){return createLocal.apply(null,arguments).parseZone();}function preParsePostFormat(string){return string;}var proto$1=Locale.prototype;proto$1.calendar=calendar;proto$1.longDateFormat=longDateFormat;proto$1.invalidDate=invalidDate;proto$1.ordinal=ordinal;proto$1.preparse=preParsePostFormat;proto$1.postformat=preParsePostFormat;proto$1.relativeTime=relativeTime;proto$1.pastFuture=pastFuture;proto$1.set=set;proto$1.eras=localeEras;proto$1.erasParse=localeErasParse;proto$1.erasConvertYear=localeErasConvertYear;proto$1.erasAbbrRegex=erasAbbrRegex;proto$1.erasNameRegex=erasNameRegex;proto$1.erasNarrowRegex=erasNarrowRegex;proto$1.months=localeMonths;proto$1.monthsShort=localeMonthsShort;proto$1.monthsParse=localeMonthsParse;proto$1.monthsRegex=monthsRegex;proto$1.monthsShortRegex=monthsShortRegex;proto$1.week=localeWeek;proto$1.firstDayOfYear=localeFirstDayOfYear;proto$1.firstDayOfWeek=localeFirstDayOfWeek;proto$1.weekdays=localeWeekdays;proto$1.weekdaysMin=localeWeekdaysMin;proto$1.weekdaysShort=localeWeekdaysShort;proto$1.weekdaysParse=localeWeekdaysParse;proto$1.weekdaysRegex=weekdaysRegex;proto$1.weekdaysShortRegex=weekdaysShortRegex;proto$1.weekdaysMinRegex=weekdaysMinRegex;proto$1.isPM=localeIsPM;proto$1.meridiem=localeMeridiem;function get$1(format,index,field,setter){var locale=getLocale(),utc=createUTC().set(setter,index);return locale[field](utc,format);}function listMonthsImpl(format,index,field){if(isNumber(format)){index=format;format=undefined;}format=format||'';if(index!=null){return get$1(format,index,field,'month');}var i,out=[];for(i=0;i<12;i++){out[i]=get$1(format,i,field,'month');}return out;}// ()
// (5)
// (fmt, 5)
// (fmt)
// (true)
// (true, 5)
// (true, fmt, 5)
// (true, fmt)
function listWeekdaysImpl(localeSorted,format,index,field){if(typeof localeSorted==='boolean'){if(isNumber(format)){index=format;format=undefined;}format=format||'';}else{format=localeSorted;index=format;localeSorted=false;if(isNumber(format)){index=format;format=undefined;}format=format||'';}var locale=getLocale(),shift=localeSorted?locale._week.dow:0,i,out=[];if(index!=null){return get$1(format,(index+shift)%7,field,'day');}for(i=0;i<7;i++){out[i]=get$1(format,(i+shift)%7,field,'day');}return out;}function listMonths(format,index){return listMonthsImpl(format,index,'months');}function listMonthsShort(format,index){return listMonthsImpl(format,index,'monthsShort');}function listWeekdays(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdays');}function listWeekdaysShort(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdaysShort');}function listWeekdaysMin(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,'weekdaysMin');}getSetGlobalLocale('en',{eras:[{since:'0001-01-01',until:+Infinity,offset:1,name:'Anno Domini',narrow:'AD',abbr:'AD'},{since:'0000-12-31',until:-Infinity,offset:1,name:'Before Christ',narrow:'BC',abbr:'BC'}],dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(number){var b=number%10,output=toInt(number%100/10)===1?'th':b===1?'st':b===2?'nd':b===3?'rd':'th';return number+output;}});// Side effect imports
hooks.lang=deprecate('moment.lang is deprecated. Use moment.locale instead.',getSetGlobalLocale);hooks.langData=deprecate('moment.langData is deprecated. Use moment.localeData instead.',getLocale);var mathAbs=Math.abs;function abs(){var data=this._data;this._milliseconds=mathAbs(this._milliseconds);this._days=mathAbs(this._days);this._months=mathAbs(this._months);data.milliseconds=mathAbs(data.milliseconds);data.seconds=mathAbs(data.seconds);data.minutes=mathAbs(data.minutes);data.hours=mathAbs(data.hours);data.months=mathAbs(data.months);data.years=mathAbs(data.years);return this;}function addSubtract$1(duration,input,value,direction){var other=createDuration(input,value);duration._milliseconds+=direction*other._milliseconds;duration._days+=direction*other._days;duration._months+=direction*other._months;return duration._bubble();}// supports only 2.0-style add(1, 's') or add(duration)
function add$1(input,value){return addSubtract$1(this,input,value,1);}// supports only 2.0-style subtract(1, 's') or subtract(duration)
function subtract$1(input,value){return addSubtract$1(this,input,value,-1);}function absCeil(number){if(number<0){return Math.floor(number);}else{return Math.ceil(number);}}function bubble(){var milliseconds=this._milliseconds,days=this._days,months=this._months,data=this._data,seconds,minutes,hours,years,monthsFromDays;// if we have a mix of positive and negative values, bubble down first
// check: https://github.com/moment/moment/issues/2166
if(!(milliseconds>=0&&days>=0&&months>=0||milliseconds<=0&&days<=0&&months<=0)){milliseconds+=absCeil(monthsToDays(months)+days)*864e5;days=0;months=0;}// The following code bubbles up values, see the tests for
// examples of what that means.
data.milliseconds=milliseconds%1000;seconds=absFloor(milliseconds/1000);data.seconds=seconds%60;minutes=absFloor(seconds/60);data.minutes=minutes%60;hours=absFloor(minutes/60);data.hours=hours%24;days+=absFloor(hours/24);// convert days to months
monthsFromDays=absFloor(daysToMonths(days));months+=monthsFromDays;days-=absCeil(monthsToDays(monthsFromDays));// 12 months -> 1 year
years=absFloor(months/12);months%=12;data.days=days;data.months=months;data.years=years;return this;}function daysToMonths(days){// 400 years have 146097 days (taking into account leap year rules)
// 400 years have 12 months === 4800
return days*4800/146097;}function monthsToDays(months){// the reverse of daysToMonths
return months*146097/4800;}function as(units){if(!this.isValid()){return NaN;}var days,months,milliseconds=this._milliseconds;units=normalizeUnits(units);if(units==='month'||units==='quarter'||units==='year'){days=this._days+milliseconds/864e5;months=this._months+daysToMonths(days);switch(units){case'month':return months;case'quarter':return months/3;case'year':return months/12;}}else{// handle milliseconds separately because of floating point math errors (issue #1867)
days=this._days+Math.round(monthsToDays(this._months));switch(units){case'week':return days/7+milliseconds/6048e5;case'day':return days+milliseconds/864e5;case'hour':return days*24+milliseconds/36e5;case'minute':return days*1440+milliseconds/6e4;case'second':return days*86400+milliseconds/1000;// Math.floor prevents floating point math errors here
case'millisecond':return Math.floor(days*864e5)+milliseconds;default:throw new Error('Unknown unit '+units);}}}// TODO: Use this.as('ms')?
function valueOf$1(){if(!this.isValid()){return NaN;}return this._milliseconds+this._days*864e5+this._months%12*2592e6+toInt(this._months/12)*31536e6;}function makeAs(alias){return function(){return this.as(alias);};}var asMilliseconds=makeAs('ms'),asSeconds=makeAs('s'),asMinutes=makeAs('m'),asHours=makeAs('h'),asDays=makeAs('d'),asWeeks=makeAs('w'),asMonths=makeAs('M'),asQuarters=makeAs('Q'),asYears=makeAs('y');function clone$1(){return createDuration(this);}function get$2(units){units=normalizeUnits(units);return this.isValid()?this[units+'s']():NaN;}function makeGetter(name){return function(){return this.isValid()?this._data[name]:NaN;};}var milliseconds=makeGetter('milliseconds'),seconds=makeGetter('seconds'),minutes=makeGetter('minutes'),hours=makeGetter('hours'),days=makeGetter('days'),months=makeGetter('months'),years=makeGetter('years');function weeks(){return absFloor(this.days()/7);}var round=Math.round,thresholds={ss:44,// a few seconds to seconds
s:45,// seconds to minute
m:45,// minutes to hour
h:22,// hours to day
d:26,// days to month/week
w:null,// weeks to month
M:11// months to year
};// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
function substituteTimeAgo(string,number,withoutSuffix,isFuture,locale){return locale.relativeTime(number||1,!!withoutSuffix,string,isFuture);}function relativeTime$1(posNegDuration,withoutSuffix,thresholds,locale){var duration=createDuration(posNegDuration).abs(),seconds=round(duration.as('s')),minutes=round(duration.as('m')),hours=round(duration.as('h')),days=round(duration.as('d')),months=round(duration.as('M')),weeks=round(duration.as('w')),years=round(duration.as('y')),a=seconds<=thresholds.ss&&['s',seconds]||seconds<thresholds.s&&['ss',seconds]||minutes<=1&&['m']||minutes<thresholds.m&&['mm',minutes]||hours<=1&&['h']||hours<thresholds.h&&['hh',hours]||days<=1&&['d']||days<thresholds.d&&['dd',days];if(thresholds.w!=null){a=a||weeks<=1&&['w']||weeks<thresholds.w&&['ww',weeks];}a=a||months<=1&&['M']||months<thresholds.M&&['MM',months]||years<=1&&['y']||['yy',years];a[2]=withoutSuffix;a[3]=+posNegDuration>0;a[4]=locale;return substituteTimeAgo.apply(null,a);}// This function allows you to set the rounding function for relative time strings
function getSetRelativeTimeRounding(roundingFunction){if(roundingFunction===undefined){return round;}if(typeof roundingFunction==='function'){round=roundingFunction;return true;}return false;}// This function allows you to set a threshold for relative time strings
function getSetRelativeTimeThreshold(threshold,limit){if(thresholds[threshold]===undefined){return false;}if(limit===undefined){return thresholds[threshold];}thresholds[threshold]=limit;if(threshold==='s'){thresholds.ss=limit-1;}return true;}function humanize(argWithSuffix,argThresholds){if(!this.isValid()){return this.localeData().invalidDate();}var withSuffix=false,th=thresholds,locale,output;if(typeof argWithSuffix==='object'){argThresholds=argWithSuffix;argWithSuffix=false;}if(typeof argWithSuffix==='boolean'){withSuffix=argWithSuffix;}if(typeof argThresholds==='object'){th=Object.assign({},thresholds,argThresholds);if(argThresholds.s!=null&&argThresholds.ss==null){th.ss=argThresholds.s-1;}}locale=this.localeData();output=relativeTime$1(this,!withSuffix,th,locale);if(withSuffix){output=locale.pastFuture(+this,output);}return locale.postformat(output);}var abs$1=Math.abs;function sign(x){return(x>0)-(x<0)||+x;}function toISOString$1(){// for ISO strings we do not use the normal bubbling rules:
//  * milliseconds bubble up until they become hours
//  * days do not bubble at all
//  * months bubble up until they become years
// This is because there is no context-free conversion between hours and days
// (think of clock changes)
// and also not between days and months (28-31 days per month)
if(!this.isValid()){return this.localeData().invalidDate();}var seconds=abs$1(this._milliseconds)/1000,days=abs$1(this._days),months=abs$1(this._months),minutes,hours,years,s,total=this.asSeconds(),totalSign,ymSign,daysSign,hmsSign;if(!total){// this is the same as C#'s (Noda) and python (isodate)...
// but not other JS (goog.date)
return'P0D';}// 3600 seconds -> 60 minutes -> 1 hour
minutes=absFloor(seconds/60);hours=absFloor(minutes/60);seconds%=60;minutes%=60;// 12 months -> 1 year
years=absFloor(months/12);months%=12;// inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
s=seconds?seconds.toFixed(3).replace(/\.?0+$/,''):'';totalSign=total<0?'-':'';ymSign=sign(this._months)!==sign(total)?'-':'';daysSign=sign(this._days)!==sign(total)?'-':'';hmsSign=sign(this._milliseconds)!==sign(total)?'-':'';return totalSign+'P'+(years?ymSign+years+'Y':'')+(months?ymSign+months+'M':'')+(days?daysSign+days+'D':'')+(hours||minutes||seconds?'T':'')+(hours?hmsSign+hours+'H':'')+(minutes?hmsSign+minutes+'M':'')+(seconds?hmsSign+s+'S':'');}var proto$2=Duration.prototype;proto$2.isValid=isValid$1;proto$2.abs=abs;proto$2.add=add$1;proto$2.subtract=subtract$1;proto$2.as=as;proto$2.asMilliseconds=asMilliseconds;proto$2.asSeconds=asSeconds;proto$2.asMinutes=asMinutes;proto$2.asHours=asHours;proto$2.asDays=asDays;proto$2.asWeeks=asWeeks;proto$2.asMonths=asMonths;proto$2.asQuarters=asQuarters;proto$2.asYears=asYears;proto$2.valueOf=valueOf$1;proto$2._bubble=bubble;proto$2.clone=clone$1;proto$2.get=get$2;proto$2.milliseconds=milliseconds;proto$2.seconds=seconds;proto$2.minutes=minutes;proto$2.hours=hours;proto$2.days=days;proto$2.weeks=weeks;proto$2.months=months;proto$2.years=years;proto$2.humanize=humanize;proto$2.toISOString=toISOString$1;proto$2.toString=toISOString$1;proto$2.toJSON=toISOString$1;proto$2.locale=locale;proto$2.localeData=localeData;proto$2.toIsoString=deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',toISOString$1);proto$2.lang=lang;// FORMATTING
addFormatToken('X',0,0,'unix');addFormatToken('x',0,0,'valueOf');// PARSING
addRegexToken('x',matchSigned);addRegexToken('X',matchTimestamp);addParseToken('X',function(input,array,config){config._d=new Date(parseFloat(input)*1000);});addParseToken('x',function(input,array,config){config._d=new Date(toInt(input));});//! moment.js
hooks.version='2.29.4';setHookCallback(createLocal);hooks.fn=proto;hooks.min=min;hooks.max=max;hooks.now=now;hooks.utc=createUTC;hooks.unix=createUnix;hooks.months=listMonths;hooks.isDate=isDate;hooks.locale=getSetGlobalLocale;hooks.invalid=createInvalid;hooks.duration=createDuration;hooks.isMoment=isMoment;hooks.weekdays=listWeekdays;hooks.parseZone=createInZone;hooks.localeData=getLocale;hooks.isDuration=isDuration;hooks.monthsShort=listMonthsShort;hooks.weekdaysMin=listWeekdaysMin;hooks.defineLocale=defineLocale;hooks.updateLocale=updateLocale;hooks.locales=listLocales;hooks.weekdaysShort=listWeekdaysShort;hooks.normalizeUnits=normalizeUnits;hooks.relativeTimeRounding=getSetRelativeTimeRounding;hooks.relativeTimeThreshold=getSetRelativeTimeThreshold;hooks.calendarFormat=getCalendarFormat;hooks.prototype=proto;// currently HTML5 input type only supports 24-hour formats
hooks.HTML5_FMT={DATETIME_LOCAL:'YYYY-MM-DDTHH:mm',// <input type="datetime-local" />
DATETIME_LOCAL_SECONDS:'YYYY-MM-DDTHH:mm:ss',// <input type="datetime-local" step="1" />
DATETIME_LOCAL_MS:'YYYY-MM-DDTHH:mm:ss.SSS',// <input type="datetime-local" step="0.001" />
DATE:'YYYY-MM-DD',// <input type="date" />
TIME:'HH:mm',// <input type="time" />
TIME_SECONDS:'HH:mm:ss',// <input type="time" step="1" />
TIME_MS:'HH:mm:ss.SSS',// <input type="time" step="0.001" />
WEEK:'GGGG-[W]WW',// <input type="week" />
MONTH:'YYYY-MM'// <input type="month" />
};return hooks;});/**
  * @version: 3.1
  * @author: Dan Grossman http://www.dangrossman.info/
  * @copyright: Copyright (c) 2012-2019 Dan Grossman. All rights reserved.
  * @license: Licensed under the MIT license. See http://www.opensource.org/licenses/mit-license.php
  * @website: http://www.daterangepicker.com/
  */ // Following the UMD template https://github.com/umdjs/umd/blob/master/templates/returnExportsGlobal.js
(function(root,factory){if(typeof define==='function'&&define.amd){// AMD. Make globaly available as well
define(['moment','jquery'],function(moment,jquery){if(!jquery.fn)jquery.fn={};// webpack server rendering
if(typeof moment!=='function'&&moment.hasOwnProperty('default'))moment=moment['default'];return factory(moment,jquery);});}else if(typeof module==='object'&&module.exports){// Node / Browserify
//isomorphic issue
var jQuery=typeof window!='undefined'?window.jQuery:undefined;if(!jQuery){jQuery=require('jquery');if(!jQuery.fn)jQuery.fn={};}var moment=typeof window!='undefined'&&typeof window.moment!='undefined'?window.moment:require('moment');module.exports=factory(moment,jQuery);}else{// Browser globals
root.daterangepicker=factory(root.moment,root.jQuery);}})(window,function(moment,$){var DateRangePicker=function(element,options,cb){//default settings for options
this.parentEl='body';this.element=$(element);this.startDate=moment().startOf('day');this.endDate=moment().endOf('day');this.minDate=false;this.maxDate=false;this.maxSpan=false;this.autoApply=false;this.singleDatePicker=false;this.showDropdowns=false;this.minYear=moment().subtract(100,'year').format('YYYY');this.maxYear=moment().add(100,'year').format('YYYY');this.showWeekNumbers=false;this.showISOWeekNumbers=false;this.showCustomRangeLabel=true;this.timePicker=false;this.timePicker24Hour=false;this.timePickerIncrement=1;this.timePickerSeconds=false;this.linkedCalendars=true;this.autoUpdateInput=true;this.alwaysShowCalendars=false;this.ranges={};this.opens='right';if(this.element.hasClass('pull-right'))this.opens='left';this.drops='down';if(this.element.hasClass('dropup'))this.drops='up';this.buttonClasses='btn btn-sm';this.applyButtonClasses='btn-primary';this.cancelButtonClasses='btn-default';this.locale={direction:'ltr',format:moment.localeData().longDateFormat('L'),separator:' - ',applyLabel:'Apply',cancelLabel:'Cancel',weekLabel:'W',customRangeLabel:'Custom Range',daysOfWeek:moment.weekdaysMin(),monthNames:moment.monthsShort(),firstDay:moment.localeData().firstDayOfWeek()};this.callback=function(){};//some state information
this.isShowing=false;this.leftCalendar={};this.rightCalendar={};//custom options from user
if(typeof options!=='object'||options===null)options={};//allow setting options with data attributes
//data-api options will be overwritten with custom javascript options
options=$.extend(this.element.data(),options);//html template for the picker UI
if(typeof options.template!=='string'&&!(options.template instanceof $))options.template='<div class="daterangepicker">'+'<div class="ranges"></div>'+'<div class="drp-calendar left">'+'<div class="calendar-table"></div>'+'<div class="calendar-time"></div>'+'</div>'+'<div class="drp-calendar right">'+'<div class="calendar-table"></div>'+'<div class="calendar-time"></div>'+'</div>'+'<div class="drp-buttons">'+'<span class="drp-selected"></span>'+'<button class="cancelBtn" type="button"></button>'+'<button class="applyBtn" disabled="disabled" type="button"></button> '+'</div>'+'</div>';this.parentEl=options.parentEl&&$(options.parentEl).length?$(options.parentEl):$(this.parentEl);this.container=$(options.template).appendTo(this.parentEl);//
// handle all the possible options overriding defaults
//
if(typeof options.locale==='object'){if(typeof options.locale.direction==='string')this.locale.direction=options.locale.direction;if(typeof options.locale.format==='string')this.locale.format=options.locale.format;if(typeof options.locale.separator==='string')this.locale.separator=options.locale.separator;if(typeof options.locale.daysOfWeek==='object')this.locale.daysOfWeek=options.locale.daysOfWeek.slice();if(typeof options.locale.monthNames==='object')this.locale.monthNames=options.locale.monthNames.slice();if(typeof options.locale.firstDay==='number')this.locale.firstDay=options.locale.firstDay;if(typeof options.locale.applyLabel==='string')this.locale.applyLabel=options.locale.applyLabel;if(typeof options.locale.cancelLabel==='string')this.locale.cancelLabel=options.locale.cancelLabel;if(typeof options.locale.weekLabel==='string')this.locale.weekLabel=options.locale.weekLabel;if(typeof options.locale.customRangeLabel==='string'){//Support unicode chars in the custom range name.
var elem=document.createElement('textarea');elem.innerHTML=options.locale.customRangeLabel;var rangeHtml=elem.value;this.locale.customRangeLabel=rangeHtml;}}this.container.addClass(this.locale.direction);if(typeof options.startDate==='string')this.startDate=moment(options.startDate,this.locale.format);if(typeof options.endDate==='string')this.endDate=moment(options.endDate,this.locale.format);if(typeof options.minDate==='string')this.minDate=moment(options.minDate,this.locale.format);if(typeof options.maxDate==='string')this.maxDate=moment(options.maxDate,this.locale.format);if(typeof options.startDate==='object')this.startDate=moment(options.startDate);if(typeof options.endDate==='object')this.endDate=moment(options.endDate);if(typeof options.minDate==='object')this.minDate=moment(options.minDate);if(typeof options.maxDate==='object')this.maxDate=moment(options.maxDate);// sanity check for bad options
if(this.minDate&&this.startDate.isBefore(this.minDate))this.startDate=this.minDate.clone();// sanity check for bad options
if(this.maxDate&&this.endDate.isAfter(this.maxDate))this.endDate=this.maxDate.clone();if(typeof options.applyButtonClasses==='string')this.applyButtonClasses=options.applyButtonClasses;if(typeof options.applyClass==='string')//backwards compat
this.applyButtonClasses=options.applyClass;if(typeof options.cancelButtonClasses==='string')this.cancelButtonClasses=options.cancelButtonClasses;if(typeof options.cancelClass==='string')//backwards compat
this.cancelButtonClasses=options.cancelClass;if(typeof options.maxSpan==='object')this.maxSpan=options.maxSpan;if(typeof options.dateLimit==='object')//backwards compat
this.maxSpan=options.dateLimit;if(typeof options.opens==='string')this.opens=options.opens;if(typeof options.drops==='string')this.drops=options.drops;if(typeof options.showWeekNumbers==='boolean')this.showWeekNumbers=options.showWeekNumbers;if(typeof options.showISOWeekNumbers==='boolean')this.showISOWeekNumbers=options.showISOWeekNumbers;if(typeof options.buttonClasses==='string')this.buttonClasses=options.buttonClasses;if(typeof options.buttonClasses==='object')this.buttonClasses=options.buttonClasses.join(' ');if(typeof options.showDropdowns==='boolean')this.showDropdowns=options.showDropdowns;if(typeof options.minYear==='number')this.minYear=options.minYear;if(typeof options.maxYear==='number')this.maxYear=options.maxYear;if(typeof options.showCustomRangeLabel==='boolean')this.showCustomRangeLabel=options.showCustomRangeLabel;if(typeof options.singleDatePicker==='boolean'){this.singleDatePicker=options.singleDatePicker;if(this.singleDatePicker)this.endDate=this.startDate.clone();}if(typeof options.timePicker==='boolean')this.timePicker=options.timePicker;if(typeof options.timePickerSeconds==='boolean')this.timePickerSeconds=options.timePickerSeconds;if(typeof options.timePickerIncrement==='number')this.timePickerIncrement=options.timePickerIncrement;if(typeof options.timePicker24Hour==='boolean')this.timePicker24Hour=options.timePicker24Hour;if(typeof options.autoApply==='boolean')this.autoApply=options.autoApply;if(typeof options.autoUpdateInput==='boolean')this.autoUpdateInput=options.autoUpdateInput;if(typeof options.linkedCalendars==='boolean')this.linkedCalendars=options.linkedCalendars;if(typeof options.isInvalidDate==='function')this.isInvalidDate=options.isInvalidDate;if(typeof options.isCustomDate==='function')this.isCustomDate=options.isCustomDate;if(typeof options.alwaysShowCalendars==='boolean')this.alwaysShowCalendars=options.alwaysShowCalendars;// update day names order to firstDay
if(this.locale.firstDay!=0){var iterator=this.locale.firstDay;while(iterator>0){this.locale.daysOfWeek.push(this.locale.daysOfWeek.shift());iterator--;}}var start,end,range;//if no start/end dates set, check if an input element contains initial values
if(typeof options.startDate==='undefined'&&typeof options.endDate==='undefined'){if($(this.element).is(':text')){var val=$(this.element).val(),split=val.split(this.locale.separator);start=end=null;if(split.length==2){start=moment(split[0],this.locale.format);end=moment(split[1],this.locale.format);}else if(this.singleDatePicker&&val!==""){start=moment(val,this.locale.format);end=moment(val,this.locale.format);}if(start!==null&&end!==null){this.setStartDate(start);this.setEndDate(end);}}}if(typeof options.ranges==='object'){for(range in options.ranges){if(typeof options.ranges[range][0]==='string')start=moment(options.ranges[range][0],this.locale.format);else start=moment(options.ranges[range][0]);if(typeof options.ranges[range][1]==='string')end=moment(options.ranges[range][1],this.locale.format);else end=moment(options.ranges[range][1]);// If the start or end date exceed those allowed by the minDate or maxSpan
// options, shorten the range to the allowable period.
if(this.minDate&&start.isBefore(this.minDate))start=this.minDate.clone();var maxDate=this.maxDate;if(this.maxSpan&&maxDate&&start.clone().add(this.maxSpan).isAfter(maxDate))maxDate=start.clone().add(this.maxSpan);if(maxDate&&end.isAfter(maxDate))end=maxDate.clone();// If the end of the range is before the minimum or the start of the range is
// after the maximum, don't display this range option at all.
if(this.minDate&&end.isBefore(this.minDate,this.timepicker?'minute':'day')||maxDate&&start.isAfter(maxDate,this.timepicker?'minute':'day'))continue;//Support unicode chars in the range names.
var elem=document.createElement('textarea');elem.innerHTML=range;var rangeHtml=elem.value;this.ranges[rangeHtml]=[start,end];}var list='<ul>';for(range in this.ranges){list+='<li data-range-key="'+range+'">'+range+'</li>';}if(this.showCustomRangeLabel){list+='<li data-range-key="'+this.locale.customRangeLabel+'">'+this.locale.customRangeLabel+'</li>';}list+='</ul>';this.container.find('.ranges').prepend(list);}if(typeof cb==='function'){this.callback=cb;}if(!this.timePicker){this.startDate=this.startDate.startOf('day');this.endDate=this.endDate.endOf('day');this.container.find('.calendar-time').hide();}//can't be used together for now
if(this.timePicker&&this.autoApply)this.autoApply=false;if(this.autoApply){this.container.addClass('auto-apply');}if(typeof options.ranges==='object')this.container.addClass('show-ranges');if(this.singleDatePicker){this.container.addClass('single');this.container.find('.drp-calendar.left').addClass('single');this.container.find('.drp-calendar.left').show();this.container.find('.drp-calendar.right').hide();if(!this.timePicker&&this.autoApply){this.container.addClass('auto-apply');}}if(typeof options.ranges==='undefined'&&!this.singleDatePicker||this.alwaysShowCalendars){this.container.addClass('show-calendar');}this.container.addClass('opens'+this.opens);//apply CSS classes and labels to buttons
this.container.find('.applyBtn, .cancelBtn').addClass(this.buttonClasses);if(this.applyButtonClasses.length)this.container.find('.applyBtn').addClass(this.applyButtonClasses);if(this.cancelButtonClasses.length)this.container.find('.cancelBtn').addClass(this.cancelButtonClasses);this.container.find('.applyBtn').html(this.locale.applyLabel);this.container.find('.cancelBtn').html(this.locale.cancelLabel);//
// event listeners
//
this.container.find('.drp-calendar').on('click.daterangepicker','.prev',$.proxy(this.clickPrev,this)).on('click.daterangepicker','.next',$.proxy(this.clickNext,this)).on('mousedown.daterangepicker','td.available',$.proxy(this.clickDate,this)).on('mouseenter.daterangepicker','td.available',$.proxy(this.hoverDate,this)).on('change.daterangepicker','select.yearselect',$.proxy(this.monthOrYearChanged,this)).on('change.daterangepicker','select.monthselect',$.proxy(this.monthOrYearChanged,this)).on('change.daterangepicker','select.hourselect,select.minuteselect,select.secondselect,select.ampmselect',$.proxy(this.timeChanged,this));this.container.find('.ranges').on('click.daterangepicker','li',$.proxy(this.clickRange,this));this.container.find('.drp-buttons').on('click.daterangepicker','button.applyBtn',$.proxy(this.clickApply,this)).on('click.daterangepicker','button.cancelBtn',$.proxy(this.clickCancel,this));if(this.element.is('input')||this.element.is('button')){this.element.on({'click.daterangepicker':$.proxy(this.show,this),'focus.daterangepicker':$.proxy(this.show,this),'keyup.daterangepicker':$.proxy(this.elementChanged,this),'keydown.daterangepicker':$.proxy(this.keydown,this)//IE 11 compatibility
});}else{this.element.on('click.daterangepicker',$.proxy(this.toggle,this));this.element.on('keydown.daterangepicker',$.proxy(this.toggle,this));}//
// if attached to a text input, set the initial value
//
this.updateElement();};DateRangePicker.prototype={constructor:DateRangePicker,setStartDate:function(startDate){if(typeof startDate==='string')this.startDate=moment(startDate,this.locale.format);if(typeof startDate==='object')this.startDate=moment(startDate);if(!this.timePicker)this.startDate=this.startDate.startOf('day');if(this.timePicker&&this.timePickerIncrement)this.startDate.minute(Math.round(this.startDate.minute()/this.timePickerIncrement)*this.timePickerIncrement);if(this.minDate&&this.startDate.isBefore(this.minDate)){this.startDate=this.minDate.clone();if(this.timePicker&&this.timePickerIncrement)this.startDate.minute(Math.round(this.startDate.minute()/this.timePickerIncrement)*this.timePickerIncrement);}if(this.maxDate&&this.startDate.isAfter(this.maxDate)){this.startDate=this.maxDate.clone();if(this.timePicker&&this.timePickerIncrement)this.startDate.minute(Math.floor(this.startDate.minute()/this.timePickerIncrement)*this.timePickerIncrement);}if(!this.isShowing)this.updateElement();this.updateMonthsInView();},setEndDate:function(endDate){if(typeof endDate==='string')this.endDate=moment(endDate,this.locale.format);if(typeof endDate==='object')this.endDate=moment(endDate);if(!this.timePicker)this.endDate=this.endDate.endOf('day');if(this.timePicker&&this.timePickerIncrement)this.endDate.minute(Math.round(this.endDate.minute()/this.timePickerIncrement)*this.timePickerIncrement);if(this.endDate.isBefore(this.startDate))this.endDate=this.startDate.clone();if(this.maxDate&&this.endDate.isAfter(this.maxDate))this.endDate=this.maxDate.clone();if(this.maxSpan&&this.startDate.clone().add(this.maxSpan).isBefore(this.endDate))this.endDate=this.startDate.clone().add(this.maxSpan);this.previousRightTime=this.endDate.clone();this.container.find('.drp-selected').html(this.startDate.format(this.locale.format)+this.locale.separator+this.endDate.format(this.locale.format));if(!this.isShowing)this.updateElement();this.updateMonthsInView();},isInvalidDate:function(){return false;},isCustomDate:function(){return false;},updateView:function(){if(this.timePicker){this.renderTimePicker('left');this.renderTimePicker('right');if(!this.endDate){this.container.find('.right .calendar-time select').prop('disabled',true).addClass('disabled');}else{this.container.find('.right .calendar-time select').prop('disabled',false).removeClass('disabled');}}if(this.endDate)this.container.find('.drp-selected').html(this.startDate.format(this.locale.format)+this.locale.separator+this.endDate.format(this.locale.format));this.updateMonthsInView();this.updateCalendars();this.updateFormInputs();},updateMonthsInView:function(){if(this.endDate){//if both dates are visible already, do nothing
if(!this.singleDatePicker&&this.leftCalendar.month&&this.rightCalendar.month&&(this.startDate.format('YYYY-MM')==this.leftCalendar.month.format('YYYY-MM')||this.startDate.format('YYYY-MM')==this.rightCalendar.month.format('YYYY-MM'))&&(this.endDate.format('YYYY-MM')==this.leftCalendar.month.format('YYYY-MM')||this.endDate.format('YYYY-MM')==this.rightCalendar.month.format('YYYY-MM'))){return;}this.leftCalendar.month=this.startDate.clone().date(2);if(!this.linkedCalendars&&(this.endDate.month()!=this.startDate.month()||this.endDate.year()!=this.startDate.year())){this.rightCalendar.month=this.endDate.clone().date(2);}else{this.rightCalendar.month=this.startDate.clone().date(2).add(1,'month');}}else{if(this.leftCalendar.month.format('YYYY-MM')!=this.startDate.format('YYYY-MM')&&this.rightCalendar.month.format('YYYY-MM')!=this.startDate.format('YYYY-MM')){this.leftCalendar.month=this.startDate.clone().date(2);this.rightCalendar.month=this.startDate.clone().date(2).add(1,'month');}}if(this.maxDate&&this.linkedCalendars&&!this.singleDatePicker&&this.rightCalendar.month>this.maxDate){this.rightCalendar.month=this.maxDate.clone().date(2);this.leftCalendar.month=this.maxDate.clone().date(2).subtract(1,'month');}},updateCalendars:function(){if(this.timePicker){var hour,minute,second;if(this.endDate){hour=parseInt(this.container.find('.left .hourselect').val(),10);minute=parseInt(this.container.find('.left .minuteselect').val(),10);if(isNaN(minute)){minute=parseInt(this.container.find('.left .minuteselect option:last').val(),10);}second=this.timePickerSeconds?parseInt(this.container.find('.left .secondselect').val(),10):0;if(!this.timePicker24Hour){var ampm=this.container.find('.left .ampmselect').val();if(ampm==='PM'&&hour<12)hour+=12;if(ampm==='AM'&&hour===12)hour=0;}}else{hour=parseInt(this.container.find('.right .hourselect').val(),10);minute=parseInt(this.container.find('.right .minuteselect').val(),10);if(isNaN(minute)){minute=parseInt(this.container.find('.right .minuteselect option:last').val(),10);}second=this.timePickerSeconds?parseInt(this.container.find('.right .secondselect').val(),10):0;if(!this.timePicker24Hour){var ampm=this.container.find('.right .ampmselect').val();if(ampm==='PM'&&hour<12)hour+=12;if(ampm==='AM'&&hour===12)hour=0;}}this.leftCalendar.month.hour(hour).minute(minute).second(second);this.rightCalendar.month.hour(hour).minute(minute).second(second);}this.renderCalendar('left');this.renderCalendar('right');//highlight any predefined range matching the current start and end dates
this.container.find('.ranges li').removeClass('active');if(this.endDate==null)return;this.calculateChosenLabel();},renderCalendar:function(side){//
// Build the matrix of dates that will populate the calendar
//
var calendar=side=='left'?this.leftCalendar:this.rightCalendar;var month=calendar.month.month();var year=calendar.month.year();var hour=calendar.month.hour();var minute=calendar.month.minute();var second=calendar.month.second();var daysInMonth=moment([year,month]).daysInMonth();var firstDay=moment([year,month,1]);var lastDay=moment([year,month,daysInMonth]);var lastMonth=moment(firstDay).subtract(1,'month').month();var lastYear=moment(firstDay).subtract(1,'month').year();var daysInLastMonth=moment([lastYear,lastMonth]).daysInMonth();var dayOfWeek=firstDay.day();//initialize a 6 rows x 7 columns array for the calendar
var calendar=[];calendar.firstDay=firstDay;calendar.lastDay=lastDay;for(var i=0;i<6;i++){calendar[i]=[];}//populate the calendar with date objects
var startDay=daysInLastMonth-dayOfWeek+this.locale.firstDay+1;if(startDay>daysInLastMonth)startDay-=7;if(dayOfWeek==this.locale.firstDay)startDay=daysInLastMonth-6;var curDate=moment([lastYear,lastMonth,startDay,12,minute,second]);var col,row;for(var i=0,col=0,row=0;i<42;i++,col++,curDate=moment(curDate).add(24,'hour')){if(i>0&&col%7===0){col=0;row++;}calendar[row][col]=curDate.clone().hour(hour).minute(minute).second(second);curDate.hour(12);if(this.minDate&&calendar[row][col].format('YYYY-MM-DD')==this.minDate.format('YYYY-MM-DD')&&calendar[row][col].isBefore(this.minDate)&&side=='left'){calendar[row][col]=this.minDate.clone();}if(this.maxDate&&calendar[row][col].format('YYYY-MM-DD')==this.maxDate.format('YYYY-MM-DD')&&calendar[row][col].isAfter(this.maxDate)&&side=='right'){calendar[row][col]=this.maxDate.clone();}}//make the calendar object available to hoverDate/clickDate
if(side=='left'){this.leftCalendar.calendar=calendar;}else{this.rightCalendar.calendar=calendar;}//
// Display the calendar
//
var minDate=side=='left'?this.minDate:this.startDate;var maxDate=this.maxDate;side=='left'?this.startDate:this.endDate;this.locale.direction=='ltr'?{}:{};var html='<table class="table-condensed">';html+='<thead>';html+='<tr>';// add empty cell for week number
if(this.showWeekNumbers||this.showISOWeekNumbers)html+='<th></th>';if((!minDate||minDate.isBefore(calendar.firstDay))&&(!this.linkedCalendars||side=='left')){html+='<th class="prev available"><span></span></th>';}else{html+='<th></th>';}var dateHtml=this.locale.monthNames[calendar[1][1].month()]+calendar[1][1].format(" YYYY");if(this.showDropdowns){var currentMonth=calendar[1][1].month();var currentYear=calendar[1][1].year();var maxYear=maxDate&&maxDate.year()||this.maxYear;var minYear=minDate&&minDate.year()||this.minYear;var inMinYear=currentYear==minYear;var inMaxYear=currentYear==maxYear;var monthHtml='<select class="monthselect">';for(var m=0;m<12;m++){if((!inMinYear||minDate&&m>=minDate.month())&&(!inMaxYear||maxDate&&m<=maxDate.month())){monthHtml+="<option value='"+m+"'"+(m===currentMonth?" selected='selected'":"")+">"+this.locale.monthNames[m]+"</option>";}else{monthHtml+="<option value='"+m+"'"+(m===currentMonth?" selected='selected'":"")+" disabled='disabled'>"+this.locale.monthNames[m]+"</option>";}}monthHtml+="</select>";var yearHtml='<select class="yearselect">';for(var y=minYear;y<=maxYear;y++){yearHtml+='<option value="'+y+'"'+(y===currentYear?' selected="selected"':'')+'>'+y+'</option>';}yearHtml+='</select>';dateHtml=monthHtml+yearHtml;}html+='<th colspan="5" class="month">'+dateHtml+'</th>';if((!maxDate||maxDate.isAfter(calendar.lastDay))&&(!this.linkedCalendars||side=='right'||this.singleDatePicker)){html+='<th class="next available"><span></span></th>';}else{html+='<th></th>';}html+='</tr>';html+='<tr>';// add week number label
if(this.showWeekNumbers||this.showISOWeekNumbers)html+='<th class="week">'+this.locale.weekLabel+'</th>';$.each(this.locale.daysOfWeek,function(index,dayOfWeek){html+='<th>'+dayOfWeek+'</th>';});html+='</tr>';html+='</thead>';html+='<tbody>';//adjust maxDate to reflect the maxSpan setting in order to
//grey out end dates beyond the maxSpan
if(this.endDate==null&&this.maxSpan){var maxLimit=this.startDate.clone().add(this.maxSpan).endOf('day');if(!maxDate||maxLimit.isBefore(maxDate)){maxDate=maxLimit;}}for(var row=0;row<6;row++){html+='<tr>';// add week number
if(this.showWeekNumbers)html+='<td class="week">'+calendar[row][0].week()+'</td>';else if(this.showISOWeekNumbers)html+='<td class="week">'+calendar[row][0].isoWeek()+'</td>';for(var col=0;col<7;col++){var classes=[];//highlight today's date
if(calendar[row][col].isSame(new Date(),"day"))classes.push('today');//highlight weekends
if(calendar[row][col].isoWeekday()>5)classes.push('weekend');//grey out the dates in other months displayed at beginning and end of this calendar
if(calendar[row][col].month()!=calendar[1][1].month())classes.push('off','ends');//don't allow selection of dates before the minimum date
if(this.minDate&&calendar[row][col].isBefore(this.minDate,'day'))classes.push('off','disabled');//don't allow selection of dates after the maximum date
if(maxDate&&calendar[row][col].isAfter(maxDate,'day'))classes.push('off','disabled');//don't allow selection of date if a custom function decides it's invalid
if(this.isInvalidDate(calendar[row][col]))classes.push('off','disabled');//highlight the currently selected start date
if(calendar[row][col].format('YYYY-MM-DD')==this.startDate.format('YYYY-MM-DD'))classes.push('active','start-date');//highlight the currently selected end date
if(this.endDate!=null&&calendar[row][col].format('YYYY-MM-DD')==this.endDate.format('YYYY-MM-DD'))classes.push('active','end-date');//highlight dates in-between the selected dates
if(this.endDate!=null&&calendar[row][col]>this.startDate&&calendar[row][col]<this.endDate)classes.push('in-range');//apply custom classes for this date
var isCustom=this.isCustomDate(calendar[row][col]);if(isCustom!==false){if(typeof isCustom==='string')classes.push(isCustom);else Array.prototype.push.apply(classes,isCustom);}var cname='',disabled=false;for(var i=0;i<classes.length;i++){cname+=classes[i]+' ';if(classes[i]=='disabled')disabled=true;}if(!disabled)cname+='available';html+='<td class="'+cname.replace(/^\s+|\s+$/g,'')+'" data-title="'+'r'+row+'c'+col+'">'+calendar[row][col].date()+'</td>';}html+='</tr>';}html+='</tbody>';html+='</table>';this.container.find('.drp-calendar.'+side+' .calendar-table').html(html);},renderTimePicker:function(side){// Don't bother updating the time picker if it's currently disabled
// because an end date hasn't been clicked yet
if(side=='right'&&!this.endDate)return;var html,selected,minDate,maxDate=this.maxDate;if(this.maxSpan&&(!this.maxDate||this.startDate.clone().add(this.maxSpan).isBefore(this.maxDate)))maxDate=this.startDate.clone().add(this.maxSpan);if(side=='left'){selected=this.startDate.clone();minDate=this.minDate;}else if(side=='right'){selected=this.endDate.clone();minDate=this.startDate;//Preserve the time already selected
var timeSelector=this.container.find('.drp-calendar.right .calendar-time');if(timeSelector.html()!=''){selected.hour(!isNaN(selected.hour())?selected.hour():timeSelector.find('.hourselect option:selected').val());selected.minute(!isNaN(selected.minute())?selected.minute():timeSelector.find('.minuteselect option:selected').val());selected.second(!isNaN(selected.second())?selected.second():timeSelector.find('.secondselect option:selected').val());if(!this.timePicker24Hour){var ampm=timeSelector.find('.ampmselect option:selected').val();if(ampm==='PM'&&selected.hour()<12)selected.hour(selected.hour()+12);if(ampm==='AM'&&selected.hour()===12)selected.hour(0);}}if(selected.isBefore(this.startDate))selected=this.startDate.clone();if(maxDate&&selected.isAfter(maxDate))selected=maxDate.clone();}//
// hours
//
html='<select class="hourselect">';var start=this.timePicker24Hour?0:1;var end=this.timePicker24Hour?23:12;for(var i=start;i<=end;i++){var i_in_24=i;if(!this.timePicker24Hour)i_in_24=selected.hour()>=12?i==12?12:i+12:i==12?0:i;var time=selected.clone().hour(i_in_24);var disabled=false;if(minDate&&time.minute(59).isBefore(minDate))disabled=true;if(maxDate&&time.minute(0).isAfter(maxDate))disabled=true;if(i_in_24==selected.hour()&&!disabled){html+='<option value="'+i+'" selected="selected">'+i+'</option>';}else if(disabled){html+='<option value="'+i+'" disabled="disabled" class="disabled">'+i+'</option>';}else{html+='<option value="'+i+'">'+i+'</option>';}}html+='</select> ';//
// minutes
//
html+=': <select class="minuteselect">';for(var i=0;i<60;i+=this.timePickerIncrement){var padded=i<10?'0'+i:i;var time=selected.clone().minute(i);var disabled=false;if(minDate&&time.second(59).isBefore(minDate))disabled=true;if(maxDate&&time.second(0).isAfter(maxDate))disabled=true;if(selected.minute()==i&&!disabled){html+='<option value="'+i+'" selected="selected">'+padded+'</option>';}else if(disabled){html+='<option value="'+i+'" disabled="disabled" class="disabled">'+padded+'</option>';}else{html+='<option value="'+i+'">'+padded+'</option>';}}html+='</select> ';//
// seconds
//
if(this.timePickerSeconds){html+=': <select class="secondselect">';for(var i=0;i<60;i++){var padded=i<10?'0'+i:i;var time=selected.clone().second(i);var disabled=false;if(minDate&&time.isBefore(minDate))disabled=true;if(maxDate&&time.isAfter(maxDate))disabled=true;if(selected.second()==i&&!disabled){html+='<option value="'+i+'" selected="selected">'+padded+'</option>';}else if(disabled){html+='<option value="'+i+'" disabled="disabled" class="disabled">'+padded+'</option>';}else{html+='<option value="'+i+'">'+padded+'</option>';}}html+='</select> ';}//
// AM/PM
//
if(!this.timePicker24Hour){html+='<select class="ampmselect">';var am_html='';var pm_html='';if(minDate&&selected.clone().hour(12).minute(0).second(0).isBefore(minDate))am_html=' disabled="disabled" class="disabled"';if(maxDate&&selected.clone().hour(0).minute(0).second(0).isAfter(maxDate))pm_html=' disabled="disabled" class="disabled"';if(selected.hour()>=12){html+='<option value="AM"'+am_html+'>AM</option><option value="PM" selected="selected"'+pm_html+'>PM</option>';}else{html+='<option value="AM" selected="selected"'+am_html+'>AM</option><option value="PM"'+pm_html+'>PM</option>';}html+='</select>';}this.container.find('.drp-calendar.'+side+' .calendar-time').html(html);},updateFormInputs:function(){if(this.singleDatePicker||this.endDate&&(this.startDate.isBefore(this.endDate)||this.startDate.isSame(this.endDate))){this.container.find('button.applyBtn').prop('disabled',false);}else{this.container.find('button.applyBtn').prop('disabled',true);}},move:function(){var parentOffset={top:0,left:0},containerTop,drops=this.drops;var parentRightEdge=$(window).width();if(!this.parentEl.is('body')){parentOffset={top:this.parentEl.offset().top-this.parentEl.scrollTop(),left:this.parentEl.offset().left-this.parentEl.scrollLeft()};parentRightEdge=this.parentEl[0].clientWidth+this.parentEl.offset().left;}switch(drops){case'auto':containerTop=this.element.offset().top+this.element.outerHeight()-parentOffset.top;if(containerTop+this.container.outerHeight()>=this.parentEl[0].scrollHeight){containerTop=this.element.offset().top-this.container.outerHeight()-parentOffset.top;drops='up';}break;case'up':containerTop=this.element.offset().top-this.container.outerHeight()-parentOffset.top;break;default:containerTop=this.element.offset().top+this.element.outerHeight()-parentOffset.top;break;}// Force the container to it's actual width
this.container.css({top:0,left:0,right:'auto'});var containerWidth=this.container.outerWidth();this.container.toggleClass('drop-up',drops=='up');if(this.opens=='left'){var containerRight=parentRightEdge-this.element.offset().left-this.element.outerWidth();if(containerWidth+containerRight>$(window).width()){this.container.css({top:containerTop,right:'auto',left:9});}else{this.container.css({top:containerTop,right:containerRight,left:'auto'});}}else if(this.opens=='center'){var containerLeft=this.element.offset().left-parentOffset.left+this.element.outerWidth()/2-containerWidth/2;if(containerLeft<0){this.container.css({top:containerTop,right:'auto',left:9});}else if(containerLeft+containerWidth>$(window).width()){this.container.css({top:containerTop,left:'auto',right:0});}else{this.container.css({top:containerTop,left:containerLeft,right:'auto'});}}else{var containerLeft=this.element.offset().left-parentOffset.left;if(containerLeft+containerWidth>$(window).width()){this.container.css({top:containerTop,left:'auto',right:0});}else{this.container.css({top:containerTop,left:containerLeft,right:'auto'});}}},show:function(e){if(this.isShowing)return;// Create a click proxy that is private to this instance of datepicker, for unbinding
this._outsideClickProxy=$.proxy(function(e){this.outsideClick(e);},this);// Bind global datepicker mousedown for hiding and
$(document).on('mousedown.daterangepicker',this._outsideClickProxy)// also support mobile devices
.on('touchend.daterangepicker',this._outsideClickProxy)// also explicitly play nice with Bootstrap dropdowns, which stopPropagation when clicking them
.on('click.daterangepicker','[data-toggle=dropdown]',this._outsideClickProxy)// and also close when focus changes to outside the picker (eg. tabbing between controls)
.on('focusin.daterangepicker',this._outsideClickProxy);// Reposition the picker if the window is resized while it's open
$(window).on('resize.daterangepicker',$.proxy(function(e){this.move(e);},this));this.oldStartDate=this.startDate.clone();this.oldEndDate=this.endDate.clone();this.previousRightTime=this.endDate.clone();this.updateView();this.container.show();this.move();this.element.trigger('show.daterangepicker',this);this.isShowing=true;},hide:function(e){if(!this.isShowing)return;//incomplete date selection, revert to last values
if(!this.endDate){this.startDate=this.oldStartDate.clone();this.endDate=this.oldEndDate.clone();}//if a new date range was selected, invoke the user callback function
if(!this.startDate.isSame(this.oldStartDate)||!this.endDate.isSame(this.oldEndDate))this.callback(this.startDate.clone(),this.endDate.clone(),this.chosenLabel);//if picker is attached to a text input, update it
this.updateElement();$(document).off('.daterangepicker');$(window).off('.daterangepicker');this.container.hide();this.element.trigger('hide.daterangepicker',this);this.isShowing=false;},toggle:function(e){if(this.isShowing){this.hide();}else{this.show();}},outsideClick:function(e){var target=$(e.target);// if the page is clicked anywhere except within the daterangerpicker/button
// itself then call this.hide()
if(// ie modal dialog fix
e.type=="focusin"||target.closest(this.element).length||target.closest(this.container).length||target.closest('.calendar-table').length)return;this.hide();this.element.trigger('outsideClick.daterangepicker',this);},showCalendars:function(){this.container.addClass('show-calendar');this.move();this.element.trigger('showCalendar.daterangepicker',this);},hideCalendars:function(){this.container.removeClass('show-calendar');this.element.trigger('hideCalendar.daterangepicker',this);},clickRange:function(e){var label=e.target.getAttribute('data-range-key');this.chosenLabel=label;if(label==this.locale.customRangeLabel){this.showCalendars();}else{var dates=this.ranges[label];this.startDate=dates[0];this.endDate=dates[1];if(!this.timePicker){this.startDate.startOf('day');this.endDate.endOf('day');}if(!this.alwaysShowCalendars)this.hideCalendars();this.clickApply();}},clickPrev:function(e){var cal=$(e.target).parents('.drp-calendar');if(cal.hasClass('left')){this.leftCalendar.month.subtract(1,'month');if(this.linkedCalendars)this.rightCalendar.month.subtract(1,'month');}else{this.rightCalendar.month.subtract(1,'month');}this.updateCalendars();},clickNext:function(e){var cal=$(e.target).parents('.drp-calendar');if(cal.hasClass('left')){this.leftCalendar.month.add(1,'month');}else{this.rightCalendar.month.add(1,'month');if(this.linkedCalendars)this.leftCalendar.month.add(1,'month');}this.updateCalendars();},hoverDate:function(e){//ignore dates that can't be selected
if(!$(e.target).hasClass('available'))return;var title=$(e.target).attr('data-title');var row=title.substr(1,1);var col=title.substr(3,1);var cal=$(e.target).parents('.drp-calendar');var date=cal.hasClass('left')?this.leftCalendar.calendar[row][col]:this.rightCalendar.calendar[row][col];//highlight the dates between the start date and the date being hovered as a potential end date
var leftCalendar=this.leftCalendar;var rightCalendar=this.rightCalendar;var startDate=this.startDate;if(!this.endDate){this.container.find('.drp-calendar tbody td').each(function(index,el){//skip week numbers, only look at dates
if($(el).hasClass('week'))return;var title=$(el).attr('data-title');var row=title.substr(1,1);var col=title.substr(3,1);var cal=$(el).parents('.drp-calendar');var dt=cal.hasClass('left')?leftCalendar.calendar[row][col]:rightCalendar.calendar[row][col];if(dt.isAfter(startDate)&&dt.isBefore(date)||dt.isSame(date,'day')){$(el).addClass('in-range');}else{$(el).removeClass('in-range');}});}},clickDate:function(e){if(!$(e.target).hasClass('available'))return;var title=$(e.target).attr('data-title');var row=title.substr(1,1);var col=title.substr(3,1);var cal=$(e.target).parents('.drp-calendar');var date=cal.hasClass('left')?this.leftCalendar.calendar[row][col]:this.rightCalendar.calendar[row][col];//
// this function needs to do a few things:
// * alternate between selecting a start and end date for the range,
// * if the time picker is enabled, apply the hour/minute/second from the select boxes to the clicked date
// * if autoapply is enabled, and an end date was chosen, apply the selection
// * if single date picker mode, and time picker isn't enabled, apply the selection immediately
// * if one of the inputs above the calendars was focused, cancel that manual input
//
if(this.endDate||date.isBefore(this.startDate,'day')){//picking start
if(this.timePicker){var hour=parseInt(this.container.find('.left .hourselect').val(),10);if(!this.timePicker24Hour){var ampm=this.container.find('.left .ampmselect').val();if(ampm==='PM'&&hour<12)hour+=12;if(ampm==='AM'&&hour===12)hour=0;}var minute=parseInt(this.container.find('.left .minuteselect').val(),10);if(isNaN(minute)){minute=parseInt(this.container.find('.left .minuteselect option:last').val(),10);}var second=this.timePickerSeconds?parseInt(this.container.find('.left .secondselect').val(),10):0;date=date.clone().hour(hour).minute(minute).second(second);}this.endDate=null;this.setStartDate(date.clone());}else if(!this.endDate&&date.isBefore(this.startDate)){//special case: clicking the same date for start/end,
//but the time of the end date is before the start date
this.setEndDate(this.startDate.clone());}else{// picking end
if(this.timePicker){var hour=parseInt(this.container.find('.right .hourselect').val(),10);if(!this.timePicker24Hour){var ampm=this.container.find('.right .ampmselect').val();if(ampm==='PM'&&hour<12)hour+=12;if(ampm==='AM'&&hour===12)hour=0;}var minute=parseInt(this.container.find('.right .minuteselect').val(),10);if(isNaN(minute)){minute=parseInt(this.container.find('.right .minuteselect option:last').val(),10);}var second=this.timePickerSeconds?parseInt(this.container.find('.right .secondselect').val(),10):0;date=date.clone().hour(hour).minute(minute).second(second);}this.setEndDate(date.clone());if(this.autoApply){this.calculateChosenLabel();this.clickApply();}}if(this.singleDatePicker){this.setEndDate(this.startDate);if(!this.timePicker&&this.autoApply)this.clickApply();}this.updateView();//This is to cancel the blur event handler if the mouse was in one of the inputs
e.stopPropagation();},calculateChosenLabel:function(){var customRange=true;var i=0;for(var range in this.ranges){if(this.timePicker){var format=this.timePickerSeconds?"YYYY-MM-DD HH:mm:ss":"YYYY-MM-DD HH:mm";//ignore times when comparing dates if time picker seconds is not enabled
if(this.startDate.format(format)==this.ranges[range][0].format(format)&&this.endDate.format(format)==this.ranges[range][1].format(format)){customRange=false;this.chosenLabel=this.container.find('.ranges li:eq('+i+')').addClass('active').attr('data-range-key');break;}}else{//ignore times when comparing dates if time picker is not enabled
if(this.startDate.format('YYYY-MM-DD')==this.ranges[range][0].format('YYYY-MM-DD')&&this.endDate.format('YYYY-MM-DD')==this.ranges[range][1].format('YYYY-MM-DD')){customRange=false;this.chosenLabel=this.container.find('.ranges li:eq('+i+')').addClass('active').attr('data-range-key');break;}}i++;}if(customRange){if(this.showCustomRangeLabel){this.chosenLabel=this.container.find('.ranges li:last').addClass('active').attr('data-range-key');}else{this.chosenLabel=null;}this.showCalendars();}},clickApply:function(e){this.hide();this.element.trigger('apply.daterangepicker',this);},clickCancel:function(e){this.startDate=this.oldStartDate;this.endDate=this.oldEndDate;this.hide();this.element.trigger('cancel.daterangepicker',this);},monthOrYearChanged:function(e){var isLeft=$(e.target).closest('.drp-calendar').hasClass('left'),leftOrRight=isLeft?'left':'right',cal=this.container.find('.drp-calendar.'+leftOrRight);// Month must be Number for new moment versions
var month=parseInt(cal.find('.monthselect').val(),10);var year=cal.find('.yearselect').val();if(!isLeft){if(year<this.startDate.year()||year==this.startDate.year()&&month<this.startDate.month()){month=this.startDate.month();year=this.startDate.year();}}if(this.minDate){if(year<this.minDate.year()||year==this.minDate.year()&&month<this.minDate.month()){month=this.minDate.month();year=this.minDate.year();}}if(this.maxDate){if(year>this.maxDate.year()||year==this.maxDate.year()&&month>this.maxDate.month()){month=this.maxDate.month();year=this.maxDate.year();}}if(isLeft){this.leftCalendar.month.month(month).year(year);if(this.linkedCalendars)this.rightCalendar.month=this.leftCalendar.month.clone().add(1,'month');}else{this.rightCalendar.month.month(month).year(year);if(this.linkedCalendars)this.leftCalendar.month=this.rightCalendar.month.clone().subtract(1,'month');}this.updateCalendars();},timeChanged:function(e){var cal=$(e.target).closest('.drp-calendar'),isLeft=cal.hasClass('left');var hour=parseInt(cal.find('.hourselect').val(),10);var minute=parseInt(cal.find('.minuteselect').val(),10);if(isNaN(minute)){minute=parseInt(cal.find('.minuteselect option:last').val(),10);}var second=this.timePickerSeconds?parseInt(cal.find('.secondselect').val(),10):0;if(!this.timePicker24Hour){var ampm=cal.find('.ampmselect').val();if(ampm==='PM'&&hour<12)hour+=12;if(ampm==='AM'&&hour===12)hour=0;}if(isLeft){var start=this.startDate.clone();start.hour(hour);start.minute(minute);start.second(second);this.setStartDate(start);if(this.singleDatePicker){this.endDate=this.startDate.clone();}else if(this.endDate&&this.endDate.format('YYYY-MM-DD')==start.format('YYYY-MM-DD')&&this.endDate.isBefore(start)){this.setEndDate(start.clone());}}else if(this.endDate){var end=this.endDate.clone();end.hour(hour);end.minute(minute);end.second(second);this.setEndDate(end);}//update the calendars so all clickable dates reflect the new time component
this.updateCalendars();//update the form inputs above the calendars with the new time
this.updateFormInputs();//re-render the time pickers because changing one selection can affect what's enabled in another
this.renderTimePicker('left');this.renderTimePicker('right');},elementChanged:function(){if(!this.element.is('input'))return;if(!this.element.val().length)return;var dateString=this.element.val().split(this.locale.separator),start=null,end=null;if(dateString.length===2){start=moment(dateString[0],this.locale.format);end=moment(dateString[1],this.locale.format);}if(this.singleDatePicker||start===null||end===null){start=moment(this.element.val(),this.locale.format);end=start;}if(!start.isValid()||!end.isValid())return;this.setStartDate(start);this.setEndDate(end);this.updateView();},keydown:function(e){//hide on tab or enter
if(e.keyCode===9||e.keyCode===13){this.hide();}//hide on esc and prevent propagation
if(e.keyCode===27){e.preventDefault();e.stopPropagation();this.hide();}},updateElement:function(){if(this.element.is('input')&&this.autoUpdateInput){var newValue=this.startDate.format(this.locale.format);if(!this.singleDatePicker){newValue+=this.locale.separator+this.endDate.format(this.locale.format);}if(newValue!==this.element.val()){this.element.val(newValue).trigger('change');}}},remove:function(){this.container.remove();this.element.off('.daterangepicker');this.element.removeData();}};$.fn.daterangepicker=function(options,callback){var implementOptions=$.extend(true,{},$.fn.daterangepicker.defaultOptions,options);this.each(function(){var el=$(this);if(el.data('daterangepicker'))el.data('daterangepicker').remove();el.data('daterangepicker',new DateRangePicker(el,implementOptions,callback));});return this;};return DateRangePicker;});(function($,m){/*
       * Maps PHP date() format to moment.js equivalent
       * https://www.php.net/manual/en/datetime.format.php
       * http://momentjs.com/docs/#/displaying/format/
       */const formatEx=/[dDjlNSwzWFmMntLoYyaABgGhHisueIOPTZcrU]/g,formatMap={d:'DD',D:'ddd',j:'D',l:'dddd',N:'E',S:function(){return'['+this.format('Do').replace(/\d*/g,'')+']';},w:'d',z:function(){return this.format('DDD')-1;},W:'W',F:'MMMM',m:'MM',M:'MMM',n:'M',t:function(){return this.daysInMonth();},L:function(){return this.isLeapYear()?1:0;},o:'GGGG',Y:'YYYY',y:'YY',a:'a',A:'A',B:function(){var utc=this.clone().utc(),swatch=(utc.hours()+1)%24+utc.minutes()/60+utc.seconds()/3600;return Math.floor(swatch*1000/24);},g:'h',G:'H',h:'hh',H:'HH',i:'mm',s:'ss',u:'',// Microseconds aren't supported by JS Date object: https://github.com/moment/moment/issues/3196
e:'',// No equivalent of Timezone names.
I:function(){return this.isDST()?1:0;},O:'ZZ',P:'Z',T:'',// [z, zz] options are deprecated, only work when moment-timezone addon is used.
Z:function(){return parseInt(this.format('ZZ'),10)*36;},c:'YYYY-MM-DD[T]HH:mm:ssZ',r:'ddd, DD MMM YYYY HH:mm:ss ZZ',U:'X'};m.fn.formatSupportPal=function(){var that=this,format=$('meta[name=date_format]').prop('content');return this.format(format.replace(formatEx,function(phpStr){return typeof formatMap[phpStr]==='function'?formatMap[phpStr].call(that):formatMap[phpStr];}));};// Construct predefined date ranges for easy access.
let ranges={};ranges[Lang.get('general.today')]=[m(),m()];ranges[Lang.get('general.yesterday')]=[m().subtract(1,'days'),m().subtract(1,'days')];ranges[Lang.get('general.last_7_days')]=[m().subtract(6,'days'),m()];ranges[Lang.get('general.last_30_days')]=[m().subtract(29,'days'),m()];ranges[Lang.get('general.this_month')]=[m().startOf('month'),m().endOf('month')];ranges[Lang.get('general.last_month')]=[m().subtract(1,'month').startOf('month'),m().subtract(1,'month').endOf('month')];// Set date range picker default options.
$.fn.daterangepicker.defaultOptions={autoApply:true,maxDate:m().endOf('day'),minYear:2000,alwaysShowCalendars:true,showDropdowns:true,ranges:ranges,showCustomRangeLabel:false,'locale':{'applyLabel':Lang.get('general.apply'),'cancelLabel':Lang.get('general.clear'),'separator':Lang.get('general.range_separator'),'daysOfWeek':[Lang.get('general.sun'),Lang.get('general.mon'),Lang.get('general.tue'),Lang.get('general.wed'),Lang.get('general.thu'),Lang.get('general.fri'),Lang.get('general.sat')],'monthNames':[Lang.get('general.jan'),Lang.get('general.feb'),Lang.get('general.mar'),Lang.get('general.apr'),Lang.get('general.may'),Lang.get('general.jun'),Lang.get('general.jul'),Lang.get('general.aug'),Lang.get('general.sep'),Lang.get('general.oct'),Lang.get('general.nov'),Lang.get('general.dec')]}};})(jQuery,moment);var Timeframe=/** @class */function(){function Timeframe(){this.callback=null;this.initDatePicker();this.registerListeners();this.select($('.sp-report-timeframe > .sp-option.default'));}Timeframe.prototype.onSelect=function(c){this.callback=c;};Timeframe.prototype.setStartTimestamp=function(timestamp){this.startTimestamp=timestamp;};Timeframe.prototype.getStartTimestamp=function(){return this.startTimestamp;};Timeframe.prototype.setEndTimestamp=function(timestamp){this.endTimestamp=timestamp;};Timeframe.prototype.getEndTimestamp=function(){return this.endTimestamp;};Timeframe.prototype.initDatePicker=function(){var instance=this,$elm=$('.sp-filter-datepicker'),opts={autoApply:false};$elm.daterangepicker(opts);$elm.on('apply.daterangepicker',function(ev,picker){$('.sp-report-timeframe > .sp-option.relative').removeClass('xl:sp-inline-block');$('.sp-report-timeframe .sp-dropdown-container').addClass('sp-hidden');$('.sp-filter-datepicker.custom').addClass('selected');$('.sp-report-timeframe').find('.sp-filter-datepicker-text-wrapper').addClass('sm:sp-inline-block').find('.sp-filter-datepicker-text').text(picker.startDate.formatSupportPal()+Lang.get('general.range_separator')+picker.endDate.formatSupportPal());instance.runCallback(picker.startDate.unix(),picker.endDate.unix());});$elm.on('cancel.daterangepicker',function(ev,picker){$('.sp-report-timeframe > .sp-option.relative').addClass('xl:sp-inline-block');$(' .sp-report-timeframe .sp-dropdown-container').removeClass('sp-hidden');$('.sp-filter-datepicker.custom').removeClass('selected');$('.sp-report-timeframe').find('.sp-filter-datepicker-text-wrapper').removeClass('sm:sp-inline-block').find('.sp-filter-datepicker-text').text('');instance.select($('.sp-report-timeframe > .sp-option.default'));});};Timeframe.prototype.registerListeners=function(){var instance=this;$('.sp-report-timeframe .sp-option.relative').on('click',function(){instance.select($(this));});};Timeframe.prototype.select=function($elm){var time=$elm.text().trim();$('.sp-report-timeframe').find('.sp-option.selected:not(.sp-action)').removeClass('selected');$('.sp-report-timeframe').find('.sp-option[data-time='+time+']').addClass('selected');$('.sp-timeframe-selected').text(time);this.runCallback($elm.data('start-time'),$elm.data('end-time'));};Timeframe.prototype.runCallback=function(s,e){this.startTimestamp=s;this.endTimestamp=e;if(this.callback!==null){this.callback.call(this);}};return Timeframe;}();var Filters=/** @class */function(){function Filters(timeframe){this.data={};this.timeframe=timeframe;}Filters.prototype.setData=function(data){this.data=data;};Filters.prototype.set=function(key,value){this.data[key]=value;return this;};Filters.prototype.unset=function(key){delete this.data[key];};Filters.prototype.all=function(){var data=Object.create(this.data);if(this.timeframe.getStartTimestamp()!==undefined){data.startTimestamp=this.timeframe.getStartTimestamp();}if(this.timeframe.getEndTimestamp()!==undefined){data.endTimestamp=this.timeframe.getEndTimestamp();}$.each($('.sp-report-filtering :input').serializeArray(),function(index,value){data[value.name]=value.value;});return data;};return Filters;}();var TableCard=/** @class */function(_super){__extends(TableCard,_super);function TableCard(filters,$elm){var _this=_super.call(this,filters,$elm)||this;_this.table=null;_this.registerDataTableApis();_this.registerListeners();return _this;}TableCard.prototype.refresh=function(){if(this.table===null){var $tableCard=this.$elm.find('.table-card');this.table=new DataTable('#'+$tableCard.data('id'),$.extend(true,{},$tableCard.data('options'),this.opts));this.$elm.find('.table-card, .loading').toggle();}return this.table.reloadAsync();};TableCard.prototype.print=function(){_super.prototype.setOptions.call(this,{pageLength:100});_super.prototype.print.call(this);};TableCard.prototype.registerDataTableApis=function(){$.fn.dataTable.Api.register('reloadAsync',function(resetPaging){var dfd=$.Deferred();this.ajax.reload(function(json){return dfd.resolve(json);},resetPaging);return dfd.promise();});};TableCard.prototype.registerListeners=function(){var instance=this;this.$elm.find('.sp-dataTable').on('preXhr.dt',function(e,settings,data){$.extend(data,instance.filters.all());});this.$elm.find('.sp-dataTable').on('click','.underlying-drill-in',function(){UnderlyingData.show(url($(this).data('underlyingView'),instance.filters.all()),url($(this).data('underlyingExport'),instance.filters.all()));});};return TableCard;}(Card);/*!
   * @kurkle/color v0.3.2
   * https://github.com/kurkle/color#readme
   * (c) 2023 Jukka Kurkela
   * Released under the MIT License
   */function round(v){return v+0.5|0;}const lim=(v,l,h)=>Math.max(Math.min(v,h),l);function p2b(v){return lim(round(v*2.55),0,255);}function n2b(v){return lim(round(v*255),0,255);}function b2n(v){return lim(round(v/2.55)/100,0,1);}function n2p(v){return lim(round(v*100),0,100);}const map$1={0:0,1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,A:10,B:11,C:12,D:13,E:14,F:15,a:10,b:11,c:12,d:13,e:14,f:15};const hex$1=[...'0123456789ABCDEF'];const h1=b=>hex$1[b&0xF];const h2=b=>hex$1[(b&0xF0)>>4]+hex$1[b&0xF];const eq=b=>(b&0xF0)>>4===(b&0xF);const isShort=v=>eq(v.r)&&eq(v.g)&&eq(v.b)&&eq(v.a);function hexParse(str){var len=str.length;var ret;if(str[0]==='#'){if(len===4||len===5){ret={r:255&map$1[str[1]]*17,g:255&map$1[str[2]]*17,b:255&map$1[str[3]]*17,a:len===5?map$1[str[4]]*17:255};}else if(len===7||len===9){ret={r:map$1[str[1]]<<4|map$1[str[2]],g:map$1[str[3]]<<4|map$1[str[4]],b:map$1[str[5]]<<4|map$1[str[6]],a:len===9?map$1[str[7]]<<4|map$1[str[8]]:255};}}return ret;}const alpha=(a,f)=>a<255?f(a):'';function hexString(v){var f=isShort(v)?h1:h2;return v?'#'+f(v.r)+f(v.g)+f(v.b)+alpha(v.a,f):undefined;}const HUE_RE=/^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;function hsl2rgbn(h,s,l){const a=s*Math.min(l,1-l);const f=(n,k=(n+h/30)%12)=>l-a*Math.max(Math.min(k-3,9-k,1),-1);return[f(0),f(8),f(4)];}function hsv2rgbn(h,s,v){const f=(n,k=(n+h/60)%6)=>v-v*s*Math.max(Math.min(k,4-k,1),0);return[f(5),f(3),f(1)];}function hwb2rgbn(h,w,b){const rgb=hsl2rgbn(h,1,0.5);let i;if(w+b>1){i=1/(w+b);w*=i;b*=i;}for(i=0;i<3;i++){rgb[i]*=1-w-b;rgb[i]+=w;}return rgb;}function hueValue(r,g,b,d,max){if(r===max){return(g-b)/d+(g<b?6:0);}if(g===max){return(b-r)/d+2;}return(r-g)/d+4;}function rgb2hsl(v){const range=255;const r=v.r/range;const g=v.g/range;const b=v.b/range;const max=Math.max(r,g,b);const min=Math.min(r,g,b);const l=(max+min)/2;let h,s,d;if(max!==min){d=max-min;s=l>0.5?d/(2-max-min):d/(max+min);h=hueValue(r,g,b,d,max);h=h*60+0.5;}return[h|0,s||0,l];}function calln(f,a,b,c){return(Array.isArray(a)?f(a[0],a[1],a[2]):f(a,b,c)).map(n2b);}function hsl2rgb$1(h,s,l){return calln(hsl2rgbn,h,s,l);}function hwb2rgb(h,w,b){return calln(hwb2rgbn,h,w,b);}function hsv2rgb(h,s,v){return calln(hsv2rgbn,h,s,v);}function hue$1(h){return(h%360+360)%360;}function hueParse(str){const m=HUE_RE.exec(str);let a=255;let v;if(!m){return;}if(m[5]!==v){a=m[6]?p2b(+m[5]):n2b(+m[5]);}const h=hue$1(+m[2]);const p1=+m[3]/100;const p2=+m[4]/100;if(m[1]==='hwb'){v=hwb2rgb(h,p1,p2);}else if(m[1]==='hsv'){v=hsv2rgb(h,p1,p2);}else{v=hsl2rgb$1(h,p1,p2);}return{r:v[0],g:v[1],b:v[2],a:a};}function rotate(v,deg){var h=rgb2hsl(v);h[0]=hue$1(h[0]+deg);h=hsl2rgb$1(h);v.r=h[0];v.g=h[1];v.b=h[2];}function hslString(v){if(!v){return;}const a=rgb2hsl(v);const h=a[0];const s=n2p(a[1]);const l=n2p(a[2]);return v.a<255?`hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`:`hsl(${h}, ${s}%, ${l}%)`;}const map$2={x:'dark',Z:'light',Y:'re',X:'blu',W:'gr',V:'medium',U:'slate',A:'ee',T:'ol',S:'or',B:'ra',C:'lateg',D:'ights',R:'in',Q:'turquois',E:'hi',P:'ro',O:'al',N:'le',M:'de',L:'yello',F:'en',K:'ch',G:'arks',H:'ea',I:'ightg',J:'wh'};const names$1={OiceXe:'f0f8ff',antiquewEte:'faebd7',aqua:'ffff',aquamarRe:'7fffd4',azuY:'f0ffff',beige:'f5f5dc',bisque:'ffe4c4',black:'0',blanKedOmond:'ffebcd',Xe:'ff',XeviTet:'8a2be2',bPwn:'a52a2a',burlywood:'deb887',caMtXe:'5f9ea0',KartYuse:'7fff00',KocTate:'d2691e',cSO:'ff7f50',cSnflowerXe:'6495ed',cSnsilk:'fff8dc',crimson:'dc143c',cyan:'ffff',xXe:'8b',xcyan:'8b8b',xgTMnPd:'b8860b',xWay:'a9a9a9',xgYF:'6400',xgYy:'a9a9a9',xkhaki:'bdb76b',xmagFta:'8b008b',xTivegYF:'556b2f',xSange:'ff8c00',xScEd:'9932cc',xYd:'8b0000',xsOmon:'e9967a',xsHgYF:'8fbc8f',xUXe:'483d8b',xUWay:'2f4f4f',xUgYy:'2f4f4f',xQe:'ced1',xviTet:'9400d3',dAppRk:'ff1493',dApskyXe:'bfff',dimWay:'696969',dimgYy:'696969',dodgerXe:'1e90ff',fiYbrick:'b22222',flSOwEte:'fffaf0',foYstWAn:'228b22',fuKsia:'ff00ff',gaRsbSo:'dcdcdc',ghostwEte:'f8f8ff',gTd:'ffd700',gTMnPd:'daa520',Way:'808080',gYF:'8000',gYFLw:'adff2f',gYy:'808080',honeyMw:'f0fff0',hotpRk:'ff69b4',RdianYd:'cd5c5c',Rdigo:'4b0082',ivSy:'fffff0',khaki:'f0e68c',lavFMr:'e6e6fa',lavFMrXsh:'fff0f5',lawngYF:'7cfc00',NmoncEffon:'fffacd',ZXe:'add8e6',ZcSO:'f08080',Zcyan:'e0ffff',ZgTMnPdLw:'fafad2',ZWay:'d3d3d3',ZgYF:'90ee90',ZgYy:'d3d3d3',ZpRk:'ffb6c1',ZsOmon:'ffa07a',ZsHgYF:'20b2aa',ZskyXe:'87cefa',ZUWay:'778899',ZUgYy:'778899',ZstAlXe:'b0c4de',ZLw:'ffffe0',lime:'ff00',limegYF:'32cd32',lRF:'faf0e6',magFta:'ff00ff',maPon:'800000',VaquamarRe:'66cdaa',VXe:'cd',VScEd:'ba55d3',VpurpN:'9370db',VsHgYF:'3cb371',VUXe:'7b68ee',VsprRggYF:'fa9a',VQe:'48d1cc',VviTetYd:'c71585',midnightXe:'191970',mRtcYam:'f5fffa',mistyPse:'ffe4e1',moccasR:'ffe4b5',navajowEte:'ffdead',navy:'80',Tdlace:'fdf5e6',Tive:'808000',TivedBb:'6b8e23',Sange:'ffa500',SangeYd:'ff4500',ScEd:'da70d6',pOegTMnPd:'eee8aa',pOegYF:'98fb98',pOeQe:'afeeee',pOeviTetYd:'db7093',papayawEp:'ffefd5',pHKpuff:'ffdab9',peru:'cd853f',pRk:'ffc0cb',plum:'dda0dd',powMrXe:'b0e0e6',purpN:'800080',YbeccapurpN:'663399',Yd:'ff0000',Psybrown:'bc8f8f',PyOXe:'4169e1',saddNbPwn:'8b4513',sOmon:'fa8072',sandybPwn:'f4a460',sHgYF:'2e8b57',sHshell:'fff5ee',siFna:'a0522d',silver:'c0c0c0',skyXe:'87ceeb',UXe:'6a5acd',UWay:'708090',UgYy:'708090',snow:'fffafa',sprRggYF:'ff7f',stAlXe:'4682b4',tan:'d2b48c',teO:'8080',tEstN:'d8bfd8',tomato:'ff6347',Qe:'40e0d0',viTet:'ee82ee',JHt:'f5deb3',wEte:'ffffff',wEtesmoke:'f5f5f5',Lw:'ffff00',LwgYF:'9acd32'};function unpack(){const unpacked={};const keys=Object.keys(names$1);const tkeys=Object.keys(map$2);let i,j,k,ok,nk;for(i=0;i<keys.length;i++){ok=nk=keys[i];for(j=0;j<tkeys.length;j++){k=tkeys[j];nk=nk.replace(k,map$2[k]);}k=parseInt(names$1[ok],16);unpacked[nk]=[k>>16&0xFF,k>>8&0xFF,k&0xFF];}return unpacked;}let names;function nameParse(str){if(!names){names=unpack();names.transparent=[0,0,0,0];}const a=names[str.toLowerCase()];return a&&{r:a[0],g:a[1],b:a[2],a:a.length===4?a[3]:255};}const RGB_RE=/^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/;function rgbParse(str){const m=RGB_RE.exec(str);let a=255;let r,g,b;if(!m){return;}if(m[7]!==r){const v=+m[7];a=m[8]?p2b(v):lim(v*255,0,255);}r=+m[1];g=+m[3];b=+m[5];r=255&(m[2]?p2b(r):lim(r,0,255));g=255&(m[4]?p2b(g):lim(g,0,255));b=255&(m[6]?p2b(b):lim(b,0,255));return{r:r,g:g,b:b,a:a};}function rgbString(v){return v&&(v.a<255?`rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`:`rgb(${v.r}, ${v.g}, ${v.b})`);}const to=v=>v<=0.0031308?v*12.92:Math.pow(v,1.0/2.4)*1.055-0.055;const from=v=>v<=0.04045?v/12.92:Math.pow((v+0.055)/1.055,2.4);function interpolate$1(rgb1,rgb2,t){const r=from(b2n(rgb1.r));const g=from(b2n(rgb1.g));const b=from(b2n(rgb1.b));return{r:n2b(to(r+t*(from(b2n(rgb2.r))-r))),g:n2b(to(g+t*(from(b2n(rgb2.g))-g))),b:n2b(to(b+t*(from(b2n(rgb2.b))-b))),a:rgb1.a+t*(rgb2.a-rgb1.a)};}function modHSL(v,i,ratio){if(v){let tmp=rgb2hsl(v);tmp[i]=Math.max(0,Math.min(tmp[i]+tmp[i]*ratio,i===0?360:1));tmp=hsl2rgb$1(tmp);v.r=tmp[0];v.g=tmp[1];v.b=tmp[2];}}function clone$3(v,proto){return v?Object.assign(proto||{},v):v;}function fromObject(input){var v={r:0,g:0,b:0,a:255};if(Array.isArray(input)){if(input.length>=3){v={r:input[0],g:input[1],b:input[2],a:255};if(input.length>3){v.a=n2b(input[3]);}}}else{v=clone$3(input,{r:0,g:0,b:0,a:1});v.a=n2b(v.a);}return v;}function functionParse(str){if(str.charAt(0)==='r'){return rgbParse(str);}return hueParse(str);}let Color$1=class Color{constructor(input){if(input instanceof Color){return input;}const type=typeof input;let v;if(type==='object'){v=fromObject(input);}else if(type==='string'){v=hexParse(input)||nameParse(input)||functionParse(input);}this._rgb=v;this._valid=!!v;}get valid(){return this._valid;}get rgb(){var v=clone$3(this._rgb);if(v){v.a=b2n(v.a);}return v;}set rgb(obj){this._rgb=fromObject(obj);}rgbString(){return this._valid?rgbString(this._rgb):undefined;}hexString(){return this._valid?hexString(this._rgb):undefined;}hslString(){return this._valid?hslString(this._rgb):undefined;}mix(color,weight){if(color){const c1=this.rgb;const c2=color.rgb;let w2;const p=weight===w2?0.5:weight;const w=2*p-1;const a=c1.a-c2.a;const w1=((w*a===-1?w:(w+a)/(1+w*a))+1)/2.0;w2=1-w1;c1.r=0xFF&w1*c1.r+w2*c2.r+0.5;c1.g=0xFF&w1*c1.g+w2*c2.g+0.5;c1.b=0xFF&w1*c1.b+w2*c2.b+0.5;c1.a=p*c1.a+(1-p)*c2.a;this.rgb=c1;}return this;}interpolate(color,t){if(color){this._rgb=interpolate$1(this._rgb,color._rgb,t);}return this;}clone(){return new Color(this.rgb);}alpha(a){this._rgb.a=n2b(a);return this;}clearer(ratio){const rgb=this._rgb;rgb.a*=1-ratio;return this;}greyscale(){const rgb=this._rgb;const val=round(rgb.r*0.3+rgb.g*0.59+rgb.b*0.11);rgb.r=rgb.g=rgb.b=val;return this;}opaquer(ratio){const rgb=this._rgb;rgb.a*=1+ratio;return this;}negate(){const v=this._rgb;v.r=255-v.r;v.g=255-v.g;v.b=255-v.b;return this;}lighten(ratio){modHSL(this._rgb,2,ratio);return this;}darken(ratio){modHSL(this._rgb,2,-ratio);return this;}saturate(ratio){modHSL(this._rgb,1,ratio);return this;}desaturate(ratio){modHSL(this._rgb,1,-ratio);return this;}rotate(deg){rotate(this._rgb,deg);return this;}};/*!
   * Chart.js v4.4.9
   * https://www.chartjs.org
   * (c) 2025 Chart.js Contributors
   * Released under the MIT License
   */ /**
   * @namespace Chart.helpers
   */ /**
   * An empty function that can be used, for example, for optional callback.
   */function noop$1(){/* noop */}/**
   * Returns a unique id, sequentially generated from a global variable.
   */const uid=(()=>{let id=0;return()=>id++;})();/**
   * Returns true if `value` is neither null nor undefined, else returns false.
   * @param value - The value to test.
   * @since 2.7.0
   */function isNullOrUndef(value){return value===null||value===undefined;}/**
   * Returns true if `value` is an array (including typed arrays), else returns false.
   * @param value - The value to test.
   * @function
   */function isArray(value){if(Array.isArray&&Array.isArray(value)){return true;}const type=Object.prototype.toString.call(value);if(type.slice(0,7)==='[object'&&type.slice(-6)==='Array]'){return true;}return false;}/**
   * Returns true if `value` is an object (excluding null), else returns false.
   * @param value - The value to test.
   * @since 2.7.0
   */function isObject(value){return value!==null&&Object.prototype.toString.call(value)==='[object Object]';}/**
   * Returns true if `value` is a finite number, else returns false
   * @param value  - The value to test.
   */function isNumberFinite(value){return(typeof value==='number'||value instanceof Number)&&isFinite(+value);}/**
   * Returns `value` if finite, else returns `defaultValue`.
   * @param value - The value to return if defined.
   * @param defaultValue - The value to return if `value` is not finite.
   */function finiteOrDefault(value,defaultValue){return isNumberFinite(value)?value:defaultValue;}/**
   * Returns `value` if defined, else returns `defaultValue`.
   * @param value - The value to return if defined.
   * @param defaultValue - The value to return if `value` is undefined.
   */function valueOrDefault(value,defaultValue){return typeof value==='undefined'?defaultValue:value;}const toPercentage=(value,dimension)=>typeof value==='string'&&value.endsWith('%')?parseFloat(value)/100:+value/dimension;const toDimension=(value,dimension)=>typeof value==='string'&&value.endsWith('%')?parseFloat(value)/100*dimension:+value;/**
   * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the
   * value returned by `fn`. If `fn` is not a function, this method returns undefined.
   * @param fn - The function to call.
   * @param args - The arguments with which `fn` should be called.
   * @param [thisArg] - The value of `this` provided for the call to `fn`.
   */function callback(fn,args,thisArg){if(fn&&typeof fn.call==='function'){return fn.apply(thisArg,args);}}function each(loopable,fn,thisArg,reverse){let i,len,keys;if(isArray(loopable)){len=loopable.length;{for(i=0;i<len;i++){fn.call(thisArg,loopable[i],i);}}}else if(isObject(loopable)){keys=Object.keys(loopable);len=keys.length;for(i=0;i<len;i++){fn.call(thisArg,loopable[keys[i]],keys[i]);}}}/**
   * Returns true if the `a0` and `a1` arrays have the same content, else returns false.
   * @param a0 - The array to compare
   * @param a1 - The array to compare
   * @private
   */function _elementsEqual(a0,a1){let i,ilen,v0,v1;if(!a0||!a1||a0.length!==a1.length){return false;}for(i=0,ilen=a0.length;i<ilen;++i){v0=a0[i];v1=a1[i];if(v0.datasetIndex!==v1.datasetIndex||v0.index!==v1.index){return false;}}return true;}/**
   * Returns a deep copy of `source` without keeping references on objects and arrays.
   * @param source - The value to clone.
   */function clone$2(source){if(isArray(source)){return source.map(clone$2);}if(isObject(source)){const target=Object.create(null);const keys=Object.keys(source);const klen=keys.length;let k=0;for(;k<klen;++k){target[keys[k]]=clone$2(source[keys[k]]);}return target;}return source;}function isValidKey(key){return['__proto__','prototype','constructor'].indexOf(key)===-1;}/**
   * The default merger when Chart.helpers.merge is called without merger option.
   * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.
   * @private
   */function _merger(key,target,source,options){if(!isValidKey(key)){return;}const tval=target[key];const sval=source[key];if(isObject(tval)&&isObject(sval)){// eslint-disable-next-line @typescript-eslint/no-use-before-define
merge$1(tval,sval,options);}else{target[key]=clone$2(sval);}}function merge$1(target,source,options){const sources=isArray(source)?source:[source];const ilen=sources.length;if(!isObject(target)){return target;}options=options||{};const merger=options.merger||_merger;let current;for(let i=0;i<ilen;++i){current=sources[i];if(!isObject(current)){continue;}const keys=Object.keys(current);for(let k=0,klen=keys.length;k<klen;++k){merger(keys[k],target,current,options);}}return target;}function mergeIf(target,source){// eslint-disable-next-line @typescript-eslint/no-use-before-define
return merge$1(target,source,{merger:_mergerIf});}/**
   * Merges source[key] in target[key] only if target[key] is undefined.
   * @private
   */function _mergerIf(key,target,source){if(!isValidKey(key)){return;}const tval=target[key];const sval=source[key];if(isObject(tval)&&isObject(sval)){mergeIf(tval,sval);}else if(!Object.prototype.hasOwnProperty.call(target,key)){target[key]=clone$2(sval);}}// resolveObjectKey resolver cache
const keyResolvers={// Chart.helpers.core resolveObjectKey should resolve empty key to root object
'':v=>v,// default resolvers
x:o=>o.x,y:o=>o.y};/**
   * @private
   */function _splitKey(key){const parts=key.split('.');const keys=[];let tmp='';for(const part of parts){tmp+=part;if(tmp.endsWith('\\')){tmp=tmp.slice(0,-1)+'.';}else{keys.push(tmp);tmp='';}}return keys;}function _getKeyResolver(key){const keys=_splitKey(key);return obj=>{for(const k of keys){if(k===''){break;}obj=obj&&obj[k];}return obj;};}function resolveObjectKey(obj,key){const resolver=keyResolvers[key]||(keyResolvers[key]=_getKeyResolver(key));return resolver(obj);}/**
   * @private
   */function _capitalize(str){return str.charAt(0).toUpperCase()+str.slice(1);}const defined=value=>typeof value!=='undefined';const isFunction=value=>typeof value==='function';// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384
const setsEqual=(a,b)=>{if(a.size!==b.size){return false;}for(const item of a){if(!b.has(item)){return false;}}return true;};/**
   * @param e - The event
   * @private
   */function _isClickEvent(e){return e.type==='mouseup'||e.type==='click'||e.type==='contextmenu';}/**
   * @alias Chart.helpers.math
   * @namespace
   */const PI=Math.PI;const TAU=2*PI;const PITAU=TAU+PI;const INFINITY=Number.POSITIVE_INFINITY;const RAD_PER_DEG=PI/180;const HALF_PI=PI/2;const QUARTER_PI=PI/4;const TWO_THIRDS_PI=PI*2/3;const log10=Math.log10;const sign$1=Math.sign;function almostEquals(x,y,epsilon){return Math.abs(x-y)<epsilon;}/**
   * Implementation of the nice number algorithm used in determining where axis labels will go
   */function niceNum(range){const roundedRange=Math.round(range);range=almostEquals(range,roundedRange,range/1000)?roundedRange:range;const niceRange=Math.pow(10,Math.floor(log10(range)));const fraction=range/niceRange;const niceFraction=fraction<=1?1:fraction<=2?2:fraction<=5?5:10;return niceFraction*niceRange;}/**
   * Returns an array of factors sorted from 1 to sqrt(value)
   * @private
   */function _factorize(value){const result=[];const sqrt=Math.sqrt(value);let i;for(i=1;i<sqrt;i++){if(value%i===0){result.push(i);result.push(value/i);}}if(sqrt===(sqrt|0)){result.push(sqrt);}result.sort((a,b)=>a-b).pop();return result;}/**
   * Verifies that attempting to coerce n to string or number won't throw a TypeError.
   */function isNonPrimitive(n){return typeof n==='symbol'||typeof n==='object'&&n!==null&&!(Symbol.toPrimitive in n||'toString'in n||'valueOf'in n);}function isNumber$1(n){return!isNonPrimitive(n)&&!isNaN(parseFloat(n))&&isFinite(n);}function almostWhole(x,epsilon){const rounded=Math.round(x);return rounded-epsilon<=x&&rounded+epsilon>=x;}/**
   * @private
   */function _setMinAndMaxByKey(array,target,property){let i,ilen,value;for(i=0,ilen=array.length;i<ilen;i++){value=array[i][property];if(!isNaN(value)){target.min=Math.min(target.min,value);target.max=Math.max(target.max,value);}}}function toRadians(degrees){return degrees*(PI/180);}function toDegrees(radians){return radians*(180/PI);}/**
   * Returns the number of decimal places
   * i.e. the number of digits after the decimal point, of the value of this Number.
   * @param x - A number.
   * @returns The number of decimal places.
   * @private
   */function _decimalPlaces(x){if(!isNumberFinite(x)){return;}let e=1;let p=0;while(Math.round(x*e)/e!==x){e*=10;p++;}return p;}// Gets the angle from vertical upright to the point about a centre.
function getAngleFromPoint(centrePoint,anglePoint){const distanceFromXCenter=anglePoint.x-centrePoint.x;const distanceFromYCenter=anglePoint.y-centrePoint.y;const radialDistanceFromCenter=Math.sqrt(distanceFromXCenter*distanceFromXCenter+distanceFromYCenter*distanceFromYCenter);let angle=Math.atan2(distanceFromYCenter,distanceFromXCenter);if(angle<-0.5*PI){angle+=TAU;// make sure the returned angle is in the range of (-PI/2, 3PI/2]
}return{angle,distance:radialDistanceFromCenter};}function distanceBetweenPoints(pt1,pt2){return Math.sqrt(Math.pow(pt2.x-pt1.x,2)+Math.pow(pt2.y-pt1.y,2));}/**
   * Shortest distance between angles, in either direction.
   * @private
   */function _angleDiff(a,b){return(a-b+PITAU)%TAU-PI;}/**
   * Normalize angle to be between 0 and 2*PI
   * @private
   */function _normalizeAngle(a){return(a%TAU+TAU)%TAU;}/**
   * @private
   */function _angleBetween(angle,start,end,sameAngleIsFullCircle){const a=_normalizeAngle(angle);const s=_normalizeAngle(start);const e=_normalizeAngle(end);const angleToStart=_normalizeAngle(s-a);const angleToEnd=_normalizeAngle(e-a);const startToAngle=_normalizeAngle(a-s);const endToAngle=_normalizeAngle(a-e);return a===s||a===e||sameAngleIsFullCircle&&s===e||angleToStart>angleToEnd&&startToAngle<endToAngle;}/**
   * Limit `value` between `min` and `max`
   * @param value
   * @param min
   * @param max
   * @private
   */function _limitValue(value,min,max){return Math.max(min,Math.min(max,value));}/**
   * @param {number} value
   * @private
   */function _int16Range(value){return _limitValue(value,-32768,32767);}/**
   * @param value
   * @param start
   * @param end
   * @param [epsilon]
   * @private
   */function _isBetween(value,start,end,epsilon=1e-6){return value>=Math.min(start,end)-epsilon&&value<=Math.max(start,end)+epsilon;}function _lookup(table,value,cmp){cmp=cmp||(index=>table[index]<value);let hi=table.length-1;let lo=0;let mid;while(hi-lo>1){mid=lo+hi>>1;if(cmp(mid)){lo=mid;}else{hi=mid;}}return{lo,hi};}/**
   * Binary search
   * @param table - the table search. must be sorted!
   * @param key - property name for the value in each entry
   * @param value - value to find
   * @param last - lookup last index
   * @private
   */const _lookupByKey=(table,key,value,last)=>_lookup(table,value,last?index=>{const ti=table[index][key];return ti<value||ti===value&&table[index+1][key]===value;}:index=>table[index][key]<value);/**
   * Reverse binary search
   * @param table - the table search. must be sorted!
   * @param key - property name for the value in each entry
   * @param value - value to find
   * @private
   */const _rlookupByKey=(table,key,value)=>_lookup(table,value,index=>table[index][key]>=value);/**
   * Return subset of `values` between `min` and `max` inclusive.
   * Values are assumed to be in sorted order.
   * @param values - sorted array of values
   * @param min - min value
   * @param max - max value
   */function _filterBetween(values,min,max){let start=0;let end=values.length;while(start<end&&values[start]<min){start++;}while(end>start&&values[end-1]>max){end--;}return start>0||end<values.length?values.slice(start,end):values;}const arrayEvents=['push','pop','shift','splice','unshift'];function listenArrayEvents(array,listener){if(array._chartjs){array._chartjs.listeners.push(listener);return;}Object.defineProperty(array,'_chartjs',{configurable:true,enumerable:false,value:{listeners:[listener]}});arrayEvents.forEach(key=>{const method='_onData'+_capitalize(key);const base=array[key];Object.defineProperty(array,key,{configurable:true,enumerable:false,value(...args){const res=base.apply(this,args);array._chartjs.listeners.forEach(object=>{if(typeof object[method]==='function'){object[method](...args);}});return res;}});});}function unlistenArrayEvents(array,listener){const stub=array._chartjs;if(!stub){return;}const listeners=stub.listeners;const index=listeners.indexOf(listener);if(index!==-1){listeners.splice(index,1);}if(listeners.length>0){return;}arrayEvents.forEach(key=>{delete array[key];});delete array._chartjs;}/**
   * @param items
   */function _arrayUnique(items){const set=new Set(items);if(set.size===items.length){return items;}return Array.from(set);}/**
  * Request animation polyfill
  */const requestAnimFrame=function(){if(typeof window==='undefined'){return function(callback){return callback();};}return window.requestAnimationFrame;}();/**
   * Throttles calling `fn` once per animation frame
   * Latest arguments are used on the actual call
   */function throttled(fn,thisArg){let argsToUse=[];let ticking=false;return function(...args){// Save the args for use later
argsToUse=args;if(!ticking){ticking=true;requestAnimFrame.call(window,()=>{ticking=false;fn.apply(thisArg,argsToUse);});}};}/**
   * Debounces calling `fn` for `delay` ms
   */function debounce(fn,delay){let timeout;return function(...args){if(delay){clearTimeout(timeout);timeout=setTimeout(fn,delay,args);}else{fn.apply(this,args);}return delay;};}/**
   * Converts 'start' to 'left', 'end' to 'right' and others to 'center'
   * @private
   */const _toLeftRightCenter=align=>align==='start'?'left':align==='end'?'right':'center';/**
   * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`
   * @private
   */const _alignStartEnd=(align,start,end)=>align==='start'?start:align==='end'?end:(start+end)/2;/**
   * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`
   * @private
   */const _textX=(align,left,right,rtl)=>{const check=rtl?'left':'right';return align===check?right:align==='center'?(left+right)/2:left;};/**
   * Return start and count of visible points.
   * @private
   */function _getStartAndCountOfVisiblePoints(meta,points,animationsDisabled){const pointCount=points.length;let start=0;let count=pointCount;if(meta._sorted){const{iScale,vScale,_parsed}=meta;const spanGaps=meta.dataset?meta.dataset.options?meta.dataset.options.spanGaps:null:null;const axis=iScale.axis;const{min,max,minDefined,maxDefined}=iScale.getUserBounds();if(minDefined){start=Math.min(// @ts-expect-error Need to type _parsed
_lookupByKey(_parsed,axis,min).lo,// @ts-expect-error Need to fix types on _lookupByKey
animationsDisabled?pointCount:_lookupByKey(points,axis,iScale.getPixelForValue(min)).lo);if(spanGaps){const distanceToDefinedLo=_parsed.slice(0,start+1).reverse().findIndex(point=>!isNullOrUndef(point[vScale.axis]));start-=Math.max(0,distanceToDefinedLo);}start=_limitValue(start,0,pointCount-1);}if(maxDefined){let end=Math.max(// @ts-expect-error Need to type _parsed
_lookupByKey(_parsed,iScale.axis,max,true).hi+1,// @ts-expect-error Need to fix types on _lookupByKey
animationsDisabled?0:_lookupByKey(points,axis,iScale.getPixelForValue(max),true).hi+1);if(spanGaps){const distanceToDefinedHi=_parsed.slice(end-1).findIndex(point=>!isNullOrUndef(point[vScale.axis]));end+=Math.max(0,distanceToDefinedHi);}count=_limitValue(end,start,pointCount)-start;}else{count=pointCount-start;}}return{start,count};}/**
   * Checks if the scale ranges have changed.
   * @param {object} meta - dataset meta.
   * @returns {boolean}
   * @private
   */function _scaleRangesChanged(meta){const{xScale,yScale,_scaleRanges}=meta;const newRanges={xmin:xScale.min,xmax:xScale.max,ymin:yScale.min,ymax:yScale.max};if(!_scaleRanges){meta._scaleRanges=newRanges;return true;}const changed=_scaleRanges.xmin!==xScale.min||_scaleRanges.xmax!==xScale.max||_scaleRanges.ymin!==yScale.min||_scaleRanges.ymax!==yScale.max;Object.assign(_scaleRanges,newRanges);return changed;}const atEdge=t=>t===0||t===1;const elasticIn=(t,s,p)=>-(Math.pow(2,10*(t-=1))*Math.sin((t-s)*TAU/p));const elasticOut=(t,s,p)=>Math.pow(2,-10*t)*Math.sin((t-s)*TAU/p)+1;/**
   * Easing functions adapted from Robert Penner's easing equations.
   * @namespace Chart.helpers.easing.effects
   * @see http://www.robertpenner.com/easing/
   */const effects={linear:t=>t,easeInQuad:t=>t*t,easeOutQuad:t=>-t*(t-2),easeInOutQuad:t=>(t/=0.5)<1?0.5*t*t:-0.5*(--t*(t-2)-1),easeInCubic:t=>t*t*t,easeOutCubic:t=>(t-=1)*t*t+1,easeInOutCubic:t=>(t/=0.5)<1?0.5*t*t*t:0.5*((t-=2)*t*t+2),easeInQuart:t=>t*t*t*t,easeOutQuart:t=>-((t-=1)*t*t*t-1),easeInOutQuart:t=>(t/=0.5)<1?0.5*t*t*t*t:-0.5*((t-=2)*t*t*t-2),easeInQuint:t=>t*t*t*t*t,easeOutQuint:t=>(t-=1)*t*t*t*t+1,easeInOutQuint:t=>(t/=0.5)<1?0.5*t*t*t*t*t:0.5*((t-=2)*t*t*t*t+2),easeInSine:t=>-Math.cos(t*HALF_PI)+1,easeOutSine:t=>Math.sin(t*HALF_PI),easeInOutSine:t=>-0.5*(Math.cos(PI*t)-1),easeInExpo:t=>t===0?0:Math.pow(2,10*(t-1)),easeOutExpo:t=>t===1?1:-Math.pow(2,-10*t)+1,easeInOutExpo:t=>atEdge(t)?t:t<0.5?0.5*Math.pow(2,10*(t*2-1)):0.5*(-Math.pow(2,-10*(t*2-1))+2),easeInCirc:t=>t>=1?t:-(Math.sqrt(1-t*t)-1),easeOutCirc:t=>Math.sqrt(1-(t-=1)*t),easeInOutCirc:t=>(t/=0.5)<1?-0.5*(Math.sqrt(1-t*t)-1):0.5*(Math.sqrt(1-(t-=2)*t)+1),easeInElastic:t=>atEdge(t)?t:elasticIn(t,0.075,0.3),easeOutElastic:t=>atEdge(t)?t:elasticOut(t,0.075,0.3),easeInOutElastic(t){const s=0.1125;const p=0.45;return atEdge(t)?t:t<0.5?0.5*elasticIn(t*2,s,p):0.5+0.5*elasticOut(t*2-1,s,p);},easeInBack(t){const s=1.70158;return t*t*((s+1)*t-s);},easeOutBack(t){const s=1.70158;return(t-=1)*t*((s+1)*t+s)+1;},easeInOutBack(t){let s=1.70158;if((t/=0.5)<1){return 0.5*(t*t*(((s*=1.525)+1)*t-s));}return 0.5*((t-=2)*t*(((s*=1.525)+1)*t+s)+2);},easeInBounce:t=>1-effects.easeOutBounce(1-t),easeOutBounce(t){const m=7.5625;const d=2.75;if(t<1/d){return m*t*t;}if(t<2/d){return m*(t-=1.5/d)*t+0.75;}if(t<2.5/d){return m*(t-=2.25/d)*t+0.9375;}return m*(t-=2.625/d)*t+0.984375;},easeInOutBounce:t=>t<0.5?effects.easeInBounce(t*2)*0.5:effects.easeOutBounce(t*2-1)*0.5+0.5};function isPatternOrGradient(value){if(value&&typeof value==='object'){const type=value.toString();return type==='[object CanvasPattern]'||type==='[object CanvasGradient]';}return false;}function color$1(value){return isPatternOrGradient(value)?value:new Color$1(value);}function getHoverColor(value){return isPatternOrGradient(value)?value:new Color$1(value).saturate(0.5).darken(0.1).hexString();}const numbers=['x','y','borderWidth','radius','tension'];const colors$1=['color','borderColor','backgroundColor'];function applyAnimationsDefaults(defaults){defaults.set('animation',{delay:undefined,duration:1000,easing:'easeOutQuart',fn:undefined,from:undefined,loop:undefined,to:undefined,type:undefined});defaults.describe('animation',{_fallback:false,_indexable:false,_scriptable:name=>name!=='onProgress'&&name!=='onComplete'&&name!=='fn'});defaults.set('animations',{colors:{type:'color',properties:colors$1},numbers:{type:'number',properties:numbers}});defaults.describe('animations',{_fallback:'animation'});defaults.set('transitions',{active:{animation:{duration:400}},resize:{animation:{duration:0}},show:{animations:{colors:{from:'transparent'},visible:{type:'boolean',duration:0}}},hide:{animations:{colors:{to:'transparent'},visible:{type:'boolean',easing:'linear',fn:v=>v|0}}}});}function applyLayoutsDefaults(defaults){defaults.set('layout',{autoPadding:true,padding:{top:0,right:0,bottom:0,left:0}});}const intlCache=new Map();function getNumberFormat(locale,options){options=options||{};const cacheKey=locale+JSON.stringify(options);let formatter=intlCache.get(cacheKey);if(!formatter){formatter=new Intl.NumberFormat(locale,options);intlCache.set(cacheKey,formatter);}return formatter;}function formatNumber(num,locale,options){return getNumberFormat(locale,options).format(num);}const formatters={values(value){return isArray(value)?value:''+value;},numeric(tickValue,index,ticks){if(tickValue===0){return'0';}const locale=this.chart.options.locale;let notation;let delta=tickValue;if(ticks.length>1){const maxTick=Math.max(Math.abs(ticks[0].value),Math.abs(ticks[ticks.length-1].value));if(maxTick<1e-4||maxTick>1e+15){notation='scientific';}delta=calculateDelta(tickValue,ticks);}const logDelta=log10(Math.abs(delta));const numDecimal=isNaN(logDelta)?1:Math.max(Math.min(-1*Math.floor(logDelta),20),0);const options={notation,minimumFractionDigits:numDecimal,maximumFractionDigits:numDecimal};Object.assign(options,this.options.ticks.format);return formatNumber(tickValue,locale,options);},logarithmic(tickValue,index,ticks){if(tickValue===0){return'0';}const remain=ticks[index].significand||tickValue/Math.pow(10,Math.floor(log10(tickValue)));if([1,2,3,5,10,15].includes(remain)||index>0.8*ticks.length){return formatters.numeric.call(this,tickValue,index,ticks);}return'';}};function calculateDelta(tickValue,ticks){let delta=ticks.length>3?ticks[2].value-ticks[1].value:ticks[1].value-ticks[0].value;if(Math.abs(delta)>=1&&tickValue!==Math.floor(tickValue)){delta=tickValue-Math.floor(tickValue);}return delta;}var Ticks={formatters};function applyScaleDefaults(defaults){defaults.set('scale',{display:true,offset:false,reverse:false,beginAtZero:false,bounds:'ticks',clip:true,grace:0,grid:{display:true,lineWidth:1,drawOnChartArea:true,drawTicks:true,tickLength:8,tickWidth:(_ctx,options)=>options.lineWidth,tickColor:(_ctx,options)=>options.color,offset:false},border:{display:true,dash:[],dashOffset:0.0,width:1},title:{display:false,text:'',padding:{top:4,bottom:4}},ticks:{minRotation:0,maxRotation:50,mirror:false,textStrokeWidth:0,textStrokeColor:'',padding:3,display:true,autoSkip:true,autoSkipPadding:3,labelOffset:0,callback:Ticks.formatters.values,minor:{},major:{},align:'center',crossAlign:'near',showLabelBackdrop:false,backdropColor:'rgba(255, 255, 255, 0.75)',backdropPadding:2}});defaults.route('scale.ticks','color','','color');defaults.route('scale.grid','color','','borderColor');defaults.route('scale.border','color','','borderColor');defaults.route('scale.title','color','','color');defaults.describe('scale',{_fallback:false,_scriptable:name=>!name.startsWith('before')&&!name.startsWith('after')&&name!=='callback'&&name!=='parser',_indexable:name=>name!=='borderDash'&&name!=='tickBorderDash'&&name!=='dash'});defaults.describe('scales',{_fallback:'scale'});defaults.describe('scale.ticks',{_scriptable:name=>name!=='backdropPadding'&&name!=='callback',_indexable:name=>name!=='backdropPadding'});}const overrides=Object.create(null);const descriptors=Object.create(null);function getScope$1(node,key){if(!key){return node;}const keys=key.split('.');for(let i=0,n=keys.length;i<n;++i){const k=keys[i];node=node[k]||(node[k]=Object.create(null));}return node;}function set(root,scope,values){if(typeof scope==='string'){return merge$1(getScope$1(root,scope),values);}return merge$1(getScope$1(root,''),scope);}class Defaults{constructor(_descriptors,_appliers){this.animation=undefined;this.backgroundColor='rgba(0,0,0,0.1)';this.borderColor='rgba(0,0,0,0.1)';this.color='#666';this.datasets={};this.devicePixelRatio=context=>context.chart.platform.getDevicePixelRatio();this.elements={};this.events=['mousemove','mouseout','click','touchstart','touchmove'];this.font={family:"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",size:12,style:'normal',lineHeight:1.2,weight:null};this.hover={};this.hoverBackgroundColor=(ctx,options)=>getHoverColor(options.backgroundColor);this.hoverBorderColor=(ctx,options)=>getHoverColor(options.borderColor);this.hoverColor=(ctx,options)=>getHoverColor(options.color);this.indexAxis='x';this.interaction={mode:'nearest',intersect:true,includeInvisible:false};this.maintainAspectRatio=true;this.onHover=null;this.onClick=null;this.parsing=true;this.plugins={};this.responsive=true;this.scale=undefined;this.scales={};this.showLine=true;this.drawActiveElementsOnTop=true;this.describe(_descriptors);this.apply(_appliers);}set(scope,values){return set(this,scope,values);}get(scope){return getScope$1(this,scope);}describe(scope,values){return set(descriptors,scope,values);}override(scope,values){return set(overrides,scope,values);}route(scope,name,targetScope,targetName){const scopeObject=getScope$1(this,scope);const targetScopeObject=getScope$1(this,targetScope);const privateName='_'+name;Object.defineProperties(scopeObject,{[privateName]:{value:scopeObject[name],writable:true},[name]:{enumerable:true,get(){const local=this[privateName];const target=targetScopeObject[targetName];if(isObject(local)){return Object.assign({},target,local);}return valueOrDefault(local,target);},set(value){this[privateName]=value;}}});}apply(appliers){appliers.forEach(apply=>apply(this));}}var defaults=/* #__PURE__ */new Defaults({_scriptable:name=>!name.startsWith('on'),_indexable:name=>name!=='events',hover:{_fallback:'interaction'},interaction:{_scriptable:false,_indexable:false}},[applyAnimationsDefaults,applyLayoutsDefaults,applyScaleDefaults]);/**
   * Converts the given font object into a CSS font string.
   * @param font - A font object.
   * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font
   * @private
   */function toFontString(font){if(!font||isNullOrUndef(font.size)||isNullOrUndef(font.family)){return null;}return(font.style?font.style+' ':'')+(font.weight?font.weight+' ':'')+font.size+'px '+font.family;}/**
   * @private
   */function _measureText(ctx,data,gc,longest,string){let textWidth=data[string];if(!textWidth){textWidth=data[string]=ctx.measureText(string).width;gc.push(string);}if(textWidth>longest){longest=textWidth;}return longest;}/**
   * @private
   */ // eslint-disable-next-line complexity
function _longestText(ctx,font,arrayOfThings,cache){cache=cache||{};let data=cache.data=cache.data||{};let gc=cache.garbageCollect=cache.garbageCollect||[];if(cache.font!==font){data=cache.data={};gc=cache.garbageCollect=[];cache.font=font;}ctx.save();ctx.font=font;let longest=0;const ilen=arrayOfThings.length;let i,j,jlen,thing,nestedThing;for(i=0;i<ilen;i++){thing=arrayOfThings[i];// Undefined strings and arrays should not be measured
if(thing!==undefined&&thing!==null&&!isArray(thing)){longest=_measureText(ctx,data,gc,longest,thing);}else if(isArray(thing)){// if it is an array lets measure each element
// to do maybe simplify this function a bit so we can do this more recursively?
for(j=0,jlen=thing.length;j<jlen;j++){nestedThing=thing[j];// Undefined strings and arrays should not be measured
if(nestedThing!==undefined&&nestedThing!==null&&!isArray(nestedThing)){longest=_measureText(ctx,data,gc,longest,nestedThing);}}}}ctx.restore();const gcLen=gc.length/2;if(gcLen>arrayOfThings.length){for(i=0;i<gcLen;i++){delete data[gc[i]];}gc.splice(0,gcLen);}return longest;}/**
   * Returns the aligned pixel value to avoid anti-aliasing blur
   * @param chart - The chart instance.
   * @param pixel - A pixel value.
   * @param width - The width of the element.
   * @returns The aligned pixel value.
   * @private
   */function _alignPixel(chart,pixel,width){const devicePixelRatio=chart.currentDevicePixelRatio;const halfWidth=width!==0?Math.max(width/2,0.5):0;return Math.round((pixel-halfWidth)*devicePixelRatio)/devicePixelRatio+halfWidth;}/**
   * Clears the entire canvas.
   */function clearCanvas(canvas,ctx){if(!ctx&&!canvas){return;}ctx=ctx||canvas.getContext('2d');ctx.save();// canvas.width and canvas.height do not consider the canvas transform,
// while clearRect does
ctx.resetTransform();ctx.clearRect(0,0,canvas.width,canvas.height);ctx.restore();}function drawPoint(ctx,options,x,y){// eslint-disable-next-line @typescript-eslint/no-use-before-define
drawPointLegend(ctx,options,x,y,null);}// eslint-disable-next-line complexity
function drawPointLegend(ctx,options,x,y,w){let type,xOffset,yOffset,size,cornerRadius,width,xOffsetW,yOffsetW;const style=options.pointStyle;const rotation=options.rotation;const radius=options.radius;let rad=(rotation||0)*RAD_PER_DEG;if(style&&typeof style==='object'){type=style.toString();if(type==='[object HTMLImageElement]'||type==='[object HTMLCanvasElement]'){ctx.save();ctx.translate(x,y);ctx.rotate(rad);ctx.drawImage(style,-style.width/2,-style.height/2,style.width,style.height);ctx.restore();return;}}if(isNaN(radius)||radius<=0){return;}ctx.beginPath();switch(style){// Default includes circle
default:if(w){ctx.ellipse(x,y,w/2,radius,0,0,TAU);}else{ctx.arc(x,y,radius,0,TAU);}ctx.closePath();break;case'triangle':width=w?w/2:radius;ctx.moveTo(x+Math.sin(rad)*width,y-Math.cos(rad)*radius);rad+=TWO_THIRDS_PI;ctx.lineTo(x+Math.sin(rad)*width,y-Math.cos(rad)*radius);rad+=TWO_THIRDS_PI;ctx.lineTo(x+Math.sin(rad)*width,y-Math.cos(rad)*radius);ctx.closePath();break;case'rectRounded':// NOTE: the rounded rect implementation changed to use `arc` instead of
// `quadraticCurveTo` since it generates better results when rect is
// almost a circle. 0.516 (instead of 0.5) produces results with visually
// closer proportion to the previous impl and it is inscribed in the
// circle with `radius`. For more details, see the following PRs:
// https://github.com/chartjs/Chart.js/issues/5597
// https://github.com/chartjs/Chart.js/issues/5858
cornerRadius=radius*0.516;size=radius-cornerRadius;xOffset=Math.cos(rad+QUARTER_PI)*size;xOffsetW=Math.cos(rad+QUARTER_PI)*(w?w/2-cornerRadius:size);yOffset=Math.sin(rad+QUARTER_PI)*size;yOffsetW=Math.sin(rad+QUARTER_PI)*(w?w/2-cornerRadius:size);ctx.arc(x-xOffsetW,y-yOffset,cornerRadius,rad-PI,rad-HALF_PI);ctx.arc(x+yOffsetW,y-xOffset,cornerRadius,rad-HALF_PI,rad);ctx.arc(x+xOffsetW,y+yOffset,cornerRadius,rad,rad+HALF_PI);ctx.arc(x-yOffsetW,y+xOffset,cornerRadius,rad+HALF_PI,rad+PI);ctx.closePath();break;case'rect':if(!rotation){size=Math.SQRT1_2*radius;width=w?w/2:size;ctx.rect(x-width,y-size,2*width,2*size);break;}rad+=QUARTER_PI;/* falls through */case'rectRot':xOffsetW=Math.cos(rad)*(w?w/2:radius);xOffset=Math.cos(rad)*radius;yOffset=Math.sin(rad)*radius;yOffsetW=Math.sin(rad)*(w?w/2:radius);ctx.moveTo(x-xOffsetW,y-yOffset);ctx.lineTo(x+yOffsetW,y-xOffset);ctx.lineTo(x+xOffsetW,y+yOffset);ctx.lineTo(x-yOffsetW,y+xOffset);ctx.closePath();break;case'crossRot':rad+=QUARTER_PI;/* falls through */case'cross':xOffsetW=Math.cos(rad)*(w?w/2:radius);xOffset=Math.cos(rad)*radius;yOffset=Math.sin(rad)*radius;yOffsetW=Math.sin(rad)*(w?w/2:radius);ctx.moveTo(x-xOffsetW,y-yOffset);ctx.lineTo(x+xOffsetW,y+yOffset);ctx.moveTo(x+yOffsetW,y-xOffset);ctx.lineTo(x-yOffsetW,y+xOffset);break;case'star':xOffsetW=Math.cos(rad)*(w?w/2:radius);xOffset=Math.cos(rad)*radius;yOffset=Math.sin(rad)*radius;yOffsetW=Math.sin(rad)*(w?w/2:radius);ctx.moveTo(x-xOffsetW,y-yOffset);ctx.lineTo(x+xOffsetW,y+yOffset);ctx.moveTo(x+yOffsetW,y-xOffset);ctx.lineTo(x-yOffsetW,y+xOffset);rad+=QUARTER_PI;xOffsetW=Math.cos(rad)*(w?w/2:radius);xOffset=Math.cos(rad)*radius;yOffset=Math.sin(rad)*radius;yOffsetW=Math.sin(rad)*(w?w/2:radius);ctx.moveTo(x-xOffsetW,y-yOffset);ctx.lineTo(x+xOffsetW,y+yOffset);ctx.moveTo(x+yOffsetW,y-xOffset);ctx.lineTo(x-yOffsetW,y+xOffset);break;case'line':xOffset=w?w/2:Math.cos(rad)*radius;yOffset=Math.sin(rad)*radius;ctx.moveTo(x-xOffset,y-yOffset);ctx.lineTo(x+xOffset,y+yOffset);break;case'dash':ctx.moveTo(x,y);ctx.lineTo(x+Math.cos(rad)*(w?w/2:radius),y+Math.sin(rad)*radius);break;case false:ctx.closePath();break;}ctx.fill();if(options.borderWidth>0){ctx.stroke();}}/**
   * Returns true if the point is inside the rectangle
   * @param point - The point to test
   * @param area - The rectangle
   * @param margin - allowed margin
   * @private
   */function _isPointInArea(point,area,margin){margin=margin||0.5;// margin - default is to match rounded decimals
return!area||point&&point.x>area.left-margin&&point.x<area.right+margin&&point.y>area.top-margin&&point.y<area.bottom+margin;}function clipArea(ctx,area){ctx.save();ctx.beginPath();ctx.rect(area.left,area.top,area.right-area.left,area.bottom-area.top);ctx.clip();}function unclipArea(ctx){ctx.restore();}/**
   * @private
   */function _steppedLineTo(ctx,previous,target,flip,mode){if(!previous){return ctx.lineTo(target.x,target.y);}if(mode==='middle'){const midpoint=(previous.x+target.x)/2.0;ctx.lineTo(midpoint,previous.y);ctx.lineTo(midpoint,target.y);}else if(mode==='after'!==!!flip){ctx.lineTo(previous.x,target.y);}else{ctx.lineTo(target.x,previous.y);}ctx.lineTo(target.x,target.y);}/**
   * @private
   */function _bezierCurveTo(ctx,previous,target,flip){if(!previous){return ctx.lineTo(target.x,target.y);}ctx.bezierCurveTo(flip?previous.cp1x:previous.cp2x,flip?previous.cp1y:previous.cp2y,flip?target.cp2x:target.cp1x,flip?target.cp2y:target.cp1y,target.x,target.y);}function setRenderOpts(ctx,opts){if(opts.translation){ctx.translate(opts.translation[0],opts.translation[1]);}if(!isNullOrUndef(opts.rotation)){ctx.rotate(opts.rotation);}if(opts.color){ctx.fillStyle=opts.color;}if(opts.textAlign){ctx.textAlign=opts.textAlign;}if(opts.textBaseline){ctx.textBaseline=opts.textBaseline;}}function decorateText(ctx,x,y,line,opts){if(opts.strikethrough||opts.underline){/**
       * Now that IE11 support has been dropped, we can use more
       * of the TextMetrics object. The actual bounding boxes
       * are unflagged in Chrome, Firefox, Edge, and Safari so they
       * can be safely used.
       * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility
       */const metrics=ctx.measureText(line);const left=x-metrics.actualBoundingBoxLeft;const right=x+metrics.actualBoundingBoxRight;const top=y-metrics.actualBoundingBoxAscent;const bottom=y+metrics.actualBoundingBoxDescent;const yDecoration=opts.strikethrough?(top+bottom)/2:bottom;ctx.strokeStyle=ctx.fillStyle;ctx.beginPath();ctx.lineWidth=opts.decorationWidth||2;ctx.moveTo(left,yDecoration);ctx.lineTo(right,yDecoration);ctx.stroke();}}function drawBackdrop(ctx,opts){const oldColor=ctx.fillStyle;ctx.fillStyle=opts.color;ctx.fillRect(opts.left,opts.top,opts.width,opts.height);ctx.fillStyle=oldColor;}/**
   * Render text onto the canvas
   */function renderText(ctx,text,x,y,font,opts={}){const lines=isArray(text)?text:[text];const stroke=opts.strokeWidth>0&&opts.strokeColor!=='';let i,line;ctx.save();ctx.font=font.string;setRenderOpts(ctx,opts);for(i=0;i<lines.length;++i){line=lines[i];if(opts.backdrop){drawBackdrop(ctx,opts.backdrop);}if(stroke){if(opts.strokeColor){ctx.strokeStyle=opts.strokeColor;}if(!isNullOrUndef(opts.strokeWidth)){ctx.lineWidth=opts.strokeWidth;}ctx.strokeText(line,x,y,opts.maxWidth);}ctx.fillText(line,x,y,opts.maxWidth);decorateText(ctx,x,y,line,opts);y+=Number(font.lineHeight);}ctx.restore();}/**
   * Add a path of a rectangle with rounded corners to the current sub-path
   * @param ctx - Context
   * @param rect - Bounding rect
   */function addRoundedRectPath(ctx,rect){const{x,y,w,h,radius}=rect;// top left arc
ctx.arc(x+radius.topLeft,y+radius.topLeft,radius.topLeft,1.5*PI,PI,true);// line from top left to bottom left
ctx.lineTo(x,y+h-radius.bottomLeft);// bottom left arc
ctx.arc(x+radius.bottomLeft,y+h-radius.bottomLeft,radius.bottomLeft,PI,HALF_PI,true);// line from bottom left to bottom right
ctx.lineTo(x+w-radius.bottomRight,y+h);// bottom right arc
ctx.arc(x+w-radius.bottomRight,y+h-radius.bottomRight,radius.bottomRight,HALF_PI,0,true);// line from bottom right to top right
ctx.lineTo(x+w,y+radius.topRight);// top right arc
ctx.arc(x+w-radius.topRight,y+radius.topRight,radius.topRight,0,-HALF_PI,true);// line from top right to top left
ctx.lineTo(x+radius.topLeft,y);}const LINE_HEIGHT=/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/;const FONT_STYLE=/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;/**
   * @alias Chart.helpers.options
   * @namespace
   */ /**
   * Converts the given line height `value` in pixels for a specific font `size`.
   * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').
   * @param size - The font size (in pixels) used to resolve relative `value`.
   * @returns The effective line height in pixels (size * 1.2 if value is invalid).
   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height
   * @since 2.7.0
   */function toLineHeight(value,size){const matches=(''+value).match(LINE_HEIGHT);if(!matches||matches[1]==='normal'){return size*1.2;}value=+matches[2];switch(matches[3]){case'px':return value;case'%':value/=100;break;}return size*value;}const numberOrZero=v=>+v||0;function _readValueToProps(value,props){const ret={};const objProps=isObject(props);const keys=objProps?Object.keys(props):props;const read=isObject(value)?objProps?prop=>valueOrDefault(value[prop],value[props[prop]]):prop=>value[prop]:()=>value;for(const prop of keys){ret[prop]=numberOrZero(read(prop));}return ret;}/**
   * Converts the given value into a TRBL object.
   * @param value - If a number, set the value to all TRBL component,
   *  else, if an object, use defined properties and sets undefined ones to 0.
   *  x / y are shorthands for same value for left/right and top/bottom.
   * @returns The padding values (top, right, bottom, left)
   * @since 3.0.0
   */function toTRBL(value){return _readValueToProps(value,{top:'y',right:'x',bottom:'y',left:'x'});}/**
   * Converts the given value into a TRBL corners object (similar with css border-radius).
   * @param value - If a number, set the value to all TRBL corner components,
   *  else, if an object, use defined properties and sets undefined ones to 0.
   * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)
   * @since 3.0.0
   */function toTRBLCorners(value){return _readValueToProps(value,['topLeft','topRight','bottomLeft','bottomRight']);}/**
   * Converts the given value into a padding object with pre-computed width/height.
   * @param value - If a number, set the value to all TRBL component,
   *  else, if an object, use defined properties and sets undefined ones to 0.
   *  x / y are shorthands for same value for left/right and top/bottom.
   * @returns The padding values (top, right, bottom, left, width, height)
   * @since 2.7.0
   */function toPadding(value){const obj=toTRBL(value);obj.width=obj.left+obj.right;obj.height=obj.top+obj.bottom;return obj;}/**
   * Parses font options and returns the font object.
   * @param options - A object that contains font options to be parsed.
   * @param fallback - A object that contains fallback font options.
   * @return The font object.
   * @private
   */function toFont(options,fallback){options=options||{};fallback=fallback||defaults.font;let size=valueOrDefault(options.size,fallback.size);if(typeof size==='string'){size=parseInt(size,10);}let style=valueOrDefault(options.style,fallback.style);if(style&&!(''+style).match(FONT_STYLE)){void 0;style=undefined;}const font={family:valueOrDefault(options.family,fallback.family),lineHeight:toLineHeight(valueOrDefault(options.lineHeight,fallback.lineHeight),size),size,style,weight:valueOrDefault(options.weight,fallback.weight),string:''};font.string=toFontString(font);return font;}/**
   * Evaluates the given `inputs` sequentially and returns the first defined value.
   * @param inputs - An array of values, falling back to the last value.
   * @param context - If defined and the current value is a function, the value
   * is called with `context` as first argument and the result becomes the new input.
   * @param index - If defined and the current value is an array, the value
   * at `index` become the new input.
   * @param info - object to return information about resolution in
   * @param info.cacheable - Will be set to `false` if option is not cacheable.
   * @since 2.7.0
   */function resolve(inputs,context,index,info){let i,ilen,value;for(i=0,ilen=inputs.length;i<ilen;++i){value=inputs[i];if(value===undefined){continue;}if(value!==undefined){return value;}}}/**
   * @param minmax
   * @param grace
   * @param beginAtZero
   * @private
   */function _addGrace(minmax,grace,beginAtZero){const{min,max}=minmax;const change=toDimension(grace,(max-min)/2);const keepZero=(value,add)=>beginAtZero&&value===0?0:value+add;return{min:keepZero(min,-Math.abs(change)),max:keepZero(max,change)};}function createContext(parentContext,context){return Object.assign(Object.create(parentContext),context);}/**
   * Creates a Proxy for resolving raw values for options.
   * @param scopes - The option scopes to look for values, in resolution order
   * @param prefixes - The prefixes for values, in resolution order.
   * @param rootScopes - The root option scopes
   * @param fallback - Parent scopes fallback
   * @param getTarget - callback for getting the target for changed values
   * @returns Proxy
   * @private
   */function _createResolver(scopes,prefixes=[''],rootScopes,fallback,getTarget=()=>scopes[0]){const finalRootScopes=rootScopes||scopes;if(typeof fallback==='undefined'){fallback=_resolve('_fallback',scopes);}const cache={[Symbol.toStringTag]:'Object',_cacheable:true,_scopes:scopes,_rootScopes:finalRootScopes,_fallback:fallback,_getTarget:getTarget,override:scope=>_createResolver([scope,...scopes],prefixes,finalRootScopes,fallback)};return new Proxy(cache,{/**
       * A trap for the delete operator.
       */deleteProperty(target,prop){delete target[prop];// remove from cache
delete target._keys;// remove cached keys
delete scopes[0][prop];// remove from top level scope
return true;},/**
       * A trap for getting property values.
       */get(target,prop){return _cached(target,prop,()=>_resolveWithPrefixes(prop,prefixes,scopes,target));},/**
       * A trap for Object.getOwnPropertyDescriptor.
       * Also used by Object.hasOwnProperty.
       */getOwnPropertyDescriptor(target,prop){return Reflect.getOwnPropertyDescriptor(target._scopes[0],prop);},/**
       * A trap for Object.getPrototypeOf.
       */getPrototypeOf(){return Reflect.getPrototypeOf(scopes[0]);},/**
       * A trap for the in operator.
       */has(target,prop){return getKeysFromAllScopes(target).includes(prop);},/**
       * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.
       */ownKeys(target){return getKeysFromAllScopes(target);},/**
       * A trap for setting property values.
       */set(target,prop,value){const storage=target._storage||(target._storage=getTarget());target[prop]=storage[prop]=value;// set to top level scope + cache
delete target._keys;// remove cached keys
return true;}});}/**
   * Returns an Proxy for resolving option values with context.
   * @param proxy - The Proxy returned by `_createResolver`
   * @param context - Context object for scriptable/indexable options
   * @param subProxy - The proxy provided for scriptable options
   * @param descriptorDefaults - Defaults for descriptors
   * @private
   */function _attachContext(proxy,context,subProxy,descriptorDefaults){const cache={_cacheable:false,_proxy:proxy,_context:context,_subProxy:subProxy,_stack:new Set(),_descriptors:_descriptors(proxy,descriptorDefaults),setContext:ctx=>_attachContext(proxy,ctx,subProxy,descriptorDefaults),override:scope=>_attachContext(proxy.override(scope),context,subProxy,descriptorDefaults)};return new Proxy(cache,{/**
       * A trap for the delete operator.
       */deleteProperty(target,prop){delete target[prop];// remove from cache
delete proxy[prop];// remove from proxy
return true;},/**
       * A trap for getting property values.
       */get(target,prop,receiver){return _cached(target,prop,()=>_resolveWithContext(target,prop,receiver));},/**
       * A trap for Object.getOwnPropertyDescriptor.
       * Also used by Object.hasOwnProperty.
       */getOwnPropertyDescriptor(target,prop){return target._descriptors.allKeys?Reflect.has(proxy,prop)?{enumerable:true,configurable:true}:undefined:Reflect.getOwnPropertyDescriptor(proxy,prop);},/**
       * A trap for Object.getPrototypeOf.
       */getPrototypeOf(){return Reflect.getPrototypeOf(proxy);},/**
       * A trap for the in operator.
       */has(target,prop){return Reflect.has(proxy,prop);},/**
       * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.
       */ownKeys(){return Reflect.ownKeys(proxy);},/**
       * A trap for setting property values.
       */set(target,prop,value){proxy[prop]=value;// set to proxy
delete target[prop];// remove from cache
return true;}});}/**
   * @private
   */function _descriptors(proxy,defaults={scriptable:true,indexable:true}){const{_scriptable=defaults.scriptable,_indexable=defaults.indexable,_allKeys=defaults.allKeys}=proxy;return{allKeys:_allKeys,scriptable:_scriptable,indexable:_indexable,isScriptable:isFunction(_scriptable)?_scriptable:()=>_scriptable,isIndexable:isFunction(_indexable)?_indexable:()=>_indexable};}const readKey=(prefix,name)=>prefix?prefix+_capitalize(name):name;const needsSubResolver=(prop,value)=>isObject(value)&&prop!=='adapters'&&(Object.getPrototypeOf(value)===null||value.constructor===Object);function _cached(target,prop,resolve){if(Object.prototype.hasOwnProperty.call(target,prop)||prop==='constructor'){return target[prop];}const value=resolve();// cache the resolved value
target[prop]=value;return value;}function _resolveWithContext(target,prop,receiver){const{_proxy,_context,_subProxy,_descriptors:descriptors}=target;let value=_proxy[prop];// resolve from proxy
// resolve with context
if(isFunction(value)&&descriptors.isScriptable(prop)){value=_resolveScriptable(prop,value,target,receiver);}if(isArray(value)&&value.length){value=_resolveArray(prop,value,target,descriptors.isIndexable);}if(needsSubResolver(prop,value)){// if the resolved value is an object, create a sub resolver for it
value=_attachContext(value,_context,_subProxy&&_subProxy[prop],descriptors);}return value;}function _resolveScriptable(prop,getValue,target,receiver){const{_proxy,_context,_subProxy,_stack}=target;if(_stack.has(prop)){throw new Error('Recursion detected: '+Array.from(_stack).join('->')+'->'+prop);}_stack.add(prop);let value=getValue(_context,_subProxy||receiver);_stack.delete(prop);if(needsSubResolver(prop,value)){// When scriptable option returns an object, create a resolver on that.
value=createSubResolver(_proxy._scopes,_proxy,prop,value);}return value;}function _resolveArray(prop,value,target,isIndexable){const{_proxy,_context,_subProxy,_descriptors:descriptors}=target;if(typeof _context.index!=='undefined'&&isIndexable(prop)){return value[_context.index%value.length];}else if(isObject(value[0])){// Array of objects, return array or resolvers
const arr=value;const scopes=_proxy._scopes.filter(s=>s!==arr);value=[];for(const item of arr){const resolver=createSubResolver(scopes,_proxy,prop,item);value.push(_attachContext(resolver,_context,_subProxy&&_subProxy[prop],descriptors));}}return value;}function resolveFallback(fallback,prop,value){return isFunction(fallback)?fallback(prop,value):fallback;}const getScope=(key,parent)=>key===true?parent:typeof key==='string'?resolveObjectKey(parent,key):undefined;function addScopes(set,parentScopes,key,parentFallback,value){for(const parent of parentScopes){const scope=getScope(key,parent);if(scope){set.add(scope);const fallback=resolveFallback(scope._fallback,key,value);if(typeof fallback!=='undefined'&&fallback!==key&&fallback!==parentFallback){// When we reach the descriptor that defines a new _fallback, return that.
// The fallback will resume to that new scope.
return fallback;}}else if(scope===false&&typeof parentFallback!=='undefined'&&key!==parentFallback){// Fallback to `false` results to `false`, when falling back to different key.
// For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`
return null;}}return false;}function createSubResolver(parentScopes,resolver,prop,value){const rootScopes=resolver._rootScopes;const fallback=resolveFallback(resolver._fallback,prop,value);const allScopes=[...parentScopes,...rootScopes];const set=new Set();set.add(value);let key=addScopesFromKey(set,allScopes,prop,fallback||prop,value);if(key===null){return false;}if(typeof fallback!=='undefined'&&fallback!==prop){key=addScopesFromKey(set,allScopes,fallback,key,value);if(key===null){return false;}}return _createResolver(Array.from(set),[''],rootScopes,fallback,()=>subGetTarget(resolver,prop,value));}function addScopesFromKey(set,allScopes,key,fallback,item){while(key){key=addScopes(set,allScopes,key,fallback,item);}return key;}function subGetTarget(resolver,prop,value){const parent=resolver._getTarget();if(!(prop in parent)){parent[prop]={};}const target=parent[prop];if(isArray(target)&&isObject(value)){// For array of objects, the object is used to store updated values
return value;}return target||{};}function _resolveWithPrefixes(prop,prefixes,scopes,proxy){let value;for(const prefix of prefixes){value=_resolve(readKey(prefix,prop),scopes);if(typeof value!=='undefined'){return needsSubResolver(prop,value)?createSubResolver(scopes,proxy,prop,value):value;}}}function _resolve(key,scopes){for(const scope of scopes){if(!scope){continue;}const value=scope[key];if(typeof value!=='undefined'){return value;}}}function getKeysFromAllScopes(target){let keys=target._keys;if(!keys){keys=target._keys=resolveKeysFromAllScopes(target._scopes);}return keys;}function resolveKeysFromAllScopes(scopes){const set=new Set();for(const scope of scopes){for(const key of Object.keys(scope).filter(k=>!k.startsWith('_'))){set.add(key);}}return Array.from(set);}function _parseObjectDataRadialScale(meta,data,start,count){const{iScale}=meta;const{key='r'}=this._parsing;const parsed=new Array(count);let i,ilen,index,item;for(i=0,ilen=count;i<ilen;++i){index=i+start;item=data[index];parsed[i]={r:iScale.parse(resolveObjectKey(item,key),index)};}return parsed;}const EPSILON=Number.EPSILON||1e-14;const getPoint=(points,i)=>i<points.length&&!points[i].skip&&points[i];const getValueAxis=indexAxis=>indexAxis==='x'?'y':'x';function splineCurve(firstPoint,middlePoint,afterPoint,t){// Props to Rob Spencer at scaled innovation for his post on splining between points
// http://scaledinnovation.com/analytics/splines/aboutSplines.html
// This function must also respect "skipped" points
const previous=firstPoint.skip?middlePoint:firstPoint;const current=middlePoint;const next=afterPoint.skip?middlePoint:afterPoint;const d01=distanceBetweenPoints(current,previous);const d12=distanceBetweenPoints(next,current);let s01=d01/(d01+d12);let s12=d12/(d01+d12);// If all points are the same, s01 & s02 will be inf
s01=isNaN(s01)?0:s01;s12=isNaN(s12)?0:s12;const fa=t*s01;// scaling factor for triangle Ta
const fb=t*s12;return{previous:{x:current.x-fa*(next.x-previous.x),y:current.y-fa*(next.y-previous.y)},next:{x:current.x+fb*(next.x-previous.x),y:current.y+fb*(next.y-previous.y)}};}/**
   * Adjust tangents to ensure monotonic properties
   */function monotoneAdjust(points,deltaK,mK){const pointsLen=points.length;let alphaK,betaK,tauK,squaredMagnitude,pointCurrent;let pointAfter=getPoint(points,0);for(let i=0;i<pointsLen-1;++i){pointCurrent=pointAfter;pointAfter=getPoint(points,i+1);if(!pointCurrent||!pointAfter){continue;}if(almostEquals(deltaK[i],0,EPSILON)){mK[i]=mK[i+1]=0;continue;}alphaK=mK[i]/deltaK[i];betaK=mK[i+1]/deltaK[i];squaredMagnitude=Math.pow(alphaK,2)+Math.pow(betaK,2);if(squaredMagnitude<=9){continue;}tauK=3/Math.sqrt(squaredMagnitude);mK[i]=alphaK*tauK*deltaK[i];mK[i+1]=betaK*tauK*deltaK[i];}}function monotoneCompute(points,mK,indexAxis='x'){const valueAxis=getValueAxis(indexAxis);const pointsLen=points.length;let delta,pointBefore,pointCurrent;let pointAfter=getPoint(points,0);for(let i=0;i<pointsLen;++i){pointBefore=pointCurrent;pointCurrent=pointAfter;pointAfter=getPoint(points,i+1);if(!pointCurrent){continue;}const iPixel=pointCurrent[indexAxis];const vPixel=pointCurrent[valueAxis];if(pointBefore){delta=(iPixel-pointBefore[indexAxis])/3;pointCurrent[`cp1${indexAxis}`]=iPixel-delta;pointCurrent[`cp1${valueAxis}`]=vPixel-delta*mK[i];}if(pointAfter){delta=(pointAfter[indexAxis]-iPixel)/3;pointCurrent[`cp2${indexAxis}`]=iPixel+delta;pointCurrent[`cp2${valueAxis}`]=vPixel+delta*mK[i];}}}/**
   * This function calculates Bézier control points in a similar way than |splineCurve|,
   * but preserves monotonicity of the provided data and ensures no local extremums are added
   * between the dataset discrete points due to the interpolation.
   * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation
   */function splineCurveMonotone(points,indexAxis='x'){const valueAxis=getValueAxis(indexAxis);const pointsLen=points.length;const deltaK=Array(pointsLen).fill(0);const mK=Array(pointsLen);// Calculate slopes (deltaK) and initialize tangents (mK)
let i,pointBefore,pointCurrent;let pointAfter=getPoint(points,0);for(i=0;i<pointsLen;++i){pointBefore=pointCurrent;pointCurrent=pointAfter;pointAfter=getPoint(points,i+1);if(!pointCurrent){continue;}if(pointAfter){const slopeDelta=pointAfter[indexAxis]-pointCurrent[indexAxis];// In the case of two points that appear at the same x pixel, slopeDeltaX is 0
deltaK[i]=slopeDelta!==0?(pointAfter[valueAxis]-pointCurrent[valueAxis])/slopeDelta:0;}mK[i]=!pointBefore?deltaK[i]:!pointAfter?deltaK[i-1]:sign$1(deltaK[i-1])!==sign$1(deltaK[i])?0:(deltaK[i-1]+deltaK[i])/2;}monotoneAdjust(points,deltaK,mK);monotoneCompute(points,mK,indexAxis);}function capControlPoint(pt,min,max){return Math.max(Math.min(pt,max),min);}function capBezierPoints(points,area){let i,ilen,point,inArea,inAreaPrev;let inAreaNext=_isPointInArea(points[0],area);for(i=0,ilen=points.length;i<ilen;++i){inAreaPrev=inArea;inArea=inAreaNext;inAreaNext=i<ilen-1&&_isPointInArea(points[i+1],area);if(!inArea){continue;}point=points[i];if(inAreaPrev){point.cp1x=capControlPoint(point.cp1x,area.left,area.right);point.cp1y=capControlPoint(point.cp1y,area.top,area.bottom);}if(inAreaNext){point.cp2x=capControlPoint(point.cp2x,area.left,area.right);point.cp2y=capControlPoint(point.cp2y,area.top,area.bottom);}}}/**
   * @private
   */function _updateBezierControlPoints(points,options,area,loop,indexAxis){let i,ilen,point,controlPoints;// Only consider points that are drawn in case the spanGaps option is used
if(options.spanGaps){points=points.filter(pt=>!pt.skip);}if(options.cubicInterpolationMode==='monotone'){splineCurveMonotone(points,indexAxis);}else{let prev=loop?points[points.length-1]:points[0];for(i=0,ilen=points.length;i<ilen;++i){point=points[i];controlPoints=splineCurve(prev,point,points[Math.min(i+1,ilen-(loop?0:1))%ilen],options.tension);point.cp1x=controlPoints.previous.x;point.cp1y=controlPoints.previous.y;point.cp2x=controlPoints.next.x;point.cp2y=controlPoints.next.y;prev=point;}}if(options.capBezierPoints){capBezierPoints(points,area);}}/**
   * @private
   */function _isDomSupported(){return typeof window!=='undefined'&&typeof document!=='undefined';}/**
   * @private
   */function _getParentNode(domNode){let parent=domNode.parentNode;if(parent&&parent.toString()==='[object ShadowRoot]'){parent=parent.host;}return parent;}/**
   * convert max-width/max-height values that may be percentages into a number
   * @private
   */function parseMaxStyle(styleValue,node,parentProperty){let valueInPixels;if(typeof styleValue==='string'){valueInPixels=parseInt(styleValue,10);if(styleValue.indexOf('%')!==-1){// percentage * size in dimension
valueInPixels=valueInPixels/100*node.parentNode[parentProperty];}}else{valueInPixels=styleValue;}return valueInPixels;}const getComputedStyle$1=element=>element.ownerDocument.defaultView.getComputedStyle(element,null);function getStyle(el,property){return getComputedStyle$1(el).getPropertyValue(property);}const positions=['top','right','bottom','left'];function getPositionedStyle(styles,style,suffix){const result={};suffix=suffix?'-'+suffix:'';for(let i=0;i<4;i++){const pos=positions[i];result[pos]=parseFloat(styles[style+'-'+pos+suffix])||0;}result.width=result.left+result.right;result.height=result.top+result.bottom;return result;}const useOffsetPos=(x,y,target)=>(x>0||y>0)&&(!target||!target.shadowRoot);/**
   * @param e
   * @param canvas
   * @returns Canvas position
   */function getCanvasPosition(e,canvas){const touches=e.touches;const source=touches&&touches.length?touches[0]:e;const{offsetX,offsetY}=source;let box=false;let x,y;if(useOffsetPos(offsetX,offsetY,e.target)){x=offsetX;y=offsetY;}else{const rect=canvas.getBoundingClientRect();x=source.clientX-rect.left;y=source.clientY-rect.top;box=true;}return{x,y,box};}/**
   * Gets an event's x, y coordinates, relative to the chart area
   * @param event
   * @param chart
   * @returns x and y coordinates of the event
   */function getRelativePosition(event,chart){if('native'in event){return event;}const{canvas,currentDevicePixelRatio}=chart;const style=getComputedStyle$1(canvas);const borderBox=style.boxSizing==='border-box';const paddings=getPositionedStyle(style,'padding');const borders=getPositionedStyle(style,'border','width');const{x,y,box}=getCanvasPosition(event,canvas);const xOffset=paddings.left+(box&&borders.left);const yOffset=paddings.top+(box&&borders.top);let{width,height}=chart;if(borderBox){width-=paddings.width+borders.width;height-=paddings.height+borders.height;}return{x:Math.round((x-xOffset)/width*canvas.width/currentDevicePixelRatio),y:Math.round((y-yOffset)/height*canvas.height/currentDevicePixelRatio)};}function getContainerSize(canvas,width,height){let maxWidth,maxHeight;if(width===undefined||height===undefined){const container=canvas&&_getParentNode(canvas);if(!container){width=canvas.clientWidth;height=canvas.clientHeight;}else{const rect=container.getBoundingClientRect();// this is the border box of the container
const containerStyle=getComputedStyle$1(container);const containerBorder=getPositionedStyle(containerStyle,'border','width');const containerPadding=getPositionedStyle(containerStyle,'padding');width=rect.width-containerPadding.width-containerBorder.width;height=rect.height-containerPadding.height-containerBorder.height;maxWidth=parseMaxStyle(containerStyle.maxWidth,container,'clientWidth');maxHeight=parseMaxStyle(containerStyle.maxHeight,container,'clientHeight');}}return{width,height,maxWidth:maxWidth||INFINITY,maxHeight:maxHeight||INFINITY};}const round1=v=>Math.round(v*10)/10;// eslint-disable-next-line complexity
function getMaximumSize(canvas,bbWidth,bbHeight,aspectRatio){const style=getComputedStyle$1(canvas);const margins=getPositionedStyle(style,'margin');const maxWidth=parseMaxStyle(style.maxWidth,canvas,'clientWidth')||INFINITY;const maxHeight=parseMaxStyle(style.maxHeight,canvas,'clientHeight')||INFINITY;const containerSize=getContainerSize(canvas,bbWidth,bbHeight);let{width,height}=containerSize;if(style.boxSizing==='content-box'){const borders=getPositionedStyle(style,'border','width');const paddings=getPositionedStyle(style,'padding');width-=paddings.width+borders.width;height-=paddings.height+borders.height;}width=Math.max(0,width-margins.width);height=Math.max(0,aspectRatio?width/aspectRatio:height-margins.height);width=round1(Math.min(width,maxWidth,containerSize.maxWidth));height=round1(Math.min(height,maxHeight,containerSize.maxHeight));if(width&&!height){// https://github.com/chartjs/Chart.js/issues/4659
// If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)
height=round1(width/2);}const maintainHeight=bbWidth!==undefined||bbHeight!==undefined;if(maintainHeight&&aspectRatio&&containerSize.height&&height>containerSize.height){height=containerSize.height;width=round1(Math.floor(height*aspectRatio));}return{width,height};}/**
   * @param chart
   * @param forceRatio
   * @param forceStyle
   * @returns True if the canvas context size or transformation has changed.
   */function retinaScale(chart,forceRatio,forceStyle){const pixelRatio=forceRatio||1;const deviceHeight=Math.floor(chart.height*pixelRatio);const deviceWidth=Math.floor(chart.width*pixelRatio);chart.height=Math.floor(chart.height);chart.width=Math.floor(chart.width);const canvas=chart.canvas;// If no style has been set on the canvas, the render size is used as display size,
// making the chart visually bigger, so let's enforce it to the "correct" values.
// See https://github.com/chartjs/Chart.js/issues/3575
if(canvas.style&&(forceStyle||!canvas.style.height&&!canvas.style.width)){canvas.style.height=`${chart.height}px`;canvas.style.width=`${chart.width}px`;}if(chart.currentDevicePixelRatio!==pixelRatio||canvas.height!==deviceHeight||canvas.width!==deviceWidth){chart.currentDevicePixelRatio=pixelRatio;canvas.height=deviceHeight;canvas.width=deviceWidth;chart.ctx.setTransform(pixelRatio,0,0,pixelRatio,0,0);return true;}return false;}/**
   * Detects support for options object argument in addEventListener.
   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support
   * @private
   */const supportsEventListenerOptions=function(){let passiveSupported=false;try{const options={get passive(){passiveSupported=true;return false;}};if(_isDomSupported()){window.addEventListener('test',null,options);window.removeEventListener('test',null,options);}}catch(e){// continue regardless of error
}return passiveSupported;}();/**
   * The "used" size is the final value of a dimension property after all calculations have
   * been performed. This method uses the computed style of `element` but returns undefined
   * if the computed style is not expressed in pixels. That can happen in some cases where
   * `element` has a size relative to its parent and this last one is not yet displayed,
   * for example because of `display: none` on a parent node.
   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value
   * @returns Size in pixels or undefined if unknown.
   */function readUsedSize(element,property){const value=getStyle(element,property);const matches=value&&value.match(/^(\d+)(\.\d+)?px$/);return matches?+matches[1]:undefined;}/**
   * @private
   */function _pointInLine(p1,p2,t,mode){return{x:p1.x+t*(p2.x-p1.x),y:p1.y+t*(p2.y-p1.y)};}/**
   * @private
   */function _steppedInterpolation(p1,p2,t,mode){return{x:p1.x+t*(p2.x-p1.x),y:mode==='middle'?t<0.5?p1.y:p2.y:mode==='after'?t<1?p1.y:p2.y:t>0?p2.y:p1.y};}/**
   * @private
   */function _bezierInterpolation(p1,p2,t,mode){const cp1={x:p1.cp2x,y:p1.cp2y};const cp2={x:p2.cp1x,y:p2.cp1y};const a=_pointInLine(p1,cp1,t);const b=_pointInLine(cp1,cp2,t);const c=_pointInLine(cp2,p2,t);const d=_pointInLine(a,b,t);const e=_pointInLine(b,c,t);return _pointInLine(d,e,t);}const getRightToLeftAdapter=function(rectX,width){return{x(x){return rectX+rectX+width-x;},setWidth(w){width=w;},textAlign(align){if(align==='center'){return align;}return align==='right'?'left':'right';},xPlus(x,value){return x-value;},leftForLtr(x,itemWidth){return x-itemWidth;}};};const getLeftToRightAdapter=function(){return{x(x){return x;},setWidth(w){},textAlign(align){return align;},xPlus(x,value){return x+value;},leftForLtr(x,_itemWidth){return x;}};};function getRtlAdapter(rtl,rectX,width){return rtl?getRightToLeftAdapter(rectX,width):getLeftToRightAdapter();}function overrideTextDirection(ctx,direction){let style,original;if(direction==='ltr'||direction==='rtl'){style=ctx.canvas.style;original=[style.getPropertyValue('direction'),style.getPropertyPriority('direction')];style.setProperty('direction',direction,'important');ctx.prevTextDirection=original;}}function restoreTextDirection(ctx,original){if(original!==undefined){delete ctx.prevTextDirection;ctx.canvas.style.setProperty('direction',original[0],original[1]);}}function propertyFn(property){if(property==='angle'){return{between:_angleBetween,compare:_angleDiff,normalize:_normalizeAngle};}return{between:_isBetween,compare:(a,b)=>a-b,normalize:x=>x};}function normalizeSegment({start,end,count,loop,style}){return{start:start%count,end:end%count,loop:loop&&(end-start+1)%count===0,style};}function getSegment(segment,points,bounds){const{property,start:startBound,end:endBound}=bounds;const{between,normalize}=propertyFn(property);const count=points.length;let{start,end,loop}=segment;let i,ilen;if(loop){start+=count;end+=count;for(i=0,ilen=count;i<ilen;++i){if(!between(normalize(points[start%count][property]),startBound,endBound)){break;}start--;end--;}start%=count;end%=count;}if(end<start){end+=count;}return{start,end,loop,style:segment.style};}function _boundSegment(segment,points,bounds){if(!bounds){return[segment];}const{property,start:startBound,end:endBound}=bounds;const count=points.length;const{compare,between,normalize}=propertyFn(property);const{start,end,loop,style}=getSegment(segment,points,bounds);const result=[];let inside=false;let subStart=null;let value,point,prevValue;const startIsBefore=()=>between(startBound,prevValue,value)&&compare(startBound,prevValue)!==0;const endIsBefore=()=>compare(endBound,value)===0||between(endBound,prevValue,value);const shouldStart=()=>inside||startIsBefore();const shouldStop=()=>!inside||endIsBefore();for(let i=start,prev=start;i<=end;++i){point=points[i%count];if(point.skip){continue;}value=normalize(point[property]);if(value===prevValue){continue;}inside=between(value,startBound,endBound);if(subStart===null&&shouldStart()){subStart=compare(value,startBound)===0?i:prev;}if(subStart!==null&&shouldStop()){result.push(normalizeSegment({start:subStart,end:i,loop,count,style}));subStart=null;}prev=i;prevValue=value;}if(subStart!==null){result.push(normalizeSegment({start:subStart,end,loop,count,style}));}return result;}function _boundSegments(line,bounds){const result=[];const segments=line.segments;for(let i=0;i<segments.length;i++){const sub=_boundSegment(segments[i],line.points,bounds);if(sub.length){result.push(...sub);}}return result;}function findStartAndEnd(points,count,loop,spanGaps){let start=0;let end=count-1;if(loop&&!spanGaps){while(start<count&&!points[start].skip){start++;}}while(start<count&&points[start].skip){start++;}start%=count;if(loop){end+=start;}while(end>start&&points[end%count].skip){end--;}end%=count;return{start,end};}function solidSegments(points,start,max,loop){const count=points.length;const result=[];let last=start;let prev=points[start];let end;for(end=start+1;end<=max;++end){const cur=points[end%count];if(cur.skip||cur.stop){if(!prev.skip){loop=false;result.push({start:start%count,end:(end-1)%count,loop});start=last=cur.stop?end:null;}}else{last=end;if(prev.skip){start=end;}}prev=cur;}if(last!==null){result.push({start:start%count,end:last%count,loop});}return result;}function _computeSegments(line,segmentOptions){const points=line.points;const spanGaps=line.options.spanGaps;const count=points.length;if(!count){return[];}const loop=!!line._loop;const{start,end}=findStartAndEnd(points,count,loop,spanGaps);if(spanGaps===true){return splitByStyles(line,[{start,end,loop}],points,segmentOptions);}const max=end<start?end+count:end;const completeLoop=!!line._fullLoop&&start===0&&end===count-1;return splitByStyles(line,solidSegments(points,start,max,completeLoop),points,segmentOptions);}function splitByStyles(line,segments,points,segmentOptions){if(!segmentOptions||!segmentOptions.setContext||!points){return segments;}return doSplitByStyles(line,segments,points,segmentOptions);}function doSplitByStyles(line,segments,points,segmentOptions){const chartContext=line._chart.getContext();const baseStyle=readStyle(line.options);const{_datasetIndex:datasetIndex,options:{spanGaps}}=line;const count=points.length;const result=[];let prevStyle=baseStyle;let start=segments[0].start;let i=start;function addStyle(s,e,l,st){const dir=spanGaps?-1:1;if(s===e){return;}s+=count;while(points[s%count].skip){s-=dir;}while(points[e%count].skip){e+=dir;}if(s%count!==e%count){result.push({start:s%count,end:e%count,loop:l,style:st});prevStyle=st;start=e%count;}}for(const segment of segments){start=spanGaps?start:segment.start;let prev=points[start%count];let style;for(i=start+1;i<=segment.end;i++){const pt=points[i%count];style=readStyle(segmentOptions.setContext(createContext(chartContext,{type:'segment',p0:prev,p1:pt,p0DataIndex:(i-1)%count,p1DataIndex:i%count,datasetIndex})));if(styleChanged(style,prevStyle)){addStyle(start,i-1,segment.loop,prevStyle);}prev=pt;prevStyle=style;}if(start<i-1){addStyle(start,i-1,segment.loop,prevStyle);}}return result;}function readStyle(options){return{backgroundColor:options.backgroundColor,borderCapStyle:options.borderCapStyle,borderDash:options.borderDash,borderDashOffset:options.borderDashOffset,borderJoinStyle:options.borderJoinStyle,borderWidth:options.borderWidth,borderColor:options.borderColor};}function styleChanged(style,prevStyle){if(!prevStyle){return false;}const cache=[];const replacer=function(key,value){if(!isPatternOrGradient(value)){return value;}if(!cache.includes(value)){cache.push(value);}return cache.indexOf(value);};return JSON.stringify(style,replacer)!==JSON.stringify(prevStyle,replacer);}function getSizeForArea(scale,chartArea,field){return scale.options.clip?scale[field]:chartArea[field];}function getDatasetArea(meta,chartArea){const{xScale,yScale}=meta;if(xScale&&yScale){return{left:getSizeForArea(xScale,chartArea,'left'),right:getSizeForArea(xScale,chartArea,'right'),top:getSizeForArea(yScale,chartArea,'top'),bottom:getSizeForArea(yScale,chartArea,'bottom')};}return chartArea;}function getDatasetClipArea(chart,meta){const clip=meta._clip;if(clip.disabled){return false;}const area=getDatasetArea(meta,chart.chartArea);return{left:clip.left===false?0:area.left-(clip.left===true?0:clip.left),right:clip.right===false?chart.width:area.right+(clip.right===true?0:clip.right),top:clip.top===false?0:area.top-(clip.top===true?0:clip.top),bottom:clip.bottom===false?chart.height:area.bottom+(clip.bottom===true?0:clip.bottom)};}/*!
   * Chart.js v4.4.9
   * https://www.chartjs.org
   * (c) 2025 Chart.js Contributors
   * Released under the MIT License
   */class Animator{constructor(){this._request=null;this._charts=new Map();this._running=false;this._lastDate=undefined;}_notify(chart,anims,date,type){const callbacks=anims.listeners[type];const numSteps=anims.duration;callbacks.forEach(fn=>fn({chart,initial:anims.initial,numSteps,currentStep:Math.min(date-anims.start,numSteps)}));}_refresh(){if(this._request){return;}this._running=true;this._request=requestAnimFrame.call(window,()=>{this._update();this._request=null;if(this._running){this._refresh();}});}_update(date=Date.now()){let remaining=0;this._charts.forEach((anims,chart)=>{if(!anims.running||!anims.items.length){return;}const items=anims.items;let i=items.length-1;let draw=false;let item;for(;i>=0;--i){item=items[i];if(item._active){if(item._total>anims.duration){anims.duration=item._total;}item.tick(date);draw=true;}else{items[i]=items[items.length-1];items.pop();}}if(draw){chart.draw();this._notify(chart,anims,date,'progress');}if(!items.length){anims.running=false;this._notify(chart,anims,date,'complete');anims.initial=false;}remaining+=items.length;});this._lastDate=date;if(remaining===0){this._running=false;}}_getAnims(chart){const charts=this._charts;let anims=charts.get(chart);if(!anims){anims={running:false,initial:true,items:[],listeners:{complete:[],progress:[]}};charts.set(chart,anims);}return anims;}listen(chart,event,cb){this._getAnims(chart).listeners[event].push(cb);}add(chart,items){if(!items||!items.length){return;}this._getAnims(chart).items.push(...items);}has(chart){return this._getAnims(chart).items.length>0;}start(chart){const anims=this._charts.get(chart);if(!anims){return;}anims.running=true;anims.start=Date.now();anims.duration=anims.items.reduce((acc,cur)=>Math.max(acc,cur._duration),0);this._refresh();}running(chart){if(!this._running){return false;}const anims=this._charts.get(chart);if(!anims||!anims.running||!anims.items.length){return false;}return true;}stop(chart){const anims=this._charts.get(chart);if(!anims||!anims.items.length){return;}const items=anims.items;let i=items.length-1;for(;i>=0;--i){items[i].cancel();}anims.items=[];this._notify(chart,anims,Date.now(),'complete');}remove(chart){return this._charts.delete(chart);}}var animator=/* #__PURE__ */new Animator();const transparent='transparent';const interpolators={boolean(from,to,factor){return factor>0.5?to:from;},color(from,to,factor){const c0=color$1(from||transparent);const c1=c0.valid&&color$1(to||transparent);return c1&&c1.valid?c1.mix(c0,factor).hexString():to;},number(from,to,factor){return from+(to-from)*factor;}};class Animation{constructor(cfg,target,prop,to){const currentValue=target[prop];to=resolve([cfg.to,to,currentValue,cfg.from]);const from=resolve([cfg.from,currentValue,to]);this._active=true;this._fn=cfg.fn||interpolators[cfg.type||typeof from];this._easing=effects[cfg.easing]||effects.linear;this._start=Math.floor(Date.now()+(cfg.delay||0));this._duration=this._total=Math.floor(cfg.duration);this._loop=!!cfg.loop;this._target=target;this._prop=prop;this._from=from;this._to=to;this._promises=undefined;}active(){return this._active;}update(cfg,to,date){if(this._active){this._notify(false);const currentValue=this._target[this._prop];const elapsed=date-this._start;const remain=this._duration-elapsed;this._start=date;this._duration=Math.floor(Math.max(remain,cfg.duration));this._total+=elapsed;this._loop=!!cfg.loop;this._to=resolve([cfg.to,to,currentValue,cfg.from]);this._from=resolve([cfg.from,currentValue,to]);}}cancel(){if(this._active){this.tick(Date.now());this._active=false;this._notify(false);}}tick(date){const elapsed=date-this._start;const duration=this._duration;const prop=this._prop;const from=this._from;const loop=this._loop;const to=this._to;let factor;this._active=from!==to&&(loop||elapsed<duration);if(!this._active){this._target[prop]=to;this._notify(true);return;}if(elapsed<0){this._target[prop]=from;return;}factor=elapsed/duration%2;factor=loop&&factor>1?2-factor:factor;factor=this._easing(Math.min(1,Math.max(0,factor)));this._target[prop]=this._fn(from,to,factor);}wait(){const promises=this._promises||(this._promises=[]);return new Promise((res,rej)=>{promises.push({res,rej});});}_notify(resolved){const method=resolved?'res':'rej';const promises=this._promises||[];for(let i=0;i<promises.length;i++){promises[i][method]();}}}class Animations{constructor(chart,config){this._chart=chart;this._properties=new Map();this.configure(config);}configure(config){if(!isObject(config)){return;}const animationOptions=Object.keys(defaults.animation);const animatedProps=this._properties;Object.getOwnPropertyNames(config).forEach(key=>{const cfg=config[key];if(!isObject(cfg)){return;}const resolved={};for(const option of animationOptions){resolved[option]=cfg[option];}(isArray(cfg.properties)&&cfg.properties||[key]).forEach(prop=>{if(prop===key||!animatedProps.has(prop)){animatedProps.set(prop,resolved);}});});}_animateOptions(target,values){const newOptions=values.options;const options=resolveTargetOptions(target,newOptions);if(!options){return[];}const animations=this._createAnimations(options,newOptions);if(newOptions.$shared){awaitAll(target.options.$animations,newOptions).then(()=>{target.options=newOptions;},()=>{});}return animations;}_createAnimations(target,values){const animatedProps=this._properties;const animations=[];const running=target.$animations||(target.$animations={});const props=Object.keys(values);const date=Date.now();let i;for(i=props.length-1;i>=0;--i){const prop=props[i];if(prop.charAt(0)==='$'){continue;}if(prop==='options'){animations.push(...this._animateOptions(target,values));continue;}const value=values[prop];let animation=running[prop];const cfg=animatedProps.get(prop);if(animation){if(cfg&&animation.active()){animation.update(cfg,value,date);continue;}else{animation.cancel();}}if(!cfg||!cfg.duration){target[prop]=value;continue;}running[prop]=animation=new Animation(cfg,target,prop,value);animations.push(animation);}return animations;}update(target,values){if(this._properties.size===0){Object.assign(target,values);return;}const animations=this._createAnimations(target,values);if(animations.length){animator.add(this._chart,animations);return true;}}}function awaitAll(animations,properties){const running=[];const keys=Object.keys(properties);for(let i=0;i<keys.length;i++){const anim=animations[keys[i]];if(anim&&anim.active()){running.push(anim.wait());}}return Promise.all(running);}function resolveTargetOptions(target,newOptions){if(!newOptions){return;}let options=target.options;if(!options){target.options=newOptions;return;}if(options.$shared){target.options=options=Object.assign({},options,{$shared:false,$animations:{}});}return options;}function scaleClip(scale,allowedOverflow){const opts=scale&&scale.options||{};const reverse=opts.reverse;const min=opts.min===undefined?allowedOverflow:0;const max=opts.max===undefined?allowedOverflow:0;return{start:reverse?max:min,end:reverse?min:max};}function defaultClip(xScale,yScale,allowedOverflow){if(allowedOverflow===false){return false;}const x=scaleClip(xScale,allowedOverflow);const y=scaleClip(yScale,allowedOverflow);return{top:y.end,right:x.end,bottom:y.start,left:x.start};}function toClip(value){let t,r,b,l;if(isObject(value)){t=value.top;r=value.right;b=value.bottom;l=value.left;}else{t=r=b=l=value;}return{top:t,right:r,bottom:b,left:l,disabled:value===false};}function getSortedDatasetIndices(chart,filterVisible){const keys=[];const metasets=chart._getSortedDatasetMetas(filterVisible);let i,ilen;for(i=0,ilen=metasets.length;i<ilen;++i){keys.push(metasets[i].index);}return keys;}function applyStack(stack,value,dsIndex,options={}){const keys=stack.keys;const singleMode=options.mode==='single';let i,ilen,datasetIndex,otherValue;if(value===null){return;}let found=false;for(i=0,ilen=keys.length;i<ilen;++i){datasetIndex=+keys[i];if(datasetIndex===dsIndex){found=true;if(options.all){continue;}break;}otherValue=stack.values[datasetIndex];if(isNumberFinite(otherValue)&&(singleMode||value===0||sign$1(value)===sign$1(otherValue))){value+=otherValue;}}if(!found&&!options.all){return 0;}return value;}function convertObjectDataToArray(data,meta){const{iScale,vScale}=meta;const iAxisKey=iScale.axis==='x'?'x':'y';const vAxisKey=vScale.axis==='x'?'x':'y';const keys=Object.keys(data);const adata=new Array(keys.length);let i,ilen,key;for(i=0,ilen=keys.length;i<ilen;++i){key=keys[i];adata[i]={[iAxisKey]:key,[vAxisKey]:data[key]};}return adata;}function isStacked(scale,meta){const stacked=scale&&scale.options.stacked;return stacked||stacked===undefined&&meta.stack!==undefined;}function getStackKey(indexScale,valueScale,meta){return`${indexScale.id}.${valueScale.id}.${meta.stack||meta.type}`;}function getUserBounds(scale){const{min,max,minDefined,maxDefined}=scale.getUserBounds();return{min:minDefined?min:Number.NEGATIVE_INFINITY,max:maxDefined?max:Number.POSITIVE_INFINITY};}function getOrCreateStack(stacks,stackKey,indexValue){const subStack=stacks[stackKey]||(stacks[stackKey]={});return subStack[indexValue]||(subStack[indexValue]={});}function getLastIndexInStack(stack,vScale,positive,type){for(const meta of vScale.getMatchingVisibleMetas(type).reverse()){const value=stack[meta.index];if(positive&&value>0||!positive&&value<0){return meta.index;}}return null;}function updateStacks(controller,parsed){const{chart,_cachedMeta:meta}=controller;const stacks=chart._stacks||(chart._stacks={});const{iScale,vScale,index:datasetIndex}=meta;const iAxis=iScale.axis;const vAxis=vScale.axis;const key=getStackKey(iScale,vScale,meta);const ilen=parsed.length;let stack;for(let i=0;i<ilen;++i){const item=parsed[i];const{[iAxis]:index,[vAxis]:value}=item;const itemStacks=item._stacks||(item._stacks={});stack=itemStacks[vAxis]=getOrCreateStack(stacks,key,index);stack[datasetIndex]=value;stack._top=getLastIndexInStack(stack,vScale,true,meta.type);stack._bottom=getLastIndexInStack(stack,vScale,false,meta.type);const visualValues=stack._visualValues||(stack._visualValues={});visualValues[datasetIndex]=value;}}function getFirstScaleId(chart,axis){const scales=chart.scales;return Object.keys(scales).filter(key=>scales[key].axis===axis).shift();}function createDatasetContext(parent,index){return createContext(parent,{active:false,dataset:undefined,datasetIndex:index,index,mode:'default',type:'dataset'});}function createDataContext(parent,index,element){return createContext(parent,{active:false,dataIndex:index,parsed:undefined,raw:undefined,element,index,mode:'default',type:'data'});}function clearStacks(meta,items){const datasetIndex=meta.controller.index;const axis=meta.vScale&&meta.vScale.axis;if(!axis){return;}items=items||meta._parsed;for(const parsed of items){const stacks=parsed._stacks;if(!stacks||stacks[axis]===undefined||stacks[axis][datasetIndex]===undefined){return;}delete stacks[axis][datasetIndex];if(stacks[axis]._visualValues!==undefined&&stacks[axis]._visualValues[datasetIndex]!==undefined){delete stacks[axis]._visualValues[datasetIndex];}}}const isDirectUpdateMode=mode=>mode==='reset'||mode==='none';const cloneIfNotShared=(cached,shared)=>shared?cached:Object.assign({},cached);const createStack=(canStack,meta,chart)=>canStack&&!meta.hidden&&meta._stacked&&{keys:getSortedDatasetIndices(chart,true),values:null};class DatasetController{static defaults={};static datasetElementType=null;static dataElementType=null;constructor(chart,datasetIndex){this.chart=chart;this._ctx=chart.ctx;this.index=datasetIndex;this._cachedDataOpts={};this._cachedMeta=this.getMeta();this._type=this._cachedMeta.type;this.options=undefined;this._parsing=false;this._data=undefined;this._objectData=undefined;this._sharedOptions=undefined;this._drawStart=undefined;this._drawCount=undefined;this.enableOptionSharing=false;this.supportsDecimation=false;this.$context=undefined;this._syncList=[];this.datasetElementType=new.target.datasetElementType;this.dataElementType=new.target.dataElementType;this.initialize();}initialize(){const meta=this._cachedMeta;this.configure();this.linkScales();meta._stacked=isStacked(meta.vScale,meta);this.addElements();if(this.options.fill&&!this.chart.isPluginEnabled('filler')){void 0;}}updateIndex(datasetIndex){if(this.index!==datasetIndex){clearStacks(this._cachedMeta);}this.index=datasetIndex;}linkScales(){const chart=this.chart;const meta=this._cachedMeta;const dataset=this.getDataset();const chooseId=(axis,x,y,r)=>axis==='x'?x:axis==='r'?r:y;const xid=meta.xAxisID=valueOrDefault(dataset.xAxisID,getFirstScaleId(chart,'x'));const yid=meta.yAxisID=valueOrDefault(dataset.yAxisID,getFirstScaleId(chart,'y'));const rid=meta.rAxisID=valueOrDefault(dataset.rAxisID,getFirstScaleId(chart,'r'));const indexAxis=meta.indexAxis;const iid=meta.iAxisID=chooseId(indexAxis,xid,yid,rid);const vid=meta.vAxisID=chooseId(indexAxis,yid,xid,rid);meta.xScale=this.getScaleForId(xid);meta.yScale=this.getScaleForId(yid);meta.rScale=this.getScaleForId(rid);meta.iScale=this.getScaleForId(iid);meta.vScale=this.getScaleForId(vid);}getDataset(){return this.chart.data.datasets[this.index];}getMeta(){return this.chart.getDatasetMeta(this.index);}getScaleForId(scaleID){return this.chart.scales[scaleID];}_getOtherScale(scale){const meta=this._cachedMeta;return scale===meta.iScale?meta.vScale:meta.iScale;}reset(){this._update('reset');}_destroy(){const meta=this._cachedMeta;if(this._data){unlistenArrayEvents(this._data,this);}if(meta._stacked){clearStacks(meta);}}_dataCheck(){const dataset=this.getDataset();const data=dataset.data||(dataset.data=[]);const _data=this._data;if(isObject(data)){const meta=this._cachedMeta;this._data=convertObjectDataToArray(data,meta);}else if(_data!==data){if(_data){unlistenArrayEvents(_data,this);const meta=this._cachedMeta;clearStacks(meta);meta._parsed=[];}if(data&&Object.isExtensible(data)){listenArrayEvents(data,this);}this._syncList=[];this._data=data;}}addElements(){const meta=this._cachedMeta;this._dataCheck();if(this.datasetElementType){meta.dataset=new this.datasetElementType();}}buildOrUpdateElements(resetNewElements){const meta=this._cachedMeta;const dataset=this.getDataset();let stackChanged=false;this._dataCheck();const oldStacked=meta._stacked;meta._stacked=isStacked(meta.vScale,meta);if(meta.stack!==dataset.stack){stackChanged=true;clearStacks(meta);meta.stack=dataset.stack;}this._resyncElements(resetNewElements);if(stackChanged||oldStacked!==meta._stacked){updateStacks(this,meta._parsed);meta._stacked=isStacked(meta.vScale,meta);}}configure(){const config=this.chart.config;const scopeKeys=config.datasetScopeKeys(this._type);const scopes=config.getOptionScopes(this.getDataset(),scopeKeys,true);this.options=config.createResolver(scopes,this.getContext());this._parsing=this.options.parsing;this._cachedDataOpts={};}parse(start,count){const{_cachedMeta:meta,_data:data}=this;const{iScale,_stacked}=meta;const iAxis=iScale.axis;let sorted=start===0&&count===data.length?true:meta._sorted;let prev=start>0&&meta._parsed[start-1];let i,cur,parsed;if(this._parsing===false){meta._parsed=data;meta._sorted=true;parsed=data;}else{if(isArray(data[start])){parsed=this.parseArrayData(meta,data,start,count);}else if(isObject(data[start])){parsed=this.parseObjectData(meta,data,start,count);}else{parsed=this.parsePrimitiveData(meta,data,start,count);}const isNotInOrderComparedToPrev=()=>cur[iAxis]===null||prev&&cur[iAxis]<prev[iAxis];for(i=0;i<count;++i){meta._parsed[i+start]=cur=parsed[i];if(sorted){if(isNotInOrderComparedToPrev()){sorted=false;}prev=cur;}}meta._sorted=sorted;}if(_stacked){updateStacks(this,parsed);}}parsePrimitiveData(meta,data,start,count){const{iScale,vScale}=meta;const iAxis=iScale.axis;const vAxis=vScale.axis;const labels=iScale.getLabels();const singleScale=iScale===vScale;const parsed=new Array(count);let i,ilen,index;for(i=0,ilen=count;i<ilen;++i){index=i+start;parsed[i]={[iAxis]:singleScale||iScale.parse(labels[index],index),[vAxis]:vScale.parse(data[index],index)};}return parsed;}parseArrayData(meta,data,start,count){const{xScale,yScale}=meta;const parsed=new Array(count);let i,ilen,index,item;for(i=0,ilen=count;i<ilen;++i){index=i+start;item=data[index];parsed[i]={x:xScale.parse(item[0],index),y:yScale.parse(item[1],index)};}return parsed;}parseObjectData(meta,data,start,count){const{xScale,yScale}=meta;const{xAxisKey='x',yAxisKey='y'}=this._parsing;const parsed=new Array(count);let i,ilen,index,item;for(i=0,ilen=count;i<ilen;++i){index=i+start;item=data[index];parsed[i]={x:xScale.parse(resolveObjectKey(item,xAxisKey),index),y:yScale.parse(resolveObjectKey(item,yAxisKey),index)};}return parsed;}getParsed(index){return this._cachedMeta._parsed[index];}getDataElement(index){return this._cachedMeta.data[index];}applyStack(scale,parsed,mode){const chart=this.chart;const meta=this._cachedMeta;const value=parsed[scale.axis];const stack={keys:getSortedDatasetIndices(chart,true),values:parsed._stacks[scale.axis]._visualValues};return applyStack(stack,value,meta.index,{mode});}updateRangeFromParsed(range,scale,parsed,stack){const parsedValue=parsed[scale.axis];let value=parsedValue===null?NaN:parsedValue;const values=stack&&parsed._stacks[scale.axis];if(stack&&values){stack.values=values;value=applyStack(stack,parsedValue,this._cachedMeta.index);}range.min=Math.min(range.min,value);range.max=Math.max(range.max,value);}getMinMax(scale,canStack){const meta=this._cachedMeta;const _parsed=meta._parsed;const sorted=meta._sorted&&scale===meta.iScale;const ilen=_parsed.length;const otherScale=this._getOtherScale(scale);const stack=createStack(canStack,meta,this.chart);const range={min:Number.POSITIVE_INFINITY,max:Number.NEGATIVE_INFINITY};const{min:otherMin,max:otherMax}=getUserBounds(otherScale);let i,parsed;function _skip(){parsed=_parsed[i];const otherValue=parsed[otherScale.axis];return!isNumberFinite(parsed[scale.axis])||otherMin>otherValue||otherMax<otherValue;}for(i=0;i<ilen;++i){if(_skip()){continue;}this.updateRangeFromParsed(range,scale,parsed,stack);if(sorted){break;}}if(sorted){for(i=ilen-1;i>=0;--i){if(_skip()){continue;}this.updateRangeFromParsed(range,scale,parsed,stack);break;}}return range;}getAllParsedValues(scale){const parsed=this._cachedMeta._parsed;const values=[];let i,ilen,value;for(i=0,ilen=parsed.length;i<ilen;++i){value=parsed[i][scale.axis];if(isNumberFinite(value)){values.push(value);}}return values;}getMaxOverflow(){return false;}getLabelAndValue(index){const meta=this._cachedMeta;const iScale=meta.iScale;const vScale=meta.vScale;const parsed=this.getParsed(index);return{label:iScale?''+iScale.getLabelForValue(parsed[iScale.axis]):'',value:vScale?''+vScale.getLabelForValue(parsed[vScale.axis]):''};}_update(mode){const meta=this._cachedMeta;this.update(mode||'default');meta._clip=toClip(valueOrDefault(this.options.clip,defaultClip(meta.xScale,meta.yScale,this.getMaxOverflow())));}update(mode){}draw(){const ctx=this._ctx;const chart=this.chart;const meta=this._cachedMeta;const elements=meta.data||[];const area=chart.chartArea;const active=[];const start=this._drawStart||0;const count=this._drawCount||elements.length-start;const drawActiveElementsOnTop=this.options.drawActiveElementsOnTop;let i;if(meta.dataset){meta.dataset.draw(ctx,area,start,count);}for(i=start;i<start+count;++i){const element=elements[i];if(element.hidden){continue;}if(element.active&&drawActiveElementsOnTop){active.push(element);}else{element.draw(ctx,area);}}for(i=0;i<active.length;++i){active[i].draw(ctx,area);}}getStyle(index,active){const mode=active?'active':'default';return index===undefined&&this._cachedMeta.dataset?this.resolveDatasetElementOptions(mode):this.resolveDataElementOptions(index||0,mode);}getContext(index,active,mode){const dataset=this.getDataset();let context;if(index>=0&&index<this._cachedMeta.data.length){const element=this._cachedMeta.data[index];context=element.$context||(element.$context=createDataContext(this.getContext(),index,element));context.parsed=this.getParsed(index);context.raw=dataset.data[index];context.index=context.dataIndex=index;}else{context=this.$context||(this.$context=createDatasetContext(this.chart.getContext(),this.index));context.dataset=dataset;context.index=context.datasetIndex=this.index;}context.active=!!active;context.mode=mode;return context;}resolveDatasetElementOptions(mode){return this._resolveElementOptions(this.datasetElementType.id,mode);}resolveDataElementOptions(index,mode){return this._resolveElementOptions(this.dataElementType.id,mode,index);}_resolveElementOptions(elementType,mode='default',index){const active=mode==='active';const cache=this._cachedDataOpts;const cacheKey=elementType+'-'+mode;const cached=cache[cacheKey];const sharing=this.enableOptionSharing&&defined(index);if(cached){return cloneIfNotShared(cached,sharing);}const config=this.chart.config;const scopeKeys=config.datasetElementScopeKeys(this._type,elementType);const prefixes=active?[`${elementType}Hover`,'hover',elementType,'']:[elementType,''];const scopes=config.getOptionScopes(this.getDataset(),scopeKeys);const names=Object.keys(defaults.elements[elementType]);const context=()=>this.getContext(index,active,mode);const values=config.resolveNamedOptions(scopes,names,context,prefixes);if(values.$shared){values.$shared=sharing;cache[cacheKey]=Object.freeze(cloneIfNotShared(values,sharing));}return values;}_resolveAnimations(index,transition,active){const chart=this.chart;const cache=this._cachedDataOpts;const cacheKey=`animation-${transition}`;const cached=cache[cacheKey];if(cached){return cached;}let options;if(chart.options.animation!==false){const config=this.chart.config;const scopeKeys=config.datasetAnimationScopeKeys(this._type,transition);const scopes=config.getOptionScopes(this.getDataset(),scopeKeys);options=config.createResolver(scopes,this.getContext(index,active,transition));}const animations=new Animations(chart,options&&options.animations);if(options&&options._cacheable){cache[cacheKey]=Object.freeze(animations);}return animations;}getSharedOptions(options){if(!options.$shared){return;}return this._sharedOptions||(this._sharedOptions=Object.assign({},options));}includeOptions(mode,sharedOptions){return!sharedOptions||isDirectUpdateMode(mode)||this.chart._animationsDisabled;}_getSharedOptions(start,mode){const firstOpts=this.resolveDataElementOptions(start,mode);const previouslySharedOptions=this._sharedOptions;const sharedOptions=this.getSharedOptions(firstOpts);const includeOptions=this.includeOptions(mode,sharedOptions)||sharedOptions!==previouslySharedOptions;this.updateSharedOptions(sharedOptions,mode,firstOpts);return{sharedOptions,includeOptions};}updateElement(element,index,properties,mode){if(isDirectUpdateMode(mode)){Object.assign(element,properties);}else{this._resolveAnimations(index,mode).update(element,properties);}}updateSharedOptions(sharedOptions,mode,newOptions){if(sharedOptions&&!isDirectUpdateMode(mode)){this._resolveAnimations(undefined,mode).update(sharedOptions,newOptions);}}_setStyle(element,index,mode,active){element.active=active;const options=this.getStyle(index,active);this._resolveAnimations(index,mode,active).update(element,{options:!active&&this.getSharedOptions(options)||options});}removeHoverStyle(element,datasetIndex,index){this._setStyle(element,index,'active',false);}setHoverStyle(element,datasetIndex,index){this._setStyle(element,index,'active',true);}_removeDatasetHoverStyle(){const element=this._cachedMeta.dataset;if(element){this._setStyle(element,undefined,'active',false);}}_setDatasetHoverStyle(){const element=this._cachedMeta.dataset;if(element){this._setStyle(element,undefined,'active',true);}}_resyncElements(resetNewElements){const data=this._data;const elements=this._cachedMeta.data;for(const[method,arg1,arg2]of this._syncList){this[method](arg1,arg2);}this._syncList=[];const numMeta=elements.length;const numData=data.length;const count=Math.min(numData,numMeta);if(count){this.parse(0,count);}if(numData>numMeta){this._insertElements(numMeta,numData-numMeta,resetNewElements);}else if(numData<numMeta){this._removeElements(numData,numMeta-numData);}}_insertElements(start,count,resetNewElements=true){const meta=this._cachedMeta;const data=meta.data;const end=start+count;let i;const move=arr=>{arr.length+=count;for(i=arr.length-1;i>=end;i--){arr[i]=arr[i-count];}};move(data);for(i=start;i<end;++i){data[i]=new this.dataElementType();}if(this._parsing){move(meta._parsed);}this.parse(start,count);if(resetNewElements){this.updateElements(data,start,count,'reset');}}updateElements(element,start,count,mode){}_removeElements(start,count){const meta=this._cachedMeta;if(this._parsing){const removed=meta._parsed.splice(start,count);if(meta._stacked){clearStacks(meta,removed);}}meta.data.splice(start,count);}_sync(args){if(this._parsing){this._syncList.push(args);}else{const[method,arg1,arg2]=args;this[method](arg1,arg2);}this.chart._dataChanges.push([this.index,...args]);}_onDataPush(){const count=arguments.length;this._sync(['_insertElements',this.getDataset().data.length-count,count]);}_onDataPop(){this._sync(['_removeElements',this._cachedMeta.data.length-1,1]);}_onDataShift(){this._sync(['_removeElements',0,1]);}_onDataSplice(start,count){if(count){this._sync(['_removeElements',start,count]);}const newCount=arguments.length-2;if(newCount){this._sync(['_insertElements',start,newCount]);}}_onDataUnshift(){this._sync(['_insertElements',0,arguments.length]);}}function getAllScaleValues(scale,type){if(!scale._cache.$bar){const visibleMetas=scale.getMatchingVisibleMetas(type);let values=[];for(let i=0,ilen=visibleMetas.length;i<ilen;i++){values=values.concat(visibleMetas[i].controller.getAllParsedValues(scale));}scale._cache.$bar=_arrayUnique(values.sort((a,b)=>a-b));}return scale._cache.$bar;}function computeMinSampleSize(meta){const scale=meta.iScale;const values=getAllScaleValues(scale,meta.type);let min=scale._length;let i,ilen,curr,prev;const updateMinAndPrev=()=>{if(curr===32767||curr===-32768){return;}if(defined(prev)){min=Math.min(min,Math.abs(curr-prev)||min);}prev=curr;};for(i=0,ilen=values.length;i<ilen;++i){curr=scale.getPixelForValue(values[i]);updateMinAndPrev();}prev=undefined;for(i=0,ilen=scale.ticks.length;i<ilen;++i){curr=scale.getPixelForTick(i);updateMinAndPrev();}return min;}function computeFitCategoryTraits(index,ruler,options,stackCount){const thickness=options.barThickness;let size,ratio;if(isNullOrUndef(thickness)){size=ruler.min*options.categoryPercentage;ratio=options.barPercentage;}else{size=thickness*stackCount;ratio=1;}return{chunk:size/stackCount,ratio,start:ruler.pixels[index]-size/2};}function computeFlexCategoryTraits(index,ruler,options,stackCount){const pixels=ruler.pixels;const curr=pixels[index];let prev=index>0?pixels[index-1]:null;let next=index<pixels.length-1?pixels[index+1]:null;const percent=options.categoryPercentage;if(prev===null){prev=curr-(next===null?ruler.end-ruler.start:next-curr);}if(next===null){next=curr+curr-prev;}const start=curr-(curr-Math.min(prev,next))/2*percent;const size=Math.abs(next-prev)/2*percent;return{chunk:size/stackCount,ratio:options.barPercentage,start};}function parseFloatBar(entry,item,vScale,i){const startValue=vScale.parse(entry[0],i);const endValue=vScale.parse(entry[1],i);const min=Math.min(startValue,endValue);const max=Math.max(startValue,endValue);let barStart=min;let barEnd=max;if(Math.abs(min)>Math.abs(max)){barStart=max;barEnd=min;}item[vScale.axis]=barEnd;item._custom={barStart,barEnd,start:startValue,end:endValue,min,max};}function parseValue(entry,item,vScale,i){if(isArray(entry)){parseFloatBar(entry,item,vScale,i);}else{item[vScale.axis]=vScale.parse(entry,i);}return item;}function parseArrayOrPrimitive(meta,data,start,count){const iScale=meta.iScale;const vScale=meta.vScale;const labels=iScale.getLabels();const singleScale=iScale===vScale;const parsed=[];let i,ilen,item,entry;for(i=start,ilen=start+count;i<ilen;++i){entry=data[i];item={};item[iScale.axis]=singleScale||iScale.parse(labels[i],i);parsed.push(parseValue(entry,item,vScale,i));}return parsed;}function isFloatBar(custom){return custom&&custom.barStart!==undefined&&custom.barEnd!==undefined;}function barSign(size,vScale,actualBase){if(size!==0){return sign$1(size);}return(vScale.isHorizontal()?1:-1)*(vScale.min>=actualBase?1:-1);}function borderProps(properties){let reverse,start,end,top,bottom;if(properties.horizontal){reverse=properties.base>properties.x;start='left';end='right';}else{reverse=properties.base<properties.y;start='bottom';end='top';}if(reverse){top='end';bottom='start';}else{top='start';bottom='end';}return{start,end,reverse,top,bottom};}function setBorderSkipped(properties,options,stack,index){let edge=options.borderSkipped;const res={};if(!edge){properties.borderSkipped=res;return;}if(edge===true){properties.borderSkipped={top:true,right:true,bottom:true,left:true};return;}const{start,end,reverse,top,bottom}=borderProps(properties);if(edge==='middle'&&stack){properties.enableBorderRadius=true;if((stack._top||0)===index){edge=top;}else if((stack._bottom||0)===index){edge=bottom;}else{res[parseEdge(bottom,start,end,reverse)]=true;edge=top;}}res[parseEdge(edge,start,end,reverse)]=true;properties.borderSkipped=res;}function parseEdge(edge,a,b,reverse){if(reverse){edge=swap(edge,a,b);edge=startEnd(edge,b,a);}else{edge=startEnd(edge,a,b);}return edge;}function swap(orig,v1,v2){return orig===v1?v2:orig===v2?v1:orig;}function startEnd(v,start,end){return v==='start'?start:v==='end'?end:v;}function setInflateAmount(properties,{inflateAmount},ratio){properties.inflateAmount=inflateAmount==='auto'?ratio===1?0.33:0:inflateAmount;}class BarController extends DatasetController{static id='bar';static defaults={datasetElementType:false,dataElementType:'bar',categoryPercentage:0.8,barPercentage:0.9,grouped:true,animations:{numbers:{type:'number',properties:['x','y','base','width','height']}}};static overrides={scales:{_index_:{type:'category',offset:true,grid:{offset:true}},_value_:{type:'linear',beginAtZero:true}}};parsePrimitiveData(meta,data,start,count){return parseArrayOrPrimitive(meta,data,start,count);}parseArrayData(meta,data,start,count){return parseArrayOrPrimitive(meta,data,start,count);}parseObjectData(meta,data,start,count){const{iScale,vScale}=meta;const{xAxisKey='x',yAxisKey='y'}=this._parsing;const iAxisKey=iScale.axis==='x'?xAxisKey:yAxisKey;const vAxisKey=vScale.axis==='x'?xAxisKey:yAxisKey;const parsed=[];let i,ilen,item,obj;for(i=start,ilen=start+count;i<ilen;++i){obj=data[i];item={};item[iScale.axis]=iScale.parse(resolveObjectKey(obj,iAxisKey),i);parsed.push(parseValue(resolveObjectKey(obj,vAxisKey),item,vScale,i));}return parsed;}updateRangeFromParsed(range,scale,parsed,stack){super.updateRangeFromParsed(range,scale,parsed,stack);const custom=parsed._custom;if(custom&&scale===this._cachedMeta.vScale){range.min=Math.min(range.min,custom.min);range.max=Math.max(range.max,custom.max);}}getMaxOverflow(){return 0;}getLabelAndValue(index){const meta=this._cachedMeta;const{iScale,vScale}=meta;const parsed=this.getParsed(index);const custom=parsed._custom;const value=isFloatBar(custom)?'['+custom.start+', '+custom.end+']':''+vScale.getLabelForValue(parsed[vScale.axis]);return{label:''+iScale.getLabelForValue(parsed[iScale.axis]),value};}initialize(){this.enableOptionSharing=true;super.initialize();const meta=this._cachedMeta;meta.stack=this.getDataset().stack;}update(mode){const meta=this._cachedMeta;this.updateElements(meta.data,0,meta.data.length,mode);}updateElements(bars,start,count,mode){const reset=mode==='reset';const{index,_cachedMeta:{vScale}}=this;const base=vScale.getBasePixel();const horizontal=vScale.isHorizontal();const ruler=this._getRuler();const{sharedOptions,includeOptions}=this._getSharedOptions(start,mode);for(let i=start;i<start+count;i++){const parsed=this.getParsed(i);const vpixels=reset||isNullOrUndef(parsed[vScale.axis])?{base,head:base}:this._calculateBarValuePixels(i);const ipixels=this._calculateBarIndexPixels(i,ruler);const stack=(parsed._stacks||{})[vScale.axis];const properties={horizontal,base:vpixels.base,enableBorderRadius:!stack||isFloatBar(parsed._custom)||index===stack._top||index===stack._bottom,x:horizontal?vpixels.head:ipixels.center,y:horizontal?ipixels.center:vpixels.head,height:horizontal?ipixels.size:Math.abs(vpixels.size),width:horizontal?Math.abs(vpixels.size):ipixels.size};if(includeOptions){properties.options=sharedOptions||this.resolveDataElementOptions(i,bars[i].active?'active':mode);}const options=properties.options||bars[i].options;setBorderSkipped(properties,options,stack,index);setInflateAmount(properties,options,ruler.ratio);this.updateElement(bars[i],i,properties,mode);}}_getStacks(last,dataIndex){const{iScale}=this._cachedMeta;const metasets=iScale.getMatchingVisibleMetas(this._type).filter(meta=>meta.controller.options.grouped);const stacked=iScale.options.stacked;const stacks=[];const currentParsed=this._cachedMeta.controller.getParsed(dataIndex);const iScaleValue=currentParsed&&currentParsed[iScale.axis];const skipNull=meta=>{const parsed=meta._parsed.find(item=>item[iScale.axis]===iScaleValue);const val=parsed&&parsed[meta.vScale.axis];if(isNullOrUndef(val)||isNaN(val)){return true;}};for(const meta of metasets){if(dataIndex!==undefined&&skipNull(meta)){continue;}if(stacked===false||stacks.indexOf(meta.stack)===-1||stacked===undefined&&meta.stack===undefined){stacks.push(meta.stack);}if(meta.index===last){break;}}if(!stacks.length){stacks.push(undefined);}return stacks;}_getStackCount(index){return this._getStacks(undefined,index).length;}_getStackIndex(datasetIndex,name,dataIndex){const stacks=this._getStacks(datasetIndex,dataIndex);const index=name!==undefined?stacks.indexOf(name):-1;return index===-1?stacks.length-1:index;}_getRuler(){const opts=this.options;const meta=this._cachedMeta;const iScale=meta.iScale;const pixels=[];let i,ilen;for(i=0,ilen=meta.data.length;i<ilen;++i){pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis],i));}const barThickness=opts.barThickness;const min=barThickness||computeMinSampleSize(meta);return{min,pixels,start:iScale._startPixel,end:iScale._endPixel,stackCount:this._getStackCount(),scale:iScale,grouped:opts.grouped,ratio:barThickness?1:opts.categoryPercentage*opts.barPercentage};}_calculateBarValuePixels(index){const{_cachedMeta:{vScale,_stacked,index:datasetIndex},options:{base:baseValue,minBarLength}}=this;const actualBase=baseValue||0;const parsed=this.getParsed(index);const custom=parsed._custom;const floating=isFloatBar(custom);let value=parsed[vScale.axis];let start=0;let length=_stacked?this.applyStack(vScale,parsed,_stacked):value;let head,size;if(length!==value){start=length-value;length=value;}if(floating){value=custom.barStart;length=custom.barEnd-custom.barStart;if(value!==0&&sign$1(value)!==sign$1(custom.barEnd)){start=0;}start+=value;}const startValue=!isNullOrUndef(baseValue)&&!floating?baseValue:start;let base=vScale.getPixelForValue(startValue);if(this.chart.getDataVisibility(index)){head=vScale.getPixelForValue(start+length);}else{head=base;}size=head-base;if(Math.abs(size)<minBarLength){size=barSign(size,vScale,actualBase)*minBarLength;if(value===actualBase){base-=size/2;}const startPixel=vScale.getPixelForDecimal(0);const endPixel=vScale.getPixelForDecimal(1);const min=Math.min(startPixel,endPixel);const max=Math.max(startPixel,endPixel);base=Math.max(Math.min(base,max),min);head=base+size;if(_stacked&&!floating){parsed._stacks[vScale.axis]._visualValues[datasetIndex]=vScale.getValueForPixel(head)-vScale.getValueForPixel(base);}}if(base===vScale.getPixelForValue(actualBase)){const halfGrid=sign$1(size)*vScale.getLineWidthForValue(actualBase)/2;base+=halfGrid;size-=halfGrid;}return{size,base,head,center:head+size/2};}_calculateBarIndexPixels(index,ruler){const scale=ruler.scale;const options=this.options;const skipNull=options.skipNull;const maxBarThickness=valueOrDefault(options.maxBarThickness,Infinity);let center,size;if(ruler.grouped){const stackCount=skipNull?this._getStackCount(index):ruler.stackCount;const range=options.barThickness==='flex'?computeFlexCategoryTraits(index,ruler,options,stackCount):computeFitCategoryTraits(index,ruler,options,stackCount);const stackIndex=this._getStackIndex(this.index,this._cachedMeta.stack,skipNull?index:undefined);center=range.start+range.chunk*stackIndex+range.chunk/2;size=Math.min(maxBarThickness,range.chunk*range.ratio);}else{center=scale.getPixelForValue(this.getParsed(index)[scale.axis],index);size=Math.min(maxBarThickness,ruler.min*ruler.ratio);}return{base:center-size/2,head:center+size/2,center,size};}draw(){const meta=this._cachedMeta;const vScale=meta.vScale;const rects=meta.data;const ilen=rects.length;let i=0;for(;i<ilen;++i){if(this.getParsed(i)[vScale.axis]!==null&&!rects[i].hidden){rects[i].draw(this._ctx);}}}}class BubbleController extends DatasetController{static id='bubble';static defaults={datasetElementType:false,dataElementType:'point',animations:{numbers:{type:'number',properties:['x','y','borderWidth','radius']}}};static overrides={scales:{x:{type:'linear'},y:{type:'linear'}}};initialize(){this.enableOptionSharing=true;super.initialize();}parsePrimitiveData(meta,data,start,count){const parsed=super.parsePrimitiveData(meta,data,start,count);for(let i=0;i<parsed.length;i++){parsed[i]._custom=this.resolveDataElementOptions(i+start).radius;}return parsed;}parseArrayData(meta,data,start,count){const parsed=super.parseArrayData(meta,data,start,count);for(let i=0;i<parsed.length;i++){const item=data[start+i];parsed[i]._custom=valueOrDefault(item[2],this.resolveDataElementOptions(i+start).radius);}return parsed;}parseObjectData(meta,data,start,count){const parsed=super.parseObjectData(meta,data,start,count);for(let i=0;i<parsed.length;i++){const item=data[start+i];parsed[i]._custom=valueOrDefault(item&&item.r&&+item.r,this.resolveDataElementOptions(i+start).radius);}return parsed;}getMaxOverflow(){const data=this._cachedMeta.data;let max=0;for(let i=data.length-1;i>=0;--i){max=Math.max(max,data[i].size(this.resolveDataElementOptions(i))/2);}return max>0&&max;}getLabelAndValue(index){const meta=this._cachedMeta;const labels=this.chart.data.labels||[];const{xScale,yScale}=meta;const parsed=this.getParsed(index);const x=xScale.getLabelForValue(parsed.x);const y=yScale.getLabelForValue(parsed.y);const r=parsed._custom;return{label:labels[index]||'',value:'('+x+', '+y+(r?', '+r:'')+')'};}update(mode){const points=this._cachedMeta.data;this.updateElements(points,0,points.length,mode);}updateElements(points,start,count,mode){const reset=mode==='reset';const{iScale,vScale}=this._cachedMeta;const{sharedOptions,includeOptions}=this._getSharedOptions(start,mode);const iAxis=iScale.axis;const vAxis=vScale.axis;for(let i=start;i<start+count;i++){const point=points[i];const parsed=!reset&&this.getParsed(i);const properties={};const iPixel=properties[iAxis]=reset?iScale.getPixelForDecimal(0.5):iScale.getPixelForValue(parsed[iAxis]);const vPixel=properties[vAxis]=reset?vScale.getBasePixel():vScale.getPixelForValue(parsed[vAxis]);properties.skip=isNaN(iPixel)||isNaN(vPixel);if(includeOptions){properties.options=sharedOptions||this.resolveDataElementOptions(i,point.active?'active':mode);if(reset){properties.options.radius=0;}}this.updateElement(point,i,properties,mode);}}resolveDataElementOptions(index,mode){const parsed=this.getParsed(index);let values=super.resolveDataElementOptions(index,mode);if(values.$shared){values=Object.assign({},values,{$shared:false});}const radius=values.radius;if(mode!=='active'){values.radius=0;}values.radius+=valueOrDefault(parsed&&parsed._custom,radius);return values;}}function getRatioAndOffset(rotation,circumference,cutout){let ratioX=1;let ratioY=1;let offsetX=0;let offsetY=0;if(circumference<TAU){const startAngle=rotation;const endAngle=startAngle+circumference;const startX=Math.cos(startAngle);const startY=Math.sin(startAngle);const endX=Math.cos(endAngle);const endY=Math.sin(endAngle);const calcMax=(angle,a,b)=>_angleBetween(angle,startAngle,endAngle,true)?1:Math.max(a,a*cutout,b,b*cutout);const calcMin=(angle,a,b)=>_angleBetween(angle,startAngle,endAngle,true)?-1:Math.min(a,a*cutout,b,b*cutout);const maxX=calcMax(0,startX,endX);const maxY=calcMax(HALF_PI,startY,endY);const minX=calcMin(PI,startX,endX);const minY=calcMin(PI+HALF_PI,startY,endY);ratioX=(maxX-minX)/2;ratioY=(maxY-minY)/2;offsetX=-(maxX+minX)/2;offsetY=-(maxY+minY)/2;}return{ratioX,ratioY,offsetX,offsetY};}class DoughnutController extends DatasetController{static id='doughnut';static defaults={datasetElementType:false,dataElementType:'arc',animation:{animateRotate:true,animateScale:false},animations:{numbers:{type:'number',properties:['circumference','endAngle','innerRadius','outerRadius','startAngle','x','y','offset','borderWidth','spacing']}},cutout:'50%',rotation:0,circumference:360,radius:'100%',spacing:0,indexAxis:'r'};static descriptors={_scriptable:name=>name!=='spacing',_indexable:name=>name!=='spacing'&&!name.startsWith('borderDash')&&!name.startsWith('hoverBorderDash')};static overrides={aspectRatio:1,plugins:{legend:{labels:{generateLabels(chart){const data=chart.data;if(data.labels.length&&data.datasets.length){const{labels:{pointStyle,color}}=chart.legend.options;return data.labels.map((label,i)=>{const meta=chart.getDatasetMeta(0);const style=meta.controller.getStyle(i);return{text:label,fillStyle:style.backgroundColor,strokeStyle:style.borderColor,fontColor:color,lineWidth:style.borderWidth,pointStyle:pointStyle,hidden:!chart.getDataVisibility(i),index:i};});}return[];}},onClick(e,legendItem,legend){legend.chart.toggleDataVisibility(legendItem.index);legend.chart.update();}}}};constructor(chart,datasetIndex){super(chart,datasetIndex);this.enableOptionSharing=true;this.innerRadius=undefined;this.outerRadius=undefined;this.offsetX=undefined;this.offsetY=undefined;}linkScales(){}parse(start,count){const data=this.getDataset().data;const meta=this._cachedMeta;if(this._parsing===false){meta._parsed=data;}else{let getter=i=>+data[i];if(isObject(data[start])){const{key='value'}=this._parsing;getter=i=>+resolveObjectKey(data[i],key);}let i,ilen;for(i=start,ilen=start+count;i<ilen;++i){meta._parsed[i]=getter(i);}}}_getRotation(){return toRadians(this.options.rotation-90);}_getCircumference(){return toRadians(this.options.circumference);}_getRotationExtents(){let min=TAU;let max=-TAU;for(let i=0;i<this.chart.data.datasets.length;++i){if(this.chart.isDatasetVisible(i)&&this.chart.getDatasetMeta(i).type===this._type){const controller=this.chart.getDatasetMeta(i).controller;const rotation=controller._getRotation();const circumference=controller._getCircumference();min=Math.min(min,rotation);max=Math.max(max,rotation+circumference);}}return{rotation:min,circumference:max-min};}update(mode){const chart=this.chart;const{chartArea}=chart;const meta=this._cachedMeta;const arcs=meta.data;const spacing=this.getMaxBorderWidth()+this.getMaxOffset(arcs)+this.options.spacing;const maxSize=Math.max((Math.min(chartArea.width,chartArea.height)-spacing)/2,0);const cutout=Math.min(toPercentage(this.options.cutout,maxSize),1);const chartWeight=this._getRingWeight(this.index);const{circumference,rotation}=this._getRotationExtents();const{ratioX,ratioY,offsetX,offsetY}=getRatioAndOffset(rotation,circumference,cutout);const maxWidth=(chartArea.width-spacing)/ratioX;const maxHeight=(chartArea.height-spacing)/ratioY;const maxRadius=Math.max(Math.min(maxWidth,maxHeight)/2,0);const outerRadius=toDimension(this.options.radius,maxRadius);const innerRadius=Math.max(outerRadius*cutout,0);const radiusLength=(outerRadius-innerRadius)/this._getVisibleDatasetWeightTotal();this.offsetX=offsetX*outerRadius;this.offsetY=offsetY*outerRadius;meta.total=this.calculateTotal();this.outerRadius=outerRadius-radiusLength*this._getRingWeightOffset(this.index);this.innerRadius=Math.max(this.outerRadius-radiusLength*chartWeight,0);this.updateElements(arcs,0,arcs.length,mode);}_circumference(i,reset){const opts=this.options;const meta=this._cachedMeta;const circumference=this._getCircumference();if(reset&&opts.animation.animateRotate||!this.chart.getDataVisibility(i)||meta._parsed[i]===null||meta.data[i].hidden){return 0;}return this.calculateCircumference(meta._parsed[i]*circumference/TAU);}updateElements(arcs,start,count,mode){const reset=mode==='reset';const chart=this.chart;const chartArea=chart.chartArea;const opts=chart.options;const animationOpts=opts.animation;const centerX=(chartArea.left+chartArea.right)/2;const centerY=(chartArea.top+chartArea.bottom)/2;const animateScale=reset&&animationOpts.animateScale;const innerRadius=animateScale?0:this.innerRadius;const outerRadius=animateScale?0:this.outerRadius;const{sharedOptions,includeOptions}=this._getSharedOptions(start,mode);let startAngle=this._getRotation();let i;for(i=0;i<start;++i){startAngle+=this._circumference(i,reset);}for(i=start;i<start+count;++i){const circumference=this._circumference(i,reset);const arc=arcs[i];const properties={x:centerX+this.offsetX,y:centerY+this.offsetY,startAngle,endAngle:startAngle+circumference,circumference,outerRadius,innerRadius};if(includeOptions){properties.options=sharedOptions||this.resolveDataElementOptions(i,arc.active?'active':mode);}startAngle+=circumference;this.updateElement(arc,i,properties,mode);}}calculateTotal(){const meta=this._cachedMeta;const metaData=meta.data;let total=0;let i;for(i=0;i<metaData.length;i++){const value=meta._parsed[i];if(value!==null&&!isNaN(value)&&this.chart.getDataVisibility(i)&&!metaData[i].hidden){total+=Math.abs(value);}}return total;}calculateCircumference(value){const total=this._cachedMeta.total;if(total>0&&!isNaN(value)){return TAU*(Math.abs(value)/total);}return 0;}getLabelAndValue(index){const meta=this._cachedMeta;const chart=this.chart;const labels=chart.data.labels||[];const value=formatNumber(meta._parsed[index],chart.options.locale);return{label:labels[index]||'',value};}getMaxBorderWidth(arcs){let max=0;const chart=this.chart;let i,ilen,meta,controller,options;if(!arcs){for(i=0,ilen=chart.data.datasets.length;i<ilen;++i){if(chart.isDatasetVisible(i)){meta=chart.getDatasetMeta(i);arcs=meta.data;controller=meta.controller;break;}}}if(!arcs){return 0;}for(i=0,ilen=arcs.length;i<ilen;++i){options=controller.resolveDataElementOptions(i);if(options.borderAlign!=='inner'){max=Math.max(max,options.borderWidth||0,options.hoverBorderWidth||0);}}return max;}getMaxOffset(arcs){let max=0;for(let i=0,ilen=arcs.length;i<ilen;++i){const options=this.resolveDataElementOptions(i);max=Math.max(max,options.offset||0,options.hoverOffset||0);}return max;}_getRingWeightOffset(datasetIndex){let ringWeightOffset=0;for(let i=0;i<datasetIndex;++i){if(this.chart.isDatasetVisible(i)){ringWeightOffset+=this._getRingWeight(i);}}return ringWeightOffset;}_getRingWeight(datasetIndex){return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight,1),0);}_getVisibleDatasetWeightTotal(){return this._getRingWeightOffset(this.chart.data.datasets.length)||1;}}class LineController extends DatasetController{static id='line';static defaults={datasetElementType:'line',dataElementType:'point',showLine:true,spanGaps:false};static overrides={scales:{_index_:{type:'category'},_value_:{type:'linear'}}};initialize(){this.enableOptionSharing=true;this.supportsDecimation=true;super.initialize();}update(mode){const meta=this._cachedMeta;const{dataset:line,data:points=[],_dataset}=meta;const animationsDisabled=this.chart._animationsDisabled;let{start,count}=_getStartAndCountOfVisiblePoints(meta,points,animationsDisabled);this._drawStart=start;this._drawCount=count;if(_scaleRangesChanged(meta)){start=0;count=points.length;}line._chart=this.chart;line._datasetIndex=this.index;line._decimated=!!_dataset._decimated;line.points=points;const options=this.resolveDatasetElementOptions(mode);if(!this.options.showLine){options.borderWidth=0;}options.segment=this.options.segment;this.updateElement(line,undefined,{animated:!animationsDisabled,options},mode);this.updateElements(points,start,count,mode);}updateElements(points,start,count,mode){const reset=mode==='reset';const{iScale,vScale,_stacked,_dataset}=this._cachedMeta;const{sharedOptions,includeOptions}=this._getSharedOptions(start,mode);const iAxis=iScale.axis;const vAxis=vScale.axis;const{spanGaps,segment}=this.options;const maxGapLength=isNumber$1(spanGaps)?spanGaps:Number.POSITIVE_INFINITY;const directUpdate=this.chart._animationsDisabled||reset||mode==='none';const end=start+count;const pointsCount=points.length;let prevParsed=start>0&&this.getParsed(start-1);for(let i=0;i<pointsCount;++i){const point=points[i];const properties=directUpdate?point:{};if(i<start||i>=end){properties.skip=true;continue;}const parsed=this.getParsed(i);const nullData=isNullOrUndef(parsed[vAxis]);const iPixel=properties[iAxis]=iScale.getPixelForValue(parsed[iAxis],i);const vPixel=properties[vAxis]=reset||nullData?vScale.getBasePixel():vScale.getPixelForValue(_stacked?this.applyStack(vScale,parsed,_stacked):parsed[vAxis],i);properties.skip=isNaN(iPixel)||isNaN(vPixel)||nullData;properties.stop=i>0&&Math.abs(parsed[iAxis]-prevParsed[iAxis])>maxGapLength;if(segment){properties.parsed=parsed;properties.raw=_dataset.data[i];}if(includeOptions){properties.options=sharedOptions||this.resolveDataElementOptions(i,point.active?'active':mode);}if(!directUpdate){this.updateElement(point,i,properties,mode);}prevParsed=parsed;}}getMaxOverflow(){const meta=this._cachedMeta;const dataset=meta.dataset;const border=dataset.options&&dataset.options.borderWidth||0;const data=meta.data||[];if(!data.length){return border;}const firstPoint=data[0].size(this.resolveDataElementOptions(0));const lastPoint=data[data.length-1].size(this.resolveDataElementOptions(data.length-1));return Math.max(border,firstPoint,lastPoint)/2;}draw(){const meta=this._cachedMeta;meta.dataset.updateControlPoints(this.chart.chartArea,meta.iScale.axis);super.draw();}}class PolarAreaController extends DatasetController{static id='polarArea';static defaults={dataElementType:'arc',animation:{animateRotate:true,animateScale:true},animations:{numbers:{type:'number',properties:['x','y','startAngle','endAngle','innerRadius','outerRadius']}},indexAxis:'r',startAngle:0};static overrides={aspectRatio:1,plugins:{legend:{labels:{generateLabels(chart){const data=chart.data;if(data.labels.length&&data.datasets.length){const{labels:{pointStyle,color}}=chart.legend.options;return data.labels.map((label,i)=>{const meta=chart.getDatasetMeta(0);const style=meta.controller.getStyle(i);return{text:label,fillStyle:style.backgroundColor,strokeStyle:style.borderColor,fontColor:color,lineWidth:style.borderWidth,pointStyle:pointStyle,hidden:!chart.getDataVisibility(i),index:i};});}return[];}},onClick(e,legendItem,legend){legend.chart.toggleDataVisibility(legendItem.index);legend.chart.update();}}},scales:{r:{type:'radialLinear',angleLines:{display:false},beginAtZero:true,grid:{circular:true},pointLabels:{display:false},startAngle:0}}};constructor(chart,datasetIndex){super(chart,datasetIndex);this.innerRadius=undefined;this.outerRadius=undefined;}getLabelAndValue(index){const meta=this._cachedMeta;const chart=this.chart;const labels=chart.data.labels||[];const value=formatNumber(meta._parsed[index].r,chart.options.locale);return{label:labels[index]||'',value};}parseObjectData(meta,data,start,count){return _parseObjectDataRadialScale.bind(this)(meta,data,start,count);}update(mode){const arcs=this._cachedMeta.data;this._updateRadius();this.updateElements(arcs,0,arcs.length,mode);}getMinMax(){const meta=this._cachedMeta;const range={min:Number.POSITIVE_INFINITY,max:Number.NEGATIVE_INFINITY};meta.data.forEach((element,index)=>{const parsed=this.getParsed(index).r;if(!isNaN(parsed)&&this.chart.getDataVisibility(index)){if(parsed<range.min){range.min=parsed;}if(parsed>range.max){range.max=parsed;}}});return range;}_updateRadius(){const chart=this.chart;const chartArea=chart.chartArea;const opts=chart.options;const minSize=Math.min(chartArea.right-chartArea.left,chartArea.bottom-chartArea.top);const outerRadius=Math.max(minSize/2,0);const innerRadius=Math.max(opts.cutoutPercentage?outerRadius/100*opts.cutoutPercentage:1,0);const radiusLength=(outerRadius-innerRadius)/chart.getVisibleDatasetCount();this.outerRadius=outerRadius-radiusLength*this.index;this.innerRadius=this.outerRadius-radiusLength;}updateElements(arcs,start,count,mode){const reset=mode==='reset';const chart=this.chart;const opts=chart.options;const animationOpts=opts.animation;const scale=this._cachedMeta.rScale;const centerX=scale.xCenter;const centerY=scale.yCenter;const datasetStartAngle=scale.getIndexAngle(0)-0.5*PI;let angle=datasetStartAngle;let i;const defaultAngle=360/this.countVisibleElements();for(i=0;i<start;++i){angle+=this._computeAngle(i,mode,defaultAngle);}for(i=start;i<start+count;i++){const arc=arcs[i];let startAngle=angle;let endAngle=angle+this._computeAngle(i,mode,defaultAngle);let outerRadius=chart.getDataVisibility(i)?scale.getDistanceFromCenterForValue(this.getParsed(i).r):0;angle=endAngle;if(reset){if(animationOpts.animateScale){outerRadius=0;}if(animationOpts.animateRotate){startAngle=endAngle=datasetStartAngle;}}const properties={x:centerX,y:centerY,innerRadius:0,outerRadius,startAngle,endAngle,options:this.resolveDataElementOptions(i,arc.active?'active':mode)};this.updateElement(arc,i,properties,mode);}}countVisibleElements(){const meta=this._cachedMeta;let count=0;meta.data.forEach((element,index)=>{if(!isNaN(this.getParsed(index).r)&&this.chart.getDataVisibility(index)){count++;}});return count;}_computeAngle(index,mode,defaultAngle){return this.chart.getDataVisibility(index)?toRadians(this.resolveDataElementOptions(index,mode).angle||defaultAngle):0;}}class PieController extends DoughnutController{static id='pie';static defaults={cutout:0,rotation:0,circumference:360,radius:'100%'};}class RadarController extends DatasetController{static id='radar';static defaults={datasetElementType:'line',dataElementType:'point',indexAxis:'r',showLine:true,elements:{line:{fill:'start'}}};static overrides={aspectRatio:1,scales:{r:{type:'radialLinear'}}};getLabelAndValue(index){const vScale=this._cachedMeta.vScale;const parsed=this.getParsed(index);return{label:vScale.getLabels()[index],value:''+vScale.getLabelForValue(parsed[vScale.axis])};}parseObjectData(meta,data,start,count){return _parseObjectDataRadialScale.bind(this)(meta,data,start,count);}update(mode){const meta=this._cachedMeta;const line=meta.dataset;const points=meta.data||[];const labels=meta.iScale.getLabels();line.points=points;if(mode!=='resize'){const options=this.resolveDatasetElementOptions(mode);if(!this.options.showLine){options.borderWidth=0;}const properties={_loop:true,_fullLoop:labels.length===points.length,options};this.updateElement(line,undefined,properties,mode);}this.updateElements(points,0,points.length,mode);}updateElements(points,start,count,mode){const scale=this._cachedMeta.rScale;const reset=mode==='reset';for(let i=start;i<start+count;i++){const point=points[i];const options=this.resolveDataElementOptions(i,point.active?'active':mode);const pointPosition=scale.getPointPositionForValue(i,this.getParsed(i).r);const x=reset?scale.xCenter:pointPosition.x;const y=reset?scale.yCenter:pointPosition.y;const properties={x,y,angle:pointPosition.angle,skip:isNaN(x)||isNaN(y),options};this.updateElement(point,i,properties,mode);}}}class ScatterController extends DatasetController{static id='scatter';static defaults={datasetElementType:false,dataElementType:'point',showLine:false,fill:false};static overrides={interaction:{mode:'point'},scales:{x:{type:'linear'},y:{type:'linear'}}};getLabelAndValue(index){const meta=this._cachedMeta;const labels=this.chart.data.labels||[];const{xScale,yScale}=meta;const parsed=this.getParsed(index);const x=xScale.getLabelForValue(parsed.x);const y=yScale.getLabelForValue(parsed.y);return{label:labels[index]||'',value:'('+x+', '+y+')'};}update(mode){const meta=this._cachedMeta;const{data:points=[]}=meta;const animationsDisabled=this.chart._animationsDisabled;let{start,count}=_getStartAndCountOfVisiblePoints(meta,points,animationsDisabled);this._drawStart=start;this._drawCount=count;if(_scaleRangesChanged(meta)){start=0;count=points.length;}if(this.options.showLine){if(!this.datasetElementType){this.addElements();}const{dataset:line,_dataset}=meta;line._chart=this.chart;line._datasetIndex=this.index;line._decimated=!!_dataset._decimated;line.points=points;const options=this.resolveDatasetElementOptions(mode);options.segment=this.options.segment;this.updateElement(line,undefined,{animated:!animationsDisabled,options},mode);}else if(this.datasetElementType){delete meta.dataset;this.datasetElementType=false;}this.updateElements(points,start,count,mode);}addElements(){const{showLine}=this.options;if(!this.datasetElementType&&showLine){this.datasetElementType=this.chart.registry.getElement('line');}super.addElements();}updateElements(points,start,count,mode){const reset=mode==='reset';const{iScale,vScale,_stacked,_dataset}=this._cachedMeta;const firstOpts=this.resolveDataElementOptions(start,mode);const sharedOptions=this.getSharedOptions(firstOpts);const includeOptions=this.includeOptions(mode,sharedOptions);const iAxis=iScale.axis;const vAxis=vScale.axis;const{spanGaps,segment}=this.options;const maxGapLength=isNumber$1(spanGaps)?spanGaps:Number.POSITIVE_INFINITY;const directUpdate=this.chart._animationsDisabled||reset||mode==='none';let prevParsed=start>0&&this.getParsed(start-1);for(let i=start;i<start+count;++i){const point=points[i];const parsed=this.getParsed(i);const properties=directUpdate?point:{};const nullData=isNullOrUndef(parsed[vAxis]);const iPixel=properties[iAxis]=iScale.getPixelForValue(parsed[iAxis],i);const vPixel=properties[vAxis]=reset||nullData?vScale.getBasePixel():vScale.getPixelForValue(_stacked?this.applyStack(vScale,parsed,_stacked):parsed[vAxis],i);properties.skip=isNaN(iPixel)||isNaN(vPixel)||nullData;properties.stop=i>0&&Math.abs(parsed[iAxis]-prevParsed[iAxis])>maxGapLength;if(segment){properties.parsed=parsed;properties.raw=_dataset.data[i];}if(includeOptions){properties.options=sharedOptions||this.resolveDataElementOptions(i,point.active?'active':mode);}if(!directUpdate){this.updateElement(point,i,properties,mode);}prevParsed=parsed;}this.updateSharedOptions(sharedOptions,mode,firstOpts);}getMaxOverflow(){const meta=this._cachedMeta;const data=meta.data||[];if(!this.options.showLine){let max=0;for(let i=data.length-1;i>=0;--i){max=Math.max(max,data[i].size(this.resolveDataElementOptions(i))/2);}return max>0&&max;}const dataset=meta.dataset;const border=dataset.options&&dataset.options.borderWidth||0;if(!data.length){return border;}const firstPoint=data[0].size(this.resolveDataElementOptions(0));const lastPoint=data[data.length-1].size(this.resolveDataElementOptions(data.length-1));return Math.max(border,firstPoint,lastPoint)/2;}}var controllers=/*#__PURE__*/Object.freeze({__proto__:null,BarController:BarController,BubbleController:BubbleController,DoughnutController:DoughnutController,LineController:LineController,PieController:PieController,PolarAreaController:PolarAreaController,RadarController:RadarController,ScatterController:ScatterController});/**
   * @namespace Chart._adapters
   * @since 2.8.0
   * @private
   */function abstract(){throw new Error('This method is not implemented: Check that a complete date adapter is provided.');}/**
   * Date adapter (current used by the time scale)
   * @namespace Chart._adapters._date
   * @memberof Chart._adapters
   * @private
   */class DateAdapterBase{/**
     * Override default date adapter methods.
     * Accepts type parameter to define options type.
     * @example
     * Chart._adapters._date.override<{myAdapterOption: string}>({
     *   init() {
     *     console.log(this.options.myAdapterOption);
     *   }
     * })
     */static override(members){Object.assign(DateAdapterBase.prototype,members);}options;constructor(options){this.options=options||{};}// eslint-disable-next-line @typescript-eslint/no-empty-function
init(){}formats(){return abstract();}parse(){return abstract();}format(){return abstract();}add(){return abstract();}diff(){return abstract();}startOf(){return abstract();}endOf(){return abstract();}}var adapters={_date:DateAdapterBase};function binarySearch(metaset,axis,value,intersect){const{controller,data,_sorted}=metaset;const iScale=controller._cachedMeta.iScale;const spanGaps=metaset.dataset?metaset.dataset.options?metaset.dataset.options.spanGaps:null:null;if(iScale&&axis===iScale.axis&&axis!=='r'&&_sorted&&data.length){const lookupMethod=iScale._reversePixels?_rlookupByKey:_lookupByKey;if(!intersect){const result=lookupMethod(data,axis,value);if(spanGaps){const{vScale}=controller._cachedMeta;const{_parsed}=metaset;const distanceToDefinedLo=_parsed.slice(0,result.lo+1).reverse().findIndex(point=>!isNullOrUndef(point[vScale.axis]));result.lo-=Math.max(0,distanceToDefinedLo);const distanceToDefinedHi=_parsed.slice(result.hi).findIndex(point=>!isNullOrUndef(point[vScale.axis]));result.hi+=Math.max(0,distanceToDefinedHi);}return result;}else if(controller._sharedOptions){const el=data[0];const range=typeof el.getRange==='function'&&el.getRange(axis);if(range){const start=lookupMethod(data,axis,value-range);const end=lookupMethod(data,axis,value+range);return{lo:start.lo,hi:end.hi};}}}return{lo:0,hi:data.length-1};}function evaluateInteractionItems(chart,axis,position,handler,intersect){const metasets=chart.getSortedVisibleDatasetMetas();const value=position[axis];for(let i=0,ilen=metasets.length;i<ilen;++i){const{index,data}=metasets[i];const{lo,hi}=binarySearch(metasets[i],axis,value,intersect);for(let j=lo;j<=hi;++j){const element=data[j];if(!element.skip){handler(element,index,j);}}}}function getDistanceMetricForAxis(axis){const useX=axis.indexOf('x')!==-1;const useY=axis.indexOf('y')!==-1;return function(pt1,pt2){const deltaX=useX?Math.abs(pt1.x-pt2.x):0;const deltaY=useY?Math.abs(pt1.y-pt2.y):0;return Math.sqrt(Math.pow(deltaX,2)+Math.pow(deltaY,2));};}function getIntersectItems(chart,position,axis,useFinalPosition,includeInvisible){const items=[];if(!includeInvisible&&!chart.isPointInArea(position)){return items;}const evaluationFunc=function(element,datasetIndex,index){if(!includeInvisible&&!_isPointInArea(element,chart.chartArea,0)){return;}if(element.inRange(position.x,position.y,useFinalPosition)){items.push({element,datasetIndex,index});}};evaluateInteractionItems(chart,axis,position,evaluationFunc,true);return items;}function getNearestRadialItems(chart,position,axis,useFinalPosition){let items=[];function evaluationFunc(element,datasetIndex,index){const{startAngle,endAngle}=element.getProps(['startAngle','endAngle'],useFinalPosition);const{angle}=getAngleFromPoint(element,{x:position.x,y:position.y});if(_angleBetween(angle,startAngle,endAngle)){items.push({element,datasetIndex,index});}}evaluateInteractionItems(chart,axis,position,evaluationFunc);return items;}function getNearestCartesianItems(chart,position,axis,intersect,useFinalPosition,includeInvisible){let items=[];const distanceMetric=getDistanceMetricForAxis(axis);let minDistance=Number.POSITIVE_INFINITY;function evaluationFunc(element,datasetIndex,index){const inRange=element.inRange(position.x,position.y,useFinalPosition);if(intersect&&!inRange){return;}const center=element.getCenterPoint(useFinalPosition);const pointInArea=!!includeInvisible||chart.isPointInArea(center);if(!pointInArea&&!inRange){return;}const distance=distanceMetric(position,center);if(distance<minDistance){items=[{element,datasetIndex,index}];minDistance=distance;}else if(distance===minDistance){items.push({element,datasetIndex,index});}}evaluateInteractionItems(chart,axis,position,evaluationFunc);return items;}function getNearestItems(chart,position,axis,intersect,useFinalPosition,includeInvisible){if(!includeInvisible&&!chart.isPointInArea(position)){return[];}return axis==='r'&&!intersect?getNearestRadialItems(chart,position,axis,useFinalPosition):getNearestCartesianItems(chart,position,axis,intersect,useFinalPosition,includeInvisible);}function getAxisItems(chart,position,axis,intersect,useFinalPosition){const items=[];const rangeMethod=axis==='x'?'inXRange':'inYRange';let intersectsItem=false;evaluateInteractionItems(chart,axis,position,(element,datasetIndex,index)=>{if(element[rangeMethod]&&element[rangeMethod](position[axis],useFinalPosition)){items.push({element,datasetIndex,index});intersectsItem=intersectsItem||element.inRange(position.x,position.y,useFinalPosition);}});if(intersect&&!intersectsItem){return[];}return items;}var Interaction={modes:{index(chart,e,options,useFinalPosition){const position=getRelativePosition(e,chart);const axis=options.axis||'x';const includeInvisible=options.includeInvisible||false;const items=options.intersect?getIntersectItems(chart,position,axis,useFinalPosition,includeInvisible):getNearestItems(chart,position,axis,false,useFinalPosition,includeInvisible);const elements=[];if(!items.length){return[];}chart.getSortedVisibleDatasetMetas().forEach(meta=>{const index=items[0].index;const element=meta.data[index];if(element&&!element.skip){elements.push({element,datasetIndex:meta.index,index});}});return elements;},dataset(chart,e,options,useFinalPosition){const position=getRelativePosition(e,chart);const axis=options.axis||'xy';const includeInvisible=options.includeInvisible||false;let items=options.intersect?getIntersectItems(chart,position,axis,useFinalPosition,includeInvisible):getNearestItems(chart,position,axis,false,useFinalPosition,includeInvisible);if(items.length>0){const datasetIndex=items[0].datasetIndex;const data=chart.getDatasetMeta(datasetIndex).data;items=[];for(let i=0;i<data.length;++i){items.push({element:data[i],datasetIndex,index:i});}}return items;},point(chart,e,options,useFinalPosition){const position=getRelativePosition(e,chart);const axis=options.axis||'xy';const includeInvisible=options.includeInvisible||false;return getIntersectItems(chart,position,axis,useFinalPosition,includeInvisible);},nearest(chart,e,options,useFinalPosition){const position=getRelativePosition(e,chart);const axis=options.axis||'xy';const includeInvisible=options.includeInvisible||false;return getNearestItems(chart,position,axis,options.intersect,useFinalPosition,includeInvisible);},x(chart,e,options,useFinalPosition){const position=getRelativePosition(e,chart);return getAxisItems(chart,position,'x',options.intersect,useFinalPosition);},y(chart,e,options,useFinalPosition){const position=getRelativePosition(e,chart);return getAxisItems(chart,position,'y',options.intersect,useFinalPosition);}}};const STATIC_POSITIONS=['left','top','right','bottom'];function filterByPosition(array,position){return array.filter(v=>v.pos===position);}function filterDynamicPositionByAxis(array,axis){return array.filter(v=>STATIC_POSITIONS.indexOf(v.pos)===-1&&v.box.axis===axis);}function sortByWeight(array,reverse){return array.sort((a,b)=>{const v0=reverse?b:a;const v1=reverse?a:b;return v0.weight===v1.weight?v0.index-v1.index:v0.weight-v1.weight;});}function wrapBoxes(boxes){const layoutBoxes=[];let i,ilen,box,pos,stack,stackWeight;for(i=0,ilen=(boxes||[]).length;i<ilen;++i){box=boxes[i];({position:pos,options:{stack,stackWeight=1}}=box);layoutBoxes.push({index:i,box,pos,horizontal:box.isHorizontal(),weight:box.weight,stack:stack&&pos+stack,stackWeight});}return layoutBoxes;}function buildStacks(layouts){const stacks={};for(const wrap of layouts){const{stack,pos,stackWeight}=wrap;if(!stack||!STATIC_POSITIONS.includes(pos)){continue;}const _stack=stacks[stack]||(stacks[stack]={count:0,placed:0,weight:0,size:0});_stack.count++;_stack.weight+=stackWeight;}return stacks;}function setLayoutDims(layouts,params){const stacks=buildStacks(layouts);const{vBoxMaxWidth,hBoxMaxHeight}=params;let i,ilen,layout;for(i=0,ilen=layouts.length;i<ilen;++i){layout=layouts[i];const{fullSize}=layout.box;const stack=stacks[layout.stack];const factor=stack&&layout.stackWeight/stack.weight;if(layout.horizontal){layout.width=factor?factor*vBoxMaxWidth:fullSize&&params.availableWidth;layout.height=hBoxMaxHeight;}else{layout.width=vBoxMaxWidth;layout.height=factor?factor*hBoxMaxHeight:fullSize&&params.availableHeight;}}return stacks;}function buildLayoutBoxes(boxes){const layoutBoxes=wrapBoxes(boxes);const fullSize=sortByWeight(layoutBoxes.filter(wrap=>wrap.box.fullSize),true);const left=sortByWeight(filterByPosition(layoutBoxes,'left'),true);const right=sortByWeight(filterByPosition(layoutBoxes,'right'));const top=sortByWeight(filterByPosition(layoutBoxes,'top'),true);const bottom=sortByWeight(filterByPosition(layoutBoxes,'bottom'));const centerHorizontal=filterDynamicPositionByAxis(layoutBoxes,'x');const centerVertical=filterDynamicPositionByAxis(layoutBoxes,'y');return{fullSize,leftAndTop:left.concat(top),rightAndBottom:right.concat(centerVertical).concat(bottom).concat(centerHorizontal),chartArea:filterByPosition(layoutBoxes,'chartArea'),vertical:left.concat(right).concat(centerVertical),horizontal:top.concat(bottom).concat(centerHorizontal)};}function getCombinedMax(maxPadding,chartArea,a,b){return Math.max(maxPadding[a],chartArea[a])+Math.max(maxPadding[b],chartArea[b]);}function updateMaxPadding(maxPadding,boxPadding){maxPadding.top=Math.max(maxPadding.top,boxPadding.top);maxPadding.left=Math.max(maxPadding.left,boxPadding.left);maxPadding.bottom=Math.max(maxPadding.bottom,boxPadding.bottom);maxPadding.right=Math.max(maxPadding.right,boxPadding.right);}function updateDims(chartArea,params,layout,stacks){const{pos,box}=layout;const maxPadding=chartArea.maxPadding;if(!isObject(pos)){if(layout.size){chartArea[pos]-=layout.size;}const stack=stacks[layout.stack]||{size:0,count:1};stack.size=Math.max(stack.size,layout.horizontal?box.height:box.width);layout.size=stack.size/stack.count;chartArea[pos]+=layout.size;}if(box.getPadding){updateMaxPadding(maxPadding,box.getPadding());}const newWidth=Math.max(0,params.outerWidth-getCombinedMax(maxPadding,chartArea,'left','right'));const newHeight=Math.max(0,params.outerHeight-getCombinedMax(maxPadding,chartArea,'top','bottom'));const widthChanged=newWidth!==chartArea.w;const heightChanged=newHeight!==chartArea.h;chartArea.w=newWidth;chartArea.h=newHeight;return layout.horizontal?{same:widthChanged,other:heightChanged}:{same:heightChanged,other:widthChanged};}function handleMaxPadding(chartArea){const maxPadding=chartArea.maxPadding;function updatePos(pos){const change=Math.max(maxPadding[pos]-chartArea[pos],0);chartArea[pos]+=change;return change;}chartArea.y+=updatePos('top');chartArea.x+=updatePos('left');updatePos('right');updatePos('bottom');}function getMargins(horizontal,chartArea){const maxPadding=chartArea.maxPadding;function marginForPositions(positions){const margin={left:0,top:0,right:0,bottom:0};positions.forEach(pos=>{margin[pos]=Math.max(chartArea[pos],maxPadding[pos]);});return margin;}return horizontal?marginForPositions(['left','right']):marginForPositions(['top','bottom']);}function fitBoxes(boxes,chartArea,params,stacks){const refitBoxes=[];let i,ilen,layout,box,refit,changed;for(i=0,ilen=boxes.length,refit=0;i<ilen;++i){layout=boxes[i];box=layout.box;box.update(layout.width||chartArea.w,layout.height||chartArea.h,getMargins(layout.horizontal,chartArea));const{same,other}=updateDims(chartArea,params,layout,stacks);refit|=same&&refitBoxes.length;changed=changed||other;if(!box.fullSize){refitBoxes.push(layout);}}return refit&&fitBoxes(refitBoxes,chartArea,params,stacks)||changed;}function setBoxDims(box,left,top,width,height){box.top=top;box.left=left;box.right=left+width;box.bottom=top+height;box.width=width;box.height=height;}function placeBoxes(boxes,chartArea,params,stacks){const userPadding=params.padding;let{x,y}=chartArea;for(const layout of boxes){const box=layout.box;const stack=stacks[layout.stack]||{placed:0,weight:1};const weight=layout.stackWeight/stack.weight||1;if(layout.horizontal){const width=chartArea.w*weight;const height=stack.size||box.height;if(defined(stack.start)){y=stack.start;}if(box.fullSize){setBoxDims(box,userPadding.left,y,params.outerWidth-userPadding.right-userPadding.left,height);}else{setBoxDims(box,chartArea.left+stack.placed,y,width,height);}stack.start=y;stack.placed+=width;y=box.bottom;}else{const height=chartArea.h*weight;const width=stack.size||box.width;if(defined(stack.start)){x=stack.start;}if(box.fullSize){setBoxDims(box,x,userPadding.top,width,params.outerHeight-userPadding.bottom-userPadding.top);}else{setBoxDims(box,x,chartArea.top+stack.placed,width,height);}stack.start=x;stack.placed+=height;x=box.right;}}chartArea.x=x;chartArea.y=y;}var layouts={addBox(chart,item){if(!chart.boxes){chart.boxes=[];}item.fullSize=item.fullSize||false;item.position=item.position||'top';item.weight=item.weight||0;item._layers=item._layers||function(){return[{z:0,draw(chartArea){item.draw(chartArea);}}];};chart.boxes.push(item);},removeBox(chart,layoutItem){const index=chart.boxes?chart.boxes.indexOf(layoutItem):-1;if(index!==-1){chart.boxes.splice(index,1);}},configure(chart,item,options){item.fullSize=options.fullSize;item.position=options.position;item.weight=options.weight;},update(chart,width,height,minPadding){if(!chart){return;}const padding=toPadding(chart.options.layout.padding);const availableWidth=Math.max(width-padding.width,0);const availableHeight=Math.max(height-padding.height,0);const boxes=buildLayoutBoxes(chart.boxes);const verticalBoxes=boxes.vertical;const horizontalBoxes=boxes.horizontal;each(chart.boxes,box=>{if(typeof box.beforeLayout==='function'){box.beforeLayout();}});const visibleVerticalBoxCount=verticalBoxes.reduce((total,wrap)=>wrap.box.options&&wrap.box.options.display===false?total:total+1,0)||1;const params=Object.freeze({outerWidth:width,outerHeight:height,padding,availableWidth,availableHeight,vBoxMaxWidth:availableWidth/2/visibleVerticalBoxCount,hBoxMaxHeight:availableHeight/2});const maxPadding=Object.assign({},padding);updateMaxPadding(maxPadding,toPadding(minPadding));const chartArea=Object.assign({maxPadding,w:availableWidth,h:availableHeight,x:padding.left,y:padding.top},padding);const stacks=setLayoutDims(verticalBoxes.concat(horizontalBoxes),params);fitBoxes(boxes.fullSize,chartArea,params,stacks);fitBoxes(verticalBoxes,chartArea,params,stacks);if(fitBoxes(horizontalBoxes,chartArea,params,stacks)){fitBoxes(verticalBoxes,chartArea,params,stacks);}handleMaxPadding(chartArea);placeBoxes(boxes.leftAndTop,chartArea,params,stacks);chartArea.x+=chartArea.w;chartArea.y+=chartArea.h;placeBoxes(boxes.rightAndBottom,chartArea,params,stacks);chart.chartArea={left:chartArea.left,top:chartArea.top,right:chartArea.left+chartArea.w,bottom:chartArea.top+chartArea.h,height:chartArea.h,width:chartArea.w};each(boxes.chartArea,layout=>{const box=layout.box;Object.assign(box,chart.chartArea);box.update(chartArea.w,chartArea.h,{left:0,top:0,right:0,bottom:0});});}};class BasePlatform{acquireContext(canvas,aspectRatio){}releaseContext(context){return false;}addEventListener(chart,type,listener){}removeEventListener(chart,type,listener){}getDevicePixelRatio(){return 1;}getMaximumSize(element,width,height,aspectRatio){width=Math.max(0,width||element.width);height=height||element.height;return{width,height:Math.max(0,aspectRatio?Math.floor(width/aspectRatio):height)};}isAttached(canvas){return true;}updateConfig(config){}}class BasicPlatform extends BasePlatform{acquireContext(item){return item&&item.getContext&&item.getContext('2d')||null;}updateConfig(config){config.options.animation=false;}}const EXPANDO_KEY='$chartjs';const EVENT_TYPES={touchstart:'mousedown',touchmove:'mousemove',touchend:'mouseup',pointerenter:'mouseenter',pointerdown:'mousedown',pointermove:'mousemove',pointerup:'mouseup',pointerleave:'mouseout',pointerout:'mouseout'};const isNullOrEmpty=value=>value===null||value==='';function initCanvas(canvas,aspectRatio){const style=canvas.style;const renderHeight=canvas.getAttribute('height');const renderWidth=canvas.getAttribute('width');canvas[EXPANDO_KEY]={initial:{height:renderHeight,width:renderWidth,style:{display:style.display,height:style.height,width:style.width}}};style.display=style.display||'block';style.boxSizing=style.boxSizing||'border-box';if(isNullOrEmpty(renderWidth)){const displayWidth=readUsedSize(canvas,'width');if(displayWidth!==undefined){canvas.width=displayWidth;}}if(isNullOrEmpty(renderHeight)){if(canvas.style.height===''){canvas.height=canvas.width/(aspectRatio||2);}else{const displayHeight=readUsedSize(canvas,'height');if(displayHeight!==undefined){canvas.height=displayHeight;}}}return canvas;}const eventListenerOptions=supportsEventListenerOptions?{passive:true}:false;function addListener(node,type,listener){if(node){node.addEventListener(type,listener,eventListenerOptions);}}function removeListener(chart,type,listener){if(chart&&chart.canvas){chart.canvas.removeEventListener(type,listener,eventListenerOptions);}}function fromNativeEvent(event,chart){const type=EVENT_TYPES[event.type]||event.type;const{x,y}=getRelativePosition(event,chart);return{type,chart,native:event,x:x!==undefined?x:null,y:y!==undefined?y:null};}function nodeListContains(nodeList,canvas){for(const node of nodeList){if(node===canvas||node.contains(canvas)){return true;}}}function createAttachObserver(chart,type,listener){const canvas=chart.canvas;const observer=new MutationObserver(entries=>{let trigger=false;for(const entry of entries){trigger=trigger||nodeListContains(entry.addedNodes,canvas);trigger=trigger&&!nodeListContains(entry.removedNodes,canvas);}if(trigger){listener();}});observer.observe(document,{childList:true,subtree:true});return observer;}function createDetachObserver(chart,type,listener){const canvas=chart.canvas;const observer=new MutationObserver(entries=>{let trigger=false;for(const entry of entries){trigger=trigger||nodeListContains(entry.removedNodes,canvas);trigger=trigger&&!nodeListContains(entry.addedNodes,canvas);}if(trigger){listener();}});observer.observe(document,{childList:true,subtree:true});return observer;}const drpListeningCharts=new Map();let oldDevicePixelRatio=0;function onWindowResize(){const dpr=window.devicePixelRatio;if(dpr===oldDevicePixelRatio){return;}oldDevicePixelRatio=dpr;drpListeningCharts.forEach((resize,chart)=>{if(chart.currentDevicePixelRatio!==dpr){resize();}});}function listenDevicePixelRatioChanges(chart,resize){if(!drpListeningCharts.size){window.addEventListener('resize',onWindowResize);}drpListeningCharts.set(chart,resize);}function unlistenDevicePixelRatioChanges(chart){drpListeningCharts.delete(chart);if(!drpListeningCharts.size){window.removeEventListener('resize',onWindowResize);}}function createResizeObserver(chart,type,listener){const canvas=chart.canvas;const container=canvas&&_getParentNode(canvas);if(!container){return;}const resize=throttled((width,height)=>{const w=container.clientWidth;listener(width,height);if(w<container.clientWidth){listener();}},window);const observer=new ResizeObserver(entries=>{const entry=entries[0];const width=entry.contentRect.width;const height=entry.contentRect.height;if(width===0&&height===0){return;}resize(width,height);});observer.observe(container);listenDevicePixelRatioChanges(chart,resize);return observer;}function releaseObserver(chart,type,observer){if(observer){observer.disconnect();}if(type==='resize'){unlistenDevicePixelRatioChanges(chart);}}function createProxyAndListen(chart,type,listener){const canvas=chart.canvas;const proxy=throttled(event=>{if(chart.ctx!==null){listener(fromNativeEvent(event,chart));}},chart);addListener(canvas,type,proxy);return proxy;}class DomPlatform extends BasePlatform{acquireContext(canvas,aspectRatio){const context=canvas&&canvas.getContext&&canvas.getContext('2d');if(context&&context.canvas===canvas){initCanvas(canvas,aspectRatio);return context;}return null;}releaseContext(context){const canvas=context.canvas;if(!canvas[EXPANDO_KEY]){return false;}const initial=canvas[EXPANDO_KEY].initial;['height','width'].forEach(prop=>{const value=initial[prop];if(isNullOrUndef(value)){canvas.removeAttribute(prop);}else{canvas.setAttribute(prop,value);}});const style=initial.style||{};Object.keys(style).forEach(key=>{canvas.style[key]=style[key];});canvas.width=canvas.width;delete canvas[EXPANDO_KEY];return true;}addEventListener(chart,type,listener){this.removeEventListener(chart,type);const proxies=chart.$proxies||(chart.$proxies={});const handlers={attach:createAttachObserver,detach:createDetachObserver,resize:createResizeObserver};const handler=handlers[type]||createProxyAndListen;proxies[type]=handler(chart,type,listener);}removeEventListener(chart,type){const proxies=chart.$proxies||(chart.$proxies={});const proxy=proxies[type];if(!proxy){return;}const handlers={attach:releaseObserver,detach:releaseObserver,resize:releaseObserver};const handler=handlers[type]||removeListener;handler(chart,type,proxy);proxies[type]=undefined;}getDevicePixelRatio(){return window.devicePixelRatio;}getMaximumSize(canvas,width,height,aspectRatio){return getMaximumSize(canvas,width,height,aspectRatio);}isAttached(canvas){const container=canvas&&_getParentNode(canvas);return!!(container&&container.isConnected);}}function _detectPlatform(canvas){if(!_isDomSupported()||typeof OffscreenCanvas!=='undefined'&&canvas instanceof OffscreenCanvas){return BasicPlatform;}return DomPlatform;}class Element{static defaults={};static defaultRoutes=undefined;x;y;active=false;options;$animations;tooltipPosition(useFinalPosition){const{x,y}=this.getProps(['x','y'],useFinalPosition);return{x,y};}hasValue(){return isNumber$1(this.x)&&isNumber$1(this.y);}getProps(props,final){const anims=this.$animations;if(!final||!anims){// let's not create an object, if not needed
return this;}const ret={};props.forEach(prop=>{ret[prop]=anims[prop]&&anims[prop].active()?anims[prop]._to:this[prop];});return ret;}}function autoSkip(scale,ticks){const tickOpts=scale.options.ticks;const determinedMaxTicks=determineMaxTicks(scale);const ticksLimit=Math.min(tickOpts.maxTicksLimit||determinedMaxTicks,determinedMaxTicks);const majorIndices=tickOpts.major.enabled?getMajorIndices(ticks):[];const numMajorIndices=majorIndices.length;const first=majorIndices[0];const last=majorIndices[numMajorIndices-1];const newTicks=[];if(numMajorIndices>ticksLimit){skipMajors(ticks,newTicks,majorIndices,numMajorIndices/ticksLimit);return newTicks;}const spacing=calculateSpacing(majorIndices,ticks,ticksLimit);if(numMajorIndices>0){let i,ilen;const avgMajorSpacing=numMajorIndices>1?Math.round((last-first)/(numMajorIndices-1)):null;skip(ticks,newTicks,spacing,isNullOrUndef(avgMajorSpacing)?0:first-avgMajorSpacing,first);for(i=0,ilen=numMajorIndices-1;i<ilen;i++){skip(ticks,newTicks,spacing,majorIndices[i],majorIndices[i+1]);}skip(ticks,newTicks,spacing,last,isNullOrUndef(avgMajorSpacing)?ticks.length:last+avgMajorSpacing);return newTicks;}skip(ticks,newTicks,spacing);return newTicks;}function determineMaxTicks(scale){const offset=scale.options.offset;const tickLength=scale._tickSize();const maxScale=scale._length/tickLength+(offset?0:1);const maxChart=scale._maxLength/tickLength;return Math.floor(Math.min(maxScale,maxChart));}function calculateSpacing(majorIndices,ticks,ticksLimit){const evenMajorSpacing=getEvenSpacing(majorIndices);const spacing=ticks.length/ticksLimit;if(!evenMajorSpacing){return Math.max(spacing,1);}const factors=_factorize(evenMajorSpacing);for(let i=0,ilen=factors.length-1;i<ilen;i++){const factor=factors[i];if(factor>spacing){return factor;}}return Math.max(spacing,1);}function getMajorIndices(ticks){const result=[];let i,ilen;for(i=0,ilen=ticks.length;i<ilen;i++){if(ticks[i].major){result.push(i);}}return result;}function skipMajors(ticks,newTicks,majorIndices,spacing){let count=0;let next=majorIndices[0];let i;spacing=Math.ceil(spacing);for(i=0;i<ticks.length;i++){if(i===next){newTicks.push(ticks[i]);count++;next=majorIndices[count*spacing];}}}function skip(ticks,newTicks,spacing,majorStart,majorEnd){const start=valueOrDefault(majorStart,0);const end=Math.min(valueOrDefault(majorEnd,ticks.length),ticks.length);let count=0;let length,i,next;spacing=Math.ceil(spacing);if(majorEnd){length=majorEnd-majorStart;spacing=length/Math.floor(length/spacing);}next=start;while(next<0){count++;next=Math.round(start+count*spacing);}for(i=Math.max(start,0);i<end;i++){if(i===next){newTicks.push(ticks[i]);count++;next=Math.round(start+count*spacing);}}}function getEvenSpacing(arr){const len=arr.length;let i,diff;if(len<2){return false;}for(diff=arr[0],i=1;i<len;++i){if(arr[i]-arr[i-1]!==diff){return false;}}return diff;}const reverseAlign=align=>align==='left'?'right':align==='right'?'left':align;const offsetFromEdge=(scale,edge,offset)=>edge==='top'||edge==='left'?scale[edge]+offset:scale[edge]-offset;const getTicksLimit=(ticksLength,maxTicksLimit)=>Math.min(maxTicksLimit||ticksLength,ticksLength);function sample(arr,numItems){const result=[];const increment=arr.length/numItems;const len=arr.length;let i=0;for(;i<len;i+=increment){result.push(arr[Math.floor(i)]);}return result;}function getPixelForGridLine(scale,index,offsetGridLines){const length=scale.ticks.length;const validIndex=Math.min(index,length-1);const start=scale._startPixel;const end=scale._endPixel;const epsilon=1e-6;let lineValue=scale.getPixelForTick(validIndex);let offset;if(offsetGridLines){if(length===1){offset=Math.max(lineValue-start,end-lineValue);}else if(index===0){offset=(scale.getPixelForTick(1)-lineValue)/2;}else{offset=(lineValue-scale.getPixelForTick(validIndex-1))/2;}lineValue+=validIndex<index?offset:-offset;if(lineValue<start-epsilon||lineValue>end+epsilon){return;}}return lineValue;}function garbageCollect(caches,length){each(caches,cache=>{const gc=cache.gc;const gcLen=gc.length/2;let i;if(gcLen>length){for(i=0;i<gcLen;++i){delete cache.data[gc[i]];}gc.splice(0,gcLen);}});}function getTickMarkLength(options){return options.drawTicks?options.tickLength:0;}function getTitleHeight(options,fallback){if(!options.display){return 0;}const font=toFont(options.font,fallback);const padding=toPadding(options.padding);const lines=isArray(options.text)?options.text.length:1;return lines*font.lineHeight+padding.height;}function createScaleContext(parent,scale){return createContext(parent,{scale,type:'scale'});}function createTickContext(parent,index,tick){return createContext(parent,{tick,index,type:'tick'});}function titleAlign(align,position,reverse){let ret=_toLeftRightCenter(align);if(reverse&&position!=='right'||!reverse&&position==='right'){ret=reverseAlign(ret);}return ret;}function titleArgs(scale,offset,position,align){const{top,left,bottom,right,chart}=scale;const{chartArea,scales}=chart;let rotation=0;let maxWidth,titleX,titleY;const height=bottom-top;const width=right-left;if(scale.isHorizontal()){titleX=_alignStartEnd(align,left,right);if(isObject(position)){const positionAxisID=Object.keys(position)[0];const value=position[positionAxisID];titleY=scales[positionAxisID].getPixelForValue(value)+height-offset;}else if(position==='center'){titleY=(chartArea.bottom+chartArea.top)/2+height-offset;}else{titleY=offsetFromEdge(scale,position,offset);}maxWidth=right-left;}else{if(isObject(position)){const positionAxisID=Object.keys(position)[0];const value=position[positionAxisID];titleX=scales[positionAxisID].getPixelForValue(value)-width+offset;}else if(position==='center'){titleX=(chartArea.left+chartArea.right)/2-width+offset;}else{titleX=offsetFromEdge(scale,position,offset);}titleY=_alignStartEnd(align,bottom,top);rotation=position==='left'?-HALF_PI:HALF_PI;}return{titleX,titleY,maxWidth,rotation};}class Scale extends Element{constructor(cfg){super();this.id=cfg.id;this.type=cfg.type;this.options=undefined;this.ctx=cfg.ctx;this.chart=cfg.chart;this.top=undefined;this.bottom=undefined;this.left=undefined;this.right=undefined;this.width=undefined;this.height=undefined;this._margins={left:0,right:0,top:0,bottom:0};this.maxWidth=undefined;this.maxHeight=undefined;this.paddingTop=undefined;this.paddingBottom=undefined;this.paddingLeft=undefined;this.paddingRight=undefined;this.axis=undefined;this.labelRotation=undefined;this.min=undefined;this.max=undefined;this._range=undefined;this.ticks=[];this._gridLineItems=null;this._labelItems=null;this._labelSizes=null;this._length=0;this._maxLength=0;this._longestTextCache={};this._startPixel=undefined;this._endPixel=undefined;this._reversePixels=false;this._userMax=undefined;this._userMin=undefined;this._suggestedMax=undefined;this._suggestedMin=undefined;this._ticksLength=0;this._borderValue=0;this._cache={};this._dataLimitsCached=false;this.$context=undefined;}init(options){this.options=options.setContext(this.getContext());this.axis=options.axis;this._userMin=this.parse(options.min);this._userMax=this.parse(options.max);this._suggestedMin=this.parse(options.suggestedMin);this._suggestedMax=this.parse(options.suggestedMax);}parse(raw,index){return raw;}getUserBounds(){let{_userMin,_userMax,_suggestedMin,_suggestedMax}=this;_userMin=finiteOrDefault(_userMin,Number.POSITIVE_INFINITY);_userMax=finiteOrDefault(_userMax,Number.NEGATIVE_INFINITY);_suggestedMin=finiteOrDefault(_suggestedMin,Number.POSITIVE_INFINITY);_suggestedMax=finiteOrDefault(_suggestedMax,Number.NEGATIVE_INFINITY);return{min:finiteOrDefault(_userMin,_suggestedMin),max:finiteOrDefault(_userMax,_suggestedMax),minDefined:isNumberFinite(_userMin),maxDefined:isNumberFinite(_userMax)};}getMinMax(canStack){let{min,max,minDefined,maxDefined}=this.getUserBounds();let range;if(minDefined&&maxDefined){return{min,max};}const metas=this.getMatchingVisibleMetas();for(let i=0,ilen=metas.length;i<ilen;++i){range=metas[i].controller.getMinMax(this,canStack);if(!minDefined){min=Math.min(min,range.min);}if(!maxDefined){max=Math.max(max,range.max);}}min=maxDefined&&min>max?max:min;max=minDefined&&min>max?min:max;return{min:finiteOrDefault(min,finiteOrDefault(max,min)),max:finiteOrDefault(max,finiteOrDefault(min,max))};}getPadding(){return{left:this.paddingLeft||0,top:this.paddingTop||0,right:this.paddingRight||0,bottom:this.paddingBottom||0};}getTicks(){return this.ticks;}getLabels(){const data=this.chart.data;return this.options.labels||(this.isHorizontal()?data.xLabels:data.yLabels)||data.labels||[];}getLabelItems(chartArea=this.chart.chartArea){const items=this._labelItems||(this._labelItems=this._computeLabelItems(chartArea));return items;}beforeLayout(){this._cache={};this._dataLimitsCached=false;}beforeUpdate(){callback(this.options.beforeUpdate,[this]);}update(maxWidth,maxHeight,margins){const{beginAtZero,grace,ticks:tickOpts}=this.options;const sampleSize=tickOpts.sampleSize;this.beforeUpdate();this.maxWidth=maxWidth;this.maxHeight=maxHeight;this._margins=margins=Object.assign({left:0,right:0,top:0,bottom:0},margins);this.ticks=null;this._labelSizes=null;this._gridLineItems=null;this._labelItems=null;this.beforeSetDimensions();this.setDimensions();this.afterSetDimensions();this._maxLength=this.isHorizontal()?this.width+margins.left+margins.right:this.height+margins.top+margins.bottom;if(!this._dataLimitsCached){this.beforeDataLimits();this.determineDataLimits();this.afterDataLimits();this._range=_addGrace(this,grace,beginAtZero);this._dataLimitsCached=true;}this.beforeBuildTicks();this.ticks=this.buildTicks()||[];this.afterBuildTicks();const samplingEnabled=sampleSize<this.ticks.length;this._convertTicksToLabels(samplingEnabled?sample(this.ticks,sampleSize):this.ticks);this.configure();this.beforeCalculateLabelRotation();this.calculateLabelRotation();this.afterCalculateLabelRotation();if(tickOpts.display&&(tickOpts.autoSkip||tickOpts.source==='auto')){this.ticks=autoSkip(this,this.ticks);this._labelSizes=null;this.afterAutoSkip();}if(samplingEnabled){this._convertTicksToLabels(this.ticks);}this.beforeFit();this.fit();this.afterFit();this.afterUpdate();}configure(){let reversePixels=this.options.reverse;let startPixel,endPixel;if(this.isHorizontal()){startPixel=this.left;endPixel=this.right;}else{startPixel=this.top;endPixel=this.bottom;reversePixels=!reversePixels;}this._startPixel=startPixel;this._endPixel=endPixel;this._reversePixels=reversePixels;this._length=endPixel-startPixel;this._alignToPixels=this.options.alignToPixels;}afterUpdate(){callback(this.options.afterUpdate,[this]);}beforeSetDimensions(){callback(this.options.beforeSetDimensions,[this]);}setDimensions(){if(this.isHorizontal()){this.width=this.maxWidth;this.left=0;this.right=this.width;}else{this.height=this.maxHeight;this.top=0;this.bottom=this.height;}this.paddingLeft=0;this.paddingTop=0;this.paddingRight=0;this.paddingBottom=0;}afterSetDimensions(){callback(this.options.afterSetDimensions,[this]);}_callHooks(name){this.chart.notifyPlugins(name,this.getContext());callback(this.options[name],[this]);}beforeDataLimits(){this._callHooks('beforeDataLimits');}determineDataLimits(){}afterDataLimits(){this._callHooks('afterDataLimits');}beforeBuildTicks(){this._callHooks('beforeBuildTicks');}buildTicks(){return[];}afterBuildTicks(){this._callHooks('afterBuildTicks');}beforeTickToLabelConversion(){callback(this.options.beforeTickToLabelConversion,[this]);}generateTickLabels(ticks){const tickOpts=this.options.ticks;let i,ilen,tick;for(i=0,ilen=ticks.length;i<ilen;i++){tick=ticks[i];tick.label=callback(tickOpts.callback,[tick.value,i,ticks],this);}}afterTickToLabelConversion(){callback(this.options.afterTickToLabelConversion,[this]);}beforeCalculateLabelRotation(){callback(this.options.beforeCalculateLabelRotation,[this]);}calculateLabelRotation(){const options=this.options;const tickOpts=options.ticks;const numTicks=getTicksLimit(this.ticks.length,options.ticks.maxTicksLimit);const minRotation=tickOpts.minRotation||0;const maxRotation=tickOpts.maxRotation;let labelRotation=minRotation;let tickWidth,maxHeight,maxLabelDiagonal;if(!this._isVisible()||!tickOpts.display||minRotation>=maxRotation||numTicks<=1||!this.isHorizontal()){this.labelRotation=minRotation;return;}const labelSizes=this._getLabelSizes();const maxLabelWidth=labelSizes.widest.width;const maxLabelHeight=labelSizes.highest.height;const maxWidth=_limitValue(this.chart.width-maxLabelWidth,0,this.maxWidth);tickWidth=options.offset?this.maxWidth/numTicks:maxWidth/(numTicks-1);if(maxLabelWidth+6>tickWidth){tickWidth=maxWidth/(numTicks-(options.offset?0.5:1));maxHeight=this.maxHeight-getTickMarkLength(options.grid)-tickOpts.padding-getTitleHeight(options.title,this.chart.options.font);maxLabelDiagonal=Math.sqrt(maxLabelWidth*maxLabelWidth+maxLabelHeight*maxLabelHeight);labelRotation=toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height+6)/tickWidth,-1,1)),Math.asin(_limitValue(maxHeight/maxLabelDiagonal,-1,1))-Math.asin(_limitValue(maxLabelHeight/maxLabelDiagonal,-1,1))));labelRotation=Math.max(minRotation,Math.min(maxRotation,labelRotation));}this.labelRotation=labelRotation;}afterCalculateLabelRotation(){callback(this.options.afterCalculateLabelRotation,[this]);}afterAutoSkip(){}beforeFit(){callback(this.options.beforeFit,[this]);}fit(){const minSize={width:0,height:0};const{chart,options:{ticks:tickOpts,title:titleOpts,grid:gridOpts}}=this;const display=this._isVisible();const isHorizontal=this.isHorizontal();if(display){const titleHeight=getTitleHeight(titleOpts,chart.options.font);if(isHorizontal){minSize.width=this.maxWidth;minSize.height=getTickMarkLength(gridOpts)+titleHeight;}else{minSize.height=this.maxHeight;minSize.width=getTickMarkLength(gridOpts)+titleHeight;}if(tickOpts.display&&this.ticks.length){const{first,last,widest,highest}=this._getLabelSizes();const tickPadding=tickOpts.padding*2;const angleRadians=toRadians(this.labelRotation);const cos=Math.cos(angleRadians);const sin=Math.sin(angleRadians);if(isHorizontal){const labelHeight=tickOpts.mirror?0:sin*widest.width+cos*highest.height;minSize.height=Math.min(this.maxHeight,minSize.height+labelHeight+tickPadding);}else{const labelWidth=tickOpts.mirror?0:cos*widest.width+sin*highest.height;minSize.width=Math.min(this.maxWidth,minSize.width+labelWidth+tickPadding);}this._calculatePadding(first,last,sin,cos);}}this._handleMargins();if(isHorizontal){this.width=this._length=chart.width-this._margins.left-this._margins.right;this.height=minSize.height;}else{this.width=minSize.width;this.height=this._length=chart.height-this._margins.top-this._margins.bottom;}}_calculatePadding(first,last,sin,cos){const{ticks:{align,padding},position}=this.options;const isRotated=this.labelRotation!==0;const labelsBelowTicks=position!=='top'&&this.axis==='x';if(this.isHorizontal()){const offsetLeft=this.getPixelForTick(0)-this.left;const offsetRight=this.right-this.getPixelForTick(this.ticks.length-1);let paddingLeft=0;let paddingRight=0;if(isRotated){if(labelsBelowTicks){paddingLeft=cos*first.width;paddingRight=sin*last.height;}else{paddingLeft=sin*first.height;paddingRight=cos*last.width;}}else if(align==='start'){paddingRight=last.width;}else if(align==='end'){paddingLeft=first.width;}else if(align!=='inner'){paddingLeft=first.width/2;paddingRight=last.width/2;}this.paddingLeft=Math.max((paddingLeft-offsetLeft+padding)*this.width/(this.width-offsetLeft),0);this.paddingRight=Math.max((paddingRight-offsetRight+padding)*this.width/(this.width-offsetRight),0);}else{let paddingTop=last.height/2;let paddingBottom=first.height/2;if(align==='start'){paddingTop=0;paddingBottom=first.height;}else if(align==='end'){paddingTop=last.height;paddingBottom=0;}this.paddingTop=paddingTop+padding;this.paddingBottom=paddingBottom+padding;}}_handleMargins(){if(this._margins){this._margins.left=Math.max(this.paddingLeft,this._margins.left);this._margins.top=Math.max(this.paddingTop,this._margins.top);this._margins.right=Math.max(this.paddingRight,this._margins.right);this._margins.bottom=Math.max(this.paddingBottom,this._margins.bottom);}}afterFit(){callback(this.options.afterFit,[this]);}isHorizontal(){const{axis,position}=this.options;return position==='top'||position==='bottom'||axis==='x';}isFullSize(){return this.options.fullSize;}_convertTicksToLabels(ticks){this.beforeTickToLabelConversion();this.generateTickLabels(ticks);let i,ilen;for(i=0,ilen=ticks.length;i<ilen;i++){if(isNullOrUndef(ticks[i].label)){ticks.splice(i,1);ilen--;i--;}}this.afterTickToLabelConversion();}_getLabelSizes(){let labelSizes=this._labelSizes;if(!labelSizes){const sampleSize=this.options.ticks.sampleSize;let ticks=this.ticks;if(sampleSize<ticks.length){ticks=sample(ticks,sampleSize);}this._labelSizes=labelSizes=this._computeLabelSizes(ticks,ticks.length,this.options.ticks.maxTicksLimit);}return labelSizes;}_computeLabelSizes(ticks,length,maxTicksLimit){const{ctx,_longestTextCache:caches}=this;const widths=[];const heights=[];const increment=Math.floor(length/getTicksLimit(length,maxTicksLimit));let widestLabelSize=0;let highestLabelSize=0;let i,j,jlen,label,tickFont,fontString,cache,lineHeight,width,height,nestedLabel;for(i=0;i<length;i+=increment){label=ticks[i].label;tickFont=this._resolveTickFontOptions(i);ctx.font=fontString=tickFont.string;cache=caches[fontString]=caches[fontString]||{data:{},gc:[]};lineHeight=tickFont.lineHeight;width=height=0;if(!isNullOrUndef(label)&&!isArray(label)){width=_measureText(ctx,cache.data,cache.gc,width,label);height=lineHeight;}else if(isArray(label)){for(j=0,jlen=label.length;j<jlen;++j){nestedLabel=label[j];if(!isNullOrUndef(nestedLabel)&&!isArray(nestedLabel)){width=_measureText(ctx,cache.data,cache.gc,width,nestedLabel);height+=lineHeight;}}}widths.push(width);heights.push(height);widestLabelSize=Math.max(width,widestLabelSize);highestLabelSize=Math.max(height,highestLabelSize);}garbageCollect(caches,length);const widest=widths.indexOf(widestLabelSize);const highest=heights.indexOf(highestLabelSize);const valueAt=idx=>({width:widths[idx]||0,height:heights[idx]||0});return{first:valueAt(0),last:valueAt(length-1),widest:valueAt(widest),highest:valueAt(highest),widths,heights};}getLabelForValue(value){return value;}getPixelForValue(value,index){return NaN;}getValueForPixel(pixel){}getPixelForTick(index){const ticks=this.ticks;if(index<0||index>ticks.length-1){return null;}return this.getPixelForValue(ticks[index].value);}getPixelForDecimal(decimal){if(this._reversePixels){decimal=1-decimal;}const pixel=this._startPixel+decimal*this._length;return _int16Range(this._alignToPixels?_alignPixel(this.chart,pixel,0):pixel);}getDecimalForPixel(pixel){const decimal=(pixel-this._startPixel)/this._length;return this._reversePixels?1-decimal:decimal;}getBasePixel(){return this.getPixelForValue(this.getBaseValue());}getBaseValue(){const{min,max}=this;return min<0&&max<0?max:min>0&&max>0?min:0;}getContext(index){const ticks=this.ticks||[];if(index>=0&&index<ticks.length){const tick=ticks[index];return tick.$context||(tick.$context=createTickContext(this.getContext(),index,tick));}return this.$context||(this.$context=createScaleContext(this.chart.getContext(),this));}_tickSize(){const optionTicks=this.options.ticks;const rot=toRadians(this.labelRotation);const cos=Math.abs(Math.cos(rot));const sin=Math.abs(Math.sin(rot));const labelSizes=this._getLabelSizes();const padding=optionTicks.autoSkipPadding||0;const w=labelSizes?labelSizes.widest.width+padding:0;const h=labelSizes?labelSizes.highest.height+padding:0;return this.isHorizontal()?h*cos>w*sin?w/cos:h/sin:h*sin<w*cos?h/cos:w/sin;}_isVisible(){const display=this.options.display;if(display!=='auto'){return!!display;}return this.getMatchingVisibleMetas().length>0;}_computeGridLineItems(chartArea){const axis=this.axis;const chart=this.chart;const options=this.options;const{grid,position,border}=options;const offset=grid.offset;const isHorizontal=this.isHorizontal();const ticks=this.ticks;const ticksLength=ticks.length+(offset?1:0);const tl=getTickMarkLength(grid);const items=[];const borderOpts=border.setContext(this.getContext());const axisWidth=borderOpts.display?borderOpts.width:0;const axisHalfWidth=axisWidth/2;const alignBorderValue=function(pixel){return _alignPixel(chart,pixel,axisWidth);};let borderValue,i,lineValue,alignedLineValue;let tx1,ty1,tx2,ty2,x1,y1,x2,y2;if(position==='top'){borderValue=alignBorderValue(this.bottom);ty1=this.bottom-tl;ty2=borderValue-axisHalfWidth;y1=alignBorderValue(chartArea.top)+axisHalfWidth;y2=chartArea.bottom;}else if(position==='bottom'){borderValue=alignBorderValue(this.top);y1=chartArea.top;y2=alignBorderValue(chartArea.bottom)-axisHalfWidth;ty1=borderValue+axisHalfWidth;ty2=this.top+tl;}else if(position==='left'){borderValue=alignBorderValue(this.right);tx1=this.right-tl;tx2=borderValue-axisHalfWidth;x1=alignBorderValue(chartArea.left)+axisHalfWidth;x2=chartArea.right;}else if(position==='right'){borderValue=alignBorderValue(this.left);x1=chartArea.left;x2=alignBorderValue(chartArea.right)-axisHalfWidth;tx1=borderValue+axisHalfWidth;tx2=this.left+tl;}else if(axis==='x'){if(position==='center'){borderValue=alignBorderValue((chartArea.top+chartArea.bottom)/2+0.5);}else if(isObject(position)){const positionAxisID=Object.keys(position)[0];const value=position[positionAxisID];borderValue=alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));}y1=chartArea.top;y2=chartArea.bottom;ty1=borderValue+axisHalfWidth;ty2=ty1+tl;}else if(axis==='y'){if(position==='center'){borderValue=alignBorderValue((chartArea.left+chartArea.right)/2);}else if(isObject(position)){const positionAxisID=Object.keys(position)[0];const value=position[positionAxisID];borderValue=alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));}tx1=borderValue-axisHalfWidth;tx2=tx1-tl;x1=chartArea.left;x2=chartArea.right;}const limit=valueOrDefault(options.ticks.maxTicksLimit,ticksLength);const step=Math.max(1,Math.ceil(ticksLength/limit));for(i=0;i<ticksLength;i+=step){const context=this.getContext(i);const optsAtIndex=grid.setContext(context);const optsAtIndexBorder=border.setContext(context);const lineWidth=optsAtIndex.lineWidth;const lineColor=optsAtIndex.color;const borderDash=optsAtIndexBorder.dash||[];const borderDashOffset=optsAtIndexBorder.dashOffset;const tickWidth=optsAtIndex.tickWidth;const tickColor=optsAtIndex.tickColor;const tickBorderDash=optsAtIndex.tickBorderDash||[];const tickBorderDashOffset=optsAtIndex.tickBorderDashOffset;lineValue=getPixelForGridLine(this,i,offset);if(lineValue===undefined){continue;}alignedLineValue=_alignPixel(chart,lineValue,lineWidth);if(isHorizontal){tx1=tx2=x1=x2=alignedLineValue;}else{ty1=ty2=y1=y2=alignedLineValue;}items.push({tx1,ty1,tx2,ty2,x1,y1,x2,y2,width:lineWidth,color:lineColor,borderDash,borderDashOffset,tickWidth,tickColor,tickBorderDash,tickBorderDashOffset});}this._ticksLength=ticksLength;this._borderValue=borderValue;return items;}_computeLabelItems(chartArea){const axis=this.axis;const options=this.options;const{position,ticks:optionTicks}=options;const isHorizontal=this.isHorizontal();const ticks=this.ticks;const{align,crossAlign,padding,mirror}=optionTicks;const tl=getTickMarkLength(options.grid);const tickAndPadding=tl+padding;const hTickAndPadding=mirror?-padding:tickAndPadding;const rotation=-toRadians(this.labelRotation);const items=[];let i,ilen,tick,label,x,y,textAlign,pixel,font,lineHeight,lineCount,textOffset;let textBaseline='middle';if(position==='top'){y=this.bottom-hTickAndPadding;textAlign=this._getXAxisLabelAlignment();}else if(position==='bottom'){y=this.top+hTickAndPadding;textAlign=this._getXAxisLabelAlignment();}else if(position==='left'){const ret=this._getYAxisLabelAlignment(tl);textAlign=ret.textAlign;x=ret.x;}else if(position==='right'){const ret=this._getYAxisLabelAlignment(tl);textAlign=ret.textAlign;x=ret.x;}else if(axis==='x'){if(position==='center'){y=(chartArea.top+chartArea.bottom)/2+tickAndPadding;}else if(isObject(position)){const positionAxisID=Object.keys(position)[0];const value=position[positionAxisID];y=this.chart.scales[positionAxisID].getPixelForValue(value)+tickAndPadding;}textAlign=this._getXAxisLabelAlignment();}else if(axis==='y'){if(position==='center'){x=(chartArea.left+chartArea.right)/2-tickAndPadding;}else if(isObject(position)){const positionAxisID=Object.keys(position)[0];const value=position[positionAxisID];x=this.chart.scales[positionAxisID].getPixelForValue(value);}textAlign=this._getYAxisLabelAlignment(tl).textAlign;}if(axis==='y'){if(align==='start'){textBaseline='top';}else if(align==='end'){textBaseline='bottom';}}const labelSizes=this._getLabelSizes();for(i=0,ilen=ticks.length;i<ilen;++i){tick=ticks[i];label=tick.label;const optsAtIndex=optionTicks.setContext(this.getContext(i));pixel=this.getPixelForTick(i)+optionTicks.labelOffset;font=this._resolveTickFontOptions(i);lineHeight=font.lineHeight;lineCount=isArray(label)?label.length:1;const halfCount=lineCount/2;const color=optsAtIndex.color;const strokeColor=optsAtIndex.textStrokeColor;const strokeWidth=optsAtIndex.textStrokeWidth;let tickTextAlign=textAlign;if(isHorizontal){x=pixel;if(textAlign==='inner'){if(i===ilen-1){tickTextAlign=!this.options.reverse?'right':'left';}else if(i===0){tickTextAlign=!this.options.reverse?'left':'right';}else{tickTextAlign='center';}}if(position==='top'){if(crossAlign==='near'||rotation!==0){textOffset=-lineCount*lineHeight+lineHeight/2;}else if(crossAlign==='center'){textOffset=-labelSizes.highest.height/2-halfCount*lineHeight+lineHeight;}else{textOffset=-labelSizes.highest.height+lineHeight/2;}}else{if(crossAlign==='near'||rotation!==0){textOffset=lineHeight/2;}else if(crossAlign==='center'){textOffset=labelSizes.highest.height/2-halfCount*lineHeight;}else{textOffset=labelSizes.highest.height-lineCount*lineHeight;}}if(mirror){textOffset*=-1;}if(rotation!==0&&!optsAtIndex.showLabelBackdrop){x+=lineHeight/2*Math.sin(rotation);}}else{y=pixel;textOffset=(1-lineCount)*lineHeight/2;}let backdrop;if(optsAtIndex.showLabelBackdrop){const labelPadding=toPadding(optsAtIndex.backdropPadding);const height=labelSizes.heights[i];const width=labelSizes.widths[i];let top=textOffset-labelPadding.top;let left=0-labelPadding.left;switch(textBaseline){case'middle':top-=height/2;break;case'bottom':top-=height;break;}switch(textAlign){case'center':left-=width/2;break;case'right':left-=width;break;case'inner':if(i===ilen-1){left-=width;}else if(i>0){left-=width/2;}break;}backdrop={left,top,width:width+labelPadding.width,height:height+labelPadding.height,color:optsAtIndex.backdropColor};}items.push({label,font,textOffset,options:{rotation,color,strokeColor,strokeWidth,textAlign:tickTextAlign,textBaseline,translation:[x,y],backdrop}});}return items;}_getXAxisLabelAlignment(){const{position,ticks}=this.options;const rotation=-toRadians(this.labelRotation);if(rotation){return position==='top'?'left':'right';}let align='center';if(ticks.align==='start'){align='left';}else if(ticks.align==='end'){align='right';}else if(ticks.align==='inner'){align='inner';}return align;}_getYAxisLabelAlignment(tl){const{position,ticks:{crossAlign,mirror,padding}}=this.options;const labelSizes=this._getLabelSizes();const tickAndPadding=tl+padding;const widest=labelSizes.widest.width;let textAlign;let x;if(position==='left'){if(mirror){x=this.right+padding;if(crossAlign==='near'){textAlign='left';}else if(crossAlign==='center'){textAlign='center';x+=widest/2;}else{textAlign='right';x+=widest;}}else{x=this.right-tickAndPadding;if(crossAlign==='near'){textAlign='right';}else if(crossAlign==='center'){textAlign='center';x-=widest/2;}else{textAlign='left';x=this.left;}}}else if(position==='right'){if(mirror){x=this.left+padding;if(crossAlign==='near'){textAlign='right';}else if(crossAlign==='center'){textAlign='center';x-=widest/2;}else{textAlign='left';x-=widest;}}else{x=this.left+tickAndPadding;if(crossAlign==='near'){textAlign='left';}else if(crossAlign==='center'){textAlign='center';x+=widest/2;}else{textAlign='right';x=this.right;}}}else{textAlign='right';}return{textAlign,x};}_computeLabelArea(){if(this.options.ticks.mirror){return;}const chart=this.chart;const position=this.options.position;if(position==='left'||position==='right'){return{top:0,left:this.left,bottom:chart.height,right:this.right};}if(position==='top'||position==='bottom'){return{top:this.top,left:0,bottom:this.bottom,right:chart.width};}}drawBackground(){const{ctx,options:{backgroundColor},left,top,width,height}=this;if(backgroundColor){ctx.save();ctx.fillStyle=backgroundColor;ctx.fillRect(left,top,width,height);ctx.restore();}}getLineWidthForValue(value){const grid=this.options.grid;if(!this._isVisible()||!grid.display){return 0;}const ticks=this.ticks;const index=ticks.findIndex(t=>t.value===value);if(index>=0){const opts=grid.setContext(this.getContext(index));return opts.lineWidth;}return 0;}drawGrid(chartArea){const grid=this.options.grid;const ctx=this.ctx;const items=this._gridLineItems||(this._gridLineItems=this._computeGridLineItems(chartArea));let i,ilen;const drawLine=(p1,p2,style)=>{if(!style.width||!style.color){return;}ctx.save();ctx.lineWidth=style.width;ctx.strokeStyle=style.color;ctx.setLineDash(style.borderDash||[]);ctx.lineDashOffset=style.borderDashOffset;ctx.beginPath();ctx.moveTo(p1.x,p1.y);ctx.lineTo(p2.x,p2.y);ctx.stroke();ctx.restore();};if(grid.display){for(i=0,ilen=items.length;i<ilen;++i){const item=items[i];if(grid.drawOnChartArea){drawLine({x:item.x1,y:item.y1},{x:item.x2,y:item.y2},item);}if(grid.drawTicks){drawLine({x:item.tx1,y:item.ty1},{x:item.tx2,y:item.ty2},{color:item.tickColor,width:item.tickWidth,borderDash:item.tickBorderDash,borderDashOffset:item.tickBorderDashOffset});}}}}drawBorder(){const{chart,ctx,options:{border,grid}}=this;const borderOpts=border.setContext(this.getContext());const axisWidth=border.display?borderOpts.width:0;if(!axisWidth){return;}const lastLineWidth=grid.setContext(this.getContext(0)).lineWidth;const borderValue=this._borderValue;let x1,x2,y1,y2;if(this.isHorizontal()){x1=_alignPixel(chart,this.left,axisWidth)-axisWidth/2;x2=_alignPixel(chart,this.right,lastLineWidth)+lastLineWidth/2;y1=y2=borderValue;}else{y1=_alignPixel(chart,this.top,axisWidth)-axisWidth/2;y2=_alignPixel(chart,this.bottom,lastLineWidth)+lastLineWidth/2;x1=x2=borderValue;}ctx.save();ctx.lineWidth=borderOpts.width;ctx.strokeStyle=borderOpts.color;ctx.beginPath();ctx.moveTo(x1,y1);ctx.lineTo(x2,y2);ctx.stroke();ctx.restore();}drawLabels(chartArea){const optionTicks=this.options.ticks;if(!optionTicks.display){return;}const ctx=this.ctx;const area=this._computeLabelArea();if(area){clipArea(ctx,area);}const items=this.getLabelItems(chartArea);for(const item of items){const renderTextOptions=item.options;const tickFont=item.font;const label=item.label;const y=item.textOffset;renderText(ctx,label,0,y,tickFont,renderTextOptions);}if(area){unclipArea(ctx);}}drawTitle(){const{ctx,options:{position,title,reverse}}=this;if(!title.display){return;}const font=toFont(title.font);const padding=toPadding(title.padding);const align=title.align;let offset=font.lineHeight/2;if(position==='bottom'||position==='center'||isObject(position)){offset+=padding.bottom;if(isArray(title.text)){offset+=font.lineHeight*(title.text.length-1);}}else{offset+=padding.top;}const{titleX,titleY,maxWidth,rotation}=titleArgs(this,offset,position,align);renderText(ctx,title.text,0,0,font,{color:title.color,maxWidth,rotation,textAlign:titleAlign(align,position,reverse),textBaseline:'middle',translation:[titleX,titleY]});}draw(chartArea){if(!this._isVisible()){return;}this.drawBackground();this.drawGrid(chartArea);this.drawBorder();this.drawTitle();this.drawLabels(chartArea);}_layers(){const opts=this.options;const tz=opts.ticks&&opts.ticks.z||0;const gz=valueOrDefault(opts.grid&&opts.grid.z,-1);const bz=valueOrDefault(opts.border&&opts.border.z,0);if(!this._isVisible()||this.draw!==Scale.prototype.draw){return[{z:tz,draw:chartArea=>{this.draw(chartArea);}}];}return[{z:gz,draw:chartArea=>{this.drawBackground();this.drawGrid(chartArea);this.drawTitle();}},{z:bz,draw:()=>{this.drawBorder();}},{z:tz,draw:chartArea=>{this.drawLabels(chartArea);}}];}getMatchingVisibleMetas(type){const metas=this.chart.getSortedVisibleDatasetMetas();const axisID=this.axis+'AxisID';const result=[];let i,ilen;for(i=0,ilen=metas.length;i<ilen;++i){const meta=metas[i];if(meta[axisID]===this.id&&(!type||meta.type===type)){result.push(meta);}}return result;}_resolveTickFontOptions(index){const opts=this.options.ticks.setContext(this.getContext(index));return toFont(opts.font);}_maxDigits(){const fontSize=this._resolveTickFontOptions(0).lineHeight;return(this.isHorizontal()?this.width:this.height)/fontSize;}}class TypedRegistry{constructor(type,scope,override){this.type=type;this.scope=scope;this.override=override;this.items=Object.create(null);}isForType(type){return Object.prototype.isPrototypeOf.call(this.type.prototype,type.prototype);}register(item){const proto=Object.getPrototypeOf(item);let parentScope;if(isIChartComponent(proto)){parentScope=this.register(proto);}const items=this.items;const id=item.id;const scope=this.scope+'.'+id;if(!id){throw new Error('class does not have id: '+item);}if(id in items){return scope;}items[id]=item;registerDefaults(item,scope,parentScope);if(this.override){defaults.override(item.id,item.overrides);}return scope;}get(id){return this.items[id];}unregister(item){const items=this.items;const id=item.id;const scope=this.scope;if(id in items){delete items[id];}if(scope&&id in defaults[scope]){delete defaults[scope][id];if(this.override){delete overrides[id];}}}}function registerDefaults(item,scope,parentScope){const itemDefaults=merge$1(Object.create(null),[parentScope?defaults.get(parentScope):{},defaults.get(scope),item.defaults]);defaults.set(scope,itemDefaults);if(item.defaultRoutes){routeDefaults(scope,item.defaultRoutes);}if(item.descriptors){defaults.describe(scope,item.descriptors);}}function routeDefaults(scope,routes){Object.keys(routes).forEach(property=>{const propertyParts=property.split('.');const sourceName=propertyParts.pop();const sourceScope=[scope].concat(propertyParts).join('.');const parts=routes[property].split('.');const targetName=parts.pop();const targetScope=parts.join('.');defaults.route(sourceScope,sourceName,targetScope,targetName);});}function isIChartComponent(proto){return'id'in proto&&'defaults'in proto;}class Registry{constructor(){this.controllers=new TypedRegistry(DatasetController,'datasets',true);this.elements=new TypedRegistry(Element,'elements');this.plugins=new TypedRegistry(Object,'plugins');this.scales=new TypedRegistry(Scale,'scales');this._typedRegistries=[this.controllers,this.scales,this.elements];}add(...args){this._each('register',args);}remove(...args){this._each('unregister',args);}addControllers(...args){this._each('register',args,this.controllers);}addElements(...args){this._each('register',args,this.elements);}addPlugins(...args){this._each('register',args,this.plugins);}addScales(...args){this._each('register',args,this.scales);}getController(id){return this._get(id,this.controllers,'controller');}getElement(id){return this._get(id,this.elements,'element');}getPlugin(id){return this._get(id,this.plugins,'plugin');}getScale(id){return this._get(id,this.scales,'scale');}removeControllers(...args){this._each('unregister',args,this.controllers);}removeElements(...args){this._each('unregister',args,this.elements);}removePlugins(...args){this._each('unregister',args,this.plugins);}removeScales(...args){this._each('unregister',args,this.scales);}_each(method,args,typedRegistry){[...args].forEach(arg=>{const reg=typedRegistry||this._getRegistryForType(arg);if(typedRegistry||reg.isForType(arg)||reg===this.plugins&&arg.id){this._exec(method,reg,arg);}else{each(arg,item=>{const itemReg=typedRegistry||this._getRegistryForType(item);this._exec(method,itemReg,item);});}});}_exec(method,registry,component){const camelMethod=_capitalize(method);callback(component['before'+camelMethod],[],component);registry[method](component);callback(component['after'+camelMethod],[],component);}_getRegistryForType(type){for(let i=0;i<this._typedRegistries.length;i++){const reg=this._typedRegistries[i];if(reg.isForType(type)){return reg;}}return this.plugins;}_get(id,typedRegistry,type){const item=typedRegistry.get(id);if(item===undefined){throw new Error('"'+id+'" is not a registered '+type+'.');}return item;}}var registry=/* #__PURE__ */new Registry();class PluginService{constructor(){this._init=[];}notify(chart,hook,args,filter){if(hook==='beforeInit'){this._init=this._createDescriptors(chart,true);this._notify(this._init,chart,'install');}const descriptors=filter?this._descriptors(chart).filter(filter):this._descriptors(chart);const result=this._notify(descriptors,chart,hook,args);if(hook==='afterDestroy'){this._notify(descriptors,chart,'stop');this._notify(this._init,chart,'uninstall');}return result;}_notify(descriptors,chart,hook,args){args=args||{};for(const descriptor of descriptors){const plugin=descriptor.plugin;const method=plugin[hook];const params=[chart,args,descriptor.options];if(callback(method,params,plugin)===false&&args.cancelable){return false;}}return true;}invalidate(){if(!isNullOrUndef(this._cache)){this._oldCache=this._cache;this._cache=undefined;}}_descriptors(chart){if(this._cache){return this._cache;}const descriptors=this._cache=this._createDescriptors(chart);this._notifyStateChanges(chart);return descriptors;}_createDescriptors(chart,all){const config=chart&&chart.config;const options=valueOrDefault(config.options&&config.options.plugins,{});const plugins=allPlugins(config);return options===false&&!all?[]:createDescriptors(chart,plugins,options,all);}_notifyStateChanges(chart){const previousDescriptors=this._oldCache||[];const descriptors=this._cache;const diff=(a,b)=>a.filter(x=>!b.some(y=>x.plugin.id===y.plugin.id));this._notify(diff(previousDescriptors,descriptors),chart,'stop');this._notify(diff(descriptors,previousDescriptors),chart,'start');}}function allPlugins(config){const localIds={};const plugins=[];const keys=Object.keys(registry.plugins.items);for(let i=0;i<keys.length;i++){plugins.push(registry.getPlugin(keys[i]));}const local=config.plugins||[];for(let i=0;i<local.length;i++){const plugin=local[i];if(plugins.indexOf(plugin)===-1){plugins.push(plugin);localIds[plugin.id]=true;}}return{plugins,localIds};}function getOpts(options,all){if(!all&&options===false){return null;}if(options===true){return{};}return options;}function createDescriptors(chart,{plugins,localIds},options,all){const result=[];const context=chart.getContext();for(const plugin of plugins){const id=plugin.id;const opts=getOpts(options[id],all);if(opts===null){continue;}result.push({plugin,options:pluginOpts(chart.config,{plugin,local:localIds[id]},opts,context)});}return result;}function pluginOpts(config,{plugin,local},opts,context){const keys=config.pluginScopeKeys(plugin);const scopes=config.getOptionScopes(opts,keys);if(local&&plugin.defaults){scopes.push(plugin.defaults);}return config.createResolver(scopes,context,[''],{scriptable:false,indexable:false,allKeys:true});}function getIndexAxis(type,options){const datasetDefaults=defaults.datasets[type]||{};const datasetOptions=(options.datasets||{})[type]||{};return datasetOptions.indexAxis||options.indexAxis||datasetDefaults.indexAxis||'x';}function getAxisFromDefaultScaleID(id,indexAxis){let axis=id;if(id==='_index_'){axis=indexAxis;}else if(id==='_value_'){axis=indexAxis==='x'?'y':'x';}return axis;}function getDefaultScaleIDFromAxis(axis,indexAxis){return axis===indexAxis?'_index_':'_value_';}function idMatchesAxis(id){if(id==='x'||id==='y'||id==='r'){return id;}}function axisFromPosition(position){if(position==='top'||position==='bottom'){return'x';}if(position==='left'||position==='right'){return'y';}}function determineAxis(id,...scaleOptions){if(idMatchesAxis(id)){return id;}for(const opts of scaleOptions){const axis=opts.axis||axisFromPosition(opts.position)||id.length>1&&idMatchesAxis(id[0].toLowerCase());if(axis){return axis;}}throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);}function getAxisFromDataset(id,axis,dataset){if(dataset[axis+'AxisID']===id){return{axis};}}function retrieveAxisFromDatasets(id,config){if(config.data&&config.data.datasets){const boundDs=config.data.datasets.filter(d=>d.xAxisID===id||d.yAxisID===id);if(boundDs.length){return getAxisFromDataset(id,'x',boundDs[0])||getAxisFromDataset(id,'y',boundDs[0]);}}return{};}function mergeScaleConfig(config,options){const chartDefaults=overrides[config.type]||{scales:{}};const configScales=options.scales||{};const chartIndexAxis=getIndexAxis(config.type,options);const scales=Object.create(null);Object.keys(configScales).forEach(id=>{const scaleConf=configScales[id];if(!isObject(scaleConf)){return void 0;}if(scaleConf._proxy){return void 0;}const axis=determineAxis(id,scaleConf,retrieveAxisFromDatasets(id,config),defaults.scales[scaleConf.type]);const defaultId=getDefaultScaleIDFromAxis(axis,chartIndexAxis);const defaultScaleOptions=chartDefaults.scales||{};scales[id]=mergeIf(Object.create(null),[{axis},scaleConf,defaultScaleOptions[axis],defaultScaleOptions[defaultId]]);});config.data.datasets.forEach(dataset=>{const type=dataset.type||config.type;const indexAxis=dataset.indexAxis||getIndexAxis(type,options);const datasetDefaults=overrides[type]||{};const defaultScaleOptions=datasetDefaults.scales||{};Object.keys(defaultScaleOptions).forEach(defaultID=>{const axis=getAxisFromDefaultScaleID(defaultID,indexAxis);const id=dataset[axis+'AxisID']||axis;scales[id]=scales[id]||Object.create(null);mergeIf(scales[id],[{axis},configScales[id],defaultScaleOptions[defaultID]]);});});Object.keys(scales).forEach(key=>{const scale=scales[key];mergeIf(scale,[defaults.scales[scale.type],defaults.scale]);});return scales;}function initOptions(config){const options=config.options||(config.options={});options.plugins=valueOrDefault(options.plugins,{});options.scales=mergeScaleConfig(config,options);}function initData(data){data=data||{};data.datasets=data.datasets||[];data.labels=data.labels||[];return data;}function initConfig(config){config=config||{};config.data=initData(config.data);initOptions(config);return config;}const keyCache=new Map();const keysCached=new Set();function cachedKeys(cacheKey,generate){let keys=keyCache.get(cacheKey);if(!keys){keys=generate();keyCache.set(cacheKey,keys);keysCached.add(keys);}return keys;}const addIfFound=(set,obj,key)=>{const opts=resolveObjectKey(obj,key);if(opts!==undefined){set.add(opts);}};class Config{constructor(config){this._config=initConfig(config);this._scopeCache=new Map();this._resolverCache=new Map();}get platform(){return this._config.platform;}get type(){return this._config.type;}set type(type){this._config.type=type;}get data(){return this._config.data;}set data(data){this._config.data=initData(data);}get options(){return this._config.options;}set options(options){this._config.options=options;}get plugins(){return this._config.plugins;}update(){const config=this._config;this.clearCache();initOptions(config);}clearCache(){this._scopeCache.clear();this._resolverCache.clear();}datasetScopeKeys(datasetType){return cachedKeys(datasetType,()=>[[`datasets.${datasetType}`,'']]);}datasetAnimationScopeKeys(datasetType,transition){return cachedKeys(`${datasetType}.transition.${transition}`,()=>[[`datasets.${datasetType}.transitions.${transition}`,`transitions.${transition}`],[`datasets.${datasetType}`,'']]);}datasetElementScopeKeys(datasetType,elementType){return cachedKeys(`${datasetType}-${elementType}`,()=>[[`datasets.${datasetType}.elements.${elementType}`,`datasets.${datasetType}`,`elements.${elementType}`,'']]);}pluginScopeKeys(plugin){const id=plugin.id;const type=this.type;return cachedKeys(`${type}-plugin-${id}`,()=>[[`plugins.${id}`,...(plugin.additionalOptionScopes||[])]]);}_cachedScopes(mainScope,resetCache){const _scopeCache=this._scopeCache;let cache=_scopeCache.get(mainScope);if(!cache||resetCache){cache=new Map();_scopeCache.set(mainScope,cache);}return cache;}getOptionScopes(mainScope,keyLists,resetCache){const{options,type}=this;const cache=this._cachedScopes(mainScope,resetCache);const cached=cache.get(keyLists);if(cached){return cached;}const scopes=new Set();keyLists.forEach(keys=>{if(mainScope){scopes.add(mainScope);keys.forEach(key=>addIfFound(scopes,mainScope,key));}keys.forEach(key=>addIfFound(scopes,options,key));keys.forEach(key=>addIfFound(scopes,overrides[type]||{},key));keys.forEach(key=>addIfFound(scopes,defaults,key));keys.forEach(key=>addIfFound(scopes,descriptors,key));});const array=Array.from(scopes);if(array.length===0){array.push(Object.create(null));}if(keysCached.has(keyLists)){cache.set(keyLists,array);}return array;}chartOptionScopes(){const{options,type}=this;return[options,overrides[type]||{},defaults.datasets[type]||{},{type},defaults,descriptors];}resolveNamedOptions(scopes,names,context,prefixes=['']){const result={$shared:true};const{resolver,subPrefixes}=getResolver(this._resolverCache,scopes,prefixes);let options=resolver;if(needContext(resolver,names)){result.$shared=false;context=isFunction(context)?context():context;const subResolver=this.createResolver(scopes,context,subPrefixes);options=_attachContext(resolver,context,subResolver);}for(const prop of names){result[prop]=options[prop];}return result;}createResolver(scopes,context,prefixes=[''],descriptorDefaults){const{resolver}=getResolver(this._resolverCache,scopes,prefixes);return isObject(context)?_attachContext(resolver,context,undefined,descriptorDefaults):resolver;}}function getResolver(resolverCache,scopes,prefixes){let cache=resolverCache.get(scopes);if(!cache){cache=new Map();resolverCache.set(scopes,cache);}const cacheKey=prefixes.join();let cached=cache.get(cacheKey);if(!cached){const resolver=_createResolver(scopes,prefixes);cached={resolver,subPrefixes:prefixes.filter(p=>!p.toLowerCase().includes('hover'))};cache.set(cacheKey,cached);}return cached;}const hasFunction=value=>isObject(value)&&Object.getOwnPropertyNames(value).some(key=>isFunction(value[key]));function needContext(proxy,names){const{isScriptable,isIndexable}=_descriptors(proxy);for(const prop of names){const scriptable=isScriptable(prop);const indexable=isIndexable(prop);const value=(indexable||scriptable)&&proxy[prop];if(scriptable&&(isFunction(value)||hasFunction(value))||indexable&&isArray(value)){return true;}}return false;}var version="4.4.9";const KNOWN_POSITIONS=['top','bottom','left','right','chartArea'];function positionIsHorizontal(position,axis){return position==='top'||position==='bottom'||KNOWN_POSITIONS.indexOf(position)===-1&&axis==='x';}function compare2Level(l1,l2){return function(a,b){return a[l1]===b[l1]?a[l2]-b[l2]:a[l1]-b[l1];};}function onAnimationsComplete(context){const chart=context.chart;const animationOptions=chart.options.animation;chart.notifyPlugins('afterRender');callback(animationOptions&&animationOptions.onComplete,[context],chart);}function onAnimationProgress(context){const chart=context.chart;const animationOptions=chart.options.animation;callback(animationOptions&&animationOptions.onProgress,[context],chart);}function getCanvas(item){if(_isDomSupported()&&typeof item==='string'){item=document.getElementById(item);}else if(item&&item.length){item=item[0];}if(item&&item.canvas){item=item.canvas;}return item;}const instances={};const getChart=key=>{const canvas=getCanvas(key);return Object.values(instances).filter(c=>c.canvas===canvas).pop();};function moveNumericKeys(obj,start,move){const keys=Object.keys(obj);for(const key of keys){const intKey=+key;if(intKey>=start){const value=obj[key];delete obj[key];if(move>0||intKey>start){obj[intKey+move]=value;}}}}function determineLastEvent(e,lastEvent,inChartArea,isClick){if(!inChartArea||e.type==='mouseout'){return null;}if(isClick){return lastEvent;}return e;}class Chart{static defaults=defaults;static instances=instances;static overrides=overrides;static registry=registry;static version=version;static getChart=getChart;static register(...items){registry.add(...items);invalidatePlugins();}static unregister(...items){registry.remove(...items);invalidatePlugins();}constructor(item,userConfig){const config=this.config=new Config(userConfig);const initialCanvas=getCanvas(item);const existingChart=getChart(initialCanvas);if(existingChart){throw new Error('Canvas is already in use. Chart with ID \''+existingChart.id+'\''+' must be destroyed before the canvas with ID \''+existingChart.canvas.id+'\' can be reused.');}const options=config.createResolver(config.chartOptionScopes(),this.getContext());this.platform=new(config.platform||_detectPlatform(initialCanvas))();this.platform.updateConfig(config);const context=this.platform.acquireContext(initialCanvas,options.aspectRatio);const canvas=context&&context.canvas;const height=canvas&&canvas.height;const width=canvas&&canvas.width;this.id=uid();this.ctx=context;this.canvas=canvas;this.width=width;this.height=height;this._options=options;this._aspectRatio=this.aspectRatio;this._layers=[];this._metasets=[];this._stacks=undefined;this.boxes=[];this.currentDevicePixelRatio=undefined;this.chartArea=undefined;this._active=[];this._lastEvent=undefined;this._listeners={};this._responsiveListeners=undefined;this._sortedMetasets=[];this.scales={};this._plugins=new PluginService();this.$proxies={};this._hiddenIndices={};this.attached=false;this._animationsDisabled=undefined;this.$context=undefined;this._doResize=debounce(mode=>this.update(mode),options.resizeDelay||0);this._dataChanges=[];instances[this.id]=this;if(!context||!canvas){void 0;return;}animator.listen(this,'complete',onAnimationsComplete);animator.listen(this,'progress',onAnimationProgress);this._initialize();if(this.attached){this.update();}}get aspectRatio(){const{options:{aspectRatio,maintainAspectRatio},width,height,_aspectRatio}=this;if(!isNullOrUndef(aspectRatio)){return aspectRatio;}if(maintainAspectRatio&&_aspectRatio){return _aspectRatio;}return height?width/height:null;}get data(){return this.config.data;}set data(data){this.config.data=data;}get options(){return this._options;}set options(options){this.config.options=options;}get registry(){return registry;}_initialize(){this.notifyPlugins('beforeInit');if(this.options.responsive){this.resize();}else{retinaScale(this,this.options.devicePixelRatio);}this.bindEvents();this.notifyPlugins('afterInit');return this;}clear(){clearCanvas(this.canvas,this.ctx);return this;}stop(){animator.stop(this);return this;}resize(width,height){if(!animator.running(this)){this._resize(width,height);}else{this._resizeBeforeDraw={width,height};}}_resize(width,height){const options=this.options;const canvas=this.canvas;const aspectRatio=options.maintainAspectRatio&&this.aspectRatio;const newSize=this.platform.getMaximumSize(canvas,width,height,aspectRatio);const newRatio=options.devicePixelRatio||this.platform.getDevicePixelRatio();const mode=this.width?'resize':'attach';this.width=newSize.width;this.height=newSize.height;this._aspectRatio=this.aspectRatio;if(!retinaScale(this,newRatio,true)){return;}this.notifyPlugins('resize',{size:newSize});callback(options.onResize,[this,newSize],this);if(this.attached){if(this._doResize(mode)){this.render();}}}ensureScalesHaveIDs(){const options=this.options;const scalesOptions=options.scales||{};each(scalesOptions,(axisOptions,axisID)=>{axisOptions.id=axisID;});}buildOrUpdateScales(){const options=this.options;const scaleOpts=options.scales;const scales=this.scales;const updated=Object.keys(scales).reduce((obj,id)=>{obj[id]=false;return obj;},{});let items=[];if(scaleOpts){items=items.concat(Object.keys(scaleOpts).map(id=>{const scaleOptions=scaleOpts[id];const axis=determineAxis(id,scaleOptions);const isRadial=axis==='r';const isHorizontal=axis==='x';return{options:scaleOptions,dposition:isRadial?'chartArea':isHorizontal?'bottom':'left',dtype:isRadial?'radialLinear':isHorizontal?'category':'linear'};}));}each(items,item=>{const scaleOptions=item.options;const id=scaleOptions.id;const axis=determineAxis(id,scaleOptions);const scaleType=valueOrDefault(scaleOptions.type,item.dtype);if(scaleOptions.position===undefined||positionIsHorizontal(scaleOptions.position,axis)!==positionIsHorizontal(item.dposition)){scaleOptions.position=item.dposition;}updated[id]=true;let scale=null;if(id in scales&&scales[id].type===scaleType){scale=scales[id];}else{const scaleClass=registry.getScale(scaleType);scale=new scaleClass({id,type:scaleType,ctx:this.ctx,chart:this});scales[scale.id]=scale;}scale.init(scaleOptions,options);});each(updated,(hasUpdated,id)=>{if(!hasUpdated){delete scales[id];}});each(scales,scale=>{layouts.configure(this,scale,scale.options);layouts.addBox(this,scale);});}_updateMetasets(){const metasets=this._metasets;const numData=this.data.datasets.length;const numMeta=metasets.length;metasets.sort((a,b)=>a.index-b.index);if(numMeta>numData){for(let i=numData;i<numMeta;++i){this._destroyDatasetMeta(i);}metasets.splice(numData,numMeta-numData);}this._sortedMetasets=metasets.slice(0).sort(compare2Level('order','index'));}_removeUnreferencedMetasets(){const{_metasets:metasets,data:{datasets}}=this;if(metasets.length>datasets.length){delete this._stacks;}metasets.forEach((meta,index)=>{if(datasets.filter(x=>x===meta._dataset).length===0){this._destroyDatasetMeta(index);}});}buildOrUpdateControllers(){const newControllers=[];const datasets=this.data.datasets;let i,ilen;this._removeUnreferencedMetasets();for(i=0,ilen=datasets.length;i<ilen;i++){const dataset=datasets[i];let meta=this.getDatasetMeta(i);const type=dataset.type||this.config.type;if(meta.type&&meta.type!==type){this._destroyDatasetMeta(i);meta=this.getDatasetMeta(i);}meta.type=type;meta.indexAxis=dataset.indexAxis||getIndexAxis(type,this.options);meta.order=dataset.order||0;meta.index=i;meta.label=''+dataset.label;meta.visible=this.isDatasetVisible(i);if(meta.controller){meta.controller.updateIndex(i);meta.controller.linkScales();}else{const ControllerClass=registry.getController(type);const{datasetElementType,dataElementType}=defaults.datasets[type];Object.assign(ControllerClass,{dataElementType:registry.getElement(dataElementType),datasetElementType:datasetElementType&&registry.getElement(datasetElementType)});meta.controller=new ControllerClass(this,i);newControllers.push(meta.controller);}}this._updateMetasets();return newControllers;}_resetElements(){each(this.data.datasets,(dataset,datasetIndex)=>{this.getDatasetMeta(datasetIndex).controller.reset();},this);}reset(){this._resetElements();this.notifyPlugins('reset');}update(mode){const config=this.config;config.update();const options=this._options=config.createResolver(config.chartOptionScopes(),this.getContext());const animsDisabled=this._animationsDisabled=!options.animation;this._updateScales();this._checkEventBindings();this._updateHiddenIndices();this._plugins.invalidate();if(this.notifyPlugins('beforeUpdate',{mode,cancelable:true})===false){return;}const newControllers=this.buildOrUpdateControllers();this.notifyPlugins('beforeElementsUpdate');let minPadding=0;for(let i=0,ilen=this.data.datasets.length;i<ilen;i++){const{controller}=this.getDatasetMeta(i);const reset=!animsDisabled&&newControllers.indexOf(controller)===-1;controller.buildOrUpdateElements(reset);minPadding=Math.max(+controller.getMaxOverflow(),minPadding);}minPadding=this._minPadding=options.layout.autoPadding?minPadding:0;this._updateLayout(minPadding);if(!animsDisabled){each(newControllers,controller=>{controller.reset();});}this._updateDatasets(mode);this.notifyPlugins('afterUpdate',{mode});this._layers.sort(compare2Level('z','_idx'));const{_active,_lastEvent}=this;if(_lastEvent){this._eventHandler(_lastEvent,true);}else if(_active.length){this._updateHoverStyles(_active,_active,true);}this.render();}_updateScales(){each(this.scales,scale=>{layouts.removeBox(this,scale);});this.ensureScalesHaveIDs();this.buildOrUpdateScales();}_checkEventBindings(){const options=this.options;const existingEvents=new Set(Object.keys(this._listeners));const newEvents=new Set(options.events);if(!setsEqual(existingEvents,newEvents)||!!this._responsiveListeners!==options.responsive){this.unbindEvents();this.bindEvents();}}_updateHiddenIndices(){const{_hiddenIndices}=this;const changes=this._getUniformDataChanges()||[];for(const{method,start,count}of changes){const move=method==='_removeElements'?-count:count;moveNumericKeys(_hiddenIndices,start,move);}}_getUniformDataChanges(){const _dataChanges=this._dataChanges;if(!_dataChanges||!_dataChanges.length){return;}this._dataChanges=[];const datasetCount=this.data.datasets.length;const makeSet=idx=>new Set(_dataChanges.filter(c=>c[0]===idx).map((c,i)=>i+','+c.splice(1).join(',')));const changeSet=makeSet(0);for(let i=1;i<datasetCount;i++){if(!setsEqual(changeSet,makeSet(i))){return;}}return Array.from(changeSet).map(c=>c.split(',')).map(a=>({method:a[1],start:+a[2],count:+a[3]}));}_updateLayout(minPadding){if(this.notifyPlugins('beforeLayout',{cancelable:true})===false){return;}layouts.update(this,this.width,this.height,minPadding);const area=this.chartArea;const noArea=area.width<=0||area.height<=0;this._layers=[];each(this.boxes,box=>{if(noArea&&box.position==='chartArea'){return;}if(box.configure){box.configure();}this._layers.push(...box._layers());},this);this._layers.forEach((item,index)=>{item._idx=index;});this.notifyPlugins('afterLayout');}_updateDatasets(mode){if(this.notifyPlugins('beforeDatasetsUpdate',{mode,cancelable:true})===false){return;}for(let i=0,ilen=this.data.datasets.length;i<ilen;++i){this.getDatasetMeta(i).controller.configure();}for(let i=0,ilen=this.data.datasets.length;i<ilen;++i){this._updateDataset(i,isFunction(mode)?mode({datasetIndex:i}):mode);}this.notifyPlugins('afterDatasetsUpdate',{mode});}_updateDataset(index,mode){const meta=this.getDatasetMeta(index);const args={meta,index,mode,cancelable:true};if(this.notifyPlugins('beforeDatasetUpdate',args)===false){return;}meta.controller._update(mode);args.cancelable=false;this.notifyPlugins('afterDatasetUpdate',args);}render(){if(this.notifyPlugins('beforeRender',{cancelable:true})===false){return;}if(animator.has(this)){if(this.attached&&!animator.running(this)){animator.start(this);}}else{this.draw();onAnimationsComplete({chart:this});}}draw(){let i;if(this._resizeBeforeDraw){const{width,height}=this._resizeBeforeDraw;this._resizeBeforeDraw=null;this._resize(width,height);}this.clear();if(this.width<=0||this.height<=0){return;}if(this.notifyPlugins('beforeDraw',{cancelable:true})===false){return;}const layers=this._layers;for(i=0;i<layers.length&&layers[i].z<=0;++i){layers[i].draw(this.chartArea);}this._drawDatasets();for(;i<layers.length;++i){layers[i].draw(this.chartArea);}this.notifyPlugins('afterDraw');}_getSortedDatasetMetas(filterVisible){const metasets=this._sortedMetasets;const result=[];let i,ilen;for(i=0,ilen=metasets.length;i<ilen;++i){const meta=metasets[i];if(!filterVisible||meta.visible){result.push(meta);}}return result;}getSortedVisibleDatasetMetas(){return this._getSortedDatasetMetas(true);}_drawDatasets(){if(this.notifyPlugins('beforeDatasetsDraw',{cancelable:true})===false){return;}const metasets=this.getSortedVisibleDatasetMetas();for(let i=metasets.length-1;i>=0;--i){this._drawDataset(metasets[i]);}this.notifyPlugins('afterDatasetsDraw');}_drawDataset(meta){const ctx=this.ctx;const args={meta,index:meta.index,cancelable:true};const clip=getDatasetClipArea(this,meta);if(this.notifyPlugins('beforeDatasetDraw',args)===false){return;}if(clip){clipArea(ctx,clip);}meta.controller.draw();if(clip){unclipArea(ctx);}args.cancelable=false;this.notifyPlugins('afterDatasetDraw',args);}isPointInArea(point){return _isPointInArea(point,this.chartArea,this._minPadding);}getElementsAtEventForMode(e,mode,options,useFinalPosition){const method=Interaction.modes[mode];if(typeof method==='function'){return method(this,e,options,useFinalPosition);}return[];}getDatasetMeta(datasetIndex){const dataset=this.data.datasets[datasetIndex];const metasets=this._metasets;let meta=metasets.filter(x=>x&&x._dataset===dataset).pop();if(!meta){meta={type:null,data:[],dataset:null,controller:null,hidden:null,xAxisID:null,yAxisID:null,order:dataset&&dataset.order||0,index:datasetIndex,_dataset:dataset,_parsed:[],_sorted:false};metasets.push(meta);}return meta;}getContext(){return this.$context||(this.$context=createContext(null,{chart:this,type:'chart'}));}getVisibleDatasetCount(){return this.getSortedVisibleDatasetMetas().length;}isDatasetVisible(datasetIndex){const dataset=this.data.datasets[datasetIndex];if(!dataset){return false;}const meta=this.getDatasetMeta(datasetIndex);return typeof meta.hidden==='boolean'?!meta.hidden:!dataset.hidden;}setDatasetVisibility(datasetIndex,visible){const meta=this.getDatasetMeta(datasetIndex);meta.hidden=!visible;}toggleDataVisibility(index){this._hiddenIndices[index]=!this._hiddenIndices[index];}getDataVisibility(index){return!this._hiddenIndices[index];}_updateVisibility(datasetIndex,dataIndex,visible){const mode=visible?'show':'hide';const meta=this.getDatasetMeta(datasetIndex);const anims=meta.controller._resolveAnimations(undefined,mode);if(defined(dataIndex)){meta.data[dataIndex].hidden=!visible;this.update();}else{this.setDatasetVisibility(datasetIndex,visible);anims.update(meta,{visible});this.update(ctx=>ctx.datasetIndex===datasetIndex?mode:undefined);}}hide(datasetIndex,dataIndex){this._updateVisibility(datasetIndex,dataIndex,false);}show(datasetIndex,dataIndex){this._updateVisibility(datasetIndex,dataIndex,true);}_destroyDatasetMeta(datasetIndex){const meta=this._metasets[datasetIndex];if(meta&&meta.controller){meta.controller._destroy();}delete this._metasets[datasetIndex];}_stop(){let i,ilen;this.stop();animator.remove(this);for(i=0,ilen=this.data.datasets.length;i<ilen;++i){this._destroyDatasetMeta(i);}}destroy(){this.notifyPlugins('beforeDestroy');const{canvas,ctx}=this;this._stop();this.config.clearCache();if(canvas){this.unbindEvents();clearCanvas(canvas,ctx);this.platform.releaseContext(ctx);this.canvas=null;this.ctx=null;}delete instances[this.id];this.notifyPlugins('afterDestroy');}toBase64Image(...args){return this.canvas.toDataURL(...args);}bindEvents(){this.bindUserEvents();if(this.options.responsive){this.bindResponsiveEvents();}else{this.attached=true;}}bindUserEvents(){const listeners=this._listeners;const platform=this.platform;const _add=(type,listener)=>{platform.addEventListener(this,type,listener);listeners[type]=listener;};const listener=(e,x,y)=>{e.offsetX=x;e.offsetY=y;this._eventHandler(e);};each(this.options.events,type=>_add(type,listener));}bindResponsiveEvents(){if(!this._responsiveListeners){this._responsiveListeners={};}const listeners=this._responsiveListeners;const platform=this.platform;const _add=(type,listener)=>{platform.addEventListener(this,type,listener);listeners[type]=listener;};const _remove=(type,listener)=>{if(listeners[type]){platform.removeEventListener(this,type,listener);delete listeners[type];}};const listener=(width,height)=>{if(this.canvas){this.resize(width,height);}};let detached;const attached=()=>{_remove('attach',attached);this.attached=true;this.resize();_add('resize',listener);_add('detach',detached);};detached=()=>{this.attached=false;_remove('resize',listener);this._stop();this._resize(0,0);_add('attach',attached);};if(platform.isAttached(this.canvas)){attached();}else{detached();}}unbindEvents(){each(this._listeners,(listener,type)=>{this.platform.removeEventListener(this,type,listener);});this._listeners={};each(this._responsiveListeners,(listener,type)=>{this.platform.removeEventListener(this,type,listener);});this._responsiveListeners=undefined;}updateHoverStyle(items,mode,enabled){const prefix=enabled?'set':'remove';let meta,item,i,ilen;if(mode==='dataset'){meta=this.getDatasetMeta(items[0].datasetIndex);meta.controller['_'+prefix+'DatasetHoverStyle']();}for(i=0,ilen=items.length;i<ilen;++i){item=items[i];const controller=item&&this.getDatasetMeta(item.datasetIndex).controller;if(controller){controller[prefix+'HoverStyle'](item.element,item.datasetIndex,item.index);}}}getActiveElements(){return this._active||[];}setActiveElements(activeElements){const lastActive=this._active||[];const active=activeElements.map(({datasetIndex,index})=>{const meta=this.getDatasetMeta(datasetIndex);if(!meta){throw new Error('No dataset found at index '+datasetIndex);}return{datasetIndex,element:meta.data[index],index};});const changed=!_elementsEqual(active,lastActive);if(changed){this._active=active;this._lastEvent=null;this._updateHoverStyles(active,lastActive);}}notifyPlugins(hook,args,filter){return this._plugins.notify(this,hook,args,filter);}isPluginEnabled(pluginId){return this._plugins._cache.filter(p=>p.plugin.id===pluginId).length===1;}_updateHoverStyles(active,lastActive,replay){const hoverOptions=this.options.hover;const diff=(a,b)=>a.filter(x=>!b.some(y=>x.datasetIndex===y.datasetIndex&&x.index===y.index));const deactivated=diff(lastActive,active);const activated=replay?active:diff(active,lastActive);if(deactivated.length){this.updateHoverStyle(deactivated,hoverOptions.mode,false);}if(activated.length&&hoverOptions.mode){this.updateHoverStyle(activated,hoverOptions.mode,true);}}_eventHandler(e,replay){const args={event:e,replay,cancelable:true,inChartArea:this.isPointInArea(e)};const eventFilter=plugin=>(plugin.options.events||this.options.events).includes(e.native.type);if(this.notifyPlugins('beforeEvent',args,eventFilter)===false){return;}const changed=this._handleEvent(e,replay,args.inChartArea);args.cancelable=false;this.notifyPlugins('afterEvent',args,eventFilter);if(changed||args.changed){this.render();}return this;}_handleEvent(e,replay,inChartArea){const{_active:lastActive=[],options}=this;const useFinalPosition=replay;const active=this._getActiveElements(e,lastActive,inChartArea,useFinalPosition);const isClick=_isClickEvent(e);const lastEvent=determineLastEvent(e,this._lastEvent,inChartArea,isClick);if(inChartArea){this._lastEvent=null;callback(options.onHover,[e,active,this],this);if(isClick){callback(options.onClick,[e,active,this],this);}}const changed=!_elementsEqual(active,lastActive);if(changed||replay){this._active=active;this._updateHoverStyles(active,lastActive,replay);}this._lastEvent=lastEvent;return changed;}_getActiveElements(e,lastActive,inChartArea,useFinalPosition){if(e.type==='mouseout'){return[];}if(!inChartArea){return lastActive;}const hoverOptions=this.options.hover;return this.getElementsAtEventForMode(e,hoverOptions.mode,hoverOptions,useFinalPosition);}}function invalidatePlugins(){return each(Chart.instances,chart=>chart._plugins.invalidate());}function clipArc(ctx,element,endAngle){const{startAngle,pixelMargin,x,y,outerRadius,innerRadius}=element;let angleMargin=pixelMargin/outerRadius;// Draw an inner border by clipping the arc and drawing a double-width border
// Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders
ctx.beginPath();ctx.arc(x,y,outerRadius,startAngle-angleMargin,endAngle+angleMargin);if(innerRadius>pixelMargin){angleMargin=pixelMargin/innerRadius;ctx.arc(x,y,innerRadius,endAngle+angleMargin,startAngle-angleMargin,true);}else{ctx.arc(x,y,pixelMargin,endAngle+HALF_PI,startAngle-HALF_PI);}ctx.closePath();ctx.clip();}function toRadiusCorners(value){return _readValueToProps(value,['outerStart','outerEnd','innerStart','innerEnd']);}/**
   * Parse border radius from the provided options
   */function parseBorderRadius$1(arc,innerRadius,outerRadius,angleDelta){const o=toRadiusCorners(arc.options.borderRadius);const halfThickness=(outerRadius-innerRadius)/2;const innerLimit=Math.min(halfThickness,angleDelta*innerRadius/2);// Outer limits are complicated. We want to compute the available angular distance at
// a radius of outerRadius - borderRadius because for small angular distances, this term limits.
// We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.
//
// If the borderRadius is large, that value can become negative.
// This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius
// we know that the thickness term will dominate and compute the limits at that point
const computeOuterLimit=val=>{const outerArcLimit=(outerRadius-Math.min(halfThickness,val))*angleDelta/2;return _limitValue(val,0,Math.min(halfThickness,outerArcLimit));};return{outerStart:computeOuterLimit(o.outerStart),outerEnd:computeOuterLimit(o.outerEnd),innerStart:_limitValue(o.innerStart,0,innerLimit),innerEnd:_limitValue(o.innerEnd,0,innerLimit)};}/**
   * Convert (r, 𝜃) to (x, y)
   */function rThetaToXY(r,theta,x,y){return{x:x+r*Math.cos(theta),y:y+r*Math.sin(theta)};}/**
   * Path the arc, respecting border radius by separating into left and right halves.
   *
   *   Start      End
   *
   *    1--->a--->2    Outer
   *   /           \
   *   8           3
   *   |           |
   *   |           |
   *   7           4
   *   \           /
   *    6<---b<---5    Inner
   */function pathArc(ctx,element,offset,spacing,end,circular){const{x,y,startAngle:start,pixelMargin,innerRadius:innerR}=element;const outerRadius=Math.max(element.outerRadius+spacing+offset-pixelMargin,0);const innerRadius=innerR>0?innerR+spacing+offset+pixelMargin:0;let spacingOffset=0;const alpha=end-start;if(spacing){// When spacing is present, it is the same for all items
// So we adjust the start and end angle of the arc such that
// the distance is the same as it would be without the spacing
const noSpacingInnerRadius=innerR>0?innerR-spacing:0;const noSpacingOuterRadius=outerRadius>0?outerRadius-spacing:0;const avNogSpacingRadius=(noSpacingInnerRadius+noSpacingOuterRadius)/2;const adjustedAngle=avNogSpacingRadius!==0?alpha*avNogSpacingRadius/(avNogSpacingRadius+spacing):alpha;spacingOffset=(alpha-adjustedAngle)/2;}const beta=Math.max(0.001,alpha*outerRadius-offset/PI)/outerRadius;const angleOffset=(alpha-beta)/2;const startAngle=start+angleOffset+spacingOffset;const endAngle=end-angleOffset-spacingOffset;const{outerStart,outerEnd,innerStart,innerEnd}=parseBorderRadius$1(element,innerRadius,outerRadius,endAngle-startAngle);const outerStartAdjustedRadius=outerRadius-outerStart;const outerEndAdjustedRadius=outerRadius-outerEnd;const outerStartAdjustedAngle=startAngle+outerStart/outerStartAdjustedRadius;const outerEndAdjustedAngle=endAngle-outerEnd/outerEndAdjustedRadius;const innerStartAdjustedRadius=innerRadius+innerStart;const innerEndAdjustedRadius=innerRadius+innerEnd;const innerStartAdjustedAngle=startAngle+innerStart/innerStartAdjustedRadius;const innerEndAdjustedAngle=endAngle-innerEnd/innerEndAdjustedRadius;ctx.beginPath();if(circular){// The first arc segments from point 1 to point a to point 2
const outerMidAdjustedAngle=(outerStartAdjustedAngle+outerEndAdjustedAngle)/2;ctx.arc(x,y,outerRadius,outerStartAdjustedAngle,outerMidAdjustedAngle);ctx.arc(x,y,outerRadius,outerMidAdjustedAngle,outerEndAdjustedAngle);// The corner segment from point 2 to point 3
if(outerEnd>0){const pCenter=rThetaToXY(outerEndAdjustedRadius,outerEndAdjustedAngle,x,y);ctx.arc(pCenter.x,pCenter.y,outerEnd,outerEndAdjustedAngle,endAngle+HALF_PI);}// The line from point 3 to point 4
const p4=rThetaToXY(innerEndAdjustedRadius,endAngle,x,y);ctx.lineTo(p4.x,p4.y);// The corner segment from point 4 to point 5
if(innerEnd>0){const pCenter=rThetaToXY(innerEndAdjustedRadius,innerEndAdjustedAngle,x,y);ctx.arc(pCenter.x,pCenter.y,innerEnd,endAngle+HALF_PI,innerEndAdjustedAngle+Math.PI);}// The inner arc from point 5 to point b to point 6
const innerMidAdjustedAngle=(endAngle-innerEnd/innerRadius+(startAngle+innerStart/innerRadius))/2;ctx.arc(x,y,innerRadius,endAngle-innerEnd/innerRadius,innerMidAdjustedAngle,true);ctx.arc(x,y,innerRadius,innerMidAdjustedAngle,startAngle+innerStart/innerRadius,true);// The corner segment from point 6 to point 7
if(innerStart>0){const pCenter=rThetaToXY(innerStartAdjustedRadius,innerStartAdjustedAngle,x,y);ctx.arc(pCenter.x,pCenter.y,innerStart,innerStartAdjustedAngle+Math.PI,startAngle-HALF_PI);}// The line from point 7 to point 8
const p8=rThetaToXY(outerStartAdjustedRadius,startAngle,x,y);ctx.lineTo(p8.x,p8.y);// The corner segment from point 8 to point 1
if(outerStart>0){const pCenter=rThetaToXY(outerStartAdjustedRadius,outerStartAdjustedAngle,x,y);ctx.arc(pCenter.x,pCenter.y,outerStart,startAngle-HALF_PI,outerStartAdjustedAngle);}}else{ctx.moveTo(x,y);const outerStartX=Math.cos(outerStartAdjustedAngle)*outerRadius+x;const outerStartY=Math.sin(outerStartAdjustedAngle)*outerRadius+y;ctx.lineTo(outerStartX,outerStartY);const outerEndX=Math.cos(outerEndAdjustedAngle)*outerRadius+x;const outerEndY=Math.sin(outerEndAdjustedAngle)*outerRadius+y;ctx.lineTo(outerEndX,outerEndY);}ctx.closePath();}function drawArc(ctx,element,offset,spacing,circular){const{fullCircles,startAngle,circumference}=element;let endAngle=element.endAngle;if(fullCircles){pathArc(ctx,element,offset,spacing,endAngle,circular);for(let i=0;i<fullCircles;++i){ctx.fill();}if(!isNaN(circumference)){endAngle=startAngle+(circumference%TAU||TAU);}}pathArc(ctx,element,offset,spacing,endAngle,circular);ctx.fill();return endAngle;}function drawBorder(ctx,element,offset,spacing,circular){const{fullCircles,startAngle,circumference,options}=element;const{borderWidth,borderJoinStyle,borderDash,borderDashOffset}=options;const inner=options.borderAlign==='inner';if(!borderWidth){return;}ctx.setLineDash(borderDash||[]);ctx.lineDashOffset=borderDashOffset;if(inner){ctx.lineWidth=borderWidth*2;ctx.lineJoin=borderJoinStyle||'round';}else{ctx.lineWidth=borderWidth;ctx.lineJoin=borderJoinStyle||'bevel';}let endAngle=element.endAngle;if(fullCircles){pathArc(ctx,element,offset,spacing,endAngle,circular);for(let i=0;i<fullCircles;++i){ctx.stroke();}if(!isNaN(circumference)){endAngle=startAngle+(circumference%TAU||TAU);}}if(inner){clipArc(ctx,element,endAngle);}if(!fullCircles){pathArc(ctx,element,offset,spacing,endAngle,circular);ctx.stroke();}}class ArcElement extends Element{static id='arc';static defaults={borderAlign:'center',borderColor:'#fff',borderDash:[],borderDashOffset:0,borderJoinStyle:undefined,borderRadius:0,borderWidth:2,offset:0,spacing:0,angle:undefined,circular:true};static defaultRoutes={backgroundColor:'backgroundColor'};static descriptors={_scriptable:true,_indexable:name=>name!=='borderDash'};circumference;endAngle;fullCircles;innerRadius;outerRadius;pixelMargin;startAngle;constructor(cfg){super();this.options=undefined;this.circumference=undefined;this.startAngle=undefined;this.endAngle=undefined;this.innerRadius=undefined;this.outerRadius=undefined;this.pixelMargin=0;this.fullCircles=0;if(cfg){Object.assign(this,cfg);}}inRange(chartX,chartY,useFinalPosition){const point=this.getProps(['x','y'],useFinalPosition);const{angle,distance}=getAngleFromPoint(point,{x:chartX,y:chartY});const{startAngle,endAngle,innerRadius,outerRadius,circumference}=this.getProps(['startAngle','endAngle','innerRadius','outerRadius','circumference'],useFinalPosition);const rAdjust=(this.options.spacing+this.options.borderWidth)/2;const _circumference=valueOrDefault(circumference,endAngle-startAngle);const nonZeroBetween=_angleBetween(angle,startAngle,endAngle)&&startAngle!==endAngle;const betweenAngles=_circumference>=TAU||nonZeroBetween;const withinRadius=_isBetween(distance,innerRadius+rAdjust,outerRadius+rAdjust);return betweenAngles&&withinRadius;}getCenterPoint(useFinalPosition){const{x,y,startAngle,endAngle,innerRadius,outerRadius}=this.getProps(['x','y','startAngle','endAngle','innerRadius','outerRadius'],useFinalPosition);const{offset,spacing}=this.options;const halfAngle=(startAngle+endAngle)/2;const halfRadius=(innerRadius+outerRadius+spacing+offset)/2;return{x:x+Math.cos(halfAngle)*halfRadius,y:y+Math.sin(halfAngle)*halfRadius};}tooltipPosition(useFinalPosition){return this.getCenterPoint(useFinalPosition);}draw(ctx){const{options,circumference}=this;const offset=(options.offset||0)/4;const spacing=(options.spacing||0)/2;const circular=options.circular;this.pixelMargin=options.borderAlign==='inner'?0.33:0;this.fullCircles=circumference>TAU?Math.floor(circumference/TAU):0;if(circumference===0||this.innerRadius<0||this.outerRadius<0){return;}ctx.save();const halfAngle=(this.startAngle+this.endAngle)/2;ctx.translate(Math.cos(halfAngle)*offset,Math.sin(halfAngle)*offset);const fix=1-Math.sin(Math.min(PI,circumference||0));const radiusOffset=offset*fix;ctx.fillStyle=options.backgroundColor;ctx.strokeStyle=options.borderColor;drawArc(ctx,this,radiusOffset,spacing,circular);drawBorder(ctx,this,radiusOffset,spacing,circular);ctx.restore();}}function setStyle(ctx,options,style=options){ctx.lineCap=valueOrDefault(style.borderCapStyle,options.borderCapStyle);ctx.setLineDash(valueOrDefault(style.borderDash,options.borderDash));ctx.lineDashOffset=valueOrDefault(style.borderDashOffset,options.borderDashOffset);ctx.lineJoin=valueOrDefault(style.borderJoinStyle,options.borderJoinStyle);ctx.lineWidth=valueOrDefault(style.borderWidth,options.borderWidth);ctx.strokeStyle=valueOrDefault(style.borderColor,options.borderColor);}function lineTo(ctx,previous,target){ctx.lineTo(target.x,target.y);}function getLineMethod(options){if(options.stepped){return _steppedLineTo;}if(options.tension||options.cubicInterpolationMode==='monotone'){return _bezierCurveTo;}return lineTo;}function pathVars(points,segment,params={}){const count=points.length;const{start:paramsStart=0,end:paramsEnd=count-1}=params;const{start:segmentStart,end:segmentEnd}=segment;const start=Math.max(paramsStart,segmentStart);const end=Math.min(paramsEnd,segmentEnd);const outside=paramsStart<segmentStart&&paramsEnd<segmentStart||paramsStart>segmentEnd&&paramsEnd>segmentEnd;return{count,start,loop:segment.loop,ilen:end<start&&!outside?count+end-start:end-start};}function pathSegment(ctx,line,segment,params){const{points,options}=line;const{count,start,loop,ilen}=pathVars(points,segment,params);const lineMethod=getLineMethod(options);let{move=true,reverse}=params||{};let i,point,prev;for(i=0;i<=ilen;++i){point=points[(start+(reverse?ilen-i:i))%count];if(point.skip){continue;}else if(move){ctx.moveTo(point.x,point.y);move=false;}else{lineMethod(ctx,prev,point,reverse,options.stepped);}prev=point;}if(loop){point=points[(start+(reverse?ilen:0))%count];lineMethod(ctx,prev,point,reverse,options.stepped);}return!!loop;}function fastPathSegment(ctx,line,segment,params){const points=line.points;const{count,start,ilen}=pathVars(points,segment,params);const{move=true,reverse}=params||{};let avgX=0;let countX=0;let i,point,prevX,minY,maxY,lastY;const pointIndex=index=>(start+(reverse?ilen-index:index))%count;const drawX=()=>{if(minY!==maxY){ctx.lineTo(avgX,maxY);ctx.lineTo(avgX,minY);ctx.lineTo(avgX,lastY);}};if(move){point=points[pointIndex(0)];ctx.moveTo(point.x,point.y);}for(i=0;i<=ilen;++i){point=points[pointIndex(i)];if(point.skip){continue;}const x=point.x;const y=point.y;const truncX=x|0;if(truncX===prevX){if(y<minY){minY=y;}else if(y>maxY){maxY=y;}avgX=(countX*avgX+x)/++countX;}else{drawX();ctx.lineTo(x,y);prevX=truncX;countX=0;minY=maxY=y;}lastY=y;}drawX();}function _getSegmentMethod(line){const opts=line.options;const borderDash=opts.borderDash&&opts.borderDash.length;const useFastPath=!line._decimated&&!line._loop&&!opts.tension&&opts.cubicInterpolationMode!=='monotone'&&!opts.stepped&&!borderDash;return useFastPath?fastPathSegment:pathSegment;}function _getInterpolationMethod(options){if(options.stepped){return _steppedInterpolation;}if(options.tension||options.cubicInterpolationMode==='monotone'){return _bezierInterpolation;}return _pointInLine;}function strokePathWithCache(ctx,line,start,count){let path=line._path;if(!path){path=line._path=new Path2D();if(line.path(path,start,count)){path.closePath();}}setStyle(ctx,line.options);ctx.stroke(path);}function strokePathDirect(ctx,line,start,count){const{segments,options}=line;const segmentMethod=_getSegmentMethod(line);for(const segment of segments){setStyle(ctx,options,segment.style);ctx.beginPath();if(segmentMethod(ctx,line,segment,{start,end:start+count-1})){ctx.closePath();}ctx.stroke();}}const usePath2D=typeof Path2D==='function';function draw(ctx,line,start,count){if(usePath2D&&!line.options.segment){strokePathWithCache(ctx,line,start,count);}else{strokePathDirect(ctx,line,start,count);}}class LineElement extends Element{static id='line';static defaults={borderCapStyle:'butt',borderDash:[],borderDashOffset:0,borderJoinStyle:'miter',borderWidth:3,capBezierPoints:true,cubicInterpolationMode:'default',fill:false,spanGaps:false,stepped:false,tension:0};static defaultRoutes={backgroundColor:'backgroundColor',borderColor:'borderColor'};static descriptors={_scriptable:true,_indexable:name=>name!=='borderDash'&&name!=='fill'};constructor(cfg){super();this.animated=true;this.options=undefined;this._chart=undefined;this._loop=undefined;this._fullLoop=undefined;this._path=undefined;this._points=undefined;this._segments=undefined;this._decimated=false;this._pointsUpdated=false;this._datasetIndex=undefined;if(cfg){Object.assign(this,cfg);}}updateControlPoints(chartArea,indexAxis){const options=this.options;if((options.tension||options.cubicInterpolationMode==='monotone')&&!options.stepped&&!this._pointsUpdated){const loop=options.spanGaps?this._loop:this._fullLoop;_updateBezierControlPoints(this._points,options,chartArea,loop,indexAxis);this._pointsUpdated=true;}}set points(points){this._points=points;delete this._segments;delete this._path;this._pointsUpdated=false;}get points(){return this._points;}get segments(){return this._segments||(this._segments=_computeSegments(this,this.options.segment));}first(){const segments=this.segments;const points=this.points;return segments.length&&points[segments[0].start];}last(){const segments=this.segments;const points=this.points;const count=segments.length;return count&&points[segments[count-1].end];}interpolate(point,property){const options=this.options;const value=point[property];const points=this.points;const segments=_boundSegments(this,{property,start:value,end:value});if(!segments.length){return;}const result=[];const _interpolate=_getInterpolationMethod(options);let i,ilen;for(i=0,ilen=segments.length;i<ilen;++i){const{start,end}=segments[i];const p1=points[start];const p2=points[end];if(p1===p2){result.push(p1);continue;}const t=Math.abs((value-p1[property])/(p2[property]-p1[property]));const interpolated=_interpolate(p1,p2,t,options.stepped);interpolated[property]=point[property];result.push(interpolated);}return result.length===1?result[0]:result;}pathSegment(ctx,segment,params){const segmentMethod=_getSegmentMethod(this);return segmentMethod(ctx,this,segment,params);}path(ctx,start,count){const segments=this.segments;const segmentMethod=_getSegmentMethod(this);let loop=this._loop;start=start||0;count=count||this.points.length-start;for(const segment of segments){loop&=segmentMethod(ctx,this,segment,{start,end:start+count-1});}return!!loop;}draw(ctx,chartArea,start,count){const options=this.options||{};const points=this.points||[];if(points.length&&options.borderWidth){ctx.save();draw(ctx,this,start,count);ctx.restore();}if(this.animated){this._pointsUpdated=false;this._path=undefined;}}}function inRange$1(el,pos,axis,useFinalPosition){const options=el.options;const{[axis]:value}=el.getProps([axis],useFinalPosition);return Math.abs(pos-value)<options.radius+options.hitRadius;}class PointElement extends Element{static id='point';parsed;skip;stop;/**
     * @type {any}
     */static defaults={borderWidth:1,hitRadius:1,hoverBorderWidth:1,hoverRadius:4,pointStyle:'circle',radius:3,rotation:0};/**
     * @type {any}
     */static defaultRoutes={backgroundColor:'backgroundColor',borderColor:'borderColor'};constructor(cfg){super();this.options=undefined;this.parsed=undefined;this.skip=undefined;this.stop=undefined;if(cfg){Object.assign(this,cfg);}}inRange(mouseX,mouseY,useFinalPosition){const options=this.options;const{x,y}=this.getProps(['x','y'],useFinalPosition);return Math.pow(mouseX-x,2)+Math.pow(mouseY-y,2)<Math.pow(options.hitRadius+options.radius,2);}inXRange(mouseX,useFinalPosition){return inRange$1(this,mouseX,'x',useFinalPosition);}inYRange(mouseY,useFinalPosition){return inRange$1(this,mouseY,'y',useFinalPosition);}getCenterPoint(useFinalPosition){const{x,y}=this.getProps(['x','y'],useFinalPosition);return{x,y};}size(options){options=options||this.options||{};let radius=options.radius||0;radius=Math.max(radius,radius&&options.hoverRadius||0);const borderWidth=radius&&options.borderWidth||0;return(radius+borderWidth)*2;}draw(ctx,area){const options=this.options;if(this.skip||options.radius<0.1||!_isPointInArea(this,area,this.size(options)/2)){return;}ctx.strokeStyle=options.borderColor;ctx.lineWidth=options.borderWidth;ctx.fillStyle=options.backgroundColor;drawPoint(ctx,options,this.x,this.y);}getRange(){const options=this.options||{};// @ts-expect-error Fallbacks should never be hit in practice
return options.radius+options.hitRadius;}}function getBarBounds(bar,useFinalPosition){const{x,y,base,width,height}=bar.getProps(['x','y','base','width','height'],useFinalPosition);let left,right,top,bottom,half;if(bar.horizontal){half=height/2;left=Math.min(x,base);right=Math.max(x,base);top=y-half;bottom=y+half;}else{half=width/2;left=x-half;right=x+half;top=Math.min(y,base);bottom=Math.max(y,base);}return{left,top,right,bottom};}function skipOrLimit(skip,value,min,max){return skip?0:_limitValue(value,min,max);}function parseBorderWidth(bar,maxW,maxH){const value=bar.options.borderWidth;const skip=bar.borderSkipped;const o=toTRBL(value);return{t:skipOrLimit(skip.top,o.top,0,maxH),r:skipOrLimit(skip.right,o.right,0,maxW),b:skipOrLimit(skip.bottom,o.bottom,0,maxH),l:skipOrLimit(skip.left,o.left,0,maxW)};}function parseBorderRadius(bar,maxW,maxH){const{enableBorderRadius}=bar.getProps(['enableBorderRadius']);const value=bar.options.borderRadius;const o=toTRBLCorners(value);const maxR=Math.min(maxW,maxH);const skip=bar.borderSkipped;const enableBorder=enableBorderRadius||isObject(value);return{topLeft:skipOrLimit(!enableBorder||skip.top||skip.left,o.topLeft,0,maxR),topRight:skipOrLimit(!enableBorder||skip.top||skip.right,o.topRight,0,maxR),bottomLeft:skipOrLimit(!enableBorder||skip.bottom||skip.left,o.bottomLeft,0,maxR),bottomRight:skipOrLimit(!enableBorder||skip.bottom||skip.right,o.bottomRight,0,maxR)};}function boundingRects(bar){const bounds=getBarBounds(bar);const width=bounds.right-bounds.left;const height=bounds.bottom-bounds.top;const border=parseBorderWidth(bar,width/2,height/2);const radius=parseBorderRadius(bar,width/2,height/2);return{outer:{x:bounds.left,y:bounds.top,w:width,h:height,radius},inner:{x:bounds.left+border.l,y:bounds.top+border.t,w:width-border.l-border.r,h:height-border.t-border.b,radius:{topLeft:Math.max(0,radius.topLeft-Math.max(border.t,border.l)),topRight:Math.max(0,radius.topRight-Math.max(border.t,border.r)),bottomLeft:Math.max(0,radius.bottomLeft-Math.max(border.b,border.l)),bottomRight:Math.max(0,radius.bottomRight-Math.max(border.b,border.r))}}};}function inRange(bar,x,y,useFinalPosition){const skipX=x===null;const skipY=y===null;const skipBoth=skipX&&skipY;const bounds=bar&&!skipBoth&&getBarBounds(bar,useFinalPosition);return bounds&&(skipX||_isBetween(x,bounds.left,bounds.right))&&(skipY||_isBetween(y,bounds.top,bounds.bottom));}function hasRadius(radius){return radius.topLeft||radius.topRight||radius.bottomLeft||radius.bottomRight;}function addNormalRectPath(ctx,rect){ctx.rect(rect.x,rect.y,rect.w,rect.h);}function inflateRect(rect,amount,refRect={}){const x=rect.x!==refRect.x?-amount:0;const y=rect.y!==refRect.y?-amount:0;const w=(rect.x+rect.w!==refRect.x+refRect.w?amount:0)-x;const h=(rect.y+rect.h!==refRect.y+refRect.h?amount:0)-y;return{x:rect.x+x,y:rect.y+y,w:rect.w+w,h:rect.h+h,radius:rect.radius};}class BarElement extends Element{static id='bar';static defaults={borderSkipped:'start',borderWidth:0,borderRadius:0,inflateAmount:'auto',pointStyle:undefined};static defaultRoutes={backgroundColor:'backgroundColor',borderColor:'borderColor'};constructor(cfg){super();this.options=undefined;this.horizontal=undefined;this.base=undefined;this.width=undefined;this.height=undefined;this.inflateAmount=undefined;if(cfg){Object.assign(this,cfg);}}draw(ctx){const{inflateAmount,options:{borderColor,backgroundColor}}=this;const{inner,outer}=boundingRects(this);const addRectPath=hasRadius(outer.radius)?addRoundedRectPath:addNormalRectPath;ctx.save();if(outer.w!==inner.w||outer.h!==inner.h){ctx.beginPath();addRectPath(ctx,inflateRect(outer,inflateAmount,inner));ctx.clip();addRectPath(ctx,inflateRect(inner,-inflateAmount,outer));ctx.fillStyle=borderColor;ctx.fill('evenodd');}ctx.beginPath();addRectPath(ctx,inflateRect(inner,inflateAmount));ctx.fillStyle=backgroundColor;ctx.fill();ctx.restore();}inRange(mouseX,mouseY,useFinalPosition){return inRange(this,mouseX,mouseY,useFinalPosition);}inXRange(mouseX,useFinalPosition){return inRange(this,mouseX,null,useFinalPosition);}inYRange(mouseY,useFinalPosition){return inRange(this,null,mouseY,useFinalPosition);}getCenterPoint(useFinalPosition){const{x,y,base,horizontal}=this.getProps(['x','y','base','horizontal'],useFinalPosition);return{x:horizontal?(x+base)/2:x,y:horizontal?y:(y+base)/2};}getRange(axis){return axis==='x'?this.width/2:this.height/2;}}var elements=/*#__PURE__*/Object.freeze({__proto__:null,ArcElement:ArcElement,BarElement:BarElement,LineElement:LineElement,PointElement:PointElement});const BORDER_COLORS=['rgb(54, 162, 235)','rgb(255, 99, 132)','rgb(255, 159, 64)','rgb(255, 205, 86)','rgb(75, 192, 192)','rgb(153, 102, 255)','rgb(201, 203, 207)'// grey
];// Border colors with 50% transparency
const BACKGROUND_COLORS=/* #__PURE__ */BORDER_COLORS.map(color=>color.replace('rgb(','rgba(').replace(')',', 0.5)'));function getBorderColor(i){return BORDER_COLORS[i%BORDER_COLORS.length];}function getBackgroundColor(i){return BACKGROUND_COLORS[i%BACKGROUND_COLORS.length];}function colorizeDefaultDataset(dataset,i){dataset.borderColor=getBorderColor(i);dataset.backgroundColor=getBackgroundColor(i);return++i;}function colorizeDoughnutDataset(dataset,i){dataset.backgroundColor=dataset.data.map(()=>getBorderColor(i++));return i;}function colorizePolarAreaDataset(dataset,i){dataset.backgroundColor=dataset.data.map(()=>getBackgroundColor(i++));return i;}function getColorizer(chart){let i=0;return(dataset,datasetIndex)=>{const controller=chart.getDatasetMeta(datasetIndex).controller;if(controller instanceof DoughnutController){i=colorizeDoughnutDataset(dataset,i);}else if(controller instanceof PolarAreaController){i=colorizePolarAreaDataset(dataset,i);}else if(controller){i=colorizeDefaultDataset(dataset,i);}};}function containsColorsDefinitions(descriptors){let k;for(k in descriptors){if(descriptors[k].borderColor||descriptors[k].backgroundColor){return true;}}return false;}function containsColorsDefinition(descriptor){return descriptor&&(descriptor.borderColor||descriptor.backgroundColor);}function containsDefaultColorsDefenitions(){return defaults.borderColor!=='rgba(0,0,0,0.1)'||defaults.backgroundColor!=='rgba(0,0,0,0.1)';}var plugin_colors={id:'colors',defaults:{enabled:true,forceOverride:false},beforeLayout(chart,_args,options){if(!options.enabled){return;}const{data:{datasets},options:chartOptions}=chart.config;const{elements}=chartOptions;const containsColorDefenition=containsColorsDefinitions(datasets)||containsColorsDefinition(chartOptions)||elements&&containsColorsDefinitions(elements)||containsDefaultColorsDefenitions();if(!options.forceOverride&&containsColorDefenition){return;}const colorizer=getColorizer(chart);datasets.forEach(colorizer);}};function lttbDecimation(data,start,count,availableWidth,options){const samples=options.samples||availableWidth;if(samples>=count){return data.slice(start,start+count);}const decimated=[];const bucketWidth=(count-2)/(samples-2);let sampledIndex=0;const endIndex=start+count-1;let a=start;let i,maxAreaPoint,maxArea,area,nextA;decimated[sampledIndex++]=data[a];for(i=0;i<samples-2;i++){let avgX=0;let avgY=0;let j;const avgRangeStart=Math.floor((i+1)*bucketWidth)+1+start;const avgRangeEnd=Math.min(Math.floor((i+2)*bucketWidth)+1,count)+start;const avgRangeLength=avgRangeEnd-avgRangeStart;for(j=avgRangeStart;j<avgRangeEnd;j++){avgX+=data[j].x;avgY+=data[j].y;}avgX/=avgRangeLength;avgY/=avgRangeLength;const rangeOffs=Math.floor(i*bucketWidth)+1+start;const rangeTo=Math.min(Math.floor((i+1)*bucketWidth)+1,count)+start;const{x:pointAx,y:pointAy}=data[a];maxArea=area=-1;for(j=rangeOffs;j<rangeTo;j++){area=0.5*Math.abs((pointAx-avgX)*(data[j].y-pointAy)-(pointAx-data[j].x)*(avgY-pointAy));if(area>maxArea){maxArea=area;maxAreaPoint=data[j];nextA=j;}}decimated[sampledIndex++]=maxAreaPoint;a=nextA;}decimated[sampledIndex++]=data[endIndex];return decimated;}function minMaxDecimation(data,start,count,availableWidth){let avgX=0;let countX=0;let i,point,x,y,prevX,minIndex,maxIndex,startIndex,minY,maxY;const decimated=[];const endIndex=start+count-1;const xMin=data[start].x;const xMax=data[endIndex].x;const dx=xMax-xMin;for(i=start;i<start+count;++i){point=data[i];x=(point.x-xMin)/dx*availableWidth;y=point.y;const truncX=x|0;if(truncX===prevX){if(y<minY){minY=y;minIndex=i;}else if(y>maxY){maxY=y;maxIndex=i;}avgX=(countX*avgX+point.x)/++countX;}else{const lastIndex=i-1;if(!isNullOrUndef(minIndex)&&!isNullOrUndef(maxIndex)){const intermediateIndex1=Math.min(minIndex,maxIndex);const intermediateIndex2=Math.max(minIndex,maxIndex);if(intermediateIndex1!==startIndex&&intermediateIndex1!==lastIndex){decimated.push({...data[intermediateIndex1],x:avgX});}if(intermediateIndex2!==startIndex&&intermediateIndex2!==lastIndex){decimated.push({...data[intermediateIndex2],x:avgX});}}if(i>0&&lastIndex!==startIndex){decimated.push(data[lastIndex]);}decimated.push(point);prevX=truncX;countX=0;minY=maxY=y;minIndex=maxIndex=startIndex=i;}}return decimated;}function cleanDecimatedDataset(dataset){if(dataset._decimated){const data=dataset._data;delete dataset._decimated;delete dataset._data;Object.defineProperty(dataset,'data',{configurable:true,enumerable:true,writable:true,value:data});}}function cleanDecimatedData(chart){chart.data.datasets.forEach(dataset=>{cleanDecimatedDataset(dataset);});}function getStartAndCountOfVisiblePointsSimplified(meta,points){const pointCount=points.length;let start=0;let count;const{iScale}=meta;const{min,max,minDefined,maxDefined}=iScale.getUserBounds();if(minDefined){start=_limitValue(_lookupByKey(points,iScale.axis,min).lo,0,pointCount-1);}if(maxDefined){count=_limitValue(_lookupByKey(points,iScale.axis,max).hi+1,start,pointCount)-start;}else{count=pointCount-start;}return{start,count};}var plugin_decimation={id:'decimation',defaults:{algorithm:'min-max',enabled:false},beforeElementsUpdate:(chart,args,options)=>{if(!options.enabled){cleanDecimatedData(chart);return;}const availableWidth=chart.width;chart.data.datasets.forEach((dataset,datasetIndex)=>{const{_data,indexAxis}=dataset;const meta=chart.getDatasetMeta(datasetIndex);const data=_data||dataset.data;if(resolve([indexAxis,chart.options.indexAxis])==='y'){return;}if(!meta.controller.supportsDecimation){return;}const xAxis=chart.scales[meta.xAxisID];if(xAxis.type!=='linear'&&xAxis.type!=='time'){return;}if(chart.options.parsing){return;}let{start,count}=getStartAndCountOfVisiblePointsSimplified(meta,data);const threshold=options.threshold||4*availableWidth;if(count<=threshold){cleanDecimatedDataset(dataset);return;}if(isNullOrUndef(_data)){dataset._data=data;delete dataset.data;Object.defineProperty(dataset,'data',{configurable:true,enumerable:true,get:function(){return this._decimated;},set:function(d){this._data=d;}});}let decimated;switch(options.algorithm){case'lttb':decimated=lttbDecimation(data,start,count,availableWidth,options);break;case'min-max':decimated=minMaxDecimation(data,start,count,availableWidth);break;default:throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);}dataset._decimated=decimated;});},destroy(chart){cleanDecimatedData(chart);}};function _segments(line,target,property){const segments=line.segments;const points=line.points;const tpoints=target.points;const parts=[];for(const segment of segments){let{start,end}=segment;end=_findSegmentEnd(start,end,points);const bounds=_getBounds(property,points[start],points[end],segment.loop);if(!target.segments){parts.push({source:segment,target:bounds,start:points[start],end:points[end]});continue;}const targetSegments=_boundSegments(target,bounds);for(const tgt of targetSegments){const subBounds=_getBounds(property,tpoints[tgt.start],tpoints[tgt.end],tgt.loop);const fillSources=_boundSegment(segment,points,subBounds);for(const fillSource of fillSources){parts.push({source:fillSource,target:tgt,start:{[property]:_getEdge(bounds,subBounds,'start',Math.max)},end:{[property]:_getEdge(bounds,subBounds,'end',Math.min)}});}}}return parts;}function _getBounds(property,first,last,loop){if(loop){return;}let start=first[property];let end=last[property];if(property==='angle'){start=_normalizeAngle(start);end=_normalizeAngle(end);}return{property,start,end};}function _pointsFromSegments(boundary,line){const{x=null,y=null}=boundary||{};const linePoints=line.points;const points=[];line.segments.forEach(({start,end})=>{end=_findSegmentEnd(start,end,linePoints);const first=linePoints[start];const last=linePoints[end];if(y!==null){points.push({x:first.x,y});points.push({x:last.x,y});}else if(x!==null){points.push({x,y:first.y});points.push({x,y:last.y});}});return points;}function _findSegmentEnd(start,end,points){for(;end>start;end--){const point=points[end];if(!isNaN(point.x)&&!isNaN(point.y)){break;}}return end;}function _getEdge(a,b,prop,fn){if(a&&b){return fn(a[prop],b[prop]);}return a?a[prop]:b?b[prop]:0;}function _createBoundaryLine(boundary,line){let points=[];let _loop=false;if(isArray(boundary)){_loop=true;points=boundary;}else{points=_pointsFromSegments(boundary,line);}return points.length?new LineElement({points,options:{tension:0},_loop,_fullLoop:_loop}):null;}function _shouldApplyFill(source){return source&&source.fill!==false;}function _resolveTarget(sources,index,propagate){const source=sources[index];let fill=source.fill;const visited=[index];let target;if(!propagate){return fill;}while(fill!==false&&visited.indexOf(fill)===-1){if(!isNumberFinite(fill)){return fill;}target=sources[fill];if(!target){return false;}if(target.visible){return fill;}visited.push(fill);fill=target.fill;}return false;}function _decodeFill(line,index,count){const fill=parseFillOption(line);if(isObject(fill)){return isNaN(fill.value)?false:fill;}let target=parseFloat(fill);if(isNumberFinite(target)&&Math.floor(target)===target){return decodeTargetIndex(fill[0],index,target,count);}return['origin','start','end','stack','shape'].indexOf(fill)>=0&&fill;}function decodeTargetIndex(firstCh,index,target,count){if(firstCh==='-'||firstCh==='+'){target=index+target;}if(target===index||target<0||target>=count){return false;}return target;}function _getTargetPixel(fill,scale){let pixel=null;if(fill==='start'){pixel=scale.bottom;}else if(fill==='end'){pixel=scale.top;}else if(isObject(fill)){pixel=scale.getPixelForValue(fill.value);}else if(scale.getBasePixel){pixel=scale.getBasePixel();}return pixel;}function _getTargetValue(fill,scale,startValue){let value;if(fill==='start'){value=startValue;}else if(fill==='end'){value=scale.options.reverse?scale.min:scale.max;}else if(isObject(fill)){value=fill.value;}else{value=scale.getBaseValue();}return value;}function parseFillOption(line){const options=line.options;const fillOption=options.fill;let fill=valueOrDefault(fillOption&&fillOption.target,fillOption);if(fill===undefined){fill=!!options.backgroundColor;}if(fill===false||fill===null){return false;}if(fill===true){return'origin';}return fill;}function _buildStackLine(source){const{scale,index,line}=source;const points=[];const segments=line.segments;const sourcePoints=line.points;const linesBelow=getLinesBelow(scale,index);linesBelow.push(_createBoundaryLine({x:null,y:scale.bottom},line));for(let i=0;i<segments.length;i++){const segment=segments[i];for(let j=segment.start;j<=segment.end;j++){addPointsBelow(points,sourcePoints[j],linesBelow);}}return new LineElement({points,options:{}});}function getLinesBelow(scale,index){const below=[];const metas=scale.getMatchingVisibleMetas('line');for(let i=0;i<metas.length;i++){const meta=metas[i];if(meta.index===index){break;}if(!meta.hidden){below.unshift(meta.dataset);}}return below;}function addPointsBelow(points,sourcePoint,linesBelow){const postponed=[];for(let j=0;j<linesBelow.length;j++){const line=linesBelow[j];const{first,last,point}=findPoint(line,sourcePoint,'x');if(!point||first&&last){continue;}if(first){postponed.unshift(point);}else{points.push(point);if(!last){break;}}}points.push(...postponed);}function findPoint(line,sourcePoint,property){const point=line.interpolate(sourcePoint,property);if(!point){return{};}const pointValue=point[property];const segments=line.segments;const linePoints=line.points;let first=false;let last=false;for(let i=0;i<segments.length;i++){const segment=segments[i];const firstValue=linePoints[segment.start][property];const lastValue=linePoints[segment.end][property];if(_isBetween(pointValue,firstValue,lastValue)){first=pointValue===firstValue;last=pointValue===lastValue;break;}}return{first,last,point};}class simpleArc{constructor(opts){this.x=opts.x;this.y=opts.y;this.radius=opts.radius;}pathSegment(ctx,bounds,opts){const{x,y,radius}=this;bounds=bounds||{start:0,end:TAU};ctx.arc(x,y,radius,bounds.end,bounds.start,true);return!opts.bounds;}interpolate(point){const{x,y,radius}=this;const angle=point.angle;return{x:x+Math.cos(angle)*radius,y:y+Math.sin(angle)*radius,angle};}}function _getTarget(source){const{chart,fill,line}=source;if(isNumberFinite(fill)){return getLineByIndex(chart,fill);}if(fill==='stack'){return _buildStackLine(source);}if(fill==='shape'){return true;}const boundary=computeBoundary(source);if(boundary instanceof simpleArc){return boundary;}return _createBoundaryLine(boundary,line);}function getLineByIndex(chart,index){const meta=chart.getDatasetMeta(index);const visible=meta&&chart.isDatasetVisible(index);return visible?meta.dataset:null;}function computeBoundary(source){const scale=source.scale||{};if(scale.getPointPositionForValue){return computeCircularBoundary(source);}return computeLinearBoundary(source);}function computeLinearBoundary(source){const{scale={},fill}=source;const pixel=_getTargetPixel(fill,scale);if(isNumberFinite(pixel)){const horizontal=scale.isHorizontal();return{x:horizontal?pixel:null,y:horizontal?null:pixel};}return null;}function computeCircularBoundary(source){const{scale,fill}=source;const options=scale.options;const length=scale.getLabels().length;const start=options.reverse?scale.max:scale.min;const value=_getTargetValue(fill,scale,start);const target=[];if(options.grid.circular){const center=scale.getPointPositionForValue(0,start);return new simpleArc({x:center.x,y:center.y,radius:scale.getDistanceFromCenterForValue(value)});}for(let i=0;i<length;++i){target.push(scale.getPointPositionForValue(i,value));}return target;}function _drawfill(ctx,source,area){const target=_getTarget(source);const{chart,index,line,scale,axis}=source;const lineOpts=line.options;const fillOption=lineOpts.fill;const color=lineOpts.backgroundColor;const{above=color,below=color}=fillOption||{};const meta=chart.getDatasetMeta(index);const clip=getDatasetClipArea(chart,meta);if(target&&line.points.length){clipArea(ctx,area);doFill(ctx,{line,target,above,below,area,scale,axis,clip});unclipArea(ctx);}}function doFill(ctx,cfg){const{line,target,above,below,area,scale,clip}=cfg;const property=line._loop?'angle':cfg.axis;ctx.save();if(property==='x'&&below!==above){clipVertical(ctx,target,area.top);fill(ctx,{line,target,color:above,scale,property,clip});ctx.restore();ctx.save();clipVertical(ctx,target,area.bottom);}fill(ctx,{line,target,color:below,scale,property,clip});ctx.restore();}function clipVertical(ctx,target,clipY){const{segments,points}=target;let first=true;let lineLoop=false;ctx.beginPath();for(const segment of segments){const{start,end}=segment;const firstPoint=points[start];const lastPoint=points[_findSegmentEnd(start,end,points)];if(first){ctx.moveTo(firstPoint.x,firstPoint.y);first=false;}else{ctx.lineTo(firstPoint.x,clipY);ctx.lineTo(firstPoint.x,firstPoint.y);}lineLoop=!!target.pathSegment(ctx,segment,{move:lineLoop});if(lineLoop){ctx.closePath();}else{ctx.lineTo(lastPoint.x,clipY);}}ctx.lineTo(target.first().x,clipY);ctx.closePath();ctx.clip();}function fill(ctx,cfg){const{line,target,property,color,scale,clip}=cfg;const segments=_segments(line,target,property);for(const{source:src,target:tgt,start,end}of segments){const{style:{backgroundColor=color}={}}=src;const notShape=target!==true;ctx.save();ctx.fillStyle=backgroundColor;clipBounds(ctx,scale,clip,notShape&&_getBounds(property,start,end));ctx.beginPath();const lineLoop=!!line.pathSegment(ctx,src);let loop;if(notShape){if(lineLoop){ctx.closePath();}else{interpolatedLineTo(ctx,target,end,property);}const targetLoop=!!target.pathSegment(ctx,tgt,{move:lineLoop,reverse:true});loop=lineLoop&&targetLoop;if(!loop){interpolatedLineTo(ctx,target,start,property);}}ctx.closePath();ctx.fill(loop?'evenodd':'nonzero');ctx.restore();}}function clipBounds(ctx,scale,clip,bounds){const chartArea=scale.chart.chartArea;const{property,start,end}=bounds||{};if(property==='x'||property==='y'){let left,top,right,bottom;if(property==='x'){left=start;top=chartArea.top;right=end;bottom=chartArea.bottom;}else{left=chartArea.left;top=start;right=chartArea.right;bottom=end;}ctx.beginPath();if(clip){left=Math.max(left,clip.left);right=Math.min(right,clip.right);top=Math.max(top,clip.top);bottom=Math.min(bottom,clip.bottom);}ctx.rect(left,top,right-left,bottom-top);ctx.clip();}}function interpolatedLineTo(ctx,target,point,property){const interpolatedPoint=target.interpolate(point,property);if(interpolatedPoint){ctx.lineTo(interpolatedPoint.x,interpolatedPoint.y);}}var index={id:'filler',afterDatasetsUpdate(chart,_args,options){const count=(chart.data.datasets||[]).length;const sources=[];let meta,i,line,source;for(i=0;i<count;++i){meta=chart.getDatasetMeta(i);line=meta.dataset;source=null;if(line&&line.options&&line instanceof LineElement){source={visible:chart.isDatasetVisible(i),index:i,fill:_decodeFill(line,i,count),chart,axis:meta.controller.options.indexAxis,scale:meta.vScale,line};}meta.$filler=source;sources.push(source);}for(i=0;i<count;++i){source=sources[i];if(!source||source.fill===false){continue;}source.fill=_resolveTarget(sources,i,options.propagate);}},beforeDraw(chart,_args,options){const draw=options.drawTime==='beforeDraw';const metasets=chart.getSortedVisibleDatasetMetas();const area=chart.chartArea;for(let i=metasets.length-1;i>=0;--i){const source=metasets[i].$filler;if(!source){continue;}source.line.updateControlPoints(area,source.axis);if(draw&&source.fill){_drawfill(chart.ctx,source,area);}}},beforeDatasetsDraw(chart,_args,options){if(options.drawTime!=='beforeDatasetsDraw'){return;}const metasets=chart.getSortedVisibleDatasetMetas();for(let i=metasets.length-1;i>=0;--i){const source=metasets[i].$filler;if(_shouldApplyFill(source)){_drawfill(chart.ctx,source,chart.chartArea);}}},beforeDatasetDraw(chart,args,options){const source=args.meta.$filler;if(!_shouldApplyFill(source)||options.drawTime!=='beforeDatasetDraw'){return;}_drawfill(chart.ctx,source,chart.chartArea);},defaults:{propagate:true,drawTime:'beforeDatasetDraw'}};const getBoxSize=(labelOpts,fontSize)=>{let{boxHeight=fontSize,boxWidth=fontSize}=labelOpts;if(labelOpts.usePointStyle){boxHeight=Math.min(boxHeight,fontSize);boxWidth=labelOpts.pointStyleWidth||Math.min(boxWidth,fontSize);}return{boxWidth,boxHeight,itemHeight:Math.max(fontSize,boxHeight)};};const itemsEqual=(a,b)=>a!==null&&b!==null&&a.datasetIndex===b.datasetIndex&&a.index===b.index;class Legend extends Element{constructor(config){super();this._added=false;this.legendHitBoxes=[];this._hoveredItem=null;this.doughnutMode=false;this.chart=config.chart;this.options=config.options;this.ctx=config.ctx;this.legendItems=undefined;this.columnSizes=undefined;this.lineWidths=undefined;this.maxHeight=undefined;this.maxWidth=undefined;this.top=undefined;this.bottom=undefined;this.left=undefined;this.right=undefined;this.height=undefined;this.width=undefined;this._margins=undefined;this.position=undefined;this.weight=undefined;this.fullSize=undefined;}update(maxWidth,maxHeight,margins){this.maxWidth=maxWidth;this.maxHeight=maxHeight;this._margins=margins;this.setDimensions();this.buildLabels();this.fit();}setDimensions(){if(this.isHorizontal()){this.width=this.maxWidth;this.left=this._margins.left;this.right=this.width;}else{this.height=this.maxHeight;this.top=this._margins.top;this.bottom=this.height;}}buildLabels(){const labelOpts=this.options.labels||{};let legendItems=callback(labelOpts.generateLabels,[this.chart],this)||[];if(labelOpts.filter){legendItems=legendItems.filter(item=>labelOpts.filter(item,this.chart.data));}if(labelOpts.sort){legendItems=legendItems.sort((a,b)=>labelOpts.sort(a,b,this.chart.data));}if(this.options.reverse){legendItems.reverse();}this.legendItems=legendItems;}fit(){const{options,ctx}=this;if(!options.display){this.width=this.height=0;return;}const labelOpts=options.labels;const labelFont=toFont(labelOpts.font);const fontSize=labelFont.size;const titleHeight=this._computeTitleHeight();const{boxWidth,itemHeight}=getBoxSize(labelOpts,fontSize);let width,height;ctx.font=labelFont.string;if(this.isHorizontal()){width=this.maxWidth;height=this._fitRows(titleHeight,fontSize,boxWidth,itemHeight)+10;}else{height=this.maxHeight;width=this._fitCols(titleHeight,labelFont,boxWidth,itemHeight)+10;}this.width=Math.min(width,options.maxWidth||this.maxWidth);this.height=Math.min(height,options.maxHeight||this.maxHeight);}_fitRows(titleHeight,fontSize,boxWidth,itemHeight){const{ctx,maxWidth,options:{labels:{padding}}}=this;const hitboxes=this.legendHitBoxes=[];const lineWidths=this.lineWidths=[0];const lineHeight=itemHeight+padding;let totalHeight=titleHeight;ctx.textAlign='left';ctx.textBaseline='middle';let row=-1;let top=-lineHeight;this.legendItems.forEach((legendItem,i)=>{const itemWidth=boxWidth+fontSize/2+ctx.measureText(legendItem.text).width;if(i===0||lineWidths[lineWidths.length-1]+itemWidth+2*padding>maxWidth){totalHeight+=lineHeight;lineWidths[lineWidths.length-(i>0?0:1)]=0;top+=lineHeight;row++;}hitboxes[i]={left:0,top,row,width:itemWidth,height:itemHeight};lineWidths[lineWidths.length-1]+=itemWidth+padding;});return totalHeight;}_fitCols(titleHeight,labelFont,boxWidth,_itemHeight){const{ctx,maxHeight,options:{labels:{padding}}}=this;const hitboxes=this.legendHitBoxes=[];const columnSizes=this.columnSizes=[];const heightLimit=maxHeight-titleHeight;let totalWidth=padding;let currentColWidth=0;let currentColHeight=0;let left=0;let col=0;this.legendItems.forEach((legendItem,i)=>{const{itemWidth,itemHeight}=calculateItemSize(boxWidth,labelFont,ctx,legendItem,_itemHeight);if(i>0&&currentColHeight+itemHeight+2*padding>heightLimit){totalWidth+=currentColWidth+padding;columnSizes.push({width:currentColWidth,height:currentColHeight});left+=currentColWidth+padding;col++;currentColWidth=currentColHeight=0;}hitboxes[i]={left,top:currentColHeight,col,width:itemWidth,height:itemHeight};currentColWidth=Math.max(currentColWidth,itemWidth);currentColHeight+=itemHeight+padding;});totalWidth+=currentColWidth;columnSizes.push({width:currentColWidth,height:currentColHeight});return totalWidth;}adjustHitBoxes(){if(!this.options.display){return;}const titleHeight=this._computeTitleHeight();const{legendHitBoxes:hitboxes,options:{align,labels:{padding},rtl}}=this;const rtlHelper=getRtlAdapter(rtl,this.left,this.width);if(this.isHorizontal()){let row=0;let left=_alignStartEnd(align,this.left+padding,this.right-this.lineWidths[row]);for(const hitbox of hitboxes){if(row!==hitbox.row){row=hitbox.row;left=_alignStartEnd(align,this.left+padding,this.right-this.lineWidths[row]);}hitbox.top+=this.top+titleHeight+padding;hitbox.left=rtlHelper.leftForLtr(rtlHelper.x(left),hitbox.width);left+=hitbox.width+padding;}}else{let col=0;let top=_alignStartEnd(align,this.top+titleHeight+padding,this.bottom-this.columnSizes[col].height);for(const hitbox of hitboxes){if(hitbox.col!==col){col=hitbox.col;top=_alignStartEnd(align,this.top+titleHeight+padding,this.bottom-this.columnSizes[col].height);}hitbox.top=top;hitbox.left+=this.left+padding;hitbox.left=rtlHelper.leftForLtr(rtlHelper.x(hitbox.left),hitbox.width);top+=hitbox.height+padding;}}}isHorizontal(){return this.options.position==='top'||this.options.position==='bottom';}draw(){if(this.options.display){const ctx=this.ctx;clipArea(ctx,this);this._draw();unclipArea(ctx);}}_draw(){const{options:opts,columnSizes,lineWidths,ctx}=this;const{align,labels:labelOpts}=opts;const defaultColor=defaults.color;const rtlHelper=getRtlAdapter(opts.rtl,this.left,this.width);const labelFont=toFont(labelOpts.font);const{padding}=labelOpts;const fontSize=labelFont.size;const halfFontSize=fontSize/2;let cursor;this.drawTitle();ctx.textAlign=rtlHelper.textAlign('left');ctx.textBaseline='middle';ctx.lineWidth=0.5;ctx.font=labelFont.string;const{boxWidth,boxHeight,itemHeight}=getBoxSize(labelOpts,fontSize);const drawLegendBox=function(x,y,legendItem){if(isNaN(boxWidth)||boxWidth<=0||isNaN(boxHeight)||boxHeight<0){return;}ctx.save();const lineWidth=valueOrDefault(legendItem.lineWidth,1);ctx.fillStyle=valueOrDefault(legendItem.fillStyle,defaultColor);ctx.lineCap=valueOrDefault(legendItem.lineCap,'butt');ctx.lineDashOffset=valueOrDefault(legendItem.lineDashOffset,0);ctx.lineJoin=valueOrDefault(legendItem.lineJoin,'miter');ctx.lineWidth=lineWidth;ctx.strokeStyle=valueOrDefault(legendItem.strokeStyle,defaultColor);ctx.setLineDash(valueOrDefault(legendItem.lineDash,[]));if(labelOpts.usePointStyle){const drawOptions={radius:boxHeight*Math.SQRT2/2,pointStyle:legendItem.pointStyle,rotation:legendItem.rotation,borderWidth:lineWidth};const centerX=rtlHelper.xPlus(x,boxWidth/2);const centerY=y+halfFontSize;drawPointLegend(ctx,drawOptions,centerX,centerY,labelOpts.pointStyleWidth&&boxWidth);}else{const yBoxTop=y+Math.max((fontSize-boxHeight)/2,0);const xBoxLeft=rtlHelper.leftForLtr(x,boxWidth);const borderRadius=toTRBLCorners(legendItem.borderRadius);ctx.beginPath();if(Object.values(borderRadius).some(v=>v!==0)){addRoundedRectPath(ctx,{x:xBoxLeft,y:yBoxTop,w:boxWidth,h:boxHeight,radius:borderRadius});}else{ctx.rect(xBoxLeft,yBoxTop,boxWidth,boxHeight);}ctx.fill();if(lineWidth!==0){ctx.stroke();}}ctx.restore();};const fillText=function(x,y,legendItem){renderText(ctx,legendItem.text,x,y+itemHeight/2,labelFont,{strikethrough:legendItem.hidden,textAlign:rtlHelper.textAlign(legendItem.textAlign)});};const isHorizontal=this.isHorizontal();const titleHeight=this._computeTitleHeight();if(isHorizontal){cursor={x:_alignStartEnd(align,this.left+padding,this.right-lineWidths[0]),y:this.top+padding+titleHeight,line:0};}else{cursor={x:this.left+padding,y:_alignStartEnd(align,this.top+titleHeight+padding,this.bottom-columnSizes[0].height),line:0};}overrideTextDirection(this.ctx,opts.textDirection);const lineHeight=itemHeight+padding;this.legendItems.forEach((legendItem,i)=>{ctx.strokeStyle=legendItem.fontColor;ctx.fillStyle=legendItem.fontColor;const textWidth=ctx.measureText(legendItem.text).width;const textAlign=rtlHelper.textAlign(legendItem.textAlign||(legendItem.textAlign=labelOpts.textAlign));const width=boxWidth+halfFontSize+textWidth;let x=cursor.x;let y=cursor.y;rtlHelper.setWidth(this.width);if(isHorizontal){if(i>0&&x+width+padding>this.right){y=cursor.y+=lineHeight;cursor.line++;x=cursor.x=_alignStartEnd(align,this.left+padding,this.right-lineWidths[cursor.line]);}}else if(i>0&&y+lineHeight>this.bottom){x=cursor.x=x+columnSizes[cursor.line].width+padding;cursor.line++;y=cursor.y=_alignStartEnd(align,this.top+titleHeight+padding,this.bottom-columnSizes[cursor.line].height);}const realX=rtlHelper.x(x);drawLegendBox(realX,y,legendItem);x=_textX(textAlign,x+boxWidth+halfFontSize,isHorizontal?x+width:this.right,opts.rtl);fillText(rtlHelper.x(x),y,legendItem);if(isHorizontal){cursor.x+=width+padding;}else if(typeof legendItem.text!=='string'){const fontLineHeight=labelFont.lineHeight;cursor.y+=calculateLegendItemHeight(legendItem,fontLineHeight)+padding;}else{cursor.y+=lineHeight;}});restoreTextDirection(this.ctx,opts.textDirection);}drawTitle(){const opts=this.options;const titleOpts=opts.title;const titleFont=toFont(titleOpts.font);const titlePadding=toPadding(titleOpts.padding);if(!titleOpts.display){return;}const rtlHelper=getRtlAdapter(opts.rtl,this.left,this.width);const ctx=this.ctx;const position=titleOpts.position;const halfFontSize=titleFont.size/2;const topPaddingPlusHalfFontSize=titlePadding.top+halfFontSize;let y;let left=this.left;let maxWidth=this.width;if(this.isHorizontal()){maxWidth=Math.max(...this.lineWidths);y=this.top+topPaddingPlusHalfFontSize;left=_alignStartEnd(opts.align,left,this.right-maxWidth);}else{const maxHeight=this.columnSizes.reduce((acc,size)=>Math.max(acc,size.height),0);y=topPaddingPlusHalfFontSize+_alignStartEnd(opts.align,this.top,this.bottom-maxHeight-opts.labels.padding-this._computeTitleHeight());}const x=_alignStartEnd(position,left,left+maxWidth);ctx.textAlign=rtlHelper.textAlign(_toLeftRightCenter(position));ctx.textBaseline='middle';ctx.strokeStyle=titleOpts.color;ctx.fillStyle=titleOpts.color;ctx.font=titleFont.string;renderText(ctx,titleOpts.text,x,y,titleFont);}_computeTitleHeight(){const titleOpts=this.options.title;const titleFont=toFont(titleOpts.font);const titlePadding=toPadding(titleOpts.padding);return titleOpts.display?titleFont.lineHeight+titlePadding.height:0;}_getLegendItemAt(x,y){let i,hitBox,lh;if(_isBetween(x,this.left,this.right)&&_isBetween(y,this.top,this.bottom)){lh=this.legendHitBoxes;for(i=0;i<lh.length;++i){hitBox=lh[i];if(_isBetween(x,hitBox.left,hitBox.left+hitBox.width)&&_isBetween(y,hitBox.top,hitBox.top+hitBox.height)){return this.legendItems[i];}}}return null;}handleEvent(e){const opts=this.options;if(!isListened(e.type,opts)){return;}const hoveredItem=this._getLegendItemAt(e.x,e.y);if(e.type==='mousemove'||e.type==='mouseout'){const previous=this._hoveredItem;const sameItem=itemsEqual(previous,hoveredItem);if(previous&&!sameItem){callback(opts.onLeave,[e,previous,this],this);}this._hoveredItem=hoveredItem;if(hoveredItem&&!sameItem){callback(opts.onHover,[e,hoveredItem,this],this);}}else if(hoveredItem){callback(opts.onClick,[e,hoveredItem,this],this);}}}function calculateItemSize(boxWidth,labelFont,ctx,legendItem,_itemHeight){const itemWidth=calculateItemWidth(legendItem,boxWidth,labelFont,ctx);const itemHeight=calculateItemHeight(_itemHeight,legendItem,labelFont.lineHeight);return{itemWidth,itemHeight};}function calculateItemWidth(legendItem,boxWidth,labelFont,ctx){let legendItemText=legendItem.text;if(legendItemText&&typeof legendItemText!=='string'){legendItemText=legendItemText.reduce((a,b)=>a.length>b.length?a:b);}return boxWidth+labelFont.size/2+ctx.measureText(legendItemText).width;}function calculateItemHeight(_itemHeight,legendItem,fontLineHeight){let itemHeight=_itemHeight;if(typeof legendItem.text!=='string'){itemHeight=calculateLegendItemHeight(legendItem,fontLineHeight);}return itemHeight;}function calculateLegendItemHeight(legendItem,fontLineHeight){const labelHeight=legendItem.text?legendItem.text.length:0;return fontLineHeight*labelHeight;}function isListened(type,opts){if((type==='mousemove'||type==='mouseout')&&(opts.onHover||opts.onLeave)){return true;}if(opts.onClick&&(type==='click'||type==='mouseup')){return true;}return false;}var plugin_legend={id:'legend',_element:Legend,start(chart,_args,options){const legend=chart.legend=new Legend({ctx:chart.ctx,options,chart});layouts.configure(chart,legend,options);layouts.addBox(chart,legend);},stop(chart){layouts.removeBox(chart,chart.legend);delete chart.legend;},beforeUpdate(chart,_args,options){const legend=chart.legend;layouts.configure(chart,legend,options);legend.options=options;},afterUpdate(chart){const legend=chart.legend;legend.buildLabels();legend.adjustHitBoxes();},afterEvent(chart,args){if(!args.replay){chart.legend.handleEvent(args.event);}},defaults:{display:true,position:'top',align:'center',fullSize:true,reverse:false,weight:1000,onClick(e,legendItem,legend){const index=legendItem.datasetIndex;const ci=legend.chart;if(ci.isDatasetVisible(index)){ci.hide(index);legendItem.hidden=true;}else{ci.show(index);legendItem.hidden=false;}},onHover:null,onLeave:null,labels:{color:ctx=>ctx.chart.options.color,boxWidth:40,padding:10,generateLabels(chart){const datasets=chart.data.datasets;const{labels:{usePointStyle,pointStyle,textAlign,color,useBorderRadius,borderRadius}}=chart.legend.options;return chart._getSortedDatasetMetas().map(meta=>{const style=meta.controller.getStyle(usePointStyle?0:undefined);const borderWidth=toPadding(style.borderWidth);return{text:datasets[meta.index].label,fillStyle:style.backgroundColor,fontColor:color,hidden:!meta.visible,lineCap:style.borderCapStyle,lineDash:style.borderDash,lineDashOffset:style.borderDashOffset,lineJoin:style.borderJoinStyle,lineWidth:(borderWidth.width+borderWidth.height)/4,strokeStyle:style.borderColor,pointStyle:pointStyle||style.pointStyle,rotation:style.rotation,textAlign:textAlign||style.textAlign,borderRadius:useBorderRadius&&(borderRadius||style.borderRadius),datasetIndex:meta.index};},this);}},title:{color:ctx=>ctx.chart.options.color,display:false,position:'center',text:''}},descriptors:{_scriptable:name=>!name.startsWith('on'),labels:{_scriptable:name=>!['generateLabels','filter','sort'].includes(name)}}};class Title extends Element{constructor(config){super();this.chart=config.chart;this.options=config.options;this.ctx=config.ctx;this._padding=undefined;this.top=undefined;this.bottom=undefined;this.left=undefined;this.right=undefined;this.width=undefined;this.height=undefined;this.position=undefined;this.weight=undefined;this.fullSize=undefined;}update(maxWidth,maxHeight){const opts=this.options;this.left=0;this.top=0;if(!opts.display){this.width=this.height=this.right=this.bottom=0;return;}this.width=this.right=maxWidth;this.height=this.bottom=maxHeight;const lineCount=isArray(opts.text)?opts.text.length:1;this._padding=toPadding(opts.padding);const textSize=lineCount*toFont(opts.font).lineHeight+this._padding.height;if(this.isHorizontal()){this.height=textSize;}else{this.width=textSize;}}isHorizontal(){const pos=this.options.position;return pos==='top'||pos==='bottom';}_drawArgs(offset){const{top,left,bottom,right,options}=this;const align=options.align;let rotation=0;let maxWidth,titleX,titleY;if(this.isHorizontal()){titleX=_alignStartEnd(align,left,right);titleY=top+offset;maxWidth=right-left;}else{if(options.position==='left'){titleX=left+offset;titleY=_alignStartEnd(align,bottom,top);rotation=PI*-0.5;}else{titleX=right-offset;titleY=_alignStartEnd(align,top,bottom);rotation=PI*0.5;}maxWidth=bottom-top;}return{titleX,titleY,maxWidth,rotation};}draw(){const ctx=this.ctx;const opts=this.options;if(!opts.display){return;}const fontOpts=toFont(opts.font);const lineHeight=fontOpts.lineHeight;const offset=lineHeight/2+this._padding.top;const{titleX,titleY,maxWidth,rotation}=this._drawArgs(offset);renderText(ctx,opts.text,0,0,fontOpts,{color:opts.color,maxWidth,rotation,textAlign:_toLeftRightCenter(opts.align),textBaseline:'middle',translation:[titleX,titleY]});}}function createTitle(chart,titleOpts){const title=new Title({ctx:chart.ctx,options:titleOpts,chart});layouts.configure(chart,title,titleOpts);layouts.addBox(chart,title);chart.titleBlock=title;}var plugin_title={id:'title',_element:Title,start(chart,_args,options){createTitle(chart,options);},stop(chart){const titleBlock=chart.titleBlock;layouts.removeBox(chart,titleBlock);delete chart.titleBlock;},beforeUpdate(chart,_args,options){const title=chart.titleBlock;layouts.configure(chart,title,options);title.options=options;},defaults:{align:'center',display:false,font:{weight:'bold'},fullSize:true,padding:10,position:'top',text:'',weight:2000},defaultRoutes:{color:'color'},descriptors:{_scriptable:true,_indexable:false}};const map=new WeakMap();var plugin_subtitle={id:'subtitle',start(chart,_args,options){const title=new Title({ctx:chart.ctx,options,chart});layouts.configure(chart,title,options);layouts.addBox(chart,title);map.set(chart,title);},stop(chart){layouts.removeBox(chart,map.get(chart));map.delete(chart);},beforeUpdate(chart,_args,options){const title=map.get(chart);layouts.configure(chart,title,options);title.options=options;},defaults:{align:'center',display:false,font:{weight:'normal'},fullSize:true,padding:0,position:'top',text:'',weight:1500},defaultRoutes:{color:'color'},descriptors:{_scriptable:true,_indexable:false}};const positioners={average(items){if(!items.length){return false;}let i,len;let xSet=new Set();let y=0;let count=0;for(i=0,len=items.length;i<len;++i){const el=items[i].element;if(el&&el.hasValue()){const pos=el.tooltipPosition();xSet.add(pos.x);y+=pos.y;++count;}}if(count===0||xSet.size===0){return false;}const xAverage=[...xSet].reduce((a,b)=>a+b)/xSet.size;return{x:xAverage,y:y/count};},nearest(items,eventPosition){if(!items.length){return false;}let x=eventPosition.x;let y=eventPosition.y;let minDistance=Number.POSITIVE_INFINITY;let i,len,nearestElement;for(i=0,len=items.length;i<len;++i){const el=items[i].element;if(el&&el.hasValue()){const center=el.getCenterPoint();const d=distanceBetweenPoints(eventPosition,center);if(d<minDistance){minDistance=d;nearestElement=el;}}}if(nearestElement){const tp=nearestElement.tooltipPosition();x=tp.x;y=tp.y;}return{x,y};}};function pushOrConcat(base,toPush){if(toPush){if(isArray(toPush)){Array.prototype.push.apply(base,toPush);}else{base.push(toPush);}}return base;}function splitNewlines(str){if((typeof str==='string'||str instanceof String)&&str.indexOf('\n')>-1){return str.split('\n');}return str;}function createTooltipItem(chart,item){const{element,datasetIndex,index}=item;const controller=chart.getDatasetMeta(datasetIndex).controller;const{label,value}=controller.getLabelAndValue(index);return{chart,label,parsed:controller.getParsed(index),raw:chart.data.datasets[datasetIndex].data[index],formattedValue:value,dataset:controller.getDataset(),dataIndex:index,datasetIndex,element};}function getTooltipSize(tooltip,options){const ctx=tooltip.chart.ctx;const{body,footer,title}=tooltip;const{boxWidth,boxHeight}=options;const bodyFont=toFont(options.bodyFont);const titleFont=toFont(options.titleFont);const footerFont=toFont(options.footerFont);const titleLineCount=title.length;const footerLineCount=footer.length;const bodyLineItemCount=body.length;const padding=toPadding(options.padding);let height=padding.height;let width=0;let combinedBodyLength=body.reduce((count,bodyItem)=>count+bodyItem.before.length+bodyItem.lines.length+bodyItem.after.length,0);combinedBodyLength+=tooltip.beforeBody.length+tooltip.afterBody.length;if(titleLineCount){height+=titleLineCount*titleFont.lineHeight+(titleLineCount-1)*options.titleSpacing+options.titleMarginBottom;}if(combinedBodyLength){const bodyLineHeight=options.displayColors?Math.max(boxHeight,bodyFont.lineHeight):bodyFont.lineHeight;height+=bodyLineItemCount*bodyLineHeight+(combinedBodyLength-bodyLineItemCount)*bodyFont.lineHeight+(combinedBodyLength-1)*options.bodySpacing;}if(footerLineCount){height+=options.footerMarginTop+footerLineCount*footerFont.lineHeight+(footerLineCount-1)*options.footerSpacing;}let widthPadding=0;const maxLineWidth=function(line){width=Math.max(width,ctx.measureText(line).width+widthPadding);};ctx.save();ctx.font=titleFont.string;each(tooltip.title,maxLineWidth);ctx.font=bodyFont.string;each(tooltip.beforeBody.concat(tooltip.afterBody),maxLineWidth);widthPadding=options.displayColors?boxWidth+2+options.boxPadding:0;each(body,bodyItem=>{each(bodyItem.before,maxLineWidth);each(bodyItem.lines,maxLineWidth);each(bodyItem.after,maxLineWidth);});widthPadding=0;ctx.font=footerFont.string;each(tooltip.footer,maxLineWidth);ctx.restore();width+=padding.width;return{width,height};}function determineYAlign(chart,size){const{y,height}=size;if(y<height/2){return'top';}else if(y>chart.height-height/2){return'bottom';}return'center';}function doesNotFitWithAlign(xAlign,chart,options,size){const{x,width}=size;const caret=options.caretSize+options.caretPadding;if(xAlign==='left'&&x+width+caret>chart.width){return true;}if(xAlign==='right'&&x-width-caret<0){return true;}}function determineXAlign(chart,options,size,yAlign){const{x,width}=size;const{width:chartWidth,chartArea:{left,right}}=chart;let xAlign='center';if(yAlign==='center'){xAlign=x<=(left+right)/2?'left':'right';}else if(x<=width/2){xAlign='left';}else if(x>=chartWidth-width/2){xAlign='right';}if(doesNotFitWithAlign(xAlign,chart,options,size)){xAlign='center';}return xAlign;}function determineAlignment(chart,options,size){const yAlign=size.yAlign||options.yAlign||determineYAlign(chart,size);return{xAlign:size.xAlign||options.xAlign||determineXAlign(chart,options,size,yAlign),yAlign};}function alignX(size,xAlign){let{x,width}=size;if(xAlign==='right'){x-=width;}else if(xAlign==='center'){x-=width/2;}return x;}function alignY(size,yAlign,paddingAndSize){let{y,height}=size;if(yAlign==='top'){y+=paddingAndSize;}else if(yAlign==='bottom'){y-=height+paddingAndSize;}else{y-=height/2;}return y;}function getBackgroundPoint(options,size,alignment,chart){const{caretSize,caretPadding,cornerRadius}=options;const{xAlign,yAlign}=alignment;const paddingAndSize=caretSize+caretPadding;const{topLeft,topRight,bottomLeft,bottomRight}=toTRBLCorners(cornerRadius);let x=alignX(size,xAlign);const y=alignY(size,yAlign,paddingAndSize);if(yAlign==='center'){if(xAlign==='left'){x+=paddingAndSize;}else if(xAlign==='right'){x-=paddingAndSize;}}else if(xAlign==='left'){x-=Math.max(topLeft,bottomLeft)+caretSize;}else if(xAlign==='right'){x+=Math.max(topRight,bottomRight)+caretSize;}return{x:_limitValue(x,0,chart.width-size.width),y:_limitValue(y,0,chart.height-size.height)};}function getAlignedX(tooltip,align,options){const padding=toPadding(options.padding);return align==='center'?tooltip.x+tooltip.width/2:align==='right'?tooltip.x+tooltip.width-padding.right:tooltip.x+padding.left;}function getBeforeAfterBodyLines(callback){return pushOrConcat([],splitNewlines(callback));}function createTooltipContext(parent,tooltip,tooltipItems){return createContext(parent,{tooltip,tooltipItems,type:'tooltip'});}function overrideCallbacks(callbacks,context){const override=context&&context.dataset&&context.dataset.tooltip&&context.dataset.tooltip.callbacks;return override?callbacks.override(override):callbacks;}const defaultCallbacks={beforeTitle:noop$1,title(tooltipItems){if(tooltipItems.length>0){const item=tooltipItems[0];const labels=item.chart.data.labels;const labelCount=labels?labels.length:0;if(this&&this.options&&this.options.mode==='dataset'){return item.dataset.label||'';}else if(item.label){return item.label;}else if(labelCount>0&&item.dataIndex<labelCount){return labels[item.dataIndex];}}return'';},afterTitle:noop$1,beforeBody:noop$1,beforeLabel:noop$1,label(tooltipItem){if(this&&this.options&&this.options.mode==='dataset'){return tooltipItem.label+': '+tooltipItem.formattedValue||tooltipItem.formattedValue;}let label=tooltipItem.dataset.label||'';if(label){label+=': ';}const value=tooltipItem.formattedValue;if(!isNullOrUndef(value)){label+=value;}return label;},labelColor(tooltipItem){const meta=tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);const options=meta.controller.getStyle(tooltipItem.dataIndex);return{borderColor:options.borderColor,backgroundColor:options.backgroundColor,borderWidth:options.borderWidth,borderDash:options.borderDash,borderDashOffset:options.borderDashOffset,borderRadius:0};},labelTextColor(){return this.options.bodyColor;},labelPointStyle(tooltipItem){const meta=tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);const options=meta.controller.getStyle(tooltipItem.dataIndex);return{pointStyle:options.pointStyle,rotation:options.rotation};},afterLabel:noop$1,afterBody:noop$1,beforeFooter:noop$1,footer:noop$1,afterFooter:noop$1};function invokeCallbackWithFallback(callbacks,name,ctx,arg){const result=callbacks[name].call(ctx,arg);if(typeof result==='undefined'){return defaultCallbacks[name].call(ctx,arg);}return result;}class Tooltip extends Element{static positioners=positioners;constructor(config){super();this.opacity=0;this._active=[];this._eventPosition=undefined;this._size=undefined;this._cachedAnimations=undefined;this._tooltipItems=[];this.$animations=undefined;this.$context=undefined;this.chart=config.chart;this.options=config.options;this.dataPoints=undefined;this.title=undefined;this.beforeBody=undefined;this.body=undefined;this.afterBody=undefined;this.footer=undefined;this.xAlign=undefined;this.yAlign=undefined;this.x=undefined;this.y=undefined;this.height=undefined;this.width=undefined;this.caretX=undefined;this.caretY=undefined;this.labelColors=undefined;this.labelPointStyles=undefined;this.labelTextColors=undefined;}initialize(options){this.options=options;this._cachedAnimations=undefined;this.$context=undefined;}_resolveAnimations(){const cached=this._cachedAnimations;if(cached){return cached;}const chart=this.chart;const options=this.options.setContext(this.getContext());const opts=options.enabled&&chart.options.animation&&options.animations;const animations=new Animations(this.chart,opts);if(opts._cacheable){this._cachedAnimations=Object.freeze(animations);}return animations;}getContext(){return this.$context||(this.$context=createTooltipContext(this.chart.getContext(),this,this._tooltipItems));}getTitle(context,options){const{callbacks}=options;const beforeTitle=invokeCallbackWithFallback(callbacks,'beforeTitle',this,context);const title=invokeCallbackWithFallback(callbacks,'title',this,context);const afterTitle=invokeCallbackWithFallback(callbacks,'afterTitle',this,context);let lines=[];lines=pushOrConcat(lines,splitNewlines(beforeTitle));lines=pushOrConcat(lines,splitNewlines(title));lines=pushOrConcat(lines,splitNewlines(afterTitle));return lines;}getBeforeBody(tooltipItems,options){return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks,'beforeBody',this,tooltipItems));}getBody(tooltipItems,options){const{callbacks}=options;const bodyItems=[];each(tooltipItems,context=>{const bodyItem={before:[],lines:[],after:[]};const scoped=overrideCallbacks(callbacks,context);pushOrConcat(bodyItem.before,splitNewlines(invokeCallbackWithFallback(scoped,'beforeLabel',this,context)));pushOrConcat(bodyItem.lines,invokeCallbackWithFallback(scoped,'label',this,context));pushOrConcat(bodyItem.after,splitNewlines(invokeCallbackWithFallback(scoped,'afterLabel',this,context)));bodyItems.push(bodyItem);});return bodyItems;}getAfterBody(tooltipItems,options){return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks,'afterBody',this,tooltipItems));}getFooter(tooltipItems,options){const{callbacks}=options;const beforeFooter=invokeCallbackWithFallback(callbacks,'beforeFooter',this,tooltipItems);const footer=invokeCallbackWithFallback(callbacks,'footer',this,tooltipItems);const afterFooter=invokeCallbackWithFallback(callbacks,'afterFooter',this,tooltipItems);let lines=[];lines=pushOrConcat(lines,splitNewlines(beforeFooter));lines=pushOrConcat(lines,splitNewlines(footer));lines=pushOrConcat(lines,splitNewlines(afterFooter));return lines;}_createItems(options){const active=this._active;const data=this.chart.data;const labelColors=[];const labelPointStyles=[];const labelTextColors=[];let tooltipItems=[];let i,len;for(i=0,len=active.length;i<len;++i){tooltipItems.push(createTooltipItem(this.chart,active[i]));}if(options.filter){tooltipItems=tooltipItems.filter((element,index,array)=>options.filter(element,index,array,data));}if(options.itemSort){tooltipItems=tooltipItems.sort((a,b)=>options.itemSort(a,b,data));}each(tooltipItems,context=>{const scoped=overrideCallbacks(options.callbacks,context);labelColors.push(invokeCallbackWithFallback(scoped,'labelColor',this,context));labelPointStyles.push(invokeCallbackWithFallback(scoped,'labelPointStyle',this,context));labelTextColors.push(invokeCallbackWithFallback(scoped,'labelTextColor',this,context));});this.labelColors=labelColors;this.labelPointStyles=labelPointStyles;this.labelTextColors=labelTextColors;this.dataPoints=tooltipItems;return tooltipItems;}update(changed,replay){const options=this.options.setContext(this.getContext());const active=this._active;let properties;let tooltipItems=[];if(!active.length){if(this.opacity!==0){properties={opacity:0};}}else{const position=positioners[options.position].call(this,active,this._eventPosition);tooltipItems=this._createItems(options);this.title=this.getTitle(tooltipItems,options);this.beforeBody=this.getBeforeBody(tooltipItems,options);this.body=this.getBody(tooltipItems,options);this.afterBody=this.getAfterBody(tooltipItems,options);this.footer=this.getFooter(tooltipItems,options);const size=this._size=getTooltipSize(this,options);const positionAndSize=Object.assign({},position,size);const alignment=determineAlignment(this.chart,options,positionAndSize);const backgroundPoint=getBackgroundPoint(options,positionAndSize,alignment,this.chart);this.xAlign=alignment.xAlign;this.yAlign=alignment.yAlign;properties={opacity:1,x:backgroundPoint.x,y:backgroundPoint.y,width:size.width,height:size.height,caretX:position.x,caretY:position.y};}this._tooltipItems=tooltipItems;this.$context=undefined;if(properties){this._resolveAnimations().update(this,properties);}if(changed&&options.external){options.external.call(this,{chart:this.chart,tooltip:this,replay});}}drawCaret(tooltipPoint,ctx,size,options){const caretPosition=this.getCaretPosition(tooltipPoint,size,options);ctx.lineTo(caretPosition.x1,caretPosition.y1);ctx.lineTo(caretPosition.x2,caretPosition.y2);ctx.lineTo(caretPosition.x3,caretPosition.y3);}getCaretPosition(tooltipPoint,size,options){const{xAlign,yAlign}=this;const{caretSize,cornerRadius}=options;const{topLeft,topRight,bottomLeft,bottomRight}=toTRBLCorners(cornerRadius);const{x:ptX,y:ptY}=tooltipPoint;const{width,height}=size;let x1,x2,x3,y1,y2,y3;if(yAlign==='center'){y2=ptY+height/2;if(xAlign==='left'){x1=ptX;x2=x1-caretSize;y1=y2+caretSize;y3=y2-caretSize;}else{x1=ptX+width;x2=x1+caretSize;y1=y2-caretSize;y3=y2+caretSize;}x3=x1;}else{if(xAlign==='left'){x2=ptX+Math.max(topLeft,bottomLeft)+caretSize;}else if(xAlign==='right'){x2=ptX+width-Math.max(topRight,bottomRight)-caretSize;}else{x2=this.caretX;}if(yAlign==='top'){y1=ptY;y2=y1-caretSize;x1=x2-caretSize;x3=x2+caretSize;}else{y1=ptY+height;y2=y1+caretSize;x1=x2+caretSize;x3=x2-caretSize;}y3=y1;}return{x1,x2,x3,y1,y2,y3};}drawTitle(pt,ctx,options){const title=this.title;const length=title.length;let titleFont,titleSpacing,i;if(length){const rtlHelper=getRtlAdapter(options.rtl,this.x,this.width);pt.x=getAlignedX(this,options.titleAlign,options);ctx.textAlign=rtlHelper.textAlign(options.titleAlign);ctx.textBaseline='middle';titleFont=toFont(options.titleFont);titleSpacing=options.titleSpacing;ctx.fillStyle=options.titleColor;ctx.font=titleFont.string;for(i=0;i<length;++i){ctx.fillText(title[i],rtlHelper.x(pt.x),pt.y+titleFont.lineHeight/2);pt.y+=titleFont.lineHeight+titleSpacing;if(i+1===length){pt.y+=options.titleMarginBottom-titleSpacing;}}}}_drawColorBox(ctx,pt,i,rtlHelper,options){const labelColor=this.labelColors[i];const labelPointStyle=this.labelPointStyles[i];const{boxHeight,boxWidth}=options;const bodyFont=toFont(options.bodyFont);const colorX=getAlignedX(this,'left',options);const rtlColorX=rtlHelper.x(colorX);const yOffSet=boxHeight<bodyFont.lineHeight?(bodyFont.lineHeight-boxHeight)/2:0;const colorY=pt.y+yOffSet;if(options.usePointStyle){const drawOptions={radius:Math.min(boxWidth,boxHeight)/2,pointStyle:labelPointStyle.pointStyle,rotation:labelPointStyle.rotation,borderWidth:1};const centerX=rtlHelper.leftForLtr(rtlColorX,boxWidth)+boxWidth/2;const centerY=colorY+boxHeight/2;ctx.strokeStyle=options.multiKeyBackground;ctx.fillStyle=options.multiKeyBackground;drawPoint(ctx,drawOptions,centerX,centerY);ctx.strokeStyle=labelColor.borderColor;ctx.fillStyle=labelColor.backgroundColor;drawPoint(ctx,drawOptions,centerX,centerY);}else{ctx.lineWidth=isObject(labelColor.borderWidth)?Math.max(...Object.values(labelColor.borderWidth)):labelColor.borderWidth||1;ctx.strokeStyle=labelColor.borderColor;ctx.setLineDash(labelColor.borderDash||[]);ctx.lineDashOffset=labelColor.borderDashOffset||0;const outerX=rtlHelper.leftForLtr(rtlColorX,boxWidth);const innerX=rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX,1),boxWidth-2);const borderRadius=toTRBLCorners(labelColor.borderRadius);if(Object.values(borderRadius).some(v=>v!==0)){ctx.beginPath();ctx.fillStyle=options.multiKeyBackground;addRoundedRectPath(ctx,{x:outerX,y:colorY,w:boxWidth,h:boxHeight,radius:borderRadius});ctx.fill();ctx.stroke();ctx.fillStyle=labelColor.backgroundColor;ctx.beginPath();addRoundedRectPath(ctx,{x:innerX,y:colorY+1,w:boxWidth-2,h:boxHeight-2,radius:borderRadius});ctx.fill();}else{ctx.fillStyle=options.multiKeyBackground;ctx.fillRect(outerX,colorY,boxWidth,boxHeight);ctx.strokeRect(outerX,colorY,boxWidth,boxHeight);ctx.fillStyle=labelColor.backgroundColor;ctx.fillRect(innerX,colorY+1,boxWidth-2,boxHeight-2);}}ctx.fillStyle=this.labelTextColors[i];}drawBody(pt,ctx,options){const{body}=this;const{bodySpacing,bodyAlign,displayColors,boxHeight,boxWidth,boxPadding}=options;const bodyFont=toFont(options.bodyFont);let bodyLineHeight=bodyFont.lineHeight;let xLinePadding=0;const rtlHelper=getRtlAdapter(options.rtl,this.x,this.width);const fillLineOfText=function(line){ctx.fillText(line,rtlHelper.x(pt.x+xLinePadding),pt.y+bodyLineHeight/2);pt.y+=bodyLineHeight+bodySpacing;};const bodyAlignForCalculation=rtlHelper.textAlign(bodyAlign);let bodyItem,textColor,lines,i,j,ilen,jlen;ctx.textAlign=bodyAlign;ctx.textBaseline='middle';ctx.font=bodyFont.string;pt.x=getAlignedX(this,bodyAlignForCalculation,options);ctx.fillStyle=options.bodyColor;each(this.beforeBody,fillLineOfText);xLinePadding=displayColors&&bodyAlignForCalculation!=='right'?bodyAlign==='center'?boxWidth/2+boxPadding:boxWidth+2+boxPadding:0;for(i=0,ilen=body.length;i<ilen;++i){bodyItem=body[i];textColor=this.labelTextColors[i];ctx.fillStyle=textColor;each(bodyItem.before,fillLineOfText);lines=bodyItem.lines;if(displayColors&&lines.length){this._drawColorBox(ctx,pt,i,rtlHelper,options);bodyLineHeight=Math.max(bodyFont.lineHeight,boxHeight);}for(j=0,jlen=lines.length;j<jlen;++j){fillLineOfText(lines[j]);bodyLineHeight=bodyFont.lineHeight;}each(bodyItem.after,fillLineOfText);}xLinePadding=0;bodyLineHeight=bodyFont.lineHeight;each(this.afterBody,fillLineOfText);pt.y-=bodySpacing;}drawFooter(pt,ctx,options){const footer=this.footer;const length=footer.length;let footerFont,i;if(length){const rtlHelper=getRtlAdapter(options.rtl,this.x,this.width);pt.x=getAlignedX(this,options.footerAlign,options);pt.y+=options.footerMarginTop;ctx.textAlign=rtlHelper.textAlign(options.footerAlign);ctx.textBaseline='middle';footerFont=toFont(options.footerFont);ctx.fillStyle=options.footerColor;ctx.font=footerFont.string;for(i=0;i<length;++i){ctx.fillText(footer[i],rtlHelper.x(pt.x),pt.y+footerFont.lineHeight/2);pt.y+=footerFont.lineHeight+options.footerSpacing;}}}drawBackground(pt,ctx,tooltipSize,options){const{xAlign,yAlign}=this;const{x,y}=pt;const{width,height}=tooltipSize;const{topLeft,topRight,bottomLeft,bottomRight}=toTRBLCorners(options.cornerRadius);ctx.fillStyle=options.backgroundColor;ctx.strokeStyle=options.borderColor;ctx.lineWidth=options.borderWidth;ctx.beginPath();ctx.moveTo(x+topLeft,y);if(yAlign==='top'){this.drawCaret(pt,ctx,tooltipSize,options);}ctx.lineTo(x+width-topRight,y);ctx.quadraticCurveTo(x+width,y,x+width,y+topRight);if(yAlign==='center'&&xAlign==='right'){this.drawCaret(pt,ctx,tooltipSize,options);}ctx.lineTo(x+width,y+height-bottomRight);ctx.quadraticCurveTo(x+width,y+height,x+width-bottomRight,y+height);if(yAlign==='bottom'){this.drawCaret(pt,ctx,tooltipSize,options);}ctx.lineTo(x+bottomLeft,y+height);ctx.quadraticCurveTo(x,y+height,x,y+height-bottomLeft);if(yAlign==='center'&&xAlign==='left'){this.drawCaret(pt,ctx,tooltipSize,options);}ctx.lineTo(x,y+topLeft);ctx.quadraticCurveTo(x,y,x+topLeft,y);ctx.closePath();ctx.fill();if(options.borderWidth>0){ctx.stroke();}}_updateAnimationTarget(options){const chart=this.chart;const anims=this.$animations;const animX=anims&&anims.x;const animY=anims&&anims.y;if(animX||animY){const position=positioners[options.position].call(this,this._active,this._eventPosition);if(!position){return;}const size=this._size=getTooltipSize(this,options);const positionAndSize=Object.assign({},position,this._size);const alignment=determineAlignment(chart,options,positionAndSize);const point=getBackgroundPoint(options,positionAndSize,alignment,chart);if(animX._to!==point.x||animY._to!==point.y){this.xAlign=alignment.xAlign;this.yAlign=alignment.yAlign;this.width=size.width;this.height=size.height;this.caretX=position.x;this.caretY=position.y;this._resolveAnimations().update(this,point);}}}_willRender(){return!!this.opacity;}draw(ctx){const options=this.options.setContext(this.getContext());let opacity=this.opacity;if(!opacity){return;}this._updateAnimationTarget(options);const tooltipSize={width:this.width,height:this.height};const pt={x:this.x,y:this.y};opacity=Math.abs(opacity)<1e-3?0:opacity;const padding=toPadding(options.padding);const hasTooltipContent=this.title.length||this.beforeBody.length||this.body.length||this.afterBody.length||this.footer.length;if(options.enabled&&hasTooltipContent){ctx.save();ctx.globalAlpha=opacity;this.drawBackground(pt,ctx,tooltipSize,options);overrideTextDirection(ctx,options.textDirection);pt.y+=padding.top;this.drawTitle(pt,ctx,options);this.drawBody(pt,ctx,options);this.drawFooter(pt,ctx,options);restoreTextDirection(ctx,options.textDirection);ctx.restore();}}getActiveElements(){return this._active||[];}setActiveElements(activeElements,eventPosition){const lastActive=this._active;const active=activeElements.map(({datasetIndex,index})=>{const meta=this.chart.getDatasetMeta(datasetIndex);if(!meta){throw new Error('Cannot find a dataset at index '+datasetIndex);}return{datasetIndex,element:meta.data[index],index};});const changed=!_elementsEqual(lastActive,active);const positionChanged=this._positionChanged(active,eventPosition);if(changed||positionChanged){this._active=active;this._eventPosition=eventPosition;this._ignoreReplayEvents=true;this.update(true);}}handleEvent(e,replay,inChartArea=true){if(replay&&this._ignoreReplayEvents){return false;}this._ignoreReplayEvents=false;const options=this.options;const lastActive=this._active||[];const active=this._getActiveElements(e,lastActive,replay,inChartArea);const positionChanged=this._positionChanged(active,e);const changed=replay||!_elementsEqual(active,lastActive)||positionChanged;if(changed){this._active=active;if(options.enabled||options.external){this._eventPosition={x:e.x,y:e.y};this.update(true,replay);}}return changed;}_getActiveElements(e,lastActive,replay,inChartArea){const options=this.options;if(e.type==='mouseout'){return[];}if(!inChartArea){return lastActive.filter(i=>this.chart.data.datasets[i.datasetIndex]&&this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index)!==undefined);}const active=this.chart.getElementsAtEventForMode(e,options.mode,options,replay);if(options.reverse){active.reverse();}return active;}_positionChanged(active,e){const{caretX,caretY,options}=this;const position=positioners[options.position].call(this,active,e);return position!==false&&(caretX!==position.x||caretY!==position.y);}}var plugin_tooltip={id:'tooltip',_element:Tooltip,positioners,afterInit(chart,_args,options){if(options){chart.tooltip=new Tooltip({chart,options});}},beforeUpdate(chart,_args,options){if(chart.tooltip){chart.tooltip.initialize(options);}},reset(chart,_args,options){if(chart.tooltip){chart.tooltip.initialize(options);}},afterDraw(chart){const tooltip=chart.tooltip;if(tooltip&&tooltip._willRender()){const args={tooltip};if(chart.notifyPlugins('beforeTooltipDraw',{...args,cancelable:true})===false){return;}tooltip.draw(chart.ctx);chart.notifyPlugins('afterTooltipDraw',args);}},afterEvent(chart,args){if(chart.tooltip){const useFinalPosition=args.replay;if(chart.tooltip.handleEvent(args.event,useFinalPosition,args.inChartArea)){args.changed=true;}}},defaults:{enabled:true,external:null,position:'average',backgroundColor:'rgba(0,0,0,0.8)',titleColor:'#fff',titleFont:{weight:'bold'},titleSpacing:2,titleMarginBottom:6,titleAlign:'left',bodyColor:'#fff',bodySpacing:2,bodyFont:{},bodyAlign:'left',footerColor:'#fff',footerSpacing:2,footerMarginTop:6,footerFont:{weight:'bold'},footerAlign:'left',padding:6,caretPadding:2,caretSize:5,cornerRadius:6,boxHeight:(ctx,opts)=>opts.bodyFont.size,boxWidth:(ctx,opts)=>opts.bodyFont.size,multiKeyBackground:'#fff',displayColors:true,boxPadding:0,borderColor:'rgba(0,0,0,0)',borderWidth:0,animation:{duration:400,easing:'easeOutQuart'},animations:{numbers:{type:'number',properties:['x','y','width','height','caretX','caretY']},opacity:{easing:'linear',duration:200}},callbacks:defaultCallbacks},defaultRoutes:{bodyFont:'font',footerFont:'font',titleFont:'font'},descriptors:{_scriptable:name=>name!=='filter'&&name!=='itemSort'&&name!=='external',_indexable:false,callbacks:{_scriptable:false,_indexable:false},animation:{_fallback:false},animations:{_fallback:'animation'}},additionalOptionScopes:['interaction']};var plugins=/*#__PURE__*/Object.freeze({__proto__:null,Colors:plugin_colors,Decimation:plugin_decimation,Filler:index,Legend:plugin_legend,SubTitle:plugin_subtitle,Title:plugin_title,Tooltip:plugin_tooltip});const addIfString=(labels,raw,index,addedLabels)=>{if(typeof raw==='string'){index=labels.push(raw)-1;addedLabels.unshift({index,label:raw});}else if(isNaN(raw)){index=null;}return index;};function findOrAddLabel(labels,raw,index,addedLabels){const first=labels.indexOf(raw);if(first===-1){return addIfString(labels,raw,index,addedLabels);}const last=labels.lastIndexOf(raw);return first!==last?index:first;}const validIndex=(index,max)=>index===null?null:_limitValue(Math.round(index),0,max);function _getLabelForValue(value){const labels=this.getLabels();if(value>=0&&value<labels.length){return labels[value];}return value;}class CategoryScale extends Scale{static id='category';static defaults={ticks:{callback:_getLabelForValue}};constructor(cfg){super(cfg);this._startValue=undefined;this._valueRange=0;this._addedLabels=[];}init(scaleOptions){const added=this._addedLabels;if(added.length){const labels=this.getLabels();for(const{index,label}of added){if(labels[index]===label){labels.splice(index,1);}}this._addedLabels=[];}super.init(scaleOptions);}parse(raw,index){if(isNullOrUndef(raw)){return null;}const labels=this.getLabels();index=isFinite(index)&&labels[index]===raw?index:findOrAddLabel(labels,raw,valueOrDefault(index,raw),this._addedLabels);return validIndex(index,labels.length-1);}determineDataLimits(){const{minDefined,maxDefined}=this.getUserBounds();let{min,max}=this.getMinMax(true);if(this.options.bounds==='ticks'){if(!minDefined){min=0;}if(!maxDefined){max=this.getLabels().length-1;}}this.min=min;this.max=max;}buildTicks(){const min=this.min;const max=this.max;const offset=this.options.offset;const ticks=[];let labels=this.getLabels();labels=min===0&&max===labels.length-1?labels:labels.slice(min,max+1);this._valueRange=Math.max(labels.length-(offset?0:1),1);this._startValue=this.min-(offset?0.5:0);for(let value=min;value<=max;value++){ticks.push({value});}return ticks;}getLabelForValue(value){return _getLabelForValue.call(this,value);}configure(){super.configure();if(!this.isHorizontal()){this._reversePixels=!this._reversePixels;}}getPixelForValue(value){if(typeof value!=='number'){value=this.parse(value);}return value===null?NaN:this.getPixelForDecimal((value-this._startValue)/this._valueRange);}getPixelForTick(index){const ticks=this.ticks;if(index<0||index>ticks.length-1){return null;}return this.getPixelForValue(ticks[index].value);}getValueForPixel(pixel){return Math.round(this._startValue+this.getDecimalForPixel(pixel)*this._valueRange);}getBasePixel(){return this.bottom;}}function generateTicks$1(generationOptions,dataRange){const ticks=[];const MIN_SPACING=1e-14;const{bounds,step,min,max,precision,count,maxTicks,maxDigits,includeBounds}=generationOptions;const unit=step||1;const maxSpaces=maxTicks-1;const{min:rmin,max:rmax}=dataRange;const minDefined=!isNullOrUndef(min);const maxDefined=!isNullOrUndef(max);const countDefined=!isNullOrUndef(count);const minSpacing=(rmax-rmin)/(maxDigits+1);let spacing=niceNum((rmax-rmin)/maxSpaces/unit)*unit;let factor,niceMin,niceMax,numSpaces;if(spacing<MIN_SPACING&&!minDefined&&!maxDefined){return[{value:rmin},{value:rmax}];}numSpaces=Math.ceil(rmax/spacing)-Math.floor(rmin/spacing);if(numSpaces>maxSpaces){spacing=niceNum(numSpaces*spacing/maxSpaces/unit)*unit;}if(!isNullOrUndef(precision)){factor=Math.pow(10,precision);spacing=Math.ceil(spacing*factor)/factor;}if(bounds==='ticks'){niceMin=Math.floor(rmin/spacing)*spacing;niceMax=Math.ceil(rmax/spacing)*spacing;}else{niceMin=rmin;niceMax=rmax;}if(minDefined&&maxDefined&&step&&almostWhole((max-min)/step,spacing/1000)){numSpaces=Math.round(Math.min((max-min)/spacing,maxTicks));spacing=(max-min)/numSpaces;niceMin=min;niceMax=max;}else if(countDefined){niceMin=minDefined?min:niceMin;niceMax=maxDefined?max:niceMax;numSpaces=count-1;spacing=(niceMax-niceMin)/numSpaces;}else{numSpaces=(niceMax-niceMin)/spacing;if(almostEquals(numSpaces,Math.round(numSpaces),spacing/1000)){numSpaces=Math.round(numSpaces);}else{numSpaces=Math.ceil(numSpaces);}}const decimalPlaces=Math.max(_decimalPlaces(spacing),_decimalPlaces(niceMin));factor=Math.pow(10,isNullOrUndef(precision)?decimalPlaces:precision);niceMin=Math.round(niceMin*factor)/factor;niceMax=Math.round(niceMax*factor)/factor;let j=0;if(minDefined){if(includeBounds&&niceMin!==min){ticks.push({value:min});if(niceMin<min){j++;}if(almostEquals(Math.round((niceMin+j*spacing)*factor)/factor,min,relativeLabelSize(min,minSpacing,generationOptions))){j++;}}else if(niceMin<min){j++;}}for(;j<numSpaces;++j){const tickValue=Math.round((niceMin+j*spacing)*factor)/factor;if(maxDefined&&tickValue>max){break;}ticks.push({value:tickValue});}if(maxDefined&&includeBounds&&niceMax!==max){if(ticks.length&&almostEquals(ticks[ticks.length-1].value,max,relativeLabelSize(max,minSpacing,generationOptions))){ticks[ticks.length-1].value=max;}else{ticks.push({value:max});}}else if(!maxDefined||niceMax===max){ticks.push({value:niceMax});}return ticks;}function relativeLabelSize(value,minSpacing,{horizontal,minRotation}){const rad=toRadians(minRotation);const ratio=(horizontal?Math.sin(rad):Math.cos(rad))||0.001;const length=0.75*minSpacing*(''+value).length;return Math.min(minSpacing/ratio,length);}class LinearScaleBase extends Scale{constructor(cfg){super(cfg);this.start=undefined;this.end=undefined;this._startValue=undefined;this._endValue=undefined;this._valueRange=0;}parse(raw,index){if(isNullOrUndef(raw)){return null;}if((typeof raw==='number'||raw instanceof Number)&&!isFinite(+raw)){return null;}return+raw;}handleTickRangeOptions(){const{beginAtZero}=this.options;const{minDefined,maxDefined}=this.getUserBounds();let{min,max}=this;const setMin=v=>min=minDefined?min:v;const setMax=v=>max=maxDefined?max:v;if(beginAtZero){const minSign=sign$1(min);const maxSign=sign$1(max);if(minSign<0&&maxSign<0){setMax(0);}else if(minSign>0&&maxSign>0){setMin(0);}}if(min===max){let offset=max===0?1:Math.abs(max*0.05);setMax(max+offset);if(!beginAtZero){setMin(min-offset);}}this.min=min;this.max=max;}getTickLimit(){const tickOpts=this.options.ticks;let{maxTicksLimit,stepSize}=tickOpts;let maxTicks;if(stepSize){maxTicks=Math.ceil(this.max/stepSize)-Math.floor(this.min/stepSize)+1;if(maxTicks>1000){void 0;maxTicks=1000;}}else{maxTicks=this.computeTickLimit();maxTicksLimit=maxTicksLimit||11;}if(maxTicksLimit){maxTicks=Math.min(maxTicksLimit,maxTicks);}return maxTicks;}computeTickLimit(){return Number.POSITIVE_INFINITY;}buildTicks(){const opts=this.options;const tickOpts=opts.ticks;let maxTicks=this.getTickLimit();maxTicks=Math.max(2,maxTicks);const numericGeneratorOptions={maxTicks,bounds:opts.bounds,min:opts.min,max:opts.max,precision:tickOpts.precision,step:tickOpts.stepSize,count:tickOpts.count,maxDigits:this._maxDigits(),horizontal:this.isHorizontal(),minRotation:tickOpts.minRotation||0,includeBounds:tickOpts.includeBounds!==false};const dataRange=this._range||this;const ticks=generateTicks$1(numericGeneratorOptions,dataRange);if(opts.bounds==='ticks'){_setMinAndMaxByKey(ticks,this,'value');}if(opts.reverse){ticks.reverse();this.start=this.max;this.end=this.min;}else{this.start=this.min;this.end=this.max;}return ticks;}configure(){const ticks=this.ticks;let start=this.min;let end=this.max;super.configure();if(this.options.offset&&ticks.length){const offset=(end-start)/Math.max(ticks.length-1,1)/2;start-=offset;end+=offset;}this._startValue=start;this._endValue=end;this._valueRange=end-start;}getLabelForValue(value){return formatNumber(value,this.chart.options.locale,this.options.ticks.format);}}class LinearScale extends LinearScaleBase{static id='linear';static defaults={ticks:{callback:Ticks.formatters.numeric}};determineDataLimits(){const{min,max}=this.getMinMax(true);this.min=isNumberFinite(min)?min:0;this.max=isNumberFinite(max)?max:1;this.handleTickRangeOptions();}computeTickLimit(){const horizontal=this.isHorizontal();const length=horizontal?this.width:this.height;const minRotation=toRadians(this.options.ticks.minRotation);const ratio=(horizontal?Math.sin(minRotation):Math.cos(minRotation))||0.001;const tickFont=this._resolveTickFontOptions(0);return Math.ceil(length/Math.min(40,tickFont.lineHeight/ratio));}getPixelForValue(value){return value===null?NaN:this.getPixelForDecimal((value-this._startValue)/this._valueRange);}getValueForPixel(pixel){return this._startValue+this.getDecimalForPixel(pixel)*this._valueRange;}}const log10Floor=v=>Math.floor(log10(v));const changeExponent=(v,m)=>Math.pow(10,log10Floor(v)+m);function isMajor(tickVal){const remain=tickVal/Math.pow(10,log10Floor(tickVal));return remain===1;}function steps(min,max,rangeExp){const rangeStep=Math.pow(10,rangeExp);const start=Math.floor(min/rangeStep);const end=Math.ceil(max/rangeStep);return end-start;}function startExp(min,max){const range=max-min;let rangeExp=log10Floor(range);while(steps(min,max,rangeExp)>10){rangeExp++;}while(steps(min,max,rangeExp)<10){rangeExp--;}return Math.min(rangeExp,log10Floor(min));}function generateTicks(generationOptions,{min,max}){min=finiteOrDefault(generationOptions.min,min);const ticks=[];const minExp=log10Floor(min);let exp=startExp(min,max);let precision=exp<0?Math.pow(10,Math.abs(exp)):1;const stepSize=Math.pow(10,exp);const base=minExp>exp?Math.pow(10,minExp):0;const start=Math.round((min-base)*precision)/precision;const offset=Math.floor((min-base)/stepSize/10)*stepSize*10;let significand=Math.floor((start-offset)/Math.pow(10,exp));let value=finiteOrDefault(generationOptions.min,Math.round((base+offset+significand*Math.pow(10,exp))*precision)/precision);while(value<max){ticks.push({value,major:isMajor(value),significand});if(significand>=10){significand=significand<15?15:20;}else{significand++;}if(significand>=20){exp++;significand=2;precision=exp>=0?1:precision;}value=Math.round((base+offset+significand*Math.pow(10,exp))*precision)/precision;}const lastTick=finiteOrDefault(generationOptions.max,value);ticks.push({value:lastTick,major:isMajor(lastTick),significand});return ticks;}class LogarithmicScale extends Scale{static id='logarithmic';static defaults={ticks:{callback:Ticks.formatters.logarithmic,major:{enabled:true}}};constructor(cfg){super(cfg);this.start=undefined;this.end=undefined;this._startValue=undefined;this._valueRange=0;}parse(raw,index){const value=LinearScaleBase.prototype.parse.apply(this,[raw,index]);if(value===0){this._zero=true;return undefined;}return isNumberFinite(value)&&value>0?value:null;}determineDataLimits(){const{min,max}=this.getMinMax(true);this.min=isNumberFinite(min)?Math.max(0,min):null;this.max=isNumberFinite(max)?Math.max(0,max):null;if(this.options.beginAtZero){this._zero=true;}if(this._zero&&this.min!==this._suggestedMin&&!isNumberFinite(this._userMin)){this.min=min===changeExponent(this.min,0)?changeExponent(this.min,-1):changeExponent(this.min,0);}this.handleTickRangeOptions();}handleTickRangeOptions(){const{minDefined,maxDefined}=this.getUserBounds();let min=this.min;let max=this.max;const setMin=v=>min=minDefined?min:v;const setMax=v=>max=maxDefined?max:v;if(min===max){if(min<=0){setMin(1);setMax(10);}else{setMin(changeExponent(min,-1));setMax(changeExponent(max,1));}}if(min<=0){setMin(changeExponent(max,-1));}if(max<=0){setMax(changeExponent(min,1));}this.min=min;this.max=max;}buildTicks(){const opts=this.options;const generationOptions={min:this._userMin,max:this._userMax};const ticks=generateTicks(generationOptions,this);if(opts.bounds==='ticks'){_setMinAndMaxByKey(ticks,this,'value');}if(opts.reverse){ticks.reverse();this.start=this.max;this.end=this.min;}else{this.start=this.min;this.end=this.max;}return ticks;}getLabelForValue(value){return value===undefined?'0':formatNumber(value,this.chart.options.locale,this.options.ticks.format);}configure(){const start=this.min;super.configure();this._startValue=log10(start);this._valueRange=log10(this.max)-log10(start);}getPixelForValue(value){if(value===undefined||value===0){value=this.min;}if(value===null||isNaN(value)){return NaN;}return this.getPixelForDecimal(value===this.min?0:(log10(value)-this._startValue)/this._valueRange);}getValueForPixel(pixel){const decimal=this.getDecimalForPixel(pixel);return Math.pow(10,this._startValue+decimal*this._valueRange);}}function getTickBackdropHeight(opts){const tickOpts=opts.ticks;if(tickOpts.display&&opts.display){const padding=toPadding(tickOpts.backdropPadding);return valueOrDefault(tickOpts.font&&tickOpts.font.size,defaults.font.size)+padding.height;}return 0;}function measureLabelSize(ctx,font,label){label=isArray(label)?label:[label];return{w:_longestText(ctx,font.string,label),h:label.length*font.lineHeight};}function determineLimits(angle,pos,size,min,max){if(angle===min||angle===max){return{start:pos-size/2,end:pos+size/2};}else if(angle<min||angle>max){return{start:pos-size,end:pos};}return{start:pos,end:pos+size};}function fitWithPointLabels(scale){const orig={l:scale.left+scale._padding.left,r:scale.right-scale._padding.right,t:scale.top+scale._padding.top,b:scale.bottom-scale._padding.bottom};const limits=Object.assign({},orig);const labelSizes=[];const padding=[];const valueCount=scale._pointLabels.length;const pointLabelOpts=scale.options.pointLabels;const additionalAngle=pointLabelOpts.centerPointLabels?PI/valueCount:0;for(let i=0;i<valueCount;i++){const opts=pointLabelOpts.setContext(scale.getPointLabelContext(i));padding[i]=opts.padding;const pointPosition=scale.getPointPosition(i,scale.drawingArea+padding[i],additionalAngle);const plFont=toFont(opts.font);const textSize=measureLabelSize(scale.ctx,plFont,scale._pointLabels[i]);labelSizes[i]=textSize;const angleRadians=_normalizeAngle(scale.getIndexAngle(i)+additionalAngle);const angle=Math.round(toDegrees(angleRadians));const hLimits=determineLimits(angle,pointPosition.x,textSize.w,0,180);const vLimits=determineLimits(angle,pointPosition.y,textSize.h,90,270);updateLimits(limits,orig,angleRadians,hLimits,vLimits);}scale.setCenterPoint(orig.l-limits.l,limits.r-orig.r,orig.t-limits.t,limits.b-orig.b);scale._pointLabelItems=buildPointLabelItems(scale,labelSizes,padding);}function updateLimits(limits,orig,angle,hLimits,vLimits){const sin=Math.abs(Math.sin(angle));const cos=Math.abs(Math.cos(angle));let x=0;let y=0;if(hLimits.start<orig.l){x=(orig.l-hLimits.start)/sin;limits.l=Math.min(limits.l,orig.l-x);}else if(hLimits.end>orig.r){x=(hLimits.end-orig.r)/sin;limits.r=Math.max(limits.r,orig.r+x);}if(vLimits.start<orig.t){y=(orig.t-vLimits.start)/cos;limits.t=Math.min(limits.t,orig.t-y);}else if(vLimits.end>orig.b){y=(vLimits.end-orig.b)/cos;limits.b=Math.max(limits.b,orig.b+y);}}function createPointLabelItem(scale,index,itemOpts){const outerDistance=scale.drawingArea;const{extra,additionalAngle,padding,size}=itemOpts;const pointLabelPosition=scale.getPointPosition(index,outerDistance+extra+padding,additionalAngle);const angle=Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle+HALF_PI)));const y=yForAngle(pointLabelPosition.y,size.h,angle);const textAlign=getTextAlignForAngle(angle);const left=leftForTextAlign(pointLabelPosition.x,size.w,textAlign);return{visible:true,x:pointLabelPosition.x,y,textAlign,left,top:y,right:left+size.w,bottom:y+size.h};}function isNotOverlapped(item,area){if(!area){return true;}const{left,top,right,bottom}=item;const apexesInArea=_isPointInArea({x:left,y:top},area)||_isPointInArea({x:left,y:bottom},area)||_isPointInArea({x:right,y:top},area)||_isPointInArea({x:right,y:bottom},area);return!apexesInArea;}function buildPointLabelItems(scale,labelSizes,padding){const items=[];const valueCount=scale._pointLabels.length;const opts=scale.options;const{centerPointLabels,display}=opts.pointLabels;const itemOpts={extra:getTickBackdropHeight(opts)/2,additionalAngle:centerPointLabels?PI/valueCount:0};let area;for(let i=0;i<valueCount;i++){itemOpts.padding=padding[i];itemOpts.size=labelSizes[i];const item=createPointLabelItem(scale,i,itemOpts);items.push(item);if(display==='auto'){item.visible=isNotOverlapped(item,area);if(item.visible){area=item;}}}return items;}function getTextAlignForAngle(angle){if(angle===0||angle===180){return'center';}else if(angle<180){return'left';}return'right';}function leftForTextAlign(x,w,align){if(align==='right'){x-=w;}else if(align==='center'){x-=w/2;}return x;}function yForAngle(y,h,angle){if(angle===90||angle===270){y-=h/2;}else if(angle>270||angle<90){y-=h;}return y;}function drawPointLabelBox(ctx,opts,item){const{left,top,right,bottom}=item;const{backdropColor}=opts;if(!isNullOrUndef(backdropColor)){const borderRadius=toTRBLCorners(opts.borderRadius);const padding=toPadding(opts.backdropPadding);ctx.fillStyle=backdropColor;const backdropLeft=left-padding.left;const backdropTop=top-padding.top;const backdropWidth=right-left+padding.width;const backdropHeight=bottom-top+padding.height;if(Object.values(borderRadius).some(v=>v!==0)){ctx.beginPath();addRoundedRectPath(ctx,{x:backdropLeft,y:backdropTop,w:backdropWidth,h:backdropHeight,radius:borderRadius});ctx.fill();}else{ctx.fillRect(backdropLeft,backdropTop,backdropWidth,backdropHeight);}}}function drawPointLabels(scale,labelCount){const{ctx,options:{pointLabels}}=scale;for(let i=labelCount-1;i>=0;i--){const item=scale._pointLabelItems[i];if(!item.visible){continue;}const optsAtIndex=pointLabels.setContext(scale.getPointLabelContext(i));drawPointLabelBox(ctx,optsAtIndex,item);const plFont=toFont(optsAtIndex.font);const{x,y,textAlign}=item;renderText(ctx,scale._pointLabels[i],x,y+plFont.lineHeight/2,plFont,{color:optsAtIndex.color,textAlign:textAlign,textBaseline:'middle'});}}function pathRadiusLine(scale,radius,circular,labelCount){const{ctx}=scale;if(circular){ctx.arc(scale.xCenter,scale.yCenter,radius,0,TAU);}else{let pointPosition=scale.getPointPosition(0,radius);ctx.moveTo(pointPosition.x,pointPosition.y);for(let i=1;i<labelCount;i++){pointPosition=scale.getPointPosition(i,radius);ctx.lineTo(pointPosition.x,pointPosition.y);}}}function drawRadiusLine(scale,gridLineOpts,radius,labelCount,borderOpts){const ctx=scale.ctx;const circular=gridLineOpts.circular;const{color,lineWidth}=gridLineOpts;if(!circular&&!labelCount||!color||!lineWidth||radius<0){return;}ctx.save();ctx.strokeStyle=color;ctx.lineWidth=lineWidth;ctx.setLineDash(borderOpts.dash||[]);ctx.lineDashOffset=borderOpts.dashOffset;ctx.beginPath();pathRadiusLine(scale,radius,circular,labelCount);ctx.closePath();ctx.stroke();ctx.restore();}function createPointLabelContext(parent,index,label){return createContext(parent,{label,index,type:'pointLabel'});}class RadialLinearScale extends LinearScaleBase{static id='radialLinear';static defaults={display:true,animate:true,position:'chartArea',angleLines:{display:true,lineWidth:1,borderDash:[],borderDashOffset:0.0},grid:{circular:false},startAngle:0,ticks:{showLabelBackdrop:true,callback:Ticks.formatters.numeric},pointLabels:{backdropColor:undefined,backdropPadding:2,display:true,font:{size:10},callback(label){return label;},padding:5,centerPointLabels:false}};static defaultRoutes={'angleLines.color':'borderColor','pointLabels.color':'color','ticks.color':'color'};static descriptors={angleLines:{_fallback:'grid'}};constructor(cfg){super(cfg);this.xCenter=undefined;this.yCenter=undefined;this.drawingArea=undefined;this._pointLabels=[];this._pointLabelItems=[];}setDimensions(){const padding=this._padding=toPadding(getTickBackdropHeight(this.options)/2);const w=this.width=this.maxWidth-padding.width;const h=this.height=this.maxHeight-padding.height;this.xCenter=Math.floor(this.left+w/2+padding.left);this.yCenter=Math.floor(this.top+h/2+padding.top);this.drawingArea=Math.floor(Math.min(w,h)/2);}determineDataLimits(){const{min,max}=this.getMinMax(false);this.min=isNumberFinite(min)&&!isNaN(min)?min:0;this.max=isNumberFinite(max)&&!isNaN(max)?max:0;this.handleTickRangeOptions();}computeTickLimit(){return Math.ceil(this.drawingArea/getTickBackdropHeight(this.options));}generateTickLabels(ticks){LinearScaleBase.prototype.generateTickLabels.call(this,ticks);this._pointLabels=this.getLabels().map((value,index)=>{const label=callback(this.options.pointLabels.callback,[value,index],this);return label||label===0?label:'';}).filter((v,i)=>this.chart.getDataVisibility(i));}fit(){const opts=this.options;if(opts.display&&opts.pointLabels.display){fitWithPointLabels(this);}else{this.setCenterPoint(0,0,0,0);}}setCenterPoint(leftMovement,rightMovement,topMovement,bottomMovement){this.xCenter+=Math.floor((leftMovement-rightMovement)/2);this.yCenter+=Math.floor((topMovement-bottomMovement)/2);this.drawingArea-=Math.min(this.drawingArea/2,Math.max(leftMovement,rightMovement,topMovement,bottomMovement));}getIndexAngle(index){const angleMultiplier=TAU/(this._pointLabels.length||1);const startAngle=this.options.startAngle||0;return _normalizeAngle(index*angleMultiplier+toRadians(startAngle));}getDistanceFromCenterForValue(value){if(isNullOrUndef(value)){return NaN;}const scalingFactor=this.drawingArea/(this.max-this.min);if(this.options.reverse){return(this.max-value)*scalingFactor;}return(value-this.min)*scalingFactor;}getValueForDistanceFromCenter(distance){if(isNullOrUndef(distance)){return NaN;}const scaledDistance=distance/(this.drawingArea/(this.max-this.min));return this.options.reverse?this.max-scaledDistance:this.min+scaledDistance;}getPointLabelContext(index){const pointLabels=this._pointLabels||[];if(index>=0&&index<pointLabels.length){const pointLabel=pointLabels[index];return createPointLabelContext(this.getContext(),index,pointLabel);}}getPointPosition(index,distanceFromCenter,additionalAngle=0){const angle=this.getIndexAngle(index)-HALF_PI+additionalAngle;return{x:Math.cos(angle)*distanceFromCenter+this.xCenter,y:Math.sin(angle)*distanceFromCenter+this.yCenter,angle};}getPointPositionForValue(index,value){return this.getPointPosition(index,this.getDistanceFromCenterForValue(value));}getBasePosition(index){return this.getPointPositionForValue(index||0,this.getBaseValue());}getPointLabelPosition(index){const{left,top,right,bottom}=this._pointLabelItems[index];return{left,top,right,bottom};}drawBackground(){const{backgroundColor,grid:{circular}}=this.options;if(backgroundColor){const ctx=this.ctx;ctx.save();ctx.beginPath();pathRadiusLine(this,this.getDistanceFromCenterForValue(this._endValue),circular,this._pointLabels.length);ctx.closePath();ctx.fillStyle=backgroundColor;ctx.fill();ctx.restore();}}drawGrid(){const ctx=this.ctx;const opts=this.options;const{angleLines,grid,border}=opts;const labelCount=this._pointLabels.length;let i,offset,position;if(opts.pointLabels.display){drawPointLabels(this,labelCount);}if(grid.display){this.ticks.forEach((tick,index)=>{if(index!==0||index===0&&this.min<0){offset=this.getDistanceFromCenterForValue(tick.value);const context=this.getContext(index);const optsAtIndex=grid.setContext(context);const optsAtIndexBorder=border.setContext(context);drawRadiusLine(this,optsAtIndex,offset,labelCount,optsAtIndexBorder);}});}if(angleLines.display){ctx.save();for(i=labelCount-1;i>=0;i--){const optsAtIndex=angleLines.setContext(this.getPointLabelContext(i));const{color,lineWidth}=optsAtIndex;if(!lineWidth||!color){continue;}ctx.lineWidth=lineWidth;ctx.strokeStyle=color;ctx.setLineDash(optsAtIndex.borderDash);ctx.lineDashOffset=optsAtIndex.borderDashOffset;offset=this.getDistanceFromCenterForValue(opts.reverse?this.min:this.max);position=this.getPointPosition(i,offset);ctx.beginPath();ctx.moveTo(this.xCenter,this.yCenter);ctx.lineTo(position.x,position.y);ctx.stroke();}ctx.restore();}}drawBorder(){}drawLabels(){const ctx=this.ctx;const opts=this.options;const tickOpts=opts.ticks;if(!tickOpts.display){return;}const startAngle=this.getIndexAngle(0);let offset,width;ctx.save();ctx.translate(this.xCenter,this.yCenter);ctx.rotate(startAngle);ctx.textAlign='center';ctx.textBaseline='middle';this.ticks.forEach((tick,index)=>{if(index===0&&this.min>=0&&!opts.reverse){return;}const optsAtIndex=tickOpts.setContext(this.getContext(index));const tickFont=toFont(optsAtIndex.font);offset=this.getDistanceFromCenterForValue(this.ticks[index].value);if(optsAtIndex.showLabelBackdrop){ctx.font=tickFont.string;width=ctx.measureText(tick.label).width;ctx.fillStyle=optsAtIndex.backdropColor;const padding=toPadding(optsAtIndex.backdropPadding);ctx.fillRect(-width/2-padding.left,-offset-tickFont.size/2-padding.top,width+padding.width,tickFont.size+padding.height);}renderText(ctx,tick.label,0,-offset,tickFont,{color:optsAtIndex.color,strokeColor:optsAtIndex.textStrokeColor,strokeWidth:optsAtIndex.textStrokeWidth});});ctx.restore();}drawTitle(){}}const INTERVALS={millisecond:{common:true,size:1,steps:1000},second:{common:true,size:1000,steps:60},minute:{common:true,size:60000,steps:60},hour:{common:true,size:3600000,steps:24},day:{common:true,size:86400000,steps:30},week:{common:false,size:604800000,steps:4},month:{common:true,size:2.628e9,steps:12},quarter:{common:false,size:7.884e9,steps:4},year:{common:true,size:3.154e10}};const UNITS=/* #__PURE__ */Object.keys(INTERVALS);function sorter(a,b){return a-b;}function parse$1(scale,input){if(isNullOrUndef(input)){return null;}const adapter=scale._adapter;const{parser,round,isoWeekday}=scale._parseOpts;let value=input;if(typeof parser==='function'){value=parser(value);}if(!isNumberFinite(value)){value=typeof parser==='string'?adapter.parse(value,parser):adapter.parse(value);}if(value===null){return null;}if(round){value=round==='week'&&(isNumber$1(isoWeekday)||isoWeekday===true)?adapter.startOf(value,'isoWeek',isoWeekday):adapter.startOf(value,round);}return+value;}function determineUnitForAutoTicks(minUnit,min,max,capacity){const ilen=UNITS.length;for(let i=UNITS.indexOf(minUnit);i<ilen-1;++i){const interval=INTERVALS[UNITS[i]];const factor=interval.steps?interval.steps:Number.MAX_SAFE_INTEGER;if(interval.common&&Math.ceil((max-min)/(factor*interval.size))<=capacity){return UNITS[i];}}return UNITS[ilen-1];}function determineUnitForFormatting(scale,numTicks,minUnit,min,max){for(let i=UNITS.length-1;i>=UNITS.indexOf(minUnit);i--){const unit=UNITS[i];if(INTERVALS[unit].common&&scale._adapter.diff(max,min,unit)>=numTicks-1){return unit;}}return UNITS[minUnit?UNITS.indexOf(minUnit):0];}function determineMajorUnit(unit){for(let i=UNITS.indexOf(unit)+1,ilen=UNITS.length;i<ilen;++i){if(INTERVALS[UNITS[i]].common){return UNITS[i];}}}function addTick(ticks,time,timestamps){if(!timestamps){ticks[time]=true;}else if(timestamps.length){const{lo,hi}=_lookup(timestamps,time);const timestamp=timestamps[lo]>=time?timestamps[lo]:timestamps[hi];ticks[timestamp]=true;}}function setMajorTicks(scale,ticks,map,majorUnit){const adapter=scale._adapter;const first=+adapter.startOf(ticks[0].value,majorUnit);const last=ticks[ticks.length-1].value;let major,index;for(major=first;major<=last;major=+adapter.add(major,1,majorUnit)){index=map[major];if(index>=0){ticks[index].major=true;}}return ticks;}function ticksFromTimestamps(scale,values,majorUnit){const ticks=[];const map={};const ilen=values.length;let i,value;for(i=0;i<ilen;++i){value=values[i];map[value]=i;ticks.push({value,major:false});}return ilen===0||!majorUnit?ticks:setMajorTicks(scale,ticks,map,majorUnit);}class TimeScale extends Scale{static id='time';static defaults={bounds:'data',adapters:{},time:{parser:false,unit:false,round:false,isoWeekday:false,minUnit:'millisecond',displayFormats:{}},ticks:{source:'auto',callback:false,major:{enabled:false}}};constructor(props){super(props);this._cache={data:[],labels:[],all:[]};this._unit='day';this._majorUnit=undefined;this._offsets={};this._normalized=false;this._parseOpts=undefined;}init(scaleOpts,opts={}){const time=scaleOpts.time||(scaleOpts.time={});const adapter=this._adapter=new adapters._date(scaleOpts.adapters.date);adapter.init(opts);mergeIf(time.displayFormats,adapter.formats());this._parseOpts={parser:time.parser,round:time.round,isoWeekday:time.isoWeekday};super.init(scaleOpts);this._normalized=opts.normalized;}parse(raw,index){if(raw===undefined){return null;}return parse$1(this,raw);}beforeLayout(){super.beforeLayout();this._cache={data:[],labels:[],all:[]};}determineDataLimits(){const options=this.options;const adapter=this._adapter;const unit=options.time.unit||'day';let{min,max,minDefined,maxDefined}=this.getUserBounds();function _applyBounds(bounds){if(!minDefined&&!isNaN(bounds.min)){min=Math.min(min,bounds.min);}if(!maxDefined&&!isNaN(bounds.max)){max=Math.max(max,bounds.max);}}if(!minDefined||!maxDefined){_applyBounds(this._getLabelBounds());if(options.bounds!=='ticks'||options.ticks.source!=='labels'){_applyBounds(this.getMinMax(false));}}min=isNumberFinite(min)&&!isNaN(min)?min:+adapter.startOf(Date.now(),unit);max=isNumberFinite(max)&&!isNaN(max)?max:+adapter.endOf(Date.now(),unit)+1;this.min=Math.min(min,max-1);this.max=Math.max(min+1,max);}_getLabelBounds(){const arr=this.getLabelTimestamps();let min=Number.POSITIVE_INFINITY;let max=Number.NEGATIVE_INFINITY;if(arr.length){min=arr[0];max=arr[arr.length-1];}return{min,max};}buildTicks(){const options=this.options;const timeOpts=options.time;const tickOpts=options.ticks;const timestamps=tickOpts.source==='labels'?this.getLabelTimestamps():this._generate();if(options.bounds==='ticks'&&timestamps.length){this.min=this._userMin||timestamps[0];this.max=this._userMax||timestamps[timestamps.length-1];}const min=this.min;const max=this.max;const ticks=_filterBetween(timestamps,min,max);this._unit=timeOpts.unit||(tickOpts.autoSkip?determineUnitForAutoTicks(timeOpts.minUnit,this.min,this.max,this._getLabelCapacity(min)):determineUnitForFormatting(this,ticks.length,timeOpts.minUnit,this.min,this.max));this._majorUnit=!tickOpts.major.enabled||this._unit==='year'?undefined:determineMajorUnit(this._unit);this.initOffsets(timestamps);if(options.reverse){ticks.reverse();}return ticksFromTimestamps(this,ticks,this._majorUnit);}afterAutoSkip(){if(this.options.offsetAfterAutoskip){this.initOffsets(this.ticks.map(tick=>+tick.value));}}initOffsets(timestamps=[]){let start=0;let end=0;let first,last;if(this.options.offset&&timestamps.length){first=this.getDecimalForValue(timestamps[0]);if(timestamps.length===1){start=1-first;}else{start=(this.getDecimalForValue(timestamps[1])-first)/2;}last=this.getDecimalForValue(timestamps[timestamps.length-1]);if(timestamps.length===1){end=last;}else{end=(last-this.getDecimalForValue(timestamps[timestamps.length-2]))/2;}}const limit=timestamps.length<3?0.5:0.25;start=_limitValue(start,0,limit);end=_limitValue(end,0,limit);this._offsets={start,end,factor:1/(start+1+end)};}_generate(){const adapter=this._adapter;const min=this.min;const max=this.max;const options=this.options;const timeOpts=options.time;const minor=timeOpts.unit||determineUnitForAutoTicks(timeOpts.minUnit,min,max,this._getLabelCapacity(min));const stepSize=valueOrDefault(options.ticks.stepSize,1);const weekday=minor==='week'?timeOpts.isoWeekday:false;const hasWeekday=isNumber$1(weekday)||weekday===true;const ticks={};let first=min;let time,count;if(hasWeekday){first=+adapter.startOf(first,'isoWeek',weekday);}first=+adapter.startOf(first,hasWeekday?'day':minor);if(adapter.diff(max,min,minor)>100000*stepSize){throw new Error(min+' and '+max+' are too far apart with stepSize of '+stepSize+' '+minor);}const timestamps=options.ticks.source==='data'&&this.getDataTimestamps();for(time=first,count=0;time<max;time=+adapter.add(time,stepSize,minor),count++){addTick(ticks,time,timestamps);}if(time===max||options.bounds==='ticks'||count===1){addTick(ticks,time,timestamps);}return Object.keys(ticks).sort(sorter).map(x=>+x);}getLabelForValue(value){const adapter=this._adapter;const timeOpts=this.options.time;if(timeOpts.tooltipFormat){return adapter.format(value,timeOpts.tooltipFormat);}return adapter.format(value,timeOpts.displayFormats.datetime);}format(value,format){const options=this.options;const formats=options.time.displayFormats;const unit=this._unit;const fmt=format||formats[unit];return this._adapter.format(value,fmt);}_tickFormatFunction(time,index,ticks,format){const options=this.options;const formatter=options.ticks.callback;if(formatter){return callback(formatter,[time,index,ticks],this);}const formats=options.time.displayFormats;const unit=this._unit;const majorUnit=this._majorUnit;const minorFormat=unit&&formats[unit];const majorFormat=majorUnit&&formats[majorUnit];const tick=ticks[index];const major=majorUnit&&majorFormat&&tick&&tick.major;return this._adapter.format(time,format||(major?majorFormat:minorFormat));}generateTickLabels(ticks){let i,ilen,tick;for(i=0,ilen=ticks.length;i<ilen;++i){tick=ticks[i];tick.label=this._tickFormatFunction(tick.value,i,ticks);}}getDecimalForValue(value){return value===null?NaN:(value-this.min)/(this.max-this.min);}getPixelForValue(value){const offsets=this._offsets;const pos=this.getDecimalForValue(value);return this.getPixelForDecimal((offsets.start+pos)*offsets.factor);}getValueForPixel(pixel){const offsets=this._offsets;const pos=this.getDecimalForPixel(pixel)/offsets.factor-offsets.end;return this.min+pos*(this.max-this.min);}_getLabelSize(label){const ticksOpts=this.options.ticks;const tickLabelWidth=this.ctx.measureText(label).width;const angle=toRadians(this.isHorizontal()?ticksOpts.maxRotation:ticksOpts.minRotation);const cosRotation=Math.cos(angle);const sinRotation=Math.sin(angle);const tickFontSize=this._resolveTickFontOptions(0).size;return{w:tickLabelWidth*cosRotation+tickFontSize*sinRotation,h:tickLabelWidth*sinRotation+tickFontSize*cosRotation};}_getLabelCapacity(exampleTime){const timeOpts=this.options.time;const displayFormats=timeOpts.displayFormats;const format=displayFormats[timeOpts.unit]||displayFormats.millisecond;const exampleLabel=this._tickFormatFunction(exampleTime,0,ticksFromTimestamps(this,[exampleTime],this._majorUnit),format);const size=this._getLabelSize(exampleLabel);const capacity=Math.floor(this.isHorizontal()?this.width/size.w:this.height/size.h)-1;return capacity>0?capacity:1;}getDataTimestamps(){let timestamps=this._cache.data||[];let i,ilen;if(timestamps.length){return timestamps;}const metas=this.getMatchingVisibleMetas();if(this._normalized&&metas.length){return this._cache.data=metas[0].controller.getAllParsedValues(this);}for(i=0,ilen=metas.length;i<ilen;++i){timestamps=timestamps.concat(metas[i].controller.getAllParsedValues(this));}return this._cache.data=this.normalize(timestamps);}getLabelTimestamps(){const timestamps=this._cache.labels||[];let i,ilen;if(timestamps.length){return timestamps;}const labels=this.getLabels();for(i=0,ilen=labels.length;i<ilen;++i){timestamps.push(parse$1(this,labels[i]));}return this._cache.labels=this._normalized?timestamps:this.normalize(timestamps);}normalize(values){return _arrayUnique(values.sort(sorter));}}function interpolate(table,val,reverse){let lo=0;let hi=table.length-1;let prevSource,nextSource,prevTarget,nextTarget;if(reverse){if(val>=table[lo].pos&&val<=table[hi].pos){({lo,hi}=_lookupByKey(table,'pos',val));}({pos:prevSource,time:prevTarget}=table[lo]);({pos:nextSource,time:nextTarget}=table[hi]);}else{if(val>=table[lo].time&&val<=table[hi].time){({lo,hi}=_lookupByKey(table,'time',val));}({time:prevSource,pos:prevTarget}=table[lo]);({time:nextSource,pos:nextTarget}=table[hi]);}const span=nextSource-prevSource;return span?prevTarget+(nextTarget-prevTarget)*(val-prevSource)/span:prevTarget;}class TimeSeriesScale extends TimeScale{static id='timeseries';static defaults=TimeScale.defaults;constructor(props){super(props);this._table=[];this._minPos=undefined;this._tableRange=undefined;}initOffsets(){const timestamps=this._getTimestampsForTable();const table=this._table=this.buildLookupTable(timestamps);this._minPos=interpolate(table,this.min);this._tableRange=interpolate(table,this.max)-this._minPos;super.initOffsets(timestamps);}buildLookupTable(timestamps){const{min,max}=this;const items=[];const table=[];let i,ilen,prev,curr,next;for(i=0,ilen=timestamps.length;i<ilen;++i){curr=timestamps[i];if(curr>=min&&curr<=max){items.push(curr);}}if(items.length<2){return[{time:min,pos:0},{time:max,pos:1}];}for(i=0,ilen=items.length;i<ilen;++i){next=items[i+1];prev=items[i-1];curr=items[i];if(Math.round((next+prev)/2)!==curr){table.push({time:curr,pos:i/(ilen-1)});}}return table;}_generate(){const min=this.min;const max=this.max;let timestamps=super.getDataTimestamps();if(!timestamps.includes(min)||!timestamps.length){timestamps.splice(0,0,min);}if(!timestamps.includes(max)||timestamps.length===1){timestamps.push(max);}return timestamps.sort((a,b)=>a-b);}_getTimestampsForTable(){let timestamps=this._cache.all||[];if(timestamps.length){return timestamps;}const data=this.getDataTimestamps();const label=this.getLabelTimestamps();if(data.length&&label.length){timestamps=this.normalize(data.concat(label));}else{timestamps=data.length?data:label;}timestamps=this._cache.all=timestamps;return timestamps;}getDecimalForValue(value){return(interpolate(this._table,value)-this._minPos)/this._tableRange;}getValueForPixel(pixel){const offsets=this._offsets;const decimal=this.getDecimalForPixel(pixel)/offsets.factor-offsets.end;return interpolate(this._table,decimal*this._tableRange+this._minPos,true);}}var scales=/*#__PURE__*/Object.freeze({__proto__:null,CategoryScale:CategoryScale,LinearScale:LinearScale,LogarithmicScale:LogarithmicScale,RadialLinearScale:RadialLinearScale,TimeScale:TimeScale,TimeSeriesScale:TimeSeriesScale});const registerables=[controllers,elements,plugins,scales];Chart.register(...registerables);// these aren't really private, but nor are they really useful to document
/**
   * @private
   */class LuxonError extends Error{}/**
   * @private
   */class InvalidDateTimeError extends LuxonError{constructor(reason){super(`Invalid DateTime: ${reason.toMessage()}`);}}/**
   * @private
   */class InvalidIntervalError extends LuxonError{constructor(reason){super(`Invalid Interval: ${reason.toMessage()}`);}}/**
   * @private
   */class InvalidDurationError extends LuxonError{constructor(reason){super(`Invalid Duration: ${reason.toMessage()}`);}}/**
   * @private
   */class ConflictingSpecificationError extends LuxonError{}/**
   * @private
   */class InvalidUnitError extends LuxonError{constructor(unit){super(`Invalid unit ${unit}`);}}/**
   * @private
   */class InvalidArgumentError extends LuxonError{}/**
   * @private
   */class ZoneIsAbstractError extends LuxonError{constructor(){super("Zone is an abstract class");}}/**
   * @private
   */const n="numeric",s="short",l="long";const DATE_SHORT={year:n,month:n,day:n};const DATE_MED={year:n,month:s,day:n};const DATE_MED_WITH_WEEKDAY={year:n,month:s,day:n,weekday:s};const DATE_FULL={year:n,month:l,day:n};const DATE_HUGE={year:n,month:l,day:n,weekday:l};const TIME_SIMPLE={hour:n,minute:n};const TIME_WITH_SECONDS={hour:n,minute:n,second:n};const TIME_WITH_SHORT_OFFSET={hour:n,minute:n,second:n,timeZoneName:s};const TIME_WITH_LONG_OFFSET={hour:n,minute:n,second:n,timeZoneName:l};const TIME_24_SIMPLE={hour:n,minute:n,hourCycle:"h23"};const TIME_24_WITH_SECONDS={hour:n,minute:n,second:n,hourCycle:"h23"};const TIME_24_WITH_SHORT_OFFSET={hour:n,minute:n,second:n,hourCycle:"h23",timeZoneName:s};const TIME_24_WITH_LONG_OFFSET={hour:n,minute:n,second:n,hourCycle:"h23",timeZoneName:l};const DATETIME_SHORT={year:n,month:n,day:n,hour:n,minute:n};const DATETIME_SHORT_WITH_SECONDS={year:n,month:n,day:n,hour:n,minute:n,second:n};const DATETIME_MED={year:n,month:s,day:n,hour:n,minute:n};const DATETIME_MED_WITH_SECONDS={year:n,month:s,day:n,hour:n,minute:n,second:n};const DATETIME_MED_WITH_WEEKDAY={year:n,month:s,day:n,weekday:s,hour:n,minute:n};const DATETIME_FULL={year:n,month:l,day:n,hour:n,minute:n,timeZoneName:s};const DATETIME_FULL_WITH_SECONDS={year:n,month:l,day:n,hour:n,minute:n,second:n,timeZoneName:s};const DATETIME_HUGE={year:n,month:l,day:n,weekday:l,hour:n,minute:n,timeZoneName:l};const DATETIME_HUGE_WITH_SECONDS={year:n,month:l,day:n,weekday:l,hour:n,minute:n,second:n,timeZoneName:l};/**
   * @interface
   */class Zone{/**
     * The type of zone
     * @abstract
     * @type {string}
     */get type(){throw new ZoneIsAbstractError();}/**
     * The name of this zone.
     * @abstract
     * @type {string}
     */get name(){throw new ZoneIsAbstractError();}/**
     * The IANA name of this zone.
     * Defaults to `name` if not overwritten by a subclass.
     * @abstract
     * @type {string}
     */get ianaName(){return this.name;}/**
     * Returns whether the offset is known to be fixed for the whole year.
     * @abstract
     * @type {boolean}
     */get isUniversal(){throw new ZoneIsAbstractError();}/**
     * Returns the offset's common name (such as EST) at the specified timestamp
     * @abstract
     * @param {number} ts - Epoch milliseconds for which to get the name
     * @param {Object} opts - Options to affect the format
     * @param {string} opts.format - What style of offset to return. Accepts 'long' or 'short'.
     * @param {string} opts.locale - What locale to return the offset name in.
     * @return {string}
     */offsetName(ts,opts){throw new ZoneIsAbstractError();}/**
     * Returns the offset's value as a string
     * @abstract
     * @param {number} ts - Epoch milliseconds for which to get the offset
     * @param {string} format - What style of offset to return.
     *                          Accepts 'narrow', 'short', or 'techie'. Returning '+6', '+06:00', or '+0600' respectively
     * @return {string}
     */formatOffset(ts,format){throw new ZoneIsAbstractError();}/**
     * Return the offset in minutes for this zone at the specified timestamp.
     * @abstract
     * @param {number} ts - Epoch milliseconds for which to compute the offset
     * @return {number}
     */offset(ts){throw new ZoneIsAbstractError();}/**
     * Return whether this Zone is equal to another zone
     * @abstract
     * @param {Zone} otherZone - the zone to compare
     * @return {boolean}
     */equals(otherZone){throw new ZoneIsAbstractError();}/**
     * Return whether this Zone is valid.
     * @abstract
     * @type {boolean}
     */get isValid(){throw new ZoneIsAbstractError();}}let singleton$1=null;/**
   * Represents the local zone for this JavaScript environment.
   * @implements {Zone}
   */class SystemZone extends Zone{/**
     * Get a singleton instance of the local zone
     * @return {SystemZone}
     */static get instance(){if(singleton$1===null){singleton$1=new SystemZone();}return singleton$1;}/** @override **/get type(){return"system";}/** @override **/get name(){return new Intl.DateTimeFormat().resolvedOptions().timeZone;}/** @override **/get isUniversal(){return false;}/** @override **/offsetName(ts,{format,locale}){return parseZoneInfo(ts,format,locale);}/** @override **/formatOffset(ts,format){return formatOffset(this.offset(ts),format);}/** @override **/offset(ts){return-new Date(ts).getTimezoneOffset();}/** @override **/equals(otherZone){return otherZone.type==="system";}/** @override **/get isValid(){return true;}}const dtfCache=new Map();function makeDTF(zoneName){let dtf=dtfCache.get(zoneName);if(dtf===undefined){dtf=new Intl.DateTimeFormat("en-US",{hour12:false,timeZone:zoneName,year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit",era:"short"});dtfCache.set(zoneName,dtf);}return dtf;}const typeToPos={year:0,month:1,day:2,era:3,hour:4,minute:5,second:6};function hackyOffset(dtf,date){const formatted=dtf.format(date).replace(/\u200E/g,""),parsed=/(\d+)\/(\d+)\/(\d+) (AD|BC),? (\d+):(\d+):(\d+)/.exec(formatted),[,fMonth,fDay,fYear,fadOrBc,fHour,fMinute,fSecond]=parsed;return[fYear,fMonth,fDay,fadOrBc,fHour,fMinute,fSecond];}function partsOffset(dtf,date){const formatted=dtf.formatToParts(date);const filled=[];for(let i=0;i<formatted.length;i++){const{type,value}=formatted[i];const pos=typeToPos[type];if(type==="era"){filled[pos]=value;}else if(!isUndefined(pos)){filled[pos]=parseInt(value,10);}}return filled;}const ianaZoneCache=new Map();/**
   * A zone identified by an IANA identifier, like America/New_York
   * @implements {Zone}
   */class IANAZone extends Zone{/**
     * @param {string} name - Zone name
     * @return {IANAZone}
     */static create(name){let zone=ianaZoneCache.get(name);if(zone===undefined){ianaZoneCache.set(name,zone=new IANAZone(name));}return zone;}/**
     * Reset local caches. Should only be necessary in testing scenarios.
     * @return {void}
     */static resetCache(){ianaZoneCache.clear();dtfCache.clear();}/**
     * Returns whether the provided string is a valid specifier. This only checks the string's format, not that the specifier identifies a known zone; see isValidZone for that.
     * @param {string} s - The string to check validity on
     * @example IANAZone.isValidSpecifier("America/New_York") //=> true
     * @example IANAZone.isValidSpecifier("Sport~~blorp") //=> false
     * @deprecated For backward compatibility, this forwards to isValidZone, better use `isValidZone()` directly instead.
     * @return {boolean}
     */static isValidSpecifier(s){return this.isValidZone(s);}/**
     * Returns whether the provided string identifies a real zone
     * @param {string} zone - The string to check
     * @example IANAZone.isValidZone("America/New_York") //=> true
     * @example IANAZone.isValidZone("Fantasia/Castle") //=> false
     * @example IANAZone.isValidZone("Sport~~blorp") //=> false
     * @return {boolean}
     */static isValidZone(zone){if(!zone){return false;}try{new Intl.DateTimeFormat("en-US",{timeZone:zone}).format();return true;}catch(e){return false;}}constructor(name){super();/** @private **/this.zoneName=name;/** @private **/this.valid=IANAZone.isValidZone(name);}/**
     * The type of zone. `iana` for all instances of `IANAZone`.
     * @override
     * @type {string}
     */get type(){return"iana";}/**
     * The name of this zone (i.e. the IANA zone name).
     * @override
     * @type {string}
     */get name(){return this.zoneName;}/**
     * Returns whether the offset is known to be fixed for the whole year:
     * Always returns false for all IANA zones.
     * @override
     * @type {boolean}
     */get isUniversal(){return false;}/**
     * Returns the offset's common name (such as EST) at the specified timestamp
     * @override
     * @param {number} ts - Epoch milliseconds for which to get the name
     * @param {Object} opts - Options to affect the format
     * @param {string} opts.format - What style of offset to return. Accepts 'long' or 'short'.
     * @param {string} opts.locale - What locale to return the offset name in.
     * @return {string}
     */offsetName(ts,{format,locale}){return parseZoneInfo(ts,format,locale,this.name);}/**
     * Returns the offset's value as a string
     * @override
     * @param {number} ts - Epoch milliseconds for which to get the offset
     * @param {string} format - What style of offset to return.
     *                          Accepts 'narrow', 'short', or 'techie'. Returning '+6', '+06:00', or '+0600' respectively
     * @return {string}
     */formatOffset(ts,format){return formatOffset(this.offset(ts),format);}/**
     * Return the offset in minutes for this zone at the specified timestamp.
     * @override
     * @param {number} ts - Epoch milliseconds for which to compute the offset
     * @return {number}
     */offset(ts){if(!this.valid)return NaN;const date=new Date(ts);if(isNaN(date))return NaN;const dtf=makeDTF(this.name);let[year,month,day,adOrBc,hour,minute,second]=dtf.formatToParts?partsOffset(dtf,date):hackyOffset(dtf,date);if(adOrBc==="BC"){year=-Math.abs(year)+1;}// because we're using hour12 and https://bugs.chromium.org/p/chromium/issues/detail?id=1025564&can=2&q=%2224%3A00%22%20datetimeformat
const adjustedHour=hour===24?0:hour;const asUTC=objToLocalTS({year,month,day,hour:adjustedHour,minute,second,millisecond:0});let asTS=+date;const over=asTS%1000;asTS-=over>=0?over:1000+over;return(asUTC-asTS)/(60*1000);}/**
     * Return whether this Zone is equal to another zone
     * @override
     * @param {Zone} otherZone - the zone to compare
     * @return {boolean}
     */equals(otherZone){return otherZone.type==="iana"&&otherZone.name===this.name;}/**
     * Return whether this Zone is valid.
     * @override
     * @type {boolean}
     */get isValid(){return this.valid;}}// todo - remap caching
let intlLFCache={};function getCachedLF(locString,opts={}){const key=JSON.stringify([locString,opts]);let dtf=intlLFCache[key];if(!dtf){dtf=new Intl.ListFormat(locString,opts);intlLFCache[key]=dtf;}return dtf;}const intlDTCache=new Map();function getCachedDTF(locString,opts={}){const key=JSON.stringify([locString,opts]);let dtf=intlDTCache.get(key);if(dtf===undefined){dtf=new Intl.DateTimeFormat(locString,opts);intlDTCache.set(key,dtf);}return dtf;}const intlNumCache=new Map();function getCachedINF(locString,opts={}){const key=JSON.stringify([locString,opts]);let inf=intlNumCache.get(key);if(inf===undefined){inf=new Intl.NumberFormat(locString,opts);intlNumCache.set(key,inf);}return inf;}const intlRelCache=new Map();function getCachedRTF(locString,opts={}){const{base,...cacheKeyOpts}=opts;// exclude `base` from the options
const key=JSON.stringify([locString,cacheKeyOpts]);let inf=intlRelCache.get(key);if(inf===undefined){inf=new Intl.RelativeTimeFormat(locString,opts);intlRelCache.set(key,inf);}return inf;}let sysLocaleCache=null;function systemLocale(){if(sysLocaleCache){return sysLocaleCache;}else{sysLocaleCache=new Intl.DateTimeFormat().resolvedOptions().locale;return sysLocaleCache;}}const intlResolvedOptionsCache=new Map();function getCachedIntResolvedOptions(locString){let opts=intlResolvedOptionsCache.get(locString);if(opts===undefined){opts=new Intl.DateTimeFormat(locString).resolvedOptions();intlResolvedOptionsCache.set(locString,opts);}return opts;}const weekInfoCache=new Map();function getCachedWeekInfo(locString){let data=weekInfoCache.get(locString);if(!data){const locale=new Intl.Locale(locString);// browsers currently implement this as a property, but spec says it should be a getter function
data="getWeekInfo"in locale?locale.getWeekInfo():locale.weekInfo;// minimalDays was removed from WeekInfo: https://github.com/tc39/proposal-intl-locale-info/issues/86
if(!("minimalDays"in data)){data={...fallbackWeekSettings,...data};}weekInfoCache.set(locString,data);}return data;}function parseLocaleString(localeStr){// I really want to avoid writing a BCP 47 parser
// see, e.g. https://github.com/wooorm/bcp-47
// Instead, we'll do this:
// a) if the string has no -u extensions, just leave it alone
// b) if it does, use Intl to resolve everything
// c) if Intl fails, try again without the -u
// private subtags and unicode subtags have ordering requirements,
// and we're not properly parsing this, so just strip out the
// private ones if they exist.
const xIndex=localeStr.indexOf("-x-");if(xIndex!==-1){localeStr=localeStr.substring(0,xIndex);}const uIndex=localeStr.indexOf("-u-");if(uIndex===-1){return[localeStr];}else{let options;let selectedStr;try{options=getCachedDTF(localeStr).resolvedOptions();selectedStr=localeStr;}catch(e){const smaller=localeStr.substring(0,uIndex);options=getCachedDTF(smaller).resolvedOptions();selectedStr=smaller;}const{numberingSystem,calendar}=options;return[selectedStr,numberingSystem,calendar];}}function intlConfigString(localeStr,numberingSystem,outputCalendar){if(outputCalendar||numberingSystem){if(!localeStr.includes("-u-")){localeStr+="-u";}if(outputCalendar){localeStr+=`-ca-${outputCalendar}`;}if(numberingSystem){localeStr+=`-nu-${numberingSystem}`;}return localeStr;}else{return localeStr;}}function mapMonths(f){const ms=[];for(let i=1;i<=12;i++){const dt=DateTime.utc(2009,i,1);ms.push(f(dt));}return ms;}function mapWeekdays(f){const ms=[];for(let i=1;i<=7;i++){const dt=DateTime.utc(2016,11,13+i);ms.push(f(dt));}return ms;}function listStuff(loc,length,englishFn,intlFn){const mode=loc.listingMode();if(mode==="error"){return null;}else if(mode==="en"){return englishFn(length);}else{return intlFn(length);}}function supportsFastNumbers(loc){if(loc.numberingSystem&&loc.numberingSystem!=="latn"){return false;}else{return loc.numberingSystem==="latn"||!loc.locale||loc.locale.startsWith("en")||getCachedIntResolvedOptions(loc.locale).numberingSystem==="latn";}}/**
   * @private
   */class PolyNumberFormatter{constructor(intl,forceSimple,opts){this.padTo=opts.padTo||0;this.floor=opts.floor||false;const{padTo,floor,...otherOpts}=opts;if(!forceSimple||Object.keys(otherOpts).length>0){const intlOpts={useGrouping:false,...opts};if(opts.padTo>0)intlOpts.minimumIntegerDigits=opts.padTo;this.inf=getCachedINF(intl,intlOpts);}}format(i){if(this.inf){const fixed=this.floor?Math.floor(i):i;return this.inf.format(fixed);}else{// to match the browser's numberformatter defaults
const fixed=this.floor?Math.floor(i):roundTo(i,3);return padStart(fixed,this.padTo);}}}/**
   * @private
   */class PolyDateFormatter{constructor(dt,intl,opts){this.opts=opts;this.originalZone=undefined;let z=undefined;if(this.opts.timeZone){// Don't apply any workarounds if a timeZone is explicitly provided in opts
this.dt=dt;}else if(dt.zone.type==="fixed"){// UTC-8 or Etc/UTC-8 are not part of tzdata, only Etc/GMT+8 and the like.
// That is why fixed-offset TZ is set to that unless it is:
// 1. Representing offset 0 when UTC is used to maintain previous behavior and does not become GMT.
// 2. Unsupported by the browser:
//    - some do not support Etc/
//    - < Etc/GMT-14, > Etc/GMT+12, and 30-minute or 45-minute offsets are not part of tzdata
const gmtOffset=-1*(dt.offset/60);const offsetZ=gmtOffset>=0?`Etc/GMT+${gmtOffset}`:`Etc/GMT${gmtOffset}`;if(dt.offset!==0&&IANAZone.create(offsetZ).valid){z=offsetZ;this.dt=dt;}else{// Not all fixed-offset zones like Etc/+4:30 are present in tzdata so
// we manually apply the offset and substitute the zone as needed.
z="UTC";this.dt=dt.offset===0?dt:dt.setZone("UTC").plus({minutes:dt.offset});this.originalZone=dt.zone;}}else if(dt.zone.type==="system"){this.dt=dt;}else if(dt.zone.type==="iana"){this.dt=dt;z=dt.zone.name;}else{// Custom zones can have any offset / offsetName so we just manually
// apply the offset and substitute the zone as needed.
z="UTC";this.dt=dt.setZone("UTC").plus({minutes:dt.offset});this.originalZone=dt.zone;}const intlOpts={...this.opts};intlOpts.timeZone=intlOpts.timeZone||z;this.dtf=getCachedDTF(intl,intlOpts);}format(){if(this.originalZone){// If we have to substitute in the actual zone name, we have to use
// formatToParts so that the timezone can be replaced.
return this.formatToParts().map(({value})=>value).join("");}return this.dtf.format(this.dt.toJSDate());}formatToParts(){const parts=this.dtf.formatToParts(this.dt.toJSDate());if(this.originalZone){return parts.map(part=>{if(part.type==="timeZoneName"){const offsetName=this.originalZone.offsetName(this.dt.ts,{locale:this.dt.locale,format:this.opts.timeZoneName});return{...part,value:offsetName};}else{return part;}});}return parts;}resolvedOptions(){return this.dtf.resolvedOptions();}}/**
   * @private
   */class PolyRelFormatter{constructor(intl,isEnglish,opts){this.opts={style:"long",...opts};if(!isEnglish&&hasRelative()){this.rtf=getCachedRTF(intl,opts);}}format(count,unit){if(this.rtf){return this.rtf.format(count,unit);}else{return formatRelativeTime(unit,count,this.opts.numeric,this.opts.style!=="long");}}formatToParts(count,unit){if(this.rtf){return this.rtf.formatToParts(count,unit);}else{return[];}}}const fallbackWeekSettings={firstDay:1,minimalDays:4,weekend:[6,7]};/**
   * @private
   */class Locale{static fromOpts(opts){return Locale.create(opts.locale,opts.numberingSystem,opts.outputCalendar,opts.weekSettings,opts.defaultToEN);}static create(locale,numberingSystem,outputCalendar,weekSettings,defaultToEN=false){const specifiedLocale=locale||Settings.defaultLocale;// the system locale is useful for human-readable strings but annoying for parsing/formatting known formats
const localeR=specifiedLocale||(defaultToEN?"en-US":systemLocale());const numberingSystemR=numberingSystem||Settings.defaultNumberingSystem;const outputCalendarR=outputCalendar||Settings.defaultOutputCalendar;const weekSettingsR=validateWeekSettings(weekSettings)||Settings.defaultWeekSettings;return new Locale(localeR,numberingSystemR,outputCalendarR,weekSettingsR,specifiedLocale);}static resetCache(){sysLocaleCache=null;intlDTCache.clear();intlNumCache.clear();intlRelCache.clear();intlResolvedOptionsCache.clear();weekInfoCache.clear();}static fromObject({locale,numberingSystem,outputCalendar,weekSettings}={}){return Locale.create(locale,numberingSystem,outputCalendar,weekSettings);}constructor(locale,numbering,outputCalendar,weekSettings,specifiedLocale){const[parsedLocale,parsedNumberingSystem,parsedOutputCalendar]=parseLocaleString(locale);this.locale=parsedLocale;this.numberingSystem=numbering||parsedNumberingSystem||null;this.outputCalendar=outputCalendar||parsedOutputCalendar||null;this.weekSettings=weekSettings;this.intl=intlConfigString(this.locale,this.numberingSystem,this.outputCalendar);this.weekdaysCache={format:{},standalone:{}};this.monthsCache={format:{},standalone:{}};this.meridiemCache=null;this.eraCache={};this.specifiedLocale=specifiedLocale;this.fastNumbersCached=null;}get fastNumbers(){if(this.fastNumbersCached==null){this.fastNumbersCached=supportsFastNumbers(this);}return this.fastNumbersCached;}listingMode(){const isActuallyEn=this.isEnglish();const hasNoWeirdness=(this.numberingSystem===null||this.numberingSystem==="latn")&&(this.outputCalendar===null||this.outputCalendar==="gregory");return isActuallyEn&&hasNoWeirdness?"en":"intl";}clone(alts){if(!alts||Object.getOwnPropertyNames(alts).length===0){return this;}else{return Locale.create(alts.locale||this.specifiedLocale,alts.numberingSystem||this.numberingSystem,alts.outputCalendar||this.outputCalendar,validateWeekSettings(alts.weekSettings)||this.weekSettings,alts.defaultToEN||false);}}redefaultToEN(alts={}){return this.clone({...alts,defaultToEN:true});}redefaultToSystem(alts={}){return this.clone({...alts,defaultToEN:false});}months(length,format=false){return listStuff(this,length,months,()=>{const intl=format?{month:length,day:"numeric"}:{month:length},formatStr=format?"format":"standalone";if(!this.monthsCache[formatStr][length]){this.monthsCache[formatStr][length]=mapMonths(dt=>this.extract(dt,intl,"month"));}return this.monthsCache[formatStr][length];});}weekdays(length,format=false){return listStuff(this,length,weekdays,()=>{const intl=format?{weekday:length,year:"numeric",month:"long",day:"numeric"}:{weekday:length},formatStr=format?"format":"standalone";if(!this.weekdaysCache[formatStr][length]){this.weekdaysCache[formatStr][length]=mapWeekdays(dt=>this.extract(dt,intl,"weekday"));}return this.weekdaysCache[formatStr][length];});}meridiems(){return listStuff(this,undefined,()=>meridiems,()=>{// In theory there could be aribitrary day periods. We're gonna assume there are exactly two
// for AM and PM. This is probably wrong, but it's makes parsing way easier.
if(!this.meridiemCache){const intl={hour:"numeric",hourCycle:"h12"};this.meridiemCache=[DateTime.utc(2016,11,13,9),DateTime.utc(2016,11,13,19)].map(dt=>this.extract(dt,intl,"dayperiod"));}return this.meridiemCache;});}eras(length){return listStuff(this,length,eras,()=>{const intl={era:length};// This is problematic. Different calendars are going to define eras totally differently. What I need is the minimum set of dates
// to definitely enumerate them.
if(!this.eraCache[length]){this.eraCache[length]=[DateTime.utc(-40,1,1),DateTime.utc(2017,1,1)].map(dt=>this.extract(dt,intl,"era"));}return this.eraCache[length];});}extract(dt,intlOpts,field){const df=this.dtFormatter(dt,intlOpts),results=df.formatToParts(),matching=results.find(m=>m.type.toLowerCase()===field);return matching?matching.value:null;}numberFormatter(opts={}){// this forcesimple option is never used (the only caller short-circuits on it, but it seems safer to leave)
// (in contrast, the rest of the condition is used heavily)
return new PolyNumberFormatter(this.intl,opts.forceSimple||this.fastNumbers,opts);}dtFormatter(dt,intlOpts={}){return new PolyDateFormatter(dt,this.intl,intlOpts);}relFormatter(opts={}){return new PolyRelFormatter(this.intl,this.isEnglish(),opts);}listFormatter(opts={}){return getCachedLF(this.intl,opts);}isEnglish(){return this.locale==="en"||this.locale.toLowerCase()==="en-us"||getCachedIntResolvedOptions(this.intl).locale.startsWith("en-us");}getWeekSettings(){if(this.weekSettings){return this.weekSettings;}else if(!hasLocaleWeekInfo()){return fallbackWeekSettings;}else{return getCachedWeekInfo(this.locale);}}getStartOfWeek(){return this.getWeekSettings().firstDay;}getMinDaysInFirstWeek(){return this.getWeekSettings().minimalDays;}getWeekendDays(){return this.getWeekSettings().weekend;}equals(other){return this.locale===other.locale&&this.numberingSystem===other.numberingSystem&&this.outputCalendar===other.outputCalendar;}toString(){return`Locale(${this.locale}, ${this.numberingSystem}, ${this.outputCalendar})`;}}let singleton=null;/**
   * A zone with a fixed offset (meaning no DST)
   * @implements {Zone}
   */class FixedOffsetZone extends Zone{/**
     * Get a singleton instance of UTC
     * @return {FixedOffsetZone}
     */static get utcInstance(){if(singleton===null){singleton=new FixedOffsetZone(0);}return singleton;}/**
     * Get an instance with a specified offset
     * @param {number} offset - The offset in minutes
     * @return {FixedOffsetZone}
     */static instance(offset){return offset===0?FixedOffsetZone.utcInstance:new FixedOffsetZone(offset);}/**
     * Get an instance of FixedOffsetZone from a UTC offset string, like "UTC+6"
     * @param {string} s - The offset string to parse
     * @example FixedOffsetZone.parseSpecifier("UTC+6")
     * @example FixedOffsetZone.parseSpecifier("UTC+06")
     * @example FixedOffsetZone.parseSpecifier("UTC-6:00")
     * @return {FixedOffsetZone}
     */static parseSpecifier(s){if(s){const r=s.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i);if(r){return new FixedOffsetZone(signedOffset(r[1],r[2]));}}return null;}constructor(offset){super();/** @private **/this.fixed=offset;}/**
     * The type of zone. `fixed` for all instances of `FixedOffsetZone`.
     * @override
     * @type {string}
     */get type(){return"fixed";}/**
     * The name of this zone.
     * All fixed zones' names always start with "UTC" (plus optional offset)
     * @override
     * @type {string}
     */get name(){return this.fixed===0?"UTC":`UTC${formatOffset(this.fixed,"narrow")}`;}/**
     * The IANA name of this zone, i.e. `Etc/UTC` or `Etc/GMT+/-nn`
     *
     * @override
     * @type {string}
     */get ianaName(){if(this.fixed===0){return"Etc/UTC";}else{return`Etc/GMT${formatOffset(-this.fixed,"narrow")}`;}}/**
     * Returns the offset's common name at the specified timestamp.
     *
     * For fixed offset zones this equals to the zone name.
     * @override
     */offsetName(){return this.name;}/**
     * Returns the offset's value as a string
     * @override
     * @param {number} ts - Epoch milliseconds for which to get the offset
     * @param {string} format - What style of offset to return.
     *                          Accepts 'narrow', 'short', or 'techie'. Returning '+6', '+06:00', or '+0600' respectively
     * @return {string}
     */formatOffset(ts,format){return formatOffset(this.fixed,format);}/**
     * Returns whether the offset is known to be fixed for the whole year:
     * Always returns true for all fixed offset zones.
     * @override
     * @type {boolean}
     */get isUniversal(){return true;}/**
     * Return the offset in minutes for this zone at the specified timestamp.
     *
     * For fixed offset zones, this is constant and does not depend on a timestamp.
     * @override
     * @return {number}
     */offset(){return this.fixed;}/**
     * Return whether this Zone is equal to another zone (i.e. also fixed and same offset)
     * @override
     * @param {Zone} otherZone - the zone to compare
     * @return {boolean}
     */equals(otherZone){return otherZone.type==="fixed"&&otherZone.fixed===this.fixed;}/**
     * Return whether this Zone is valid:
     * All fixed offset zones are valid.
     * @override
     * @type {boolean}
     */get isValid(){return true;}}/**
   * A zone that failed to parse. You should never need to instantiate this.
   * @implements {Zone}
   */class InvalidZone extends Zone{constructor(zoneName){super();/**  @private */this.zoneName=zoneName;}/** @override **/get type(){return"invalid";}/** @override **/get name(){return this.zoneName;}/** @override **/get isUniversal(){return false;}/** @override **/offsetName(){return null;}/** @override **/formatOffset(){return"";}/** @override **/offset(){return NaN;}/** @override **/equals(){return false;}/** @override **/get isValid(){return false;}}/**
   * @private
   */function normalizeZone(input,defaultZone){if(isUndefined(input)||input===null){return defaultZone;}else if(input instanceof Zone){return input;}else if(isString(input)){const lowered=input.toLowerCase();if(lowered==="default")return defaultZone;else if(lowered==="local"||lowered==="system")return SystemZone.instance;else if(lowered==="utc"||lowered==="gmt")return FixedOffsetZone.utcInstance;else return FixedOffsetZone.parseSpecifier(lowered)||IANAZone.create(input);}else if(isNumber(input)){return FixedOffsetZone.instance(input);}else if(typeof input==="object"&&"offset"in input&&typeof input.offset==="function"){// This is dumb, but the instanceof check above doesn't seem to really work
// so we're duck checking it
return input;}else{return new InvalidZone(input);}}const numberingSystems={arab:"[\u0660-\u0669]",arabext:"[\u06F0-\u06F9]",bali:"[\u1B50-\u1B59]",beng:"[\u09E6-\u09EF]",deva:"[\u0966-\u096F]",fullwide:"[\uFF10-\uFF19]",gujr:"[\u0AE6-\u0AEF]",hanidec:"[〇|一|二|三|四|五|六|七|八|九]",khmr:"[\u17E0-\u17E9]",knda:"[\u0CE6-\u0CEF]",laoo:"[\u0ED0-\u0ED9]",limb:"[\u1946-\u194F]",mlym:"[\u0D66-\u0D6F]",mong:"[\u1810-\u1819]",mymr:"[\u1040-\u1049]",orya:"[\u0B66-\u0B6F]",tamldec:"[\u0BE6-\u0BEF]",telu:"[\u0C66-\u0C6F]",thai:"[\u0E50-\u0E59]",tibt:"[\u0F20-\u0F29]",latn:"\\d"};const numberingSystemsUTF16={arab:[1632,1641],arabext:[1776,1785],bali:[6992,7001],beng:[2534,2543],deva:[2406,2415],fullwide:[65296,65303],gujr:[2790,2799],khmr:[6112,6121],knda:[3302,3311],laoo:[3792,3801],limb:[6470,6479],mlym:[3430,3439],mong:[6160,6169],mymr:[4160,4169],orya:[2918,2927],tamldec:[3046,3055],telu:[3174,3183],thai:[3664,3673],tibt:[3872,3881]};const hanidecChars=numberingSystems.hanidec.replace(/[\[|\]]/g,"").split("");function parseDigits(str){let value=parseInt(str,10);if(isNaN(value)){value="";for(let i=0;i<str.length;i++){const code=str.charCodeAt(i);if(str[i].search(numberingSystems.hanidec)!==-1){value+=hanidecChars.indexOf(str[i]);}else{for(const key in numberingSystemsUTF16){const[min,max]=numberingSystemsUTF16[key];if(code>=min&&code<=max){value+=code-min;}}}}return parseInt(value,10);}else{return value;}}// cache of {numberingSystem: {append: regex}}
const digitRegexCache=new Map();function resetDigitRegexCache(){digitRegexCache.clear();}function digitRegex({numberingSystem},append=""){const ns=numberingSystem||"latn";let appendCache=digitRegexCache.get(ns);if(appendCache===undefined){appendCache=new Map();digitRegexCache.set(ns,appendCache);}let regex=appendCache.get(append);if(regex===undefined){regex=new RegExp(`${numberingSystems[ns]}${append}`);appendCache.set(append,regex);}return regex;}let now=()=>Date.now(),defaultZone="system",defaultLocale=null,defaultNumberingSystem=null,defaultOutputCalendar=null,twoDigitCutoffYear=60,throwOnInvalid,defaultWeekSettings=null;/**
   * Settings contains static getters and setters that control Luxon's overall behavior. Luxon is a simple library with few options, but the ones it does have live here.
   */class Settings{/**
     * Get the callback for returning the current timestamp.
     * @type {function}
     */static get now(){return now;}/**
     * Set the callback for returning the current timestamp.
     * The function should return a number, which will be interpreted as an Epoch millisecond count
     * @type {function}
     * @example Settings.now = () => Date.now() + 3000 // pretend it is 3 seconds in the future
     * @example Settings.now = () => 0 // always pretend it's Jan 1, 1970 at midnight in UTC time
     */static set now(n){now=n;}/**
     * Set the default time zone to create DateTimes in. Does not affect existing instances.
     * Use the value "system" to reset this value to the system's time zone.
     * @type {string}
     */static set defaultZone(zone){defaultZone=zone;}/**
     * Get the default time zone object currently used to create DateTimes. Does not affect existing instances.
     * The default value is the system's time zone (the one set on the machine that runs this code).
     * @type {Zone}
     */static get defaultZone(){return normalizeZone(defaultZone,SystemZone.instance);}/**
     * Get the default locale to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */static get defaultLocale(){return defaultLocale;}/**
     * Set the default locale to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */static set defaultLocale(locale){defaultLocale=locale;}/**
     * Get the default numbering system to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */static get defaultNumberingSystem(){return defaultNumberingSystem;}/**
     * Set the default numbering system to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */static set defaultNumberingSystem(numberingSystem){defaultNumberingSystem=numberingSystem;}/**
     * Get the default output calendar to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */static get defaultOutputCalendar(){return defaultOutputCalendar;}/**
     * Set the default output calendar to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */static set defaultOutputCalendar(outputCalendar){defaultOutputCalendar=outputCalendar;}/**
     * @typedef {Object} WeekSettings
     * @property {number} firstDay
     * @property {number} minimalDays
     * @property {number[]} weekend
     */ /**
     * @return {WeekSettings|null}
     */static get defaultWeekSettings(){return defaultWeekSettings;}/**
     * Allows overriding the default locale week settings, i.e. the start of the week, the weekend and
     * how many days are required in the first week of a year.
     * Does not affect existing instances.
     *
     * @param {WeekSettings|null} weekSettings
     */static set defaultWeekSettings(weekSettings){defaultWeekSettings=validateWeekSettings(weekSettings);}/**
     * Get the cutoff year for whether a 2-digit year string is interpreted in the current or previous century. Numbers higher than the cutoff will be considered to mean 19xx and numbers lower or equal to the cutoff will be considered 20xx.
     * @type {number}
     */static get twoDigitCutoffYear(){return twoDigitCutoffYear;}/**
     * Set the cutoff year for whether a 2-digit year string is interpreted in the current or previous century. Numbers higher than the cutoff will be considered to mean 19xx and numbers lower or equal to the cutoff will be considered 20xx.
     * @type {number}
     * @example Settings.twoDigitCutoffYear = 0 // all 'yy' are interpreted as 20th century
     * @example Settings.twoDigitCutoffYear = 99 // all 'yy' are interpreted as 21st century
     * @example Settings.twoDigitCutoffYear = 50 // '49' -> 2049; '50' -> 1950
     * @example Settings.twoDigitCutoffYear = 1950 // interpreted as 50
     * @example Settings.twoDigitCutoffYear = 2050 // ALSO interpreted as 50
     */static set twoDigitCutoffYear(cutoffYear){twoDigitCutoffYear=cutoffYear%100;}/**
     * Get whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals
     * @type {boolean}
     */static get throwOnInvalid(){return throwOnInvalid;}/**
     * Set whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals
     * @type {boolean}
     */static set throwOnInvalid(t){throwOnInvalid=t;}/**
     * Reset Luxon's global caches. Should only be necessary in testing scenarios.
     * @return {void}
     */static resetCaches(){Locale.resetCache();IANAZone.resetCache();DateTime.resetCache();resetDigitRegexCache();}}class Invalid{constructor(reason,explanation){this.reason=reason;this.explanation=explanation;}toMessage(){if(this.explanation){return`${this.reason}: ${this.explanation}`;}else{return this.reason;}}}const nonLeapLadder=[0,31,59,90,120,151,181,212,243,273,304,334],leapLadder=[0,31,60,91,121,152,182,213,244,274,305,335];function unitOutOfRange(unit,value){return new Invalid("unit out of range",`you specified ${value} (of type ${typeof value}) as a ${unit}, which is invalid`);}function dayOfWeek(year,month,day){const d=new Date(Date.UTC(year,month-1,day));if(year<100&&year>=0){d.setUTCFullYear(d.getUTCFullYear()-1900);}const js=d.getUTCDay();return js===0?7:js;}function computeOrdinal(year,month,day){return day+(isLeapYear(year)?leapLadder:nonLeapLadder)[month-1];}function uncomputeOrdinal(year,ordinal){const table=isLeapYear(year)?leapLadder:nonLeapLadder,month0=table.findIndex(i=>i<ordinal),day=ordinal-table[month0];return{month:month0+1,day};}function isoWeekdayToLocal(isoWeekday,startOfWeek){return(isoWeekday-startOfWeek+7)%7+1;}/**
   * @private
   */function gregorianToWeek(gregObj,minDaysInFirstWeek=4,startOfWeek=1){const{year,month,day}=gregObj,ordinal=computeOrdinal(year,month,day),weekday=isoWeekdayToLocal(dayOfWeek(year,month,day),startOfWeek);let weekNumber=Math.floor((ordinal-weekday+14-minDaysInFirstWeek)/7),weekYear;if(weekNumber<1){weekYear=year-1;weekNumber=weeksInWeekYear(weekYear,minDaysInFirstWeek,startOfWeek);}else if(weekNumber>weeksInWeekYear(year,minDaysInFirstWeek,startOfWeek)){weekYear=year+1;weekNumber=1;}else{weekYear=year;}return{weekYear,weekNumber,weekday,...timeObject(gregObj)};}function weekToGregorian(weekData,minDaysInFirstWeek=4,startOfWeek=1){const{weekYear,weekNumber,weekday}=weekData,weekdayOfJan4=isoWeekdayToLocal(dayOfWeek(weekYear,1,minDaysInFirstWeek),startOfWeek),yearInDays=daysInYear(weekYear);let ordinal=weekNumber*7+weekday-weekdayOfJan4-7+minDaysInFirstWeek,year;if(ordinal<1){year=weekYear-1;ordinal+=daysInYear(year);}else if(ordinal>yearInDays){year=weekYear+1;ordinal-=daysInYear(weekYear);}else{year=weekYear;}const{month,day}=uncomputeOrdinal(year,ordinal);return{year,month,day,...timeObject(weekData)};}function gregorianToOrdinal(gregData){const{year,month,day}=gregData;const ordinal=computeOrdinal(year,month,day);return{year,ordinal,...timeObject(gregData)};}function ordinalToGregorian(ordinalData){const{year,ordinal}=ordinalData;const{month,day}=uncomputeOrdinal(year,ordinal);return{year,month,day,...timeObject(ordinalData)};}/**
   * Check if local week units like localWeekday are used in obj.
   * If so, validates that they are not mixed with ISO week units and then copies them to the normal week unit properties.
   * Modifies obj in-place!
   * @param obj the object values
   */function usesLocalWeekValues(obj,loc){const hasLocaleWeekData=!isUndefined(obj.localWeekday)||!isUndefined(obj.localWeekNumber)||!isUndefined(obj.localWeekYear);if(hasLocaleWeekData){const hasIsoWeekData=!isUndefined(obj.weekday)||!isUndefined(obj.weekNumber)||!isUndefined(obj.weekYear);if(hasIsoWeekData){throw new ConflictingSpecificationError("Cannot mix locale-based week fields with ISO-based week fields");}if(!isUndefined(obj.localWeekday))obj.weekday=obj.localWeekday;if(!isUndefined(obj.localWeekNumber))obj.weekNumber=obj.localWeekNumber;if(!isUndefined(obj.localWeekYear))obj.weekYear=obj.localWeekYear;delete obj.localWeekday;delete obj.localWeekNumber;delete obj.localWeekYear;return{minDaysInFirstWeek:loc.getMinDaysInFirstWeek(),startOfWeek:loc.getStartOfWeek()};}else{return{minDaysInFirstWeek:4,startOfWeek:1};}}function hasInvalidWeekData(obj,minDaysInFirstWeek=4,startOfWeek=1){const validYear=isInteger(obj.weekYear),validWeek=integerBetween(obj.weekNumber,1,weeksInWeekYear(obj.weekYear,minDaysInFirstWeek,startOfWeek)),validWeekday=integerBetween(obj.weekday,1,7);if(!validYear){return unitOutOfRange("weekYear",obj.weekYear);}else if(!validWeek){return unitOutOfRange("week",obj.weekNumber);}else if(!validWeekday){return unitOutOfRange("weekday",obj.weekday);}else return false;}function hasInvalidOrdinalData(obj){const validYear=isInteger(obj.year),validOrdinal=integerBetween(obj.ordinal,1,daysInYear(obj.year));if(!validYear){return unitOutOfRange("year",obj.year);}else if(!validOrdinal){return unitOutOfRange("ordinal",obj.ordinal);}else return false;}function hasInvalidGregorianData(obj){const validYear=isInteger(obj.year),validMonth=integerBetween(obj.month,1,12),validDay=integerBetween(obj.day,1,daysInMonth(obj.year,obj.month));if(!validYear){return unitOutOfRange("year",obj.year);}else if(!validMonth){return unitOutOfRange("month",obj.month);}else if(!validDay){return unitOutOfRange("day",obj.day);}else return false;}function hasInvalidTimeData(obj){const{hour,minute,second,millisecond}=obj;const validHour=integerBetween(hour,0,23)||hour===24&&minute===0&&second===0&&millisecond===0,validMinute=integerBetween(minute,0,59),validSecond=integerBetween(second,0,59),validMillisecond=integerBetween(millisecond,0,999);if(!validHour){return unitOutOfRange("hour",hour);}else if(!validMinute){return unitOutOfRange("minute",minute);}else if(!validSecond){return unitOutOfRange("second",second);}else if(!validMillisecond){return unitOutOfRange("millisecond",millisecond);}else return false;}/*
    This is just a junk drawer, containing anything used across multiple classes.
    Because Luxon is small(ish), this should stay small and we won't worry about splitting
    it up into, say, parsingUtil.js and basicUtil.js and so on. But they are divided up by feature area.
  */ /**
   * @private
   */ // TYPES
function isUndefined(o){return typeof o==="undefined";}function isNumber(o){return typeof o==="number";}function isInteger(o){return typeof o==="number"&&o%1===0;}function isString(o){return typeof o==="string";}function isDate(o){return Object.prototype.toString.call(o)==="[object Date]";}// CAPABILITIES
function hasRelative(){try{return typeof Intl!=="undefined"&&!!Intl.RelativeTimeFormat;}catch(e){return false;}}function hasLocaleWeekInfo(){try{return typeof Intl!=="undefined"&&!!Intl.Locale&&("weekInfo"in Intl.Locale.prototype||"getWeekInfo"in Intl.Locale.prototype);}catch(e){return false;}}// OBJECTS AND ARRAYS
function maybeArray(thing){return Array.isArray(thing)?thing:[thing];}function bestBy(arr,by,compare){if(arr.length===0){return undefined;}return arr.reduce((best,next)=>{const pair=[by(next),next];if(!best){return pair;}else if(compare(best[0],pair[0])===best[0]){return best;}else{return pair;}},null)[1];}function pick(obj,keys){return keys.reduce((a,k)=>{a[k]=obj[k];return a;},{});}function hasOwnProperty(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop);}function validateWeekSettings(settings){if(settings==null){return null;}else if(typeof settings!=="object"){throw new InvalidArgumentError("Week settings must be an object");}else{if(!integerBetween(settings.firstDay,1,7)||!integerBetween(settings.minimalDays,1,7)||!Array.isArray(settings.weekend)||settings.weekend.some(v=>!integerBetween(v,1,7))){throw new InvalidArgumentError("Invalid week settings");}return{firstDay:settings.firstDay,minimalDays:settings.minimalDays,weekend:Array.from(settings.weekend)};}}// NUMBERS AND STRINGS
function integerBetween(thing,bottom,top){return isInteger(thing)&&thing>=bottom&&thing<=top;}// x % n but takes the sign of n instead of x
function floorMod(x,n){return x-n*Math.floor(x/n);}function padStart(input,n=2){const isNeg=input<0;let padded;if(isNeg){padded="-"+(""+-input).padStart(n,"0");}else{padded=(""+input).padStart(n,"0");}return padded;}function parseInteger(string){if(isUndefined(string)||string===null||string===""){return undefined;}else{return parseInt(string,10);}}function parseFloating(string){if(isUndefined(string)||string===null||string===""){return undefined;}else{return parseFloat(string);}}function parseMillis(fraction){// Return undefined (instead of 0) in these cases, where fraction is not set
if(isUndefined(fraction)||fraction===null||fraction===""){return undefined;}else{const f=parseFloat("0."+fraction)*1000;return Math.floor(f);}}function roundTo(number,digits,towardZero=false){const factor=10**digits,rounder=towardZero?Math.trunc:Math.round;return rounder(number*factor)/factor;}// DATE BASICS
function isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0);}function daysInYear(year){return isLeapYear(year)?366:365;}function daysInMonth(year,month){const modMonth=floorMod(month-1,12)+1,modYear=year+(month-modMonth)/12;if(modMonth===2){return isLeapYear(modYear)?29:28;}else{return[31,null,31,30,31,30,31,31,30,31,30,31][modMonth-1];}}// convert a calendar object to a local timestamp (epoch, but with the offset baked in)
function objToLocalTS(obj){let d=Date.UTC(obj.year,obj.month-1,obj.day,obj.hour,obj.minute,obj.second,obj.millisecond);// for legacy reasons, years between 0 and 99 are interpreted as 19XX; revert that
if(obj.year<100&&obj.year>=0){d=new Date(d);// set the month and day again, this is necessary because year 2000 is a leap year, but year 100 is not
// so if obj.year is in 99, but obj.day makes it roll over into year 100,
// the calculations done by Date.UTC are using year 2000 - which is incorrect
d.setUTCFullYear(obj.year,obj.month-1,obj.day);}return+d;}// adapted from moment.js: https://github.com/moment/moment/blob/000ac1800e620f770f4eb31b5ae908f6167b0ab2/src/lib/units/week-calendar-utils.js
function firstWeekOffset(year,minDaysInFirstWeek,startOfWeek){const fwdlw=isoWeekdayToLocal(dayOfWeek(year,1,minDaysInFirstWeek),startOfWeek);return-fwdlw+minDaysInFirstWeek-1;}function weeksInWeekYear(weekYear,minDaysInFirstWeek=4,startOfWeek=1){const weekOffset=firstWeekOffset(weekYear,minDaysInFirstWeek,startOfWeek);const weekOffsetNext=firstWeekOffset(weekYear+1,minDaysInFirstWeek,startOfWeek);return(daysInYear(weekYear)-weekOffset+weekOffsetNext)/7;}function untruncateYear(year){if(year>99){return year;}else return year>Settings.twoDigitCutoffYear?1900+year:2000+year;}// PARSING
function parseZoneInfo(ts,offsetFormat,locale,timeZone=null){const date=new Date(ts),intlOpts={hourCycle:"h23",year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit"};if(timeZone){intlOpts.timeZone=timeZone;}const modified={timeZoneName:offsetFormat,...intlOpts};const parsed=new Intl.DateTimeFormat(locale,modified).formatToParts(date).find(m=>m.type.toLowerCase()==="timezonename");return parsed?parsed.value:null;}// signedOffset('-5', '30') -> -330
function signedOffset(offHourStr,offMinuteStr){let offHour=parseInt(offHourStr,10);// don't || this because we want to preserve -0
if(Number.isNaN(offHour)){offHour=0;}const offMin=parseInt(offMinuteStr,10)||0,offMinSigned=offHour<0||Object.is(offHour,-0)?-offMin:offMin;return offHour*60+offMinSigned;}// COERCION
function asNumber(value){const numericValue=Number(value);if(typeof value==="boolean"||value===""||Number.isNaN(numericValue))throw new InvalidArgumentError(`Invalid unit value ${value}`);return numericValue;}function normalizeObject(obj,normalizer){const normalized={};for(const u in obj){if(hasOwnProperty(obj,u)){const v=obj[u];if(v===undefined||v===null)continue;normalized[normalizer(u)]=asNumber(v);}}return normalized;}/**
   * Returns the offset's value as a string
   * @param {number} ts - Epoch milliseconds for which to get the offset
   * @param {string} format - What style of offset to return.
   *                          Accepts 'narrow', 'short', or 'techie'. Returning '+6', '+06:00', or '+0600' respectively
   * @return {string}
   */function formatOffset(offset,format){const hours=Math.trunc(Math.abs(offset/60)),minutes=Math.trunc(Math.abs(offset%60)),sign=offset>=0?"+":"-";switch(format){case"short":return`${sign}${padStart(hours,2)}:${padStart(minutes,2)}`;case"narrow":return`${sign}${hours}${minutes>0?`:${minutes}`:""}`;case"techie":return`${sign}${padStart(hours,2)}${padStart(minutes,2)}`;default:throw new RangeError(`Value format ${format} is out of range for property format`);}}function timeObject(obj){return pick(obj,["hour","minute","second","millisecond"]);}/**
   * @private
   */const monthsLong=["January","February","March","April","May","June","July","August","September","October","November","December"];const monthsShort=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];const monthsNarrow=["J","F","M","A","M","J","J","A","S","O","N","D"];function months(length){switch(length){case"narrow":return[...monthsNarrow];case"short":return[...monthsShort];case"long":return[...monthsLong];case"numeric":return["1","2","3","4","5","6","7","8","9","10","11","12"];case"2-digit":return["01","02","03","04","05","06","07","08","09","10","11","12"];default:return null;}}const weekdaysLong=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"];const weekdaysShort=["Mon","Tue","Wed","Thu","Fri","Sat","Sun"];const weekdaysNarrow=["M","T","W","T","F","S","S"];function weekdays(length){switch(length){case"narrow":return[...weekdaysNarrow];case"short":return[...weekdaysShort];case"long":return[...weekdaysLong];case"numeric":return["1","2","3","4","5","6","7"];default:return null;}}const meridiems=["AM","PM"];const erasLong=["Before Christ","Anno Domini"];const erasShort=["BC","AD"];const erasNarrow=["B","A"];function eras(length){switch(length){case"narrow":return[...erasNarrow];case"short":return[...erasShort];case"long":return[...erasLong];default:return null;}}function meridiemForDateTime(dt){return meridiems[dt.hour<12?0:1];}function weekdayForDateTime(dt,length){return weekdays(length)[dt.weekday-1];}function monthForDateTime(dt,length){return months(length)[dt.month-1];}function eraForDateTime(dt,length){return eras(length)[dt.year<0?0:1];}function formatRelativeTime(unit,count,numeric="always",narrow=false){const units={years:["year","yr."],quarters:["quarter","qtr."],months:["month","mo."],weeks:["week","wk."],days:["day","day","days"],hours:["hour","hr."],minutes:["minute","min."],seconds:["second","sec."]};const lastable=["hours","minutes","seconds"].indexOf(unit)===-1;if(numeric==="auto"&&lastable){const isDay=unit==="days";switch(count){case 1:return isDay?"tomorrow":`next ${units[unit][0]}`;case-1:return isDay?"yesterday":`last ${units[unit][0]}`;case 0:return isDay?"today":`this ${units[unit][0]}`;}}const isInPast=Object.is(count,-0)||count<0,fmtValue=Math.abs(count),singular=fmtValue===1,lilUnits=units[unit],fmtUnit=narrow?singular?lilUnits[1]:lilUnits[2]||lilUnits[1]:singular?units[unit][0]:unit;return isInPast?`${fmtValue} ${fmtUnit} ago`:`in ${fmtValue} ${fmtUnit}`;}function stringifyTokens(splits,tokenToString){let s="";for(const token of splits){if(token.literal){s+=token.val;}else{s+=tokenToString(token.val);}}return s;}const macroTokenToFormatOpts={D:DATE_SHORT,DD:DATE_MED,DDD:DATE_FULL,DDDD:DATE_HUGE,t:TIME_SIMPLE,tt:TIME_WITH_SECONDS,ttt:TIME_WITH_SHORT_OFFSET,tttt:TIME_WITH_LONG_OFFSET,T:TIME_24_SIMPLE,TT:TIME_24_WITH_SECONDS,TTT:TIME_24_WITH_SHORT_OFFSET,TTTT:TIME_24_WITH_LONG_OFFSET,f:DATETIME_SHORT,ff:DATETIME_MED,fff:DATETIME_FULL,ffff:DATETIME_HUGE,F:DATETIME_SHORT_WITH_SECONDS,FF:DATETIME_MED_WITH_SECONDS,FFF:DATETIME_FULL_WITH_SECONDS,FFFF:DATETIME_HUGE_WITH_SECONDS};/**
   * @private
   */class Formatter{static create(locale,opts={}){return new Formatter(locale,opts);}static parseFormat(fmt){// white-space is always considered a literal in user-provided formats
// the " " token has a special meaning (see unitForToken)
let current=null,currentFull="",bracketed=false;const splits=[];for(let i=0;i<fmt.length;i++){const c=fmt.charAt(i);if(c==="'"){if(currentFull.length>0){splits.push({literal:bracketed||/^\s+$/.test(currentFull),val:currentFull});}current=null;currentFull="";bracketed=!bracketed;}else if(bracketed){currentFull+=c;}else if(c===current){currentFull+=c;}else{if(currentFull.length>0){splits.push({literal:/^\s+$/.test(currentFull),val:currentFull});}currentFull=c;current=c;}}if(currentFull.length>0){splits.push({literal:bracketed||/^\s+$/.test(currentFull),val:currentFull});}return splits;}static macroTokenToFormatOpts(token){return macroTokenToFormatOpts[token];}constructor(locale,formatOpts){this.opts=formatOpts;this.loc=locale;this.systemLoc=null;}formatWithSystemDefault(dt,opts){if(this.systemLoc===null){this.systemLoc=this.loc.redefaultToSystem();}const df=this.systemLoc.dtFormatter(dt,{...this.opts,...opts});return df.format();}dtFormatter(dt,opts={}){return this.loc.dtFormatter(dt,{...this.opts,...opts});}formatDateTime(dt,opts){return this.dtFormatter(dt,opts).format();}formatDateTimeParts(dt,opts){return this.dtFormatter(dt,opts).formatToParts();}formatInterval(interval,opts){const df=this.dtFormatter(interval.start,opts);return df.dtf.formatRange(interval.start.toJSDate(),interval.end.toJSDate());}resolvedOptions(dt,opts){return this.dtFormatter(dt,opts).resolvedOptions();}num(n,p=0){// we get some perf out of doing this here, annoyingly
if(this.opts.forceSimple){return padStart(n,p);}const opts={...this.opts};if(p>0){opts.padTo=p;}return this.loc.numberFormatter(opts).format(n);}formatDateTimeFromString(dt,fmt){const knownEnglish=this.loc.listingMode()==="en",useDateTimeFormatter=this.loc.outputCalendar&&this.loc.outputCalendar!=="gregory",string=(opts,extract)=>this.loc.extract(dt,opts,extract),formatOffset=opts=>{if(dt.isOffsetFixed&&dt.offset===0&&opts.allowZ){return"Z";}return dt.isValid?dt.zone.formatOffset(dt.ts,opts.format):"";},meridiem=()=>knownEnglish?meridiemForDateTime(dt):string({hour:"numeric",hourCycle:"h12"},"dayperiod"),month=(length,standalone)=>knownEnglish?monthForDateTime(dt,length):string(standalone?{month:length}:{month:length,day:"numeric"},"month"),weekday=(length,standalone)=>knownEnglish?weekdayForDateTime(dt,length):string(standalone?{weekday:length}:{weekday:length,month:"long",day:"numeric"},"weekday"),maybeMacro=token=>{const formatOpts=Formatter.macroTokenToFormatOpts(token);if(formatOpts){return this.formatWithSystemDefault(dt,formatOpts);}else{return token;}},era=length=>knownEnglish?eraForDateTime(dt,length):string({era:length},"era"),tokenToString=token=>{// Where possible: https://cldr.unicode.org/translation/date-time/date-time-symbols
switch(token){// ms
case"S":return this.num(dt.millisecond);case"u":// falls through
case"SSS":return this.num(dt.millisecond,3);// seconds
case"s":return this.num(dt.second);case"ss":return this.num(dt.second,2);// fractional seconds
case"uu":return this.num(Math.floor(dt.millisecond/10),2);case"uuu":return this.num(Math.floor(dt.millisecond/100));// minutes
case"m":return this.num(dt.minute);case"mm":return this.num(dt.minute,2);// hours
case"h":return this.num(dt.hour%12===0?12:dt.hour%12);case"hh":return this.num(dt.hour%12===0?12:dt.hour%12,2);case"H":return this.num(dt.hour);case"HH":return this.num(dt.hour,2);// offset
case"Z":// like +6
return formatOffset({format:"narrow",allowZ:this.opts.allowZ});case"ZZ":// like +06:00
return formatOffset({format:"short",allowZ:this.opts.allowZ});case"ZZZ":// like +0600
return formatOffset({format:"techie",allowZ:this.opts.allowZ});case"ZZZZ":// like EST
return dt.zone.offsetName(dt.ts,{format:"short",locale:this.loc.locale});case"ZZZZZ":// like Eastern Standard Time
return dt.zone.offsetName(dt.ts,{format:"long",locale:this.loc.locale});// zone
case"z":// like America/New_York
return dt.zoneName;// meridiems
case"a":return meridiem();// dates
case"d":return useDateTimeFormatter?string({day:"numeric"},"day"):this.num(dt.day);case"dd":return useDateTimeFormatter?string({day:"2-digit"},"day"):this.num(dt.day,2);// weekdays - standalone
case"c":// like 1
return this.num(dt.weekday);case"ccc":// like 'Tues'
return weekday("short",true);case"cccc":// like 'Tuesday'
return weekday("long",true);case"ccccc":// like 'T'
return weekday("narrow",true);// weekdays - format
case"E":// like 1
return this.num(dt.weekday);case"EEE":// like 'Tues'
return weekday("short",false);case"EEEE":// like 'Tuesday'
return weekday("long",false);case"EEEEE":// like 'T'
return weekday("narrow",false);// months - standalone
case"L":// like 1
return useDateTimeFormatter?string({month:"numeric",day:"numeric"},"month"):this.num(dt.month);case"LL":// like 01, doesn't seem to work
return useDateTimeFormatter?string({month:"2-digit",day:"numeric"},"month"):this.num(dt.month,2);case"LLL":// like Jan
return month("short",true);case"LLLL":// like January
return month("long",true);case"LLLLL":// like J
return month("narrow",true);// months - format
case"M":// like 1
return useDateTimeFormatter?string({month:"numeric"},"month"):this.num(dt.month);case"MM":// like 01
return useDateTimeFormatter?string({month:"2-digit"},"month"):this.num(dt.month,2);case"MMM":// like Jan
return month("short",false);case"MMMM":// like January
return month("long",false);case"MMMMM":// like J
return month("narrow",false);// years
case"y":// like 2014
return useDateTimeFormatter?string({year:"numeric"},"year"):this.num(dt.year);case"yy":// like 14
return useDateTimeFormatter?string({year:"2-digit"},"year"):this.num(dt.year.toString().slice(-2),2);case"yyyy":// like 0012
return useDateTimeFormatter?string({year:"numeric"},"year"):this.num(dt.year,4);case"yyyyyy":// like 000012
return useDateTimeFormatter?string({year:"numeric"},"year"):this.num(dt.year,6);// eras
case"G":// like AD
return era("short");case"GG":// like Anno Domini
return era("long");case"GGGGG":return era("narrow");case"kk":return this.num(dt.weekYear.toString().slice(-2),2);case"kkkk":return this.num(dt.weekYear,4);case"W":return this.num(dt.weekNumber);case"WW":return this.num(dt.weekNumber,2);case"n":return this.num(dt.localWeekNumber);case"nn":return this.num(dt.localWeekNumber,2);case"ii":return this.num(dt.localWeekYear.toString().slice(-2),2);case"iiii":return this.num(dt.localWeekYear,4);case"o":return this.num(dt.ordinal);case"ooo":return this.num(dt.ordinal,3);case"q":// like 1
return this.num(dt.quarter);case"qq":// like 01
return this.num(dt.quarter,2);case"X":return this.num(Math.floor(dt.ts/1000));case"x":return this.num(dt.ts);default:return maybeMacro(token);}};return stringifyTokens(Formatter.parseFormat(fmt),tokenToString);}formatDurationFromString(dur,fmt){const tokenToField=token=>{switch(token[0]){case"S":return"millisecond";case"s":return"second";case"m":return"minute";case"h":return"hour";case"d":return"day";case"w":return"week";case"M":return"month";case"y":return"year";default:return null;}},tokenToString=lildur=>token=>{const mapped=tokenToField(token);if(mapped){return this.num(lildur.get(mapped),token.length);}else{return token;}},tokens=Formatter.parseFormat(fmt),realTokens=tokens.reduce((found,{literal,val})=>literal?found:found.concat(val),[]),collapsed=dur.shiftTo(...realTokens.map(tokenToField).filter(t=>t));return stringifyTokens(tokens,tokenToString(collapsed));}}/*
   * This file handles parsing for well-specified formats. Here's how it works:
   * Two things go into parsing: a regex to match with and an extractor to take apart the groups in the match.
   * An extractor is just a function that takes a regex match array and returns a { year: ..., month: ... } object
   * parse() does the work of executing the regex and applying the extractor. It takes multiple regex/extractor pairs to try in sequence.
   * Extractors can take a "cursor" representing the offset in the match to look at. This makes it easy to combine extractors.
   * combineExtractors() does the work of combining them, keeping track of the cursor through multiple extractions.
   * Some extractions are super dumb and simpleParse and fromStrings help DRY them.
   */const ianaRegex=/[A-Za-z_+-]{1,256}(?::?\/[A-Za-z0-9_+-]{1,256}(?:\/[A-Za-z0-9_+-]{1,256})?)?/;function combineRegexes(...regexes){const full=regexes.reduce((f,r)=>f+r.source,"");return RegExp(`^${full}$`);}function combineExtractors(...extractors){return m=>extractors.reduce(([mergedVals,mergedZone,cursor],ex)=>{const[val,zone,next]=ex(m,cursor);return[{...mergedVals,...val},zone||mergedZone,next];},[{},null,1]).slice(0,2);}function parse(s,...patterns){if(s==null){return[null,null];}for(const[regex,extractor]of patterns){const m=regex.exec(s);if(m){return extractor(m);}}return[null,null];}function simpleParse(...keys){return(match,cursor)=>{const ret={};let i;for(i=0;i<keys.length;i++){ret[keys[i]]=parseInteger(match[cursor+i]);}return[ret,null,cursor+i];};}// ISO and SQL parsing
const offsetRegex=/(?:(Z)|([+-]\d\d)(?::?(\d\d))?)/;const isoExtendedZone=`(?:${offsetRegex.source}?(?:\\[(${ianaRegex.source})\\])?)?`;const isoTimeBaseRegex=/(\d\d)(?::?(\d\d)(?::?(\d\d)(?:[.,](\d{1,30}))?)?)?/;const isoTimeRegex=RegExp(`${isoTimeBaseRegex.source}${isoExtendedZone}`);const isoTimeExtensionRegex=RegExp(`(?:T${isoTimeRegex.source})?`);const isoYmdRegex=/([+-]\d{6}|\d{4})(?:-?(\d\d)(?:-?(\d\d))?)?/;const isoWeekRegex=/(\d{4})-?W(\d\d)(?:-?(\d))?/;const isoOrdinalRegex=/(\d{4})-?(\d{3})/;const extractISOWeekData=simpleParse("weekYear","weekNumber","weekDay");const extractISOOrdinalData=simpleParse("year","ordinal");const sqlYmdRegex=/(\d{4})-(\d\d)-(\d\d)/;// dumbed-down version of the ISO one
const sqlTimeRegex=RegExp(`${isoTimeBaseRegex.source} ?(?:${offsetRegex.source}|(${ianaRegex.source}))?`);const sqlTimeExtensionRegex=RegExp(`(?: ${sqlTimeRegex.source})?`);function int(match,pos,fallback){const m=match[pos];return isUndefined(m)?fallback:parseInteger(m);}function extractISOYmd(match,cursor){const item={year:int(match,cursor),month:int(match,cursor+1,1),day:int(match,cursor+2,1)};return[item,null,cursor+3];}function extractISOTime(match,cursor){const item={hours:int(match,cursor,0),minutes:int(match,cursor+1,0),seconds:int(match,cursor+2,0),milliseconds:parseMillis(match[cursor+3])};return[item,null,cursor+4];}function extractISOOffset(match,cursor){const local=!match[cursor]&&!match[cursor+1],fullOffset=signedOffset(match[cursor+1],match[cursor+2]),zone=local?null:FixedOffsetZone.instance(fullOffset);return[{},zone,cursor+3];}function extractIANAZone(match,cursor){const zone=match[cursor]?IANAZone.create(match[cursor]):null;return[{},zone,cursor+1];}// ISO time parsing
const isoTimeOnly=RegExp(`^T?${isoTimeBaseRegex.source}$`);// ISO duration parsing
const isoDuration=/^-?P(?:(?:(-?\d{1,20}(?:\.\d{1,20})?)Y)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20}(?:\.\d{1,20})?)W)?(?:(-?\d{1,20}(?:\.\d{1,20})?)D)?(?:T(?:(-?\d{1,20}(?:\.\d{1,20})?)H)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20})(?:[.,](-?\d{1,20}))?S)?)?)$/;function extractISODuration(match){const[s,yearStr,monthStr,weekStr,dayStr,hourStr,minuteStr,secondStr,millisecondsStr]=match;const hasNegativePrefix=s[0]==="-";const negativeSeconds=secondStr&&secondStr[0]==="-";const maybeNegate=(num,force=false)=>num!==undefined&&(force||num&&hasNegativePrefix)?-num:num;return[{years:maybeNegate(parseFloating(yearStr)),months:maybeNegate(parseFloating(monthStr)),weeks:maybeNegate(parseFloating(weekStr)),days:maybeNegate(parseFloating(dayStr)),hours:maybeNegate(parseFloating(hourStr)),minutes:maybeNegate(parseFloating(minuteStr)),seconds:maybeNegate(parseFloating(secondStr),secondStr==="-0"),milliseconds:maybeNegate(parseMillis(millisecondsStr),negativeSeconds)}];}// These are a little braindead. EDT *should* tell us that we're in, say, America/New_York
// and not just that we're in -240 *right now*. But since I don't think these are used that often
// I'm just going to ignore that
const obsOffsets={GMT:0,EDT:-4*60,EST:-5*60,CDT:-5*60,CST:-6*60,MDT:-6*60,MST:-7*60,PDT:-7*60,PST:-8*60};function fromStrings(weekdayStr,yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr){const result={year:yearStr.length===2?untruncateYear(parseInteger(yearStr)):parseInteger(yearStr),month:monthsShort.indexOf(monthStr)+1,day:parseInteger(dayStr),hour:parseInteger(hourStr),minute:parseInteger(minuteStr)};if(secondStr)result.second=parseInteger(secondStr);if(weekdayStr){result.weekday=weekdayStr.length>3?weekdaysLong.indexOf(weekdayStr)+1:weekdaysShort.indexOf(weekdayStr)+1;}return result;}// RFC 2822/5322
const rfc2822=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\d\d)(\d\d)))$/;function extractRFC2822(match){const[,weekdayStr,dayStr,monthStr,yearStr,hourStr,minuteStr,secondStr,obsOffset,milOffset,offHourStr,offMinuteStr]=match,result=fromStrings(weekdayStr,yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr);let offset;if(obsOffset){offset=obsOffsets[obsOffset];}else if(milOffset){offset=0;}else{offset=signedOffset(offHourStr,offMinuteStr);}return[result,new FixedOffsetZone(offset)];}function preprocessRFC2822(s){// Remove comments and folding whitespace and replace multiple-spaces with a single space
return s.replace(/\([^()]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").trim();}// http date
const rfc1123=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d\d):(\d\d):(\d\d) GMT$/,rfc850=/^(Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\d\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d\d) (\d\d):(\d\d):(\d\d) GMT$/,ascii=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \d|\d\d) (\d\d):(\d\d):(\d\d) (\d{4})$/;function extractRFC1123Or850(match){const[,weekdayStr,dayStr,monthStr,yearStr,hourStr,minuteStr,secondStr]=match,result=fromStrings(weekdayStr,yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr);return[result,FixedOffsetZone.utcInstance];}function extractASCII(match){const[,weekdayStr,monthStr,dayStr,hourStr,minuteStr,secondStr,yearStr]=match,result=fromStrings(weekdayStr,yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr);return[result,FixedOffsetZone.utcInstance];}const isoYmdWithTimeExtensionRegex=combineRegexes(isoYmdRegex,isoTimeExtensionRegex);const isoWeekWithTimeExtensionRegex=combineRegexes(isoWeekRegex,isoTimeExtensionRegex);const isoOrdinalWithTimeExtensionRegex=combineRegexes(isoOrdinalRegex,isoTimeExtensionRegex);const isoTimeCombinedRegex=combineRegexes(isoTimeRegex);const extractISOYmdTimeAndOffset=combineExtractors(extractISOYmd,extractISOTime,extractISOOffset,extractIANAZone);const extractISOWeekTimeAndOffset=combineExtractors(extractISOWeekData,extractISOTime,extractISOOffset,extractIANAZone);const extractISOOrdinalDateAndTime=combineExtractors(extractISOOrdinalData,extractISOTime,extractISOOffset,extractIANAZone);const extractISOTimeAndOffset=combineExtractors(extractISOTime,extractISOOffset,extractIANAZone);/*
   * @private
   */function parseISODate(s){return parse(s,[isoYmdWithTimeExtensionRegex,extractISOYmdTimeAndOffset],[isoWeekWithTimeExtensionRegex,extractISOWeekTimeAndOffset],[isoOrdinalWithTimeExtensionRegex,extractISOOrdinalDateAndTime],[isoTimeCombinedRegex,extractISOTimeAndOffset]);}function parseRFC2822Date(s){return parse(preprocessRFC2822(s),[rfc2822,extractRFC2822]);}function parseHTTPDate(s){return parse(s,[rfc1123,extractRFC1123Or850],[rfc850,extractRFC1123Or850],[ascii,extractASCII]);}function parseISODuration(s){return parse(s,[isoDuration,extractISODuration]);}const extractISOTimeOnly=combineExtractors(extractISOTime);function parseISOTimeOnly(s){return parse(s,[isoTimeOnly,extractISOTimeOnly]);}const sqlYmdWithTimeExtensionRegex=combineRegexes(sqlYmdRegex,sqlTimeExtensionRegex);const sqlTimeCombinedRegex=combineRegexes(sqlTimeRegex);const extractISOTimeOffsetAndIANAZone=combineExtractors(extractISOTime,extractISOOffset,extractIANAZone);function parseSQL(s){return parse(s,[sqlYmdWithTimeExtensionRegex,extractISOYmdTimeAndOffset],[sqlTimeCombinedRegex,extractISOTimeOffsetAndIANAZone]);}const INVALID$2="Invalid Duration";// unit conversion constants
const lowOrderMatrix={weeks:{days:7,hours:7*24,minutes:7*24*60,seconds:7*24*60*60,milliseconds:7*24*60*60*1000},days:{hours:24,minutes:24*60,seconds:24*60*60,milliseconds:24*60*60*1000},hours:{minutes:60,seconds:60*60,milliseconds:60*60*1000},minutes:{seconds:60,milliseconds:60*1000},seconds:{milliseconds:1000}},casualMatrix={years:{quarters:4,months:12,weeks:52,days:365,hours:365*24,minutes:365*24*60,seconds:365*24*60*60,milliseconds:365*24*60*60*1000},quarters:{months:3,weeks:13,days:91,hours:91*24,minutes:91*24*60,seconds:91*24*60*60,milliseconds:91*24*60*60*1000},months:{weeks:4,days:30,hours:30*24,minutes:30*24*60,seconds:30*24*60*60,milliseconds:30*24*60*60*1000},...lowOrderMatrix},daysInYearAccurate=146097.0/400,daysInMonthAccurate=146097.0/4800,accurateMatrix={years:{quarters:4,months:12,weeks:daysInYearAccurate/7,days:daysInYearAccurate,hours:daysInYearAccurate*24,minutes:daysInYearAccurate*24*60,seconds:daysInYearAccurate*24*60*60,milliseconds:daysInYearAccurate*24*60*60*1000},quarters:{months:3,weeks:daysInYearAccurate/28,days:daysInYearAccurate/4,hours:daysInYearAccurate*24/4,minutes:daysInYearAccurate*24*60/4,seconds:daysInYearAccurate*24*60*60/4,milliseconds:daysInYearAccurate*24*60*60*1000/4},months:{weeks:daysInMonthAccurate/7,days:daysInMonthAccurate,hours:daysInMonthAccurate*24,minutes:daysInMonthAccurate*24*60,seconds:daysInMonthAccurate*24*60*60,milliseconds:daysInMonthAccurate*24*60*60*1000},...lowOrderMatrix};// units ordered by size
const orderedUnits$1=["years","quarters","months","weeks","days","hours","minutes","seconds","milliseconds"];const reverseUnits=orderedUnits$1.slice(0).reverse();// clone really means "create another instance just like this one, but with these changes"
function clone$1(dur,alts,clear=false){// deep merge for vals
const conf={values:clear?alts.values:{...dur.values,...(alts.values||{})},loc:dur.loc.clone(alts.loc),conversionAccuracy:alts.conversionAccuracy||dur.conversionAccuracy,matrix:alts.matrix||dur.matrix};return new Duration(conf);}function durationToMillis(matrix,vals){let sum=vals.milliseconds??0;for(const unit of reverseUnits.slice(1)){if(vals[unit]){sum+=vals[unit]*matrix[unit]["milliseconds"];}}return sum;}// NB: mutates parameters
function normalizeValues(matrix,vals){// the logic below assumes the overall value of the duration is positive
// if this is not the case, factor is used to make it so
const factor=durationToMillis(matrix,vals)<0?-1:1;orderedUnits$1.reduceRight((previous,current)=>{if(!isUndefined(vals[current])){if(previous){const previousVal=vals[previous]*factor;const conv=matrix[current][previous];// if (previousVal < 0):
// lower order unit is negative (e.g. { years: 2, days: -2 })
// normalize this by reducing the higher order unit by the appropriate amount
// and increasing the lower order unit
// this can never make the higher order unit negative, because this function only operates
// on positive durations, so the amount of time represented by the lower order unit cannot
// be larger than the higher order unit
// else:
// lower order unit is positive (e.g. { years: 2, days: 450 } or { years: -2, days: 450 })
// in this case we attempt to convert as much as possible from the lower order unit into
// the higher order one
//
// Math.floor takes care of both of these cases, rounding away from 0
// if previousVal < 0 it makes the absolute value larger
// if previousVal >= it makes the absolute value smaller
const rollUp=Math.floor(previousVal/conv);vals[current]+=rollUp*factor;vals[previous]-=rollUp*conv*factor;}return current;}else{return previous;}},null);// try to convert any decimals into smaller units if possible
// for example for { years: 2.5, days: 0, seconds: 0 } we want to get { years: 2, days: 182, hours: 12 }
orderedUnits$1.reduce((previous,current)=>{if(!isUndefined(vals[current])){if(previous){const fraction=vals[previous]%1;vals[previous]-=fraction;vals[current]+=fraction*matrix[previous][current];}return current;}else{return previous;}},null);}// Remove all properties with a value of 0 from an object
function removeZeroes(vals){const newVals={};for(const[key,value]of Object.entries(vals)){if(value!==0){newVals[key]=value;}}return newVals;}/**
   * A Duration object represents a period of time, like "2 months" or "1 day, 1 hour". Conceptually, it's just a map of units to their quantities, accompanied by some additional configuration and methods for creating, parsing, interrogating, transforming, and formatting them. They can be used on their own or in conjunction with other Luxon types; for example, you can use {@link DateTime#plus} to add a Duration object to a DateTime, producing another DateTime.
   *
   * Here is a brief overview of commonly used methods and getters in Duration:
   *
   * * **Creation** To create a Duration, use {@link Duration.fromMillis}, {@link Duration.fromObject}, or {@link Duration.fromISO}.
   * * **Unit values** See the {@link Duration#years}, {@link Duration#months}, {@link Duration#weeks}, {@link Duration#days}, {@link Duration#hours}, {@link Duration#minutes}, {@link Duration#seconds}, {@link Duration#milliseconds} accessors.
   * * **Configuration** See  {@link Duration#locale} and {@link Duration#numberingSystem} accessors.
   * * **Transformation** To create new Durations out of old ones use {@link Duration#plus}, {@link Duration#minus}, {@link Duration#normalize}, {@link Duration#set}, {@link Duration#reconfigure}, {@link Duration#shiftTo}, and {@link Duration#negate}.
   * * **Output** To convert the Duration into other representations, see {@link Duration#as}, {@link Duration#toISO}, {@link Duration#toFormat}, and {@link Duration#toJSON}
   *
   * There's are more methods documented below. In addition, for more information on subtler topics like internationalization and validity, see the external documentation.
   */class Duration{/**
     * @private
     */constructor(config){const accurate=config.conversionAccuracy==="longterm"||false;let matrix=accurate?accurateMatrix:casualMatrix;if(config.matrix){matrix=config.matrix;}/**
       * @access private
       */this.values=config.values;/**
       * @access private
       */this.loc=config.loc||Locale.create();/**
       * @access private
       */this.conversionAccuracy=accurate?"longterm":"casual";/**
       * @access private
       */this.invalid=config.invalid||null;/**
       * @access private
       */this.matrix=matrix;/**
       * @access private
       */this.isLuxonDuration=true;}/**
     * Create Duration from a number of milliseconds.
     * @param {number} count of milliseconds
     * @param {Object} opts - options for parsing
     * @param {string} [opts.locale='en-US'] - the locale to use
     * @param {string} opts.numberingSystem - the numbering system to use
     * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
     * @return {Duration}
     */static fromMillis(count,opts){return Duration.fromObject({milliseconds:count},opts);}/**
     * Create a Duration from a JavaScript object with keys like 'years' and 'hours'.
     * If this object is empty then a zero milliseconds duration is returned.
     * @param {Object} obj - the object to create the DateTime from
     * @param {number} obj.years
     * @param {number} obj.quarters
     * @param {number} obj.months
     * @param {number} obj.weeks
     * @param {number} obj.days
     * @param {number} obj.hours
     * @param {number} obj.minutes
     * @param {number} obj.seconds
     * @param {number} obj.milliseconds
     * @param {Object} [opts=[]] - options for creating this Duration
     * @param {string} [opts.locale='en-US'] - the locale to use
     * @param {string} opts.numberingSystem - the numbering system to use
     * @param {string} [opts.conversionAccuracy='casual'] - the preset conversion system to use
     * @param {string} [opts.matrix=Object] - the custom conversion system to use
     * @return {Duration}
     */static fromObject(obj,opts={}){if(obj==null||typeof obj!=="object"){throw new InvalidArgumentError(`Duration.fromObject: argument expected to be an object, got ${obj===null?"null":typeof obj}`);}return new Duration({values:normalizeObject(obj,Duration.normalizeUnit),loc:Locale.fromObject(opts),conversionAccuracy:opts.conversionAccuracy,matrix:opts.matrix});}/**
     * Create a Duration from DurationLike.
     *
     * @param {Object | number | Duration} durationLike
     * One of:
     * - object with keys like 'years' and 'hours'.
     * - number representing milliseconds
     * - Duration instance
     * @return {Duration}
     */static fromDurationLike(durationLike){if(isNumber(durationLike)){return Duration.fromMillis(durationLike);}else if(Duration.isDuration(durationLike)){return durationLike;}else if(typeof durationLike==="object"){return Duration.fromObject(durationLike);}else{throw new InvalidArgumentError(`Unknown duration argument ${durationLike} of type ${typeof durationLike}`);}}/**
     * Create a Duration from an ISO 8601 duration string.
     * @param {string} text - text to parse
     * @param {Object} opts - options for parsing
     * @param {string} [opts.locale='en-US'] - the locale to use
     * @param {string} opts.numberingSystem - the numbering system to use
     * @param {string} [opts.conversionAccuracy='casual'] - the preset conversion system to use
     * @param {string} [opts.matrix=Object] - the preset conversion system to use
     * @see https://en.wikipedia.org/wiki/ISO_8601#Durations
     * @example Duration.fromISO('P3Y6M1W4DT12H30M5S').toObject() //=> { years: 3, months: 6, weeks: 1, days: 4, hours: 12, minutes: 30, seconds: 5 }
     * @example Duration.fromISO('PT23H').toObject() //=> { hours: 23 }
     * @example Duration.fromISO('P5Y3M').toObject() //=> { years: 5, months: 3 }
     * @return {Duration}
     */static fromISO(text,opts){const[parsed]=parseISODuration(text);if(parsed){return Duration.fromObject(parsed,opts);}else{return Duration.invalid("unparsable",`the input "${text}" can't be parsed as ISO 8601`);}}/**
     * Create a Duration from an ISO 8601 time string.
     * @param {string} text - text to parse
     * @param {Object} opts - options for parsing
     * @param {string} [opts.locale='en-US'] - the locale to use
     * @param {string} opts.numberingSystem - the numbering system to use
     * @param {string} [opts.conversionAccuracy='casual'] - the preset conversion system to use
     * @param {string} [opts.matrix=Object] - the conversion system to use
     * @see https://en.wikipedia.org/wiki/ISO_8601#Times
     * @example Duration.fromISOTime('11:22:33.444').toObject() //=> { hours: 11, minutes: 22, seconds: 33, milliseconds: 444 }
     * @example Duration.fromISOTime('11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
     * @example Duration.fromISOTime('T11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
     * @example Duration.fromISOTime('1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
     * @example Duration.fromISOTime('T1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
     * @return {Duration}
     */static fromISOTime(text,opts){const[parsed]=parseISOTimeOnly(text);if(parsed){return Duration.fromObject(parsed,opts);}else{return Duration.invalid("unparsable",`the input "${text}" can't be parsed as ISO 8601`);}}/**
     * Create an invalid Duration.
     * @param {string} reason - simple string of why this datetime is invalid. Should not contain parameters or anything else data-dependent
     * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information
     * @return {Duration}
     */static invalid(reason,explanation=null){if(!reason){throw new InvalidArgumentError("need to specify a reason the Duration is invalid");}const invalid=reason instanceof Invalid?reason:new Invalid(reason,explanation);if(Settings.throwOnInvalid){throw new InvalidDurationError(invalid);}else{return new Duration({invalid});}}/**
     * @private
     */static normalizeUnit(unit){const normalized={year:"years",years:"years",quarter:"quarters",quarters:"quarters",month:"months",months:"months",week:"weeks",weeks:"weeks",day:"days",days:"days",hour:"hours",hours:"hours",minute:"minutes",minutes:"minutes",second:"seconds",seconds:"seconds",millisecond:"milliseconds",milliseconds:"milliseconds"}[unit?unit.toLowerCase():unit];if(!normalized)throw new InvalidUnitError(unit);return normalized;}/**
     * Check if an object is a Duration. Works across context boundaries
     * @param {object} o
     * @return {boolean}
     */static isDuration(o){return o&&o.isLuxonDuration||false;}/**
     * Get  the locale of a Duration, such 'en-GB'
     * @type {string}
     */get locale(){return this.isValid?this.loc.locale:null;}/**
     * Get the numbering system of a Duration, such 'beng'. The numbering system is used when formatting the Duration
     *
     * @type {string}
     */get numberingSystem(){return this.isValid?this.loc.numberingSystem:null;}/**
     * Returns a string representation of this Duration formatted according to the specified format string. You may use these tokens:
     * * `S` for milliseconds
     * * `s` for seconds
     * * `m` for minutes
     * * `h` for hours
     * * `d` for days
     * * `w` for weeks
     * * `M` for months
     * * `y` for years
     * Notes:
     * * Add padding by repeating the token, e.g. "yy" pads the years to two digits, "hhhh" pads the hours out to four digits
     * * Tokens can be escaped by wrapping with single quotes.
     * * The duration will be converted to the set of units in the format string using {@link Duration#shiftTo} and the Durations's conversion accuracy setting.
     * @param {string} fmt - the format string
     * @param {Object} opts - options
     * @param {boolean} [opts.floor=true] - floor numerical values
     * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat("y d s") //=> "1 6 2"
     * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat("yy dd sss") //=> "01 06 002"
     * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat("M S") //=> "12 518402000"
     * @return {string}
     */toFormat(fmt,opts={}){// reverse-compat since 1.2; we always round down now, never up, and we do it by default
const fmtOpts={...opts,floor:opts.round!==false&&opts.floor!==false};return this.isValid?Formatter.create(this.loc,fmtOpts).formatDurationFromString(this,fmt):INVALID$2;}/**
     * Returns a string representation of a Duration with all units included.
     * To modify its behavior, use `listStyle` and any Intl.NumberFormat option, though `unitDisplay` is especially relevant.
     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options
     * @param {Object} opts - Formatting options. Accepts the same keys as the options parameter of the native `Intl.NumberFormat` constructor, as well as `listStyle`.
     * @param {string} [opts.listStyle='narrow'] - How to format the merged list. Corresponds to the `style` property of the options parameter of the native `Intl.ListFormat` constructor.
     * @example
     * ```js
     * var dur = Duration.fromObject({ days: 1, hours: 5, minutes: 6 })
     * dur.toHuman() //=> '1 day, 5 hours, 6 minutes'
     * dur.toHuman({ listStyle: "long" }) //=> '1 day, 5 hours, and 6 minutes'
     * dur.toHuman({ unitDisplay: "short" }) //=> '1 day, 5 hr, 6 min'
     * ```
     */toHuman(opts={}){if(!this.isValid)return INVALID$2;const l=orderedUnits$1.map(unit=>{const val=this.values[unit];if(isUndefined(val)){return null;}return this.loc.numberFormatter({style:"unit",unitDisplay:"long",...opts,unit:unit.slice(0,-1)}).format(val);}).filter(n=>n);return this.loc.listFormatter({type:"conjunction",style:opts.listStyle||"narrow",...opts}).format(l);}/**
     * Returns a JavaScript object with this Duration's values.
     * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toObject() //=> { years: 1, days: 6, seconds: 2 }
     * @return {Object}
     */toObject(){if(!this.isValid)return{};return{...this.values};}/**
     * Returns an ISO 8601-compliant string representation of this Duration.
     * @see https://en.wikipedia.org/wiki/ISO_8601#Durations
     * @example Duration.fromObject({ years: 3, seconds: 45 }).toISO() //=> 'P3YT45S'
     * @example Duration.fromObject({ months: 4, seconds: 45 }).toISO() //=> 'P4MT45S'
     * @example Duration.fromObject({ months: 5 }).toISO() //=> 'P5M'
     * @example Duration.fromObject({ minutes: 5 }).toISO() //=> 'PT5M'
     * @example Duration.fromObject({ milliseconds: 6 }).toISO() //=> 'PT0.006S'
     * @return {string}
     */toISO(){// we could use the formatter, but this is an easier way to get the minimum string
if(!this.isValid)return null;let s="P";if(this.years!==0)s+=this.years+"Y";if(this.months!==0||this.quarters!==0)s+=this.months+this.quarters*3+"M";if(this.weeks!==0)s+=this.weeks+"W";if(this.days!==0)s+=this.days+"D";if(this.hours!==0||this.minutes!==0||this.seconds!==0||this.milliseconds!==0)s+="T";if(this.hours!==0)s+=this.hours+"H";if(this.minutes!==0)s+=this.minutes+"M";if(this.seconds!==0||this.milliseconds!==0)// this will handle "floating point madness" by removing extra decimal places
// https://stackoverflow.com/questions/588004/is-floating-point-math-broken
s+=roundTo(this.seconds+this.milliseconds/1000,3)+"S";if(s==="P")s+="T0S";return s;}/**
     * Returns an ISO 8601-compliant string representation of this Duration, formatted as a time of day.
     * Note that this will return null if the duration is invalid, negative, or equal to or greater than 24 hours.
     * @see https://en.wikipedia.org/wiki/ISO_8601#Times
     * @param {Object} opts - options
     * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0
     * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0
     * @param {boolean} [opts.includePrefix=false] - include the `T` prefix
     * @param {string} [opts.format='extended'] - choose between the basic and extended format
     * @example Duration.fromObject({ hours: 11 }).toISOTime() //=> '11:00:00.000'
     * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressMilliseconds: true }) //=> '11:00:00'
     * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressSeconds: true }) //=> '11:00'
     * @example Duration.fromObject({ hours: 11 }).toISOTime({ includePrefix: true }) //=> 'T11:00:00.000'
     * @example Duration.fromObject({ hours: 11 }).toISOTime({ format: 'basic' }) //=> '110000.000'
     * @return {string}
     */toISOTime(opts={}){if(!this.isValid)return null;const millis=this.toMillis();if(millis<0||millis>=86400000)return null;opts={suppressMilliseconds:false,suppressSeconds:false,includePrefix:false,format:"extended",...opts,includeOffset:false};const dateTime=DateTime.fromMillis(millis,{zone:"UTC"});return dateTime.toISOTime(opts);}/**
     * Returns an ISO 8601 representation of this Duration appropriate for use in JSON.
     * @return {string}
     */toJSON(){return this.toISO();}/**
     * Returns an ISO 8601 representation of this Duration appropriate for use in debugging.
     * @return {string}
     */toString(){return this.toISO();}/**
     * Returns a string representation of this Duration appropriate for the REPL.
     * @return {string}
     */[Symbol.for("nodejs.util.inspect.custom")](){if(this.isValid){return`Duration { values: ${JSON.stringify(this.values)} }`;}else{return`Duration { Invalid, reason: ${this.invalidReason} }`;}}/**
     * Returns an milliseconds value of this Duration.
     * @return {number}
     */toMillis(){if(!this.isValid)return NaN;return durationToMillis(this.matrix,this.values);}/**
     * Returns an milliseconds value of this Duration. Alias of {@link toMillis}
     * @return {number}
     */valueOf(){return this.toMillis();}/**
     * Make this Duration longer by the specified amount. Return a newly-constructed Duration.
     * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
     * @return {Duration}
     */plus(duration){if(!this.isValid)return this;const dur=Duration.fromDurationLike(duration),result={};for(const k of orderedUnits$1){if(hasOwnProperty(dur.values,k)||hasOwnProperty(this.values,k)){result[k]=dur.get(k)+this.get(k);}}return clone$1(this,{values:result},true);}/**
     * Make this Duration shorter by the specified amount. Return a newly-constructed Duration.
     * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
     * @return {Duration}
     */minus(duration){if(!this.isValid)return this;const dur=Duration.fromDurationLike(duration);return this.plus(dur.negate());}/**
     * Scale this Duration by the specified amount. Return a newly-constructed Duration.
     * @param {function} fn - The function to apply to each unit. Arity is 1 or 2: the value of the unit and, optionally, the unit name. Must return a number.
     * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnits(x => x * 2) //=> { hours: 2, minutes: 60 }
     * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnits((x, u) => u === "hours" ? x * 2 : x) //=> { hours: 2, minutes: 30 }
     * @return {Duration}
     */mapUnits(fn){if(!this.isValid)return this;const result={};for(const k of Object.keys(this.values)){result[k]=asNumber(fn(this.values[k],k));}return clone$1(this,{values:result},true);}/**
     * Get the value of unit.
     * @param {string} unit - a unit such as 'minute' or 'day'
     * @example Duration.fromObject({years: 2, days: 3}).get('years') //=> 2
     * @example Duration.fromObject({years: 2, days: 3}).get('months') //=> 0
     * @example Duration.fromObject({years: 2, days: 3}).get('days') //=> 3
     * @return {number}
     */get(unit){return this[Duration.normalizeUnit(unit)];}/**
     * "Set" the values of specified units. Return a newly-constructed Duration.
     * @param {Object} values - a mapping of units to numbers
     * @example dur.set({ years: 2017 })
     * @example dur.set({ hours: 8, minutes: 30 })
     * @return {Duration}
     */set(values){if(!this.isValid)return this;const mixed={...this.values,...normalizeObject(values,Duration.normalizeUnit)};return clone$1(this,{values:mixed});}/**
     * "Set" the locale and/or numberingSystem.  Returns a newly-constructed Duration.
     * @example dur.reconfigure({ locale: 'en-GB' })
     * @return {Duration}
     */reconfigure({locale,numberingSystem,conversionAccuracy,matrix}={}){const loc=this.loc.clone({locale,numberingSystem});const opts={loc,matrix,conversionAccuracy};return clone$1(this,opts);}/**
     * Return the length of the duration in the specified unit.
     * @param {string} unit - a unit such as 'minutes' or 'days'
     * @example Duration.fromObject({years: 1}).as('days') //=> 365
     * @example Duration.fromObject({years: 1}).as('months') //=> 12
     * @example Duration.fromObject({hours: 60}).as('days') //=> 2.5
     * @return {number}
     */as(unit){return this.isValid?this.shiftTo(unit).get(unit):NaN;}/**
     * Reduce this Duration to its canonical representation in its current units.
     * Assuming the overall value of the Duration is positive, this means:
     * - excessive values for lower-order units are converted to higher-order units (if possible, see first and second example)
     * - negative lower-order units are converted to higher order units (there must be such a higher order unit, otherwise
     *   the overall value would be negative, see third example)
     * - fractional values for higher-order units are converted to lower-order units (if possible, see fourth example)
     *
     * If the overall value is negative, the result of this method is equivalent to `this.negate().normalize().negate()`.
     * @example Duration.fromObject({ years: 2, days: 5000 }).normalize().toObject() //=> { years: 15, days: 255 }
     * @example Duration.fromObject({ days: 5000 }).normalize().toObject() //=> { days: 5000 }
     * @example Duration.fromObject({ hours: 12, minutes: -45 }).normalize().toObject() //=> { hours: 11, minutes: 15 }
     * @example Duration.fromObject({ years: 2.5, days: 0, hours: 0 }).normalize().toObject() //=> { years: 2, days: 182, hours: 12 }
     * @return {Duration}
     */normalize(){if(!this.isValid)return this;const vals=this.toObject();normalizeValues(this.matrix,vals);return clone$1(this,{values:vals},true);}/**
     * Rescale units to its largest representation
     * @example Duration.fromObject({ milliseconds: 90000 }).rescale().toObject() //=> { minutes: 1, seconds: 30 }
     * @return {Duration}
     */rescale(){if(!this.isValid)return this;const vals=removeZeroes(this.normalize().shiftToAll().toObject());return clone$1(this,{values:vals},true);}/**
     * Convert this Duration into its representation in a different set of units.
     * @example Duration.fromObject({ hours: 1, seconds: 30 }).shiftTo('minutes', 'milliseconds').toObject() //=> { minutes: 60, milliseconds: 30000 }
     * @return {Duration}
     */shiftTo(...units){if(!this.isValid)return this;if(units.length===0){return this;}units=units.map(u=>Duration.normalizeUnit(u));const built={},accumulated={},vals=this.toObject();let lastUnit;for(const k of orderedUnits$1){if(units.indexOf(k)>=0){lastUnit=k;let own=0;// anything we haven't boiled down yet should get boiled to this unit
for(const ak in accumulated){own+=this.matrix[ak][k]*accumulated[ak];accumulated[ak]=0;}// plus anything that's already in this unit
if(isNumber(vals[k])){own+=vals[k];}// only keep the integer part for now in the hopes of putting any decimal part
// into a smaller unit later
const i=Math.trunc(own);built[k]=i;accumulated[k]=(own*1000-i*1000)/1000;// otherwise, keep it in the wings to boil it later
}else if(isNumber(vals[k])){accumulated[k]=vals[k];}}// anything leftover becomes the decimal for the last unit
// lastUnit must be defined since units is not empty
for(const key in accumulated){if(accumulated[key]!==0){built[lastUnit]+=key===lastUnit?accumulated[key]:accumulated[key]/this.matrix[lastUnit][key];}}normalizeValues(this.matrix,built);return clone$1(this,{values:built},true);}/**
     * Shift this Duration to all available units.
     * Same as shiftTo("years", "months", "weeks", "days", "hours", "minutes", "seconds", "milliseconds")
     * @return {Duration}
     */shiftToAll(){if(!this.isValid)return this;return this.shiftTo("years","months","weeks","days","hours","minutes","seconds","milliseconds");}/**
     * Return the negative of this Duration.
     * @example Duration.fromObject({ hours: 1, seconds: 30 }).negate().toObject() //=> { hours: -1, seconds: -30 }
     * @return {Duration}
     */negate(){if(!this.isValid)return this;const negated={};for(const k of Object.keys(this.values)){negated[k]=this.values[k]===0?0:-this.values[k];}return clone$1(this,{values:negated},true);}/**
     * Get the years.
     * @type {number}
     */get years(){return this.isValid?this.values.years||0:NaN;}/**
     * Get the quarters.
     * @type {number}
     */get quarters(){return this.isValid?this.values.quarters||0:NaN;}/**
     * Get the months.
     * @type {number}
     */get months(){return this.isValid?this.values.months||0:NaN;}/**
     * Get the weeks
     * @type {number}
     */get weeks(){return this.isValid?this.values.weeks||0:NaN;}/**
     * Get the days.
     * @type {number}
     */get days(){return this.isValid?this.values.days||0:NaN;}/**
     * Get the hours.
     * @type {number}
     */get hours(){return this.isValid?this.values.hours||0:NaN;}/**
     * Get the minutes.
     * @type {number}
     */get minutes(){return this.isValid?this.values.minutes||0:NaN;}/**
     * Get the seconds.
     * @return {number}
     */get seconds(){return this.isValid?this.values.seconds||0:NaN;}/**
     * Get the milliseconds.
     * @return {number}
     */get milliseconds(){return this.isValid?this.values.milliseconds||0:NaN;}/**
     * Returns whether the Duration is invalid. Invalid durations are returned by diff operations
     * on invalid DateTimes or Intervals.
     * @return {boolean}
     */get isValid(){return this.invalid===null;}/**
     * Returns an error code if this Duration became invalid, or null if the Duration is valid
     * @return {string}
     */get invalidReason(){return this.invalid?this.invalid.reason:null;}/**
     * Returns an explanation of why this Duration became invalid, or null if the Duration is valid
     * @type {string}
     */get invalidExplanation(){return this.invalid?this.invalid.explanation:null;}/**
     * Equality check
     * Two Durations are equal iff they have the same units and the same values for each unit.
     * @param {Duration} other
     * @return {boolean}
     */equals(other){if(!this.isValid||!other.isValid){return false;}if(!this.loc.equals(other.loc)){return false;}function eq(v1,v2){// Consider 0 and undefined as equal
if(v1===undefined||v1===0)return v2===undefined||v2===0;return v1===v2;}for(const u of orderedUnits$1){if(!eq(this.values[u],other.values[u])){return false;}}return true;}}const INVALID$1="Invalid Interval";// checks if the start is equal to or before the end
function validateStartEnd(start,end){if(!start||!start.isValid){return Interval.invalid("missing or invalid start");}else if(!end||!end.isValid){return Interval.invalid("missing or invalid end");}else if(end<start){return Interval.invalid("end before start",`The end of an interval must be after its start, but you had start=${start.toISO()} and end=${end.toISO()}`);}else{return null;}}/**
   * An Interval object represents a half-open interval of time, where each endpoint is a {@link DateTime}. Conceptually, it's a container for those two endpoints, accompanied by methods for creating, parsing, interrogating, comparing, transforming, and formatting them.
   *
   * Here is a brief overview of the most commonly used methods and getters in Interval:
   *
   * * **Creation** To create an Interval, use {@link Interval.fromDateTimes}, {@link Interval.after}, {@link Interval.before}, or {@link Interval.fromISO}.
   * * **Accessors** Use {@link Interval#start} and {@link Interval#end} to get the start and end.
   * * **Interrogation** To analyze the Interval, use {@link Interval#count}, {@link Interval#length}, {@link Interval#hasSame}, {@link Interval#contains}, {@link Interval#isAfter}, or {@link Interval#isBefore}.
   * * **Transformation** To create other Intervals out of this one, use {@link Interval#set}, {@link Interval#splitAt}, {@link Interval#splitBy}, {@link Interval#divideEqually}, {@link Interval.merge}, {@link Interval.xor}, {@link Interval#union}, {@link Interval#intersection}, or {@link Interval#difference}.
   * * **Comparison** To compare this Interval to another one, use {@link Interval#equals}, {@link Interval#overlaps}, {@link Interval#abutsStart}, {@link Interval#abutsEnd}, {@link Interval#engulfs}
   * * **Output** To convert the Interval into other representations, see {@link Interval#toString}, {@link Interval#toLocaleString}, {@link Interval#toISO}, {@link Interval#toISODate}, {@link Interval#toISOTime}, {@link Interval#toFormat}, and {@link Interval#toDuration}.
   */class Interval{/**
     * @private
     */constructor(config){/**
       * @access private
       */this.s=config.start;/**
       * @access private
       */this.e=config.end;/**
       * @access private
       */this.invalid=config.invalid||null;/**
       * @access private
       */this.isLuxonInterval=true;}/**
     * Create an invalid Interval.
     * @param {string} reason - simple string of why this Interval is invalid. Should not contain parameters or anything else data-dependent
     * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information
     * @return {Interval}
     */static invalid(reason,explanation=null){if(!reason){throw new InvalidArgumentError("need to specify a reason the Interval is invalid");}const invalid=reason instanceof Invalid?reason:new Invalid(reason,explanation);if(Settings.throwOnInvalid){throw new InvalidIntervalError(invalid);}else{return new Interval({invalid});}}/**
     * Create an Interval from a start DateTime and an end DateTime. Inclusive of the start but not the end.
     * @param {DateTime|Date|Object} start
     * @param {DateTime|Date|Object} end
     * @return {Interval}
     */static fromDateTimes(start,end){const builtStart=friendlyDateTime(start),builtEnd=friendlyDateTime(end);const validateError=validateStartEnd(builtStart,builtEnd);if(validateError==null){return new Interval({start:builtStart,end:builtEnd});}else{return validateError;}}/**
     * Create an Interval from a start DateTime and a Duration to extend to.
     * @param {DateTime|Date|Object} start
     * @param {Duration|Object|number} duration - the length of the Interval.
     * @return {Interval}
     */static after(start,duration){const dur=Duration.fromDurationLike(duration),dt=friendlyDateTime(start);return Interval.fromDateTimes(dt,dt.plus(dur));}/**
     * Create an Interval from an end DateTime and a Duration to extend backwards to.
     * @param {DateTime|Date|Object} end
     * @param {Duration|Object|number} duration - the length of the Interval.
     * @return {Interval}
     */static before(end,duration){const dur=Duration.fromDurationLike(duration),dt=friendlyDateTime(end);return Interval.fromDateTimes(dt.minus(dur),dt);}/**
     * Create an Interval from an ISO 8601 string.
     * Accepts `<start>/<end>`, `<start>/<duration>`, and `<duration>/<end>` formats.
     * @param {string} text - the ISO string to parse
     * @param {Object} [opts] - options to pass {@link DateTime#fromISO} and optionally {@link Duration#fromISO}
     * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
     * @return {Interval}
     */static fromISO(text,opts){const[s,e]=(text||"").split("/",2);if(s&&e){let start,startIsValid;try{start=DateTime.fromISO(s,opts);startIsValid=start.isValid;}catch(e){startIsValid=false;}let end,endIsValid;try{end=DateTime.fromISO(e,opts);endIsValid=end.isValid;}catch(e){endIsValid=false;}if(startIsValid&&endIsValid){return Interval.fromDateTimes(start,end);}if(startIsValid){const dur=Duration.fromISO(e,opts);if(dur.isValid){return Interval.after(start,dur);}}else if(endIsValid){const dur=Duration.fromISO(s,opts);if(dur.isValid){return Interval.before(end,dur);}}}return Interval.invalid("unparsable",`the input "${text}" can't be parsed as ISO 8601`);}/**
     * Check if an object is an Interval. Works across context boundaries
     * @param {object} o
     * @return {boolean}
     */static isInterval(o){return o&&o.isLuxonInterval||false;}/**
     * Returns the start of the Interval
     * @type {DateTime}
     */get start(){return this.isValid?this.s:null;}/**
     * Returns the end of the Interval
     * @type {DateTime}
     */get end(){return this.isValid?this.e:null;}/**
     * Returns the last DateTime included in the interval (since end is not part of the interval)
     * @type {DateTime}
     */get lastDateTime(){return this.isValid?this.e?this.e.minus(1):null:null;}/**
     * Returns whether this Interval's end is at least its start, meaning that the Interval isn't 'backwards'.
     * @type {boolean}
     */get isValid(){return this.invalidReason===null;}/**
     * Returns an error code if this Interval is invalid, or null if the Interval is valid
     * @type {string}
     */get invalidReason(){return this.invalid?this.invalid.reason:null;}/**
     * Returns an explanation of why this Interval became invalid, or null if the Interval is valid
     * @type {string}
     */get invalidExplanation(){return this.invalid?this.invalid.explanation:null;}/**
     * Returns the length of the Interval in the specified unit.
     * @param {string} unit - the unit (such as 'hours' or 'days') to return the length in.
     * @return {number}
     */length(unit="milliseconds"){return this.isValid?this.toDuration(...[unit]).get(unit):NaN;}/**
     * Returns the count of minutes, hours, days, months, or years included in the Interval, even in part.
     * Unlike {@link Interval#length} this counts sections of the calendar, not periods of time, e.g. specifying 'day'
     * asks 'what dates are included in this interval?', not 'how many days long is this interval?'
     * @param {string} [unit='milliseconds'] - the unit of time to count.
     * @param {Object} opts - options
     * @param {boolean} [opts.useLocaleWeeks=false] - If true, use weeks based on the locale, i.e. use the locale-dependent start of the week; this operation will always use the locale of the start DateTime
     * @return {number}
     */count(unit="milliseconds",opts){if(!this.isValid)return NaN;const start=this.start.startOf(unit,opts);let end;if(opts?.useLocaleWeeks){end=this.end.reconfigure({locale:start.locale});}else{end=this.end;}end=end.startOf(unit,opts);return Math.floor(end.diff(start,unit).get(unit))+(end.valueOf()!==this.end.valueOf());}/**
     * Returns whether this Interval's start and end are both in the same unit of time
     * @param {string} unit - the unit of time to check sameness on
     * @return {boolean}
     */hasSame(unit){return this.isValid?this.isEmpty()||this.e.minus(1).hasSame(this.s,unit):false;}/**
     * Return whether this Interval has the same start and end DateTimes.
     * @return {boolean}
     */isEmpty(){return this.s.valueOf()===this.e.valueOf();}/**
     * Return whether this Interval's start is after the specified DateTime.
     * @param {DateTime} dateTime
     * @return {boolean}
     */isAfter(dateTime){if(!this.isValid)return false;return this.s>dateTime;}/**
     * Return whether this Interval's end is before the specified DateTime.
     * @param {DateTime} dateTime
     * @return {boolean}
     */isBefore(dateTime){if(!this.isValid)return false;return this.e<=dateTime;}/**
     * Return whether this Interval contains the specified DateTime.
     * @param {DateTime} dateTime
     * @return {boolean}
     */contains(dateTime){if(!this.isValid)return false;return this.s<=dateTime&&this.e>dateTime;}/**
     * "Sets" the start and/or end dates. Returns a newly-constructed Interval.
     * @param {Object} values - the values to set
     * @param {DateTime} values.start - the starting DateTime
     * @param {DateTime} values.end - the ending DateTime
     * @return {Interval}
     */set({start,end}={}){if(!this.isValid)return this;return Interval.fromDateTimes(start||this.s,end||this.e);}/**
     * Split this Interval at each of the specified DateTimes
     * @param {...DateTime} dateTimes - the unit of time to count.
     * @return {Array}
     */splitAt(...dateTimes){if(!this.isValid)return[];const sorted=dateTimes.map(friendlyDateTime).filter(d=>this.contains(d)).sort((a,b)=>a.toMillis()-b.toMillis()),results=[];let{s}=this,i=0;while(s<this.e){const added=sorted[i]||this.e,next=+added>+this.e?this.e:added;results.push(Interval.fromDateTimes(s,next));s=next;i+=1;}return results;}/**
     * Split this Interval into smaller Intervals, each of the specified length.
     * Left over time is grouped into a smaller interval
     * @param {Duration|Object|number} duration - The length of each resulting interval.
     * @return {Array}
     */splitBy(duration){const dur=Duration.fromDurationLike(duration);if(!this.isValid||!dur.isValid||dur.as("milliseconds")===0){return[];}let{s}=this,idx=1,next;const results=[];while(s<this.e){const added=this.start.plus(dur.mapUnits(x=>x*idx));next=+added>+this.e?this.e:added;results.push(Interval.fromDateTimes(s,next));s=next;idx+=1;}return results;}/**
     * Split this Interval into the specified number of smaller intervals.
     * @param {number} numberOfParts - The number of Intervals to divide the Interval into.
     * @return {Array}
     */divideEqually(numberOfParts){if(!this.isValid)return[];return this.splitBy(this.length()/numberOfParts).slice(0,numberOfParts);}/**
     * Return whether this Interval overlaps with the specified Interval
     * @param {Interval} other
     * @return {boolean}
     */overlaps(other){return this.e>other.s&&this.s<other.e;}/**
     * Return whether this Interval's end is adjacent to the specified Interval's start.
     * @param {Interval} other
     * @return {boolean}
     */abutsStart(other){if(!this.isValid)return false;return+this.e===+other.s;}/**
     * Return whether this Interval's start is adjacent to the specified Interval's end.
     * @param {Interval} other
     * @return {boolean}
     */abutsEnd(other){if(!this.isValid)return false;return+other.e===+this.s;}/**
     * Returns true if this Interval fully contains the specified Interval, specifically if the intersect (of this Interval and the other Interval) is equal to the other Interval; false otherwise.
     * @param {Interval} other
     * @return {boolean}
     */engulfs(other){if(!this.isValid)return false;return this.s<=other.s&&this.e>=other.e;}/**
     * Return whether this Interval has the same start and end as the specified Interval.
     * @param {Interval} other
     * @return {boolean}
     */equals(other){if(!this.isValid||!other.isValid){return false;}return this.s.equals(other.s)&&this.e.equals(other.e);}/**
     * Return an Interval representing the intersection of this Interval and the specified Interval.
     * Specifically, the resulting Interval has the maximum start time and the minimum end time of the two Intervals.
     * Returns null if the intersection is empty, meaning, the intervals don't intersect.
     * @param {Interval} other
     * @return {Interval}
     */intersection(other){if(!this.isValid)return this;const s=this.s>other.s?this.s:other.s,e=this.e<other.e?this.e:other.e;if(s>=e){return null;}else{return Interval.fromDateTimes(s,e);}}/**
     * Return an Interval representing the union of this Interval and the specified Interval.
     * Specifically, the resulting Interval has the minimum start time and the maximum end time of the two Intervals.
     * @param {Interval} other
     * @return {Interval}
     */union(other){if(!this.isValid)return this;const s=this.s<other.s?this.s:other.s,e=this.e>other.e?this.e:other.e;return Interval.fromDateTimes(s,e);}/**
     * Merge an array of Intervals into an equivalent minimal set of Intervals.
     * Combines overlapping and adjacent Intervals.
     * The resulting array will contain the Intervals in ascending order, that is, starting with the earliest Interval
     * and ending with the latest.
     *
     * @param {Array} intervals
     * @return {Array}
     */static merge(intervals){const[found,final]=intervals.sort((a,b)=>a.s-b.s).reduce(([sofar,current],item)=>{if(!current){return[sofar,item];}else if(current.overlaps(item)||current.abutsStart(item)){return[sofar,current.union(item)];}else{return[sofar.concat([current]),item];}},[[],null]);if(final){found.push(final);}return found;}/**
     * Return an array of Intervals representing the spans of time that only appear in one of the specified Intervals.
     * @param {Array} intervals
     * @return {Array}
     */static xor(intervals){let start=null,currentCount=0;const results=[],ends=intervals.map(i=>[{time:i.s,type:"s"},{time:i.e,type:"e"}]),flattened=Array.prototype.concat(...ends),arr=flattened.sort((a,b)=>a.time-b.time);for(const i of arr){currentCount+=i.type==="s"?1:-1;if(currentCount===1){start=i.time;}else{if(start&&+start!==+i.time){results.push(Interval.fromDateTimes(start,i.time));}start=null;}}return Interval.merge(results);}/**
     * Return an Interval representing the span of time in this Interval that doesn't overlap with any of the specified Intervals.
     * @param {...Interval} intervals
     * @return {Array}
     */difference(...intervals){return Interval.xor([this].concat(intervals)).map(i=>this.intersection(i)).filter(i=>i&&!i.isEmpty());}/**
     * Returns a string representation of this Interval appropriate for debugging.
     * @return {string}
     */toString(){if(!this.isValid)return INVALID$1;return`[${this.s.toISO()} – ${this.e.toISO()})`;}/**
     * Returns a string representation of this Interval appropriate for the REPL.
     * @return {string}
     */[Symbol.for("nodejs.util.inspect.custom")](){if(this.isValid){return`Interval { start: ${this.s.toISO()}, end: ${this.e.toISO()} }`;}else{return`Interval { Invalid, reason: ${this.invalidReason} }`;}}/**
     * Returns a localized string representing this Interval. Accepts the same options as the
     * Intl.DateTimeFormat constructor and any presets defined by Luxon, such as
     * {@link DateTime.DATE_FULL} or {@link DateTime.TIME_SIMPLE}. The exact behavior of this method
     * is browser-specific, but in general it will return an appropriate representation of the
     * Interval in the assigned locale. Defaults to the system's locale if no locale has been
     * specified.
     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat
     * @param {Object} [formatOpts=DateTime.DATE_SHORT] - Either a DateTime preset or
     * Intl.DateTimeFormat constructor options.
     * @param {Object} opts - Options to override the configuration of the start DateTime.
     * @example Interval.fromISO('2022-11-07T09:00Z/2022-11-08T09:00Z').toLocaleString(); //=> 11/7/2022 – 11/8/2022
     * @example Interval.fromISO('2022-11-07T09:00Z/2022-11-08T09:00Z').toLocaleString(DateTime.DATE_FULL); //=> November 7 – 8, 2022
     * @example Interval.fromISO('2022-11-07T09:00Z/2022-11-08T09:00Z').toLocaleString(DateTime.DATE_FULL, { locale: 'fr-FR' }); //=> 7–8 novembre 2022
     * @example Interval.fromISO('2022-11-07T17:00Z/2022-11-07T19:00Z').toLocaleString(DateTime.TIME_SIMPLE); //=> 6:00 – 8:00 PM
     * @example Interval.fromISO('2022-11-07T17:00Z/2022-11-07T19:00Z').toLocaleString({ weekday: 'short', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }); //=> Mon, Nov 07, 6:00 – 8:00 p
     * @return {string}
     */toLocaleString(formatOpts=DATE_SHORT,opts={}){return this.isValid?Formatter.create(this.s.loc.clone(opts),formatOpts).formatInterval(this):INVALID$1;}/**
     * Returns an ISO 8601-compliant string representation of this Interval.
     * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
     * @param {Object} opts - The same options as {@link DateTime#toISO}
     * @return {string}
     */toISO(opts){if(!this.isValid)return INVALID$1;return`${this.s.toISO(opts)}/${this.e.toISO(opts)}`;}/**
     * Returns an ISO 8601-compliant string representation of date of this Interval.
     * The time components are ignored.
     * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
     * @return {string}
     */toISODate(){if(!this.isValid)return INVALID$1;return`${this.s.toISODate()}/${this.e.toISODate()}`;}/**
     * Returns an ISO 8601-compliant string representation of time of this Interval.
     * The date components are ignored.
     * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
     * @param {Object} opts - The same options as {@link DateTime#toISO}
     * @return {string}
     */toISOTime(opts){if(!this.isValid)return INVALID$1;return`${this.s.toISOTime(opts)}/${this.e.toISOTime(opts)}`;}/**
     * Returns a string representation of this Interval formatted according to the specified format
     * string. **You may not want this.** See {@link Interval#toLocaleString} for a more flexible
     * formatting tool.
     * @param {string} dateFormat - The format string. This string formats the start and end time.
     * See {@link DateTime#toFormat} for details.
     * @param {Object} opts - Options.
     * @param {string} [opts.separator =  ' – '] - A separator to place between the start and end
     * representations.
     * @return {string}
     */toFormat(dateFormat,{separator=" – "}={}){if(!this.isValid)return INVALID$1;return`${this.s.toFormat(dateFormat)}${separator}${this.e.toFormat(dateFormat)}`;}/**
     * Return a Duration representing the time spanned by this interval.
     * @param {string|string[]} [unit=['milliseconds']] - the unit or units (such as 'hours' or 'days') to include in the duration.
     * @param {Object} opts - options that affect the creation of the Duration
     * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
     * @example Interval.fromDateTimes(dt1, dt2).toDuration().toObject() //=> { milliseconds: 88489257 }
     * @example Interval.fromDateTimes(dt1, dt2).toDuration('days').toObject() //=> { days: 1.0241812152777778 }
     * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes']).toObject() //=> { hours: 24, minutes: 34.82095 }
     * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes', 'seconds']).toObject() //=> { hours: 24, minutes: 34, seconds: 49.257 }
     * @example Interval.fromDateTimes(dt1, dt2).toDuration('seconds').toObject() //=> { seconds: 88489.257 }
     * @return {Duration}
     */toDuration(unit,opts){if(!this.isValid){return Duration.invalid(this.invalidReason);}return this.e.diff(this.s,unit,opts);}/**
     * Run mapFn on the interval start and end, returning a new Interval from the resulting DateTimes
     * @param {function} mapFn
     * @return {Interval}
     * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.toUTC())
     * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.plus({ hours: 2 }))
     */mapEndpoints(mapFn){return Interval.fromDateTimes(mapFn(this.s),mapFn(this.e));}}/**
   * The Info class contains static methods for retrieving general time and date related data. For example, it has methods for finding out if a time zone has a DST, for listing the months in any supported locale, and for discovering which of Luxon features are available in the current environment.
   */class Info{/**
     * Return whether the specified zone contains a DST.
     * @param {string|Zone} [zone='local'] - Zone to check. Defaults to the environment's local zone.
     * @return {boolean}
     */static hasDST(zone=Settings.defaultZone){const proto=DateTime.now().setZone(zone).set({month:12});return!zone.isUniversal&&proto.offset!==proto.set({month:6}).offset;}/**
     * Return whether the specified zone is a valid IANA specifier.
     * @param {string} zone - Zone to check
     * @return {boolean}
     */static isValidIANAZone(zone){return IANAZone.isValidZone(zone);}/**
     * Converts the input into a {@link Zone} instance.
     *
     * * If `input` is already a Zone instance, it is returned unchanged.
     * * If `input` is a string containing a valid time zone name, a Zone instance
     *   with that name is returned.
     * * If `input` is a string that doesn't refer to a known time zone, a Zone
     *   instance with {@link Zone#isValid} == false is returned.
     * * If `input is a number, a Zone instance with the specified fixed offset
     *   in minutes is returned.
     * * If `input` is `null` or `undefined`, the default zone is returned.
     * @param {string|Zone|number} [input] - the value to be converted
     * @return {Zone}
     */static normalizeZone(input){return normalizeZone(input,Settings.defaultZone);}/**
     * Get the weekday on which the week starts according to the given locale.
     * @param {Object} opts - options
     * @param {string} [opts.locale] - the locale code
     * @param {string} [opts.locObj=null] - an existing locale object to use
     * @returns {number} the start of the week, 1 for Monday through 7 for Sunday
     */static getStartOfWeek({locale=null,locObj=null}={}){return(locObj||Locale.create(locale)).getStartOfWeek();}/**
     * Get the minimum number of days necessary in a week before it is considered part of the next year according
     * to the given locale.
     * @param {Object} opts - options
     * @param {string} [opts.locale] - the locale code
     * @param {string} [opts.locObj=null] - an existing locale object to use
     * @returns {number}
     */static getMinimumDaysInFirstWeek({locale=null,locObj=null}={}){return(locObj||Locale.create(locale)).getMinDaysInFirstWeek();}/**
     * Get the weekdays, which are considered the weekend according to the given locale
     * @param {Object} opts - options
     * @param {string} [opts.locale] - the locale code
     * @param {string} [opts.locObj=null] - an existing locale object to use
     * @returns {number[]} an array of weekdays, 1 for Monday through 7 for Sunday
     */static getWeekendWeekdays({locale=null,locObj=null}={}){// copy the array, because we cache it internally
return(locObj||Locale.create(locale)).getWeekendDays().slice();}/**
     * Return an array of standalone month names.
     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat
     * @param {string} [length='long'] - the length of the month representation, such as "numeric", "2-digit", "narrow", "short", "long"
     * @param {Object} opts - options
     * @param {string} [opts.locale] - the locale code
     * @param {string} [opts.numberingSystem=null] - the numbering system
     * @param {string} [opts.locObj=null] - an existing locale object to use
     * @param {string} [opts.outputCalendar='gregory'] - the calendar
     * @example Info.months()[0] //=> 'January'
     * @example Info.months('short')[0] //=> 'Jan'
     * @example Info.months('numeric')[0] //=> '1'
     * @example Info.months('short', { locale: 'fr-CA' } )[0] //=> 'janv.'
     * @example Info.months('numeric', { locale: 'ar' })[0] //=> '١'
     * @example Info.months('long', { outputCalendar: 'islamic' })[0] //=> 'Rabiʻ I'
     * @return {Array}
     */static months(length="long",{locale=null,numberingSystem=null,locObj=null,outputCalendar="gregory"}={}){return(locObj||Locale.create(locale,numberingSystem,outputCalendar)).months(length);}/**
     * Return an array of format month names.
     * Format months differ from standalone months in that they're meant to appear next to the day of the month. In some languages, that
     * changes the string.
     * See {@link Info#months}
     * @param {string} [length='long'] - the length of the month representation, such as "numeric", "2-digit", "narrow", "short", "long"
     * @param {Object} opts - options
     * @param {string} [opts.locale] - the locale code
     * @param {string} [opts.numberingSystem=null] - the numbering system
     * @param {string} [opts.locObj=null] - an existing locale object to use
     * @param {string} [opts.outputCalendar='gregory'] - the calendar
     * @return {Array}
     */static monthsFormat(length="long",{locale=null,numberingSystem=null,locObj=null,outputCalendar="gregory"}={}){return(locObj||Locale.create(locale,numberingSystem,outputCalendar)).months(length,true);}/**
     * Return an array of standalone week names.
     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat
     * @param {string} [length='long'] - the length of the weekday representation, such as "narrow", "short", "long".
     * @param {Object} opts - options
     * @param {string} [opts.locale] - the locale code
     * @param {string} [opts.numberingSystem=null] - the numbering system
     * @param {string} [opts.locObj=null] - an existing locale object to use
     * @example Info.weekdays()[0] //=> 'Monday'
     * @example Info.weekdays('short')[0] //=> 'Mon'
     * @example Info.weekdays('short', { locale: 'fr-CA' })[0] //=> 'lun.'
     * @example Info.weekdays('short', { locale: 'ar' })[0] //=> 'الاثنين'
     * @return {Array}
     */static weekdays(length="long",{locale=null,numberingSystem=null,locObj=null}={}){return(locObj||Locale.create(locale,numberingSystem,null)).weekdays(length);}/**
     * Return an array of format week names.
     * Format weekdays differ from standalone weekdays in that they're meant to appear next to more date information. In some languages, that
     * changes the string.
     * See {@link Info#weekdays}
     * @param {string} [length='long'] - the length of the month representation, such as "narrow", "short", "long".
     * @param {Object} opts - options
     * @param {string} [opts.locale=null] - the locale code
     * @param {string} [opts.numberingSystem=null] - the numbering system
     * @param {string} [opts.locObj=null] - an existing locale object to use
     * @return {Array}
     */static weekdaysFormat(length="long",{locale=null,numberingSystem=null,locObj=null}={}){return(locObj||Locale.create(locale,numberingSystem,null)).weekdays(length,true);}/**
     * Return an array of meridiems.
     * @param {Object} opts - options
     * @param {string} [opts.locale] - the locale code
     * @example Info.meridiems() //=> [ 'AM', 'PM' ]
     * @example Info.meridiems({ locale: 'my' }) //=> [ 'နံနက်', 'ညနေ' ]
     * @return {Array}
     */static meridiems({locale=null}={}){return Locale.create(locale).meridiems();}/**
     * Return an array of eras, such as ['BC', 'AD']. The locale can be specified, but the calendar system is always Gregorian.
     * @param {string} [length='short'] - the length of the era representation, such as "short" or "long".
     * @param {Object} opts - options
     * @param {string} [opts.locale] - the locale code
     * @example Info.eras() //=> [ 'BC', 'AD' ]
     * @example Info.eras('long') //=> [ 'Before Christ', 'Anno Domini' ]
     * @example Info.eras('long', { locale: 'fr' }) //=> [ 'avant Jésus-Christ', 'après Jésus-Christ' ]
     * @return {Array}
     */static eras(length="short",{locale=null}={}){return Locale.create(locale,null,"gregory").eras(length);}/**
     * Return the set of available features in this environment.
     * Some features of Luxon are not available in all environments. For example, on older browsers, relative time formatting support is not available. Use this function to figure out if that's the case.
     * Keys:
     * * `relative`: whether this environment supports relative time formatting
     * * `localeWeek`: whether this environment supports different weekdays for the start of the week based on the locale
     * @example Info.features() //=> { relative: false, localeWeek: true }
     * @return {Object}
     */static features(){return{relative:hasRelative(),localeWeek:hasLocaleWeekInfo()};}}function dayDiff(earlier,later){const utcDayStart=dt=>dt.toUTC(0,{keepLocalTime:true}).startOf("day").valueOf(),ms=utcDayStart(later)-utcDayStart(earlier);return Math.floor(Duration.fromMillis(ms).as("days"));}function highOrderDiffs(cursor,later,units){const differs=[["years",(a,b)=>b.year-a.year],["quarters",(a,b)=>b.quarter-a.quarter+(b.year-a.year)*4],["months",(a,b)=>b.month-a.month+(b.year-a.year)*12],["weeks",(a,b)=>{const days=dayDiff(a,b);return(days-days%7)/7;}],["days",dayDiff]];const results={};const earlier=cursor;let lowestOrder,highWater;/* This loop tries to diff using larger units first.
       If we overshoot, we backtrack and try the next smaller unit.
       "cursor" starts out at the earlier timestamp and moves closer and closer to "later"
       as we use smaller and smaller units.
       highWater keeps track of where we would be if we added one more of the smallest unit,
       this is used later to potentially convert any difference smaller than the smallest higher order unit
       into a fraction of that smallest higher order unit
    */for(const[unit,differ]of differs){if(units.indexOf(unit)>=0){lowestOrder=unit;results[unit]=differ(cursor,later);highWater=earlier.plus(results);if(highWater>later){// we overshot the end point, backtrack cursor by 1
results[unit]--;cursor=earlier.plus(results);// if we are still overshooting now, we need to backtrack again
// this happens in certain situations when diffing times in different zones,
// because this calculation ignores time zones
if(cursor>later){// keep the "overshot by 1" around as highWater
highWater=cursor;// backtrack cursor by 1
results[unit]--;cursor=earlier.plus(results);}}else{cursor=highWater;}}}return[cursor,results,highWater,lowestOrder];}function diff(earlier,later,units,opts){let[cursor,results,highWater,lowestOrder]=highOrderDiffs(earlier,later,units);const remainingMillis=later-cursor;const lowerOrderUnits=units.filter(u=>["hours","minutes","seconds","milliseconds"].indexOf(u)>=0);if(lowerOrderUnits.length===0){if(highWater<later){highWater=cursor.plus({[lowestOrder]:1});}if(highWater!==cursor){results[lowestOrder]=(results[lowestOrder]||0)+remainingMillis/(highWater-cursor);}}const duration=Duration.fromObject(results,opts);if(lowerOrderUnits.length>0){return Duration.fromMillis(remainingMillis,opts).shiftTo(...lowerOrderUnits).plus(duration);}else{return duration;}}const MISSING_FTP="missing Intl.DateTimeFormat.formatToParts support";function intUnit(regex,post=i=>i){return{regex,deser:([s])=>post(parseDigits(s))};}const NBSP=String.fromCharCode(160);const spaceOrNBSP=`[ ${NBSP}]`;const spaceOrNBSPRegExp=new RegExp(spaceOrNBSP,"g");function fixListRegex(s){// make dots optional and also make them literal
// make space and non breakable space characters interchangeable
return s.replace(/\./g,"\\.?").replace(spaceOrNBSPRegExp,spaceOrNBSP);}function stripInsensitivities(s){return s.replace(/\./g,"")// ignore dots that were made optional
.replace(spaceOrNBSPRegExp," ")// interchange space and nbsp
.toLowerCase();}function oneOf(strings,startIndex){if(strings===null){return null;}else{return{regex:RegExp(strings.map(fixListRegex).join("|")),deser:([s])=>strings.findIndex(i=>stripInsensitivities(s)===stripInsensitivities(i))+startIndex};}}function offset(regex,groups){return{regex,deser:([,h,m])=>signedOffset(h,m),groups};}function simple(regex){return{regex,deser:([s])=>s};}function escapeToken(value){return value.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&");}/**
   * @param token
   * @param {Locale} loc
   */function unitForToken(token,loc){const one=digitRegex(loc),two=digitRegex(loc,"{2}"),three=digitRegex(loc,"{3}"),four=digitRegex(loc,"{4}"),six=digitRegex(loc,"{6}"),oneOrTwo=digitRegex(loc,"{1,2}"),oneToThree=digitRegex(loc,"{1,3}"),oneToSix=digitRegex(loc,"{1,6}"),oneToNine=digitRegex(loc,"{1,9}"),twoToFour=digitRegex(loc,"{2,4}"),fourToSix=digitRegex(loc,"{4,6}"),literal=t=>({regex:RegExp(escapeToken(t.val)),deser:([s])=>s,literal:true}),unitate=t=>{if(token.literal){return literal(t);}switch(t.val){// era
case"G":return oneOf(loc.eras("short"),0);case"GG":return oneOf(loc.eras("long"),0);// years
case"y":return intUnit(oneToSix);case"yy":return intUnit(twoToFour,untruncateYear);case"yyyy":return intUnit(four);case"yyyyy":return intUnit(fourToSix);case"yyyyyy":return intUnit(six);// months
case"M":return intUnit(oneOrTwo);case"MM":return intUnit(two);case"MMM":return oneOf(loc.months("short",true),1);case"MMMM":return oneOf(loc.months("long",true),1);case"L":return intUnit(oneOrTwo);case"LL":return intUnit(two);case"LLL":return oneOf(loc.months("short",false),1);case"LLLL":return oneOf(loc.months("long",false),1);// dates
case"d":return intUnit(oneOrTwo);case"dd":return intUnit(two);// ordinals
case"o":return intUnit(oneToThree);case"ooo":return intUnit(three);// time
case"HH":return intUnit(two);case"H":return intUnit(oneOrTwo);case"hh":return intUnit(two);case"h":return intUnit(oneOrTwo);case"mm":return intUnit(two);case"m":return intUnit(oneOrTwo);case"q":return intUnit(oneOrTwo);case"qq":return intUnit(two);case"s":return intUnit(oneOrTwo);case"ss":return intUnit(two);case"S":return intUnit(oneToThree);case"SSS":return intUnit(three);case"u":return simple(oneToNine);case"uu":return simple(oneOrTwo);case"uuu":return intUnit(one);// meridiem
case"a":return oneOf(loc.meridiems(),0);// weekYear (k)
case"kkkk":return intUnit(four);case"kk":return intUnit(twoToFour,untruncateYear);// weekNumber (W)
case"W":return intUnit(oneOrTwo);case"WW":return intUnit(two);// weekdays
case"E":case"c":return intUnit(one);case"EEE":return oneOf(loc.weekdays("short",false),1);case"EEEE":return oneOf(loc.weekdays("long",false),1);case"ccc":return oneOf(loc.weekdays("short",true),1);case"cccc":return oneOf(loc.weekdays("long",true),1);// offset/zone
case"Z":case"ZZ":return offset(new RegExp(`([+-]${oneOrTwo.source})(?::(${two.source}))?`),2);case"ZZZ":return offset(new RegExp(`([+-]${oneOrTwo.source})(${two.source})?`),2);// we don't support ZZZZ (PST) or ZZZZZ (Pacific Standard Time) in parsing
// because we don't have any way to figure out what they are
case"z":return simple(/[a-z_+-/]{1,256}?/i);// this special-case "token" represents a place where a macro-token expanded into a white-space literal
// in this case we accept any non-newline white-space
case" ":return simple(/[^\S\n\r]/);default:return literal(t);}};const unit=unitate(token)||{invalidReason:MISSING_FTP};unit.token=token;return unit;}const partTypeStyleToTokenVal={year:{"2-digit":"yy",numeric:"yyyyy"},month:{numeric:"M","2-digit":"MM",short:"MMM",long:"MMMM"},day:{numeric:"d","2-digit":"dd"},weekday:{short:"EEE",long:"EEEE"},dayperiod:"a",dayPeriod:"a",hour12:{numeric:"h","2-digit":"hh"},hour24:{numeric:"H","2-digit":"HH"},minute:{numeric:"m","2-digit":"mm"},second:{numeric:"s","2-digit":"ss"},timeZoneName:{long:"ZZZZZ",short:"ZZZ"}};function tokenForPart(part,formatOpts,resolvedOpts){const{type,value}=part;if(type==="literal"){const isSpace=/^\s+$/.test(value);return{literal:!isSpace,val:isSpace?" ":value};}const style=formatOpts[type];// The user might have explicitly specified hour12 or hourCycle
// if so, respect their decision
// if not, refer back to the resolvedOpts, which are based on the locale
let actualType=type;if(type==="hour"){if(formatOpts.hour12!=null){actualType=formatOpts.hour12?"hour12":"hour24";}else if(formatOpts.hourCycle!=null){if(formatOpts.hourCycle==="h11"||formatOpts.hourCycle==="h12"){actualType="hour12";}else{actualType="hour24";}}else{// tokens only differentiate between 24 hours or not,
// so we do not need to check hourCycle here, which is less supported anyways
actualType=resolvedOpts.hour12?"hour12":"hour24";}}let val=partTypeStyleToTokenVal[actualType];if(typeof val==="object"){val=val[style];}if(val){return{literal:false,val};}return undefined;}function buildRegex(units){const re=units.map(u=>u.regex).reduce((f,r)=>`${f}(${r.source})`,"");return[`^${re}$`,units];}function match(input,regex,handlers){const matches=input.match(regex);if(matches){const all={};let matchIndex=1;for(const i in handlers){if(hasOwnProperty(handlers,i)){const h=handlers[i],groups=h.groups?h.groups+1:1;if(!h.literal&&h.token){all[h.token.val[0]]=h.deser(matches.slice(matchIndex,matchIndex+groups));}matchIndex+=groups;}}return[matches,all];}else{return[matches,{}];}}function dateTimeFromMatches(matches){const toField=token=>{switch(token){case"S":return"millisecond";case"s":return"second";case"m":return"minute";case"h":case"H":return"hour";case"d":return"day";case"o":return"ordinal";case"L":case"M":return"month";case"y":return"year";case"E":case"c":return"weekday";case"W":return"weekNumber";case"k":return"weekYear";case"q":return"quarter";default:return null;}};let zone=null;let specificOffset;if(!isUndefined(matches.z)){zone=IANAZone.create(matches.z);}if(!isUndefined(matches.Z)){if(!zone){zone=new FixedOffsetZone(matches.Z);}specificOffset=matches.Z;}if(!isUndefined(matches.q)){matches.M=(matches.q-1)*3+1;}if(!isUndefined(matches.h)){if(matches.h<12&&matches.a===1){matches.h+=12;}else if(matches.h===12&&matches.a===0){matches.h=0;}}if(matches.G===0&&matches.y){matches.y=-matches.y;}if(!isUndefined(matches.u)){matches.S=parseMillis(matches.u);}const vals=Object.keys(matches).reduce((r,k)=>{const f=toField(k);if(f){r[f]=matches[k];}return r;},{});return[vals,zone,specificOffset];}let dummyDateTimeCache=null;function getDummyDateTime(){if(!dummyDateTimeCache){dummyDateTimeCache=DateTime.fromMillis(1555555555555);}return dummyDateTimeCache;}function maybeExpandMacroToken(token,locale){if(token.literal){return token;}const formatOpts=Formatter.macroTokenToFormatOpts(token.val);const tokens=formatOptsToTokens(formatOpts,locale);if(tokens==null||tokens.includes(undefined)){return token;}return tokens;}function expandMacroTokens(tokens,locale){return Array.prototype.concat(...tokens.map(t=>maybeExpandMacroToken(t,locale)));}/**
   * @private
   */class TokenParser{constructor(locale,format){this.locale=locale;this.format=format;this.tokens=expandMacroTokens(Formatter.parseFormat(format),locale);this.units=this.tokens.map(t=>unitForToken(t,locale));this.disqualifyingUnit=this.units.find(t=>t.invalidReason);if(!this.disqualifyingUnit){const[regexString,handlers]=buildRegex(this.units);this.regex=RegExp(regexString,"i");this.handlers=handlers;}}explainFromTokens(input){if(!this.isValid){return{input,tokens:this.tokens,invalidReason:this.invalidReason};}else{const[rawMatches,matches]=match(input,this.regex,this.handlers),[result,zone,specificOffset]=matches?dateTimeFromMatches(matches):[null,null,undefined];if(hasOwnProperty(matches,"a")&&hasOwnProperty(matches,"H")){throw new ConflictingSpecificationError("Can't include meridiem when specifying 24-hour format");}return{input,tokens:this.tokens,regex:this.regex,rawMatches,matches,result,zone,specificOffset};}}get isValid(){return!this.disqualifyingUnit;}get invalidReason(){return this.disqualifyingUnit?this.disqualifyingUnit.invalidReason:null;}}function explainFromTokens(locale,input,format){const parser=new TokenParser(locale,format);return parser.explainFromTokens(input);}function parseFromTokens(locale,input,format){const{result,zone,specificOffset,invalidReason}=explainFromTokens(locale,input,format);return[result,zone,specificOffset,invalidReason];}function formatOptsToTokens(formatOpts,locale){if(!formatOpts){return null;}const formatter=Formatter.create(locale,formatOpts);const df=formatter.dtFormatter(getDummyDateTime());const parts=df.formatToParts();const resolvedOpts=df.resolvedOptions();return parts.map(p=>tokenForPart(p,formatOpts,resolvedOpts));}const INVALID="Invalid DateTime";const MAX_DATE=8.64e15;function unsupportedZone(zone){return new Invalid("unsupported zone",`the zone "${zone.name}" is not supported`);}// we cache week data on the DT object and this intermediates the cache
/**
   * @param {DateTime} dt
   */function possiblyCachedWeekData(dt){if(dt.weekData===null){dt.weekData=gregorianToWeek(dt.c);}return dt.weekData;}/**
   * @param {DateTime} dt
   */function possiblyCachedLocalWeekData(dt){if(dt.localWeekData===null){dt.localWeekData=gregorianToWeek(dt.c,dt.loc.getMinDaysInFirstWeek(),dt.loc.getStartOfWeek());}return dt.localWeekData;}// clone really means, "make a new object with these modifications". all "setters" really use this
// to create a new object while only changing some of the properties
function clone(inst,alts){const current={ts:inst.ts,zone:inst.zone,c:inst.c,o:inst.o,loc:inst.loc,invalid:inst.invalid};return new DateTime({...current,...alts,old:current});}// find the right offset a given local time. The o input is our guess, which determines which
// offset we'll pick in ambiguous cases (e.g. there are two 3 AMs b/c Fallback DST)
function fixOffset(localTS,o,tz){// Our UTC time is just a guess because our offset is just a guess
let utcGuess=localTS-o*60*1000;// Test whether the zone matches the offset for this ts
const o2=tz.offset(utcGuess);// If so, offset didn't change and we're done
if(o===o2){return[utcGuess,o];}// If not, change the ts by the difference in the offset
utcGuess-=(o2-o)*60*1000;// If that gives us the local time we want, we're done
const o3=tz.offset(utcGuess);if(o2===o3){return[utcGuess,o2];}// If it's different, we're in a hole time. The offset has changed, but the we don't adjust the time
return[localTS-Math.min(o2,o3)*60*1000,Math.max(o2,o3)];}// convert an epoch timestamp into a calendar object with the given offset
function tsToObj(ts,offset){ts+=offset*60*1000;const d=new Date(ts);return{year:d.getUTCFullYear(),month:d.getUTCMonth()+1,day:d.getUTCDate(),hour:d.getUTCHours(),minute:d.getUTCMinutes(),second:d.getUTCSeconds(),millisecond:d.getUTCMilliseconds()};}// convert a calendar object to a epoch timestamp
function objToTS(obj,offset,zone){return fixOffset(objToLocalTS(obj),offset,zone);}// create a new DT instance by adding a duration, adjusting for DSTs
function adjustTime(inst,dur){const oPre=inst.o,year=inst.c.year+Math.trunc(dur.years),month=inst.c.month+Math.trunc(dur.months)+Math.trunc(dur.quarters)*3,c={...inst.c,year,month,day:Math.min(inst.c.day,daysInMonth(year,month))+Math.trunc(dur.days)+Math.trunc(dur.weeks)*7},millisToAdd=Duration.fromObject({years:dur.years-Math.trunc(dur.years),quarters:dur.quarters-Math.trunc(dur.quarters),months:dur.months-Math.trunc(dur.months),weeks:dur.weeks-Math.trunc(dur.weeks),days:dur.days-Math.trunc(dur.days),hours:dur.hours,minutes:dur.minutes,seconds:dur.seconds,milliseconds:dur.milliseconds}).as("milliseconds"),localTS=objToLocalTS(c);let[ts,o]=fixOffset(localTS,oPre,inst.zone);if(millisToAdd!==0){ts+=millisToAdd;// that could have changed the offset by going over a DST, but we want to keep the ts the same
o=inst.zone.offset(ts);}return{ts,o};}// helper useful in turning the results of parsing into real dates
// by handling the zone options
function parseDataToDateTime(parsed,parsedZone,opts,format,text,specificOffset){const{setZone,zone}=opts;if(parsed&&Object.keys(parsed).length!==0||parsedZone){const interpretationZone=parsedZone||zone,inst=DateTime.fromObject(parsed,{...opts,zone:interpretationZone,specificOffset});return setZone?inst:inst.setZone(zone);}else{return DateTime.invalid(new Invalid("unparsable",`the input "${text}" can't be parsed as ${format}`));}}// if you want to output a technical format (e.g. RFC 2822), this helper
// helps handle the details
function toTechFormat(dt,format,allowZ=true){return dt.isValid?Formatter.create(Locale.create("en-US"),{allowZ,forceSimple:true}).formatDateTimeFromString(dt,format):null;}function toISODate(o,extended){const longFormat=o.c.year>9999||o.c.year<0;let c="";if(longFormat&&o.c.year>=0)c+="+";c+=padStart(o.c.year,longFormat?6:4);if(extended){c+="-";c+=padStart(o.c.month);c+="-";c+=padStart(o.c.day);}else{c+=padStart(o.c.month);c+=padStart(o.c.day);}return c;}function toISOTime(o,extended,suppressSeconds,suppressMilliseconds,includeOffset,extendedZone){let c=padStart(o.c.hour);if(extended){c+=":";c+=padStart(o.c.minute);if(o.c.millisecond!==0||o.c.second!==0||!suppressSeconds){c+=":";}}else{c+=padStart(o.c.minute);}if(o.c.millisecond!==0||o.c.second!==0||!suppressSeconds){c+=padStart(o.c.second);if(o.c.millisecond!==0||!suppressMilliseconds){c+=".";c+=padStart(o.c.millisecond,3);}}if(includeOffset){if(o.isOffsetFixed&&o.offset===0&&!extendedZone){c+="Z";}else if(o.o<0){c+="-";c+=padStart(Math.trunc(-o.o/60));c+=":";c+=padStart(Math.trunc(-o.o%60));}else{c+="+";c+=padStart(Math.trunc(o.o/60));c+=":";c+=padStart(Math.trunc(o.o%60));}}if(extendedZone){c+="["+o.zone.ianaName+"]";}return c;}// defaults for unspecified units in the supported calendars
const defaultUnitValues={month:1,day:1,hour:0,minute:0,second:0,millisecond:0},defaultWeekUnitValues={weekNumber:1,weekday:1,hour:0,minute:0,second:0,millisecond:0},defaultOrdinalUnitValues={ordinal:1,hour:0,minute:0,second:0,millisecond:0};// Units in the supported calendars, sorted by bigness
const orderedUnits=["year","month","day","hour","minute","second","millisecond"],orderedWeekUnits=["weekYear","weekNumber","weekday","hour","minute","second","millisecond"],orderedOrdinalUnits=["year","ordinal","hour","minute","second","millisecond"];// standardize case and plurality in units
function normalizeUnit(unit){const normalized={year:"year",years:"year",month:"month",months:"month",day:"day",days:"day",hour:"hour",hours:"hour",minute:"minute",minutes:"minute",quarter:"quarter",quarters:"quarter",second:"second",seconds:"second",millisecond:"millisecond",milliseconds:"millisecond",weekday:"weekday",weekdays:"weekday",weeknumber:"weekNumber",weeksnumber:"weekNumber",weeknumbers:"weekNumber",weekyear:"weekYear",weekyears:"weekYear",ordinal:"ordinal"}[unit.toLowerCase()];if(!normalized)throw new InvalidUnitError(unit);return normalized;}function normalizeUnitWithLocalWeeks(unit){switch(unit.toLowerCase()){case"localweekday":case"localweekdays":return"localWeekday";case"localweeknumber":case"localweeknumbers":return"localWeekNumber";case"localweekyear":case"localweekyears":return"localWeekYear";default:return normalizeUnit(unit);}}// cache offsets for zones based on the current timestamp when this function is
// first called. When we are handling a datetime from components like (year,
// month, day, hour) in a time zone, we need a guess about what the timezone
// offset is so that we can convert into a UTC timestamp. One way is to find the
// offset of now in the zone. The actual date may have a different offset (for
// example, if we handle a date in June while we're in December in a zone that
// observes DST), but we can check and adjust that.
//
// When handling many dates, calculating the offset for now every time is
// expensive. It's just a guess, so we can cache the offset to use even if we
// are right on a time change boundary (we'll just correct in the other
// direction). Using a timestamp from first read is a slight optimization for
// handling dates close to the current date, since those dates will usually be
// in the same offset (we could set the timestamp statically, instead). We use a
// single timestamp for all zones to make things a bit more predictable.
//
// This is safe for quickDT (used by local() and utc()) because we don't fill in
// higher-order units from tsNow (as we do in fromObject, this requires that
// offset is calculated from tsNow).
/**
   * @param {Zone} zone
   * @return {number}
   */function guessOffsetForZone(zone){if(zoneOffsetTs===undefined){zoneOffsetTs=Settings.now();}// Do not cache anything but IANA zones, because it is not safe to do so.
// Guessing an offset which is not present in the zone can cause wrong results from fixOffset
if(zone.type!=="iana"){return zone.offset(zoneOffsetTs);}const zoneName=zone.name;let offsetGuess=zoneOffsetGuessCache.get(zoneName);if(offsetGuess===undefined){offsetGuess=zone.offset(zoneOffsetTs);zoneOffsetGuessCache.set(zoneName,offsetGuess);}return offsetGuess;}// this is a dumbed down version of fromObject() that runs about 60% faster
// but doesn't do any validation, makes a bunch of assumptions about what units
// are present, and so on.
function quickDT(obj,opts){const zone=normalizeZone(opts.zone,Settings.defaultZone);if(!zone.isValid){return DateTime.invalid(unsupportedZone(zone));}const loc=Locale.fromObject(opts);let ts,o;// assume we have the higher-order units
if(!isUndefined(obj.year)){for(const u of orderedUnits){if(isUndefined(obj[u])){obj[u]=defaultUnitValues[u];}}const invalid=hasInvalidGregorianData(obj)||hasInvalidTimeData(obj);if(invalid){return DateTime.invalid(invalid);}const offsetProvis=guessOffsetForZone(zone);[ts,o]=objToTS(obj,offsetProvis,zone);}else{ts=Settings.now();}return new DateTime({ts,zone,loc,o});}function diffRelative(start,end,opts){const round=isUndefined(opts.round)?true:opts.round,format=(c,unit)=>{c=roundTo(c,round||opts.calendary?0:2,true);const formatter=end.loc.clone(opts).relFormatter(opts);return formatter.format(c,unit);},differ=unit=>{if(opts.calendary){if(!end.hasSame(start,unit)){return end.startOf(unit).diff(start.startOf(unit),unit).get(unit);}else return 0;}else{return end.diff(start,unit).get(unit);}};if(opts.unit){return format(differ(opts.unit),opts.unit);}for(const unit of opts.units){const count=differ(unit);if(Math.abs(count)>=1){return format(count,unit);}}return format(start>end?-0:0,opts.units[opts.units.length-1]);}function lastOpts(argList){let opts={},args;if(argList.length>0&&typeof argList[argList.length-1]==="object"){opts=argList[argList.length-1];args=Array.from(argList).slice(0,argList.length-1);}else{args=Array.from(argList);}return[opts,args];}/**
   * Timestamp to use for cached zone offset guesses (exposed for test)
   */let zoneOffsetTs;/**
   * Cache for zone offset guesses (exposed for test).
   *
   * This optimizes quickDT via guessOffsetForZone to avoid repeated calls of
   * zone.offset().
   */const zoneOffsetGuessCache=new Map();/**
   * A DateTime is an immutable data structure representing a specific date and time and accompanying methods. It contains class and instance methods for creating, parsing, interrogating, transforming, and formatting them.
   *
   * A DateTime comprises of:
   * * A timestamp. Each DateTime instance refers to a specific millisecond of the Unix epoch.
   * * A time zone. Each instance is considered in the context of a specific zone (by default the local system's zone).
   * * Configuration properties that effect how output strings are formatted, such as `locale`, `numberingSystem`, and `outputCalendar`.
   *
   * Here is a brief overview of the most commonly used functionality it provides:
   *
   * * **Creation**: To create a DateTime from its components, use one of its factory class methods: {@link DateTime.local}, {@link DateTime.utc}, and (most flexibly) {@link DateTime.fromObject}. To create one from a standard string format, use {@link DateTime.fromISO}, {@link DateTime.fromHTTP}, and {@link DateTime.fromRFC2822}. To create one from a custom string format, use {@link DateTime.fromFormat}. To create one from a native JS date, use {@link DateTime.fromJSDate}.
   * * **Gregorian calendar and time**: To examine the Gregorian properties of a DateTime individually (i.e as opposed to collectively through {@link DateTime#toObject}), use the {@link DateTime#year}, {@link DateTime#month},
   * {@link DateTime#day}, {@link DateTime#hour}, {@link DateTime#minute}, {@link DateTime#second}, {@link DateTime#millisecond} accessors.
   * * **Week calendar**: For ISO week calendar attributes, see the {@link DateTime#weekYear}, {@link DateTime#weekNumber}, and {@link DateTime#weekday} accessors.
   * * **Configuration** See the {@link DateTime#locale} and {@link DateTime#numberingSystem} accessors.
   * * **Transformation**: To transform the DateTime into other DateTimes, use {@link DateTime#set}, {@link DateTime#reconfigure}, {@link DateTime#setZone}, {@link DateTime#setLocale}, {@link DateTime.plus}, {@link DateTime#minus}, {@link DateTime#endOf}, {@link DateTime#startOf}, {@link DateTime#toUTC}, and {@link DateTime#toLocal}.
   * * **Output**: To convert the DateTime to other representations, use the {@link DateTime#toRelative}, {@link DateTime#toRelativeCalendar}, {@link DateTime#toJSON}, {@link DateTime#toISO}, {@link DateTime#toHTTP}, {@link DateTime#toObject}, {@link DateTime#toRFC2822}, {@link DateTime#toString}, {@link DateTime#toLocaleString}, {@link DateTime#toFormat}, {@link DateTime#toMillis} and {@link DateTime#toJSDate}.
   *
   * There's plenty others documented below. In addition, for more information on subtler topics like internationalization, time zones, alternative calendars, validity, and so on, see the external documentation.
   */class DateTime{/**
     * @access private
     */constructor(config){const zone=config.zone||Settings.defaultZone;let invalid=config.invalid||(Number.isNaN(config.ts)?new Invalid("invalid input"):null)||(!zone.isValid?unsupportedZone(zone):null);/**
       * @access private
       */this.ts=isUndefined(config.ts)?Settings.now():config.ts;let c=null,o=null;if(!invalid){const unchanged=config.old&&config.old.ts===this.ts&&config.old.zone.equals(zone);if(unchanged){[c,o]=[config.old.c,config.old.o];}else{// If an offset has been passed and we have not been called from
// clone(), we can trust it and avoid the offset calculation.
const ot=isNumber(config.o)&&!config.old?config.o:zone.offset(this.ts);c=tsToObj(this.ts,ot);invalid=Number.isNaN(c.year)?new Invalid("invalid input"):null;c=invalid?null:c;o=invalid?null:ot;}}/**
       * @access private
       */this._zone=zone;/**
       * @access private
       */this.loc=config.loc||Locale.create();/**
       * @access private
       */this.invalid=invalid;/**
       * @access private
       */this.weekData=null;/**
       * @access private
       */this.localWeekData=null;/**
       * @access private
       */this.c=c;/**
       * @access private
       */this.o=o;/**
       * @access private
       */this.isLuxonDateTime=true;}// CONSTRUCT
/**
     * Create a DateTime for the current instant, in the system's time zone.
     *
     * Use Settings to override these default values if needed.
     * @example DateTime.now().toISO() //~> now in the ISO format
     * @return {DateTime}
     */static now(){return new DateTime({});}/**
     * Create a local DateTime
     * @param {number} [year] - The calendar year. If omitted (as in, call `local()` with no arguments), the current time will be used
     * @param {number} [month=1] - The month, 1-indexed
     * @param {number} [day=1] - The day of the month, 1-indexed
     * @param {number} [hour=0] - The hour of the day, in 24-hour time
     * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59
     * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59
     * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999
     * @example DateTime.local()                                  //~> now
     * @example DateTime.local({ zone: "America/New_York" })      //~> now, in US east coast time
     * @example DateTime.local(2017)                              //~> 2017-01-01T00:00:00
     * @example DateTime.local(2017, 3)                           //~> 2017-03-01T00:00:00
     * @example DateTime.local(2017, 3, 12, { locale: "fr" })     //~> 2017-03-12T00:00:00, with a French locale
     * @example DateTime.local(2017, 3, 12, 5)                    //~> 2017-03-12T05:00:00
     * @example DateTime.local(2017, 3, 12, 5, { zone: "utc" })   //~> 2017-03-12T05:00:00, in UTC
     * @example DateTime.local(2017, 3, 12, 5, 45)                //~> 2017-03-12T05:45:00
     * @example DateTime.local(2017, 3, 12, 5, 45, 10)            //~> 2017-03-12T05:45:10
     * @example DateTime.local(2017, 3, 12, 5, 45, 10, 765)       //~> 2017-03-12T05:45:10.765
     * @return {DateTime}
     */static local(){const[opts,args]=lastOpts(arguments),[year,month,day,hour,minute,second,millisecond]=args;return quickDT({year,month,day,hour,minute,second,millisecond},opts);}/**
     * Create a DateTime in UTC
     * @param {number} [year] - The calendar year. If omitted (as in, call `utc()` with no arguments), the current time will be used
     * @param {number} [month=1] - The month, 1-indexed
     * @param {number} [day=1] - The day of the month
     * @param {number} [hour=0] - The hour of the day, in 24-hour time
     * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59
     * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59
     * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999
     * @param {Object} options - configuration options for the DateTime
     * @param {string} [options.locale] - a locale to set on the resulting DateTime instance
     * @param {string} [options.outputCalendar] - the output calendar to set on the resulting DateTime instance
     * @param {string} [options.numberingSystem] - the numbering system to set on the resulting DateTime instance
     * @param {string} [options.weekSettings] - the week settings to set on the resulting DateTime instance
     * @example DateTime.utc()                                              //~> now
     * @example DateTime.utc(2017)                                          //~> 2017-01-01T00:00:00Z
     * @example DateTime.utc(2017, 3)                                       //~> 2017-03-01T00:00:00Z
     * @example DateTime.utc(2017, 3, 12)                                   //~> 2017-03-12T00:00:00Z
     * @example DateTime.utc(2017, 3, 12, 5)                                //~> 2017-03-12T05:00:00Z
     * @example DateTime.utc(2017, 3, 12, 5, 45)                            //~> 2017-03-12T05:45:00Z
     * @example DateTime.utc(2017, 3, 12, 5, 45, { locale: "fr" })          //~> 2017-03-12T05:45:00Z with a French locale
     * @example DateTime.utc(2017, 3, 12, 5, 45, 10)                        //~> 2017-03-12T05:45:10Z
     * @example DateTime.utc(2017, 3, 12, 5, 45, 10, 765, { locale: "fr" }) //~> 2017-03-12T05:45:10.765Z with a French locale
     * @return {DateTime}
     */static utc(){const[opts,args]=lastOpts(arguments),[year,month,day,hour,minute,second,millisecond]=args;opts.zone=FixedOffsetZone.utcInstance;return quickDT({year,month,day,hour,minute,second,millisecond},opts);}/**
     * Create a DateTime from a JavaScript Date object. Uses the default zone.
     * @param {Date} date - a JavaScript Date object
     * @param {Object} options - configuration options for the DateTime
     * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into
     * @return {DateTime}
     */static fromJSDate(date,options={}){const ts=isDate(date)?date.valueOf():NaN;if(Number.isNaN(ts)){return DateTime.invalid("invalid input");}const zoneToUse=normalizeZone(options.zone,Settings.defaultZone);if(!zoneToUse.isValid){return DateTime.invalid(unsupportedZone(zoneToUse));}return new DateTime({ts:ts,zone:zoneToUse,loc:Locale.fromObject(options)});}/**
     * Create a DateTime from a number of milliseconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.
     * @param {number} milliseconds - a number of milliseconds since 1970 UTC
     * @param {Object} options - configuration options for the DateTime
     * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into
     * @param {string} [options.locale] - a locale to set on the resulting DateTime instance
     * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance
     * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance
     * @param {string} options.weekSettings - the week settings to set on the resulting DateTime instance
     * @return {DateTime}
     */static fromMillis(milliseconds,options={}){if(!isNumber(milliseconds)){throw new InvalidArgumentError(`fromMillis requires a numerical input, but received a ${typeof milliseconds} with value ${milliseconds}`);}else if(milliseconds<-864e13||milliseconds>MAX_DATE){// this isn't perfect because we can still end up out of range because of additional shifting, but it's a start
return DateTime.invalid("Timestamp out of range");}else{return new DateTime({ts:milliseconds,zone:normalizeZone(options.zone,Settings.defaultZone),loc:Locale.fromObject(options)});}}/**
     * Create a DateTime from a number of seconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.
     * @param {number} seconds - a number of seconds since 1970 UTC
     * @param {Object} options - configuration options for the DateTime
     * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into
     * @param {string} [options.locale] - a locale to set on the resulting DateTime instance
     * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance
     * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance
     * @param {string} options.weekSettings - the week settings to set on the resulting DateTime instance
     * @return {DateTime}
     */static fromSeconds(seconds,options={}){if(!isNumber(seconds)){throw new InvalidArgumentError("fromSeconds requires a numerical input");}else{return new DateTime({ts:seconds*1000,zone:normalizeZone(options.zone,Settings.defaultZone),loc:Locale.fromObject(options)});}}/**
     * Create a DateTime from a JavaScript object with keys like 'year' and 'hour' with reasonable defaults.
     * @param {Object} obj - the object to create the DateTime from
     * @param {number} obj.year - a year, such as 1987
     * @param {number} obj.month - a month, 1-12
     * @param {number} obj.day - a day of the month, 1-31, depending on the month
     * @param {number} obj.ordinal - day of the year, 1-365 or 366
     * @param {number} obj.weekYear - an ISO week year
     * @param {number} obj.weekNumber - an ISO week number, between 1 and 52 or 53, depending on the year
     * @param {number} obj.weekday - an ISO weekday, 1-7, where 1 is Monday and 7 is Sunday
     * @param {number} obj.localWeekYear - a week year, according to the locale
     * @param {number} obj.localWeekNumber - a week number, between 1 and 52 or 53, depending on the year, according to the locale
     * @param {number} obj.localWeekday - a weekday, 1-7, where 1 is the first and 7 is the last day of the week, according to the locale
     * @param {number} obj.hour - hour of the day, 0-23
     * @param {number} obj.minute - minute of the hour, 0-59
     * @param {number} obj.second - second of the minute, 0-59
     * @param {number} obj.millisecond - millisecond of the second, 0-999
     * @param {Object} opts - options for creating this DateTime
     * @param {string|Zone} [opts.zone='local'] - interpret the numbers in the context of a particular zone. Can take any value taken as the first argument to setZone()
     * @param {string} [opts.locale='system\'s locale'] - a locale to set on the resulting DateTime instance
     * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
     * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance
     * @param {string} opts.weekSettings - the week settings to set on the resulting DateTime instance
     * @example DateTime.fromObject({ year: 1982, month: 5, day: 25}).toISODate() //=> '1982-05-25'
     * @example DateTime.fromObject({ year: 1982 }).toISODate() //=> '1982-01-01'
     * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }) //~> today at 10:26:06
     * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'utc' }),
     * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'local' })
     * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'America/New_York' })
     * @example DateTime.fromObject({ weekYear: 2016, weekNumber: 2, weekday: 3 }).toISODate() //=> '2016-01-13'
     * @example DateTime.fromObject({ localWeekYear: 2022, localWeekNumber: 1, localWeekday: 1 }, { locale: "en-US" }).toISODate() //=> '2021-12-26'
     * @return {DateTime}
     */static fromObject(obj,opts={}){obj=obj||{};const zoneToUse=normalizeZone(opts.zone,Settings.defaultZone);if(!zoneToUse.isValid){return DateTime.invalid(unsupportedZone(zoneToUse));}const loc=Locale.fromObject(opts);const normalized=normalizeObject(obj,normalizeUnitWithLocalWeeks);const{minDaysInFirstWeek,startOfWeek}=usesLocalWeekValues(normalized,loc);const tsNow=Settings.now(),offsetProvis=!isUndefined(opts.specificOffset)?opts.specificOffset:zoneToUse.offset(tsNow),containsOrdinal=!isUndefined(normalized.ordinal),containsGregorYear=!isUndefined(normalized.year),containsGregorMD=!isUndefined(normalized.month)||!isUndefined(normalized.day),containsGregor=containsGregorYear||containsGregorMD,definiteWeekDef=normalized.weekYear||normalized.weekNumber;// cases:
// just a weekday -> this week's instance of that weekday, no worries
// (gregorian data or ordinal) + (weekYear or weekNumber) -> error
// (gregorian month or day) + ordinal -> error
// otherwise just use weeks or ordinals or gregorian, depending on what's specified
if((containsGregor||containsOrdinal)&&definiteWeekDef){throw new ConflictingSpecificationError("Can't mix weekYear/weekNumber units with year/month/day or ordinals");}if(containsGregorMD&&containsOrdinal){throw new ConflictingSpecificationError("Can't mix ordinal dates with month/day");}const useWeekData=definiteWeekDef||normalized.weekday&&!containsGregor;// configure ourselves to deal with gregorian dates or week stuff
let units,defaultValues,objNow=tsToObj(tsNow,offsetProvis);if(useWeekData){units=orderedWeekUnits;defaultValues=defaultWeekUnitValues;objNow=gregorianToWeek(objNow,minDaysInFirstWeek,startOfWeek);}else if(containsOrdinal){units=orderedOrdinalUnits;defaultValues=defaultOrdinalUnitValues;objNow=gregorianToOrdinal(objNow);}else{units=orderedUnits;defaultValues=defaultUnitValues;}// set default values for missing stuff
let foundFirst=false;for(const u of units){const v=normalized[u];if(!isUndefined(v)){foundFirst=true;}else if(foundFirst){normalized[u]=defaultValues[u];}else{normalized[u]=objNow[u];}}// make sure the values we have are in range
const higherOrderInvalid=useWeekData?hasInvalidWeekData(normalized,minDaysInFirstWeek,startOfWeek):containsOrdinal?hasInvalidOrdinalData(normalized):hasInvalidGregorianData(normalized),invalid=higherOrderInvalid||hasInvalidTimeData(normalized);if(invalid){return DateTime.invalid(invalid);}// compute the actual time
const gregorian=useWeekData?weekToGregorian(normalized,minDaysInFirstWeek,startOfWeek):containsOrdinal?ordinalToGregorian(normalized):normalized,[tsFinal,offsetFinal]=objToTS(gregorian,offsetProvis,zoneToUse),inst=new DateTime({ts:tsFinal,zone:zoneToUse,o:offsetFinal,loc});// gregorian data + weekday serves only to validate
if(normalized.weekday&&containsGregor&&obj.weekday!==inst.weekday){return DateTime.invalid("mismatched weekday",`you can't specify both a weekday of ${normalized.weekday} and a date of ${inst.toISO()}`);}if(!inst.isValid){return DateTime.invalid(inst.invalid);}return inst;}/**
     * Create a DateTime from an ISO 8601 string
     * @param {string} text - the ISO string
     * @param {Object} opts - options to affect the creation
     * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the time to this zone
     * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one
     * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance
     * @param {string} [opts.outputCalendar] - the output calendar to set on the resulting DateTime instance
     * @param {string} [opts.numberingSystem] - the numbering system to set on the resulting DateTime instance
     * @param {string} [opts.weekSettings] - the week settings to set on the resulting DateTime instance
     * @example DateTime.fromISO('2016-05-25T09:08:34.123')
     * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00')
     * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00', {setZone: true})
     * @example DateTime.fromISO('2016-05-25T09:08:34.123', {zone: 'utc'})
     * @example DateTime.fromISO('2016-W05-4')
     * @return {DateTime}
     */static fromISO(text,opts={}){const[vals,parsedZone]=parseISODate(text);return parseDataToDateTime(vals,parsedZone,opts,"ISO 8601",text);}/**
     * Create a DateTime from an RFC 2822 string
     * @param {string} text - the RFC 2822 string
     * @param {Object} opts - options to affect the creation
     * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since the offset is always specified in the string itself, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.
     * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one
     * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance
     * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
     * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance
     * @param {string} opts.weekSettings - the week settings to set on the resulting DateTime instance
     * @example DateTime.fromRFC2822('25 Nov 2016 13:23:12 GMT')
     * @example DateTime.fromRFC2822('Fri, 25 Nov 2016 13:23:12 +0600')
     * @example DateTime.fromRFC2822('25 Nov 2016 13:23 Z')
     * @return {DateTime}
     */static fromRFC2822(text,opts={}){const[vals,parsedZone]=parseRFC2822Date(text);return parseDataToDateTime(vals,parsedZone,opts,"RFC 2822",text);}/**
     * Create a DateTime from an HTTP header date
     * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1
     * @param {string} text - the HTTP header date
     * @param {Object} opts - options to affect the creation
     * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since HTTP dates are always in UTC, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.
     * @param {boolean} [opts.setZone=false] - override the zone with the fixed-offset zone specified in the string. For HTTP dates, this is always UTC, so this option is equivalent to setting the `zone` option to 'utc', but this option is included for consistency with similar methods.
     * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance
     * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
     * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance
     * @param {string} opts.weekSettings - the week settings to set on the resulting DateTime instance
     * @example DateTime.fromHTTP('Sun, 06 Nov 1994 08:49:37 GMT')
     * @example DateTime.fromHTTP('Sunday, 06-Nov-94 08:49:37 GMT')
     * @example DateTime.fromHTTP('Sun Nov  6 08:49:37 1994')
     * @return {DateTime}
     */static fromHTTP(text,opts={}){const[vals,parsedZone]=parseHTTPDate(text);return parseDataToDateTime(vals,parsedZone,opts,"HTTP",opts);}/**
     * Create a DateTime from an input string and format string.
     * Defaults to en-US if no locale has been specified, regardless of the system's locale. For a table of tokens and their interpretations, see [here](https://moment.github.io/luxon/#/parsing?id=table-of-tokens).
     * @param {string} text - the string to parse
     * @param {string} fmt - the format the string is expected to be in (see the link below for the formats)
     * @param {Object} opts - options to affect the creation
     * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone
     * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one
     * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale
     * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system
     * @param {string} opts.weekSettings - the week settings to set on the resulting DateTime instance
     * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
     * @return {DateTime}
     */static fromFormat(text,fmt,opts={}){if(isUndefined(text)||isUndefined(fmt)){throw new InvalidArgumentError("fromFormat requires an input string and a format");}const{locale=null,numberingSystem=null}=opts,localeToUse=Locale.fromOpts({locale,numberingSystem,defaultToEN:true}),[vals,parsedZone,specificOffset,invalid]=parseFromTokens(localeToUse,text,fmt);if(invalid){return DateTime.invalid(invalid);}else{return parseDataToDateTime(vals,parsedZone,opts,`format ${fmt}`,text,specificOffset);}}/**
     * @deprecated use fromFormat instead
     */static fromString(text,fmt,opts={}){return DateTime.fromFormat(text,fmt,opts);}/**
     * Create a DateTime from a SQL date, time, or datetime
     * Defaults to en-US if no locale has been specified, regardless of the system's locale
     * @param {string} text - the string to parse
     * @param {Object} opts - options to affect the creation
     * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone
     * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one
     * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale
     * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system
     * @param {string} opts.weekSettings - the week settings to set on the resulting DateTime instance
     * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
     * @example DateTime.fromSQL('2017-05-15')
     * @example DateTime.fromSQL('2017-05-15 09:12:34')
     * @example DateTime.fromSQL('2017-05-15 09:12:34.342')
     * @example DateTime.fromSQL('2017-05-15 09:12:34.342+06:00')
     * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles')
     * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles', { setZone: true })
     * @example DateTime.fromSQL('2017-05-15 09:12:34.342', { zone: 'America/Los_Angeles' })
     * @example DateTime.fromSQL('09:12:34.342')
     * @return {DateTime}
     */static fromSQL(text,opts={}){const[vals,parsedZone]=parseSQL(text);return parseDataToDateTime(vals,parsedZone,opts,"SQL",text);}/**
     * Create an invalid DateTime.
     * @param {string} reason - simple string of why this DateTime is invalid. Should not contain parameters or anything else data-dependent.
     * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information
     * @return {DateTime}
     */static invalid(reason,explanation=null){if(!reason){throw new InvalidArgumentError("need to specify a reason the DateTime is invalid");}const invalid=reason instanceof Invalid?reason:new Invalid(reason,explanation);if(Settings.throwOnInvalid){throw new InvalidDateTimeError(invalid);}else{return new DateTime({invalid});}}/**
     * Check if an object is an instance of DateTime. Works across context boundaries
     * @param {object} o
     * @return {boolean}
     */static isDateTime(o){return o&&o.isLuxonDateTime||false;}/**
     * Produce the format string for a set of options
     * @param formatOpts
     * @param localeOpts
     * @returns {string}
     */static parseFormatForOpts(formatOpts,localeOpts={}){const tokenList=formatOptsToTokens(formatOpts,Locale.fromObject(localeOpts));return!tokenList?null:tokenList.map(t=>t?t.val:null).join("");}/**
     * Produce the the fully expanded format token for the locale
     * Does NOT quote characters, so quoted tokens will not round trip correctly
     * @param fmt
     * @param localeOpts
     * @returns {string}
     */static expandFormat(fmt,localeOpts={}){const expanded=expandMacroTokens(Formatter.parseFormat(fmt),Locale.fromObject(localeOpts));return expanded.map(t=>t.val).join("");}static resetCache(){zoneOffsetTs=undefined;zoneOffsetGuessCache.clear();}// INFO
/**
     * Get the value of unit.
     * @param {string} unit - a unit such as 'minute' or 'day'
     * @example DateTime.local(2017, 7, 4).get('month'); //=> 7
     * @example DateTime.local(2017, 7, 4).get('day'); //=> 4
     * @return {number}
     */get(unit){return this[unit];}/**
     * Returns whether the DateTime is valid. Invalid DateTimes occur when:
     * * The DateTime was created from invalid calendar information, such as the 13th month or February 30
     * * The DateTime was created by an operation on another invalid date
     * @type {boolean}
     */get isValid(){return this.invalid===null;}/**
     * Returns an error code if this DateTime is invalid, or null if the DateTime is valid
     * @type {string}
     */get invalidReason(){return this.invalid?this.invalid.reason:null;}/**
     * Returns an explanation of why this DateTime became invalid, or null if the DateTime is valid
     * @type {string}
     */get invalidExplanation(){return this.invalid?this.invalid.explanation:null;}/**
     * Get the locale of a DateTime, such 'en-GB'. The locale is used when formatting the DateTime
     *
     * @type {string}
     */get locale(){return this.isValid?this.loc.locale:null;}/**
     * Get the numbering system of a DateTime, such 'beng'. The numbering system is used when formatting the DateTime
     *
     * @type {string}
     */get numberingSystem(){return this.isValid?this.loc.numberingSystem:null;}/**
     * Get the output calendar of a DateTime, such 'islamic'. The output calendar is used when formatting the DateTime
     *
     * @type {string}
     */get outputCalendar(){return this.isValid?this.loc.outputCalendar:null;}/**
     * Get the time zone associated with this DateTime.
     * @type {Zone}
     */get zone(){return this._zone;}/**
     * Get the name of the time zone.
     * @type {string}
     */get zoneName(){return this.isValid?this.zone.name:null;}/**
     * Get the year
     * @example DateTime.local(2017, 5, 25).year //=> 2017
     * @type {number}
     */get year(){return this.isValid?this.c.year:NaN;}/**
     * Get the quarter
     * @example DateTime.local(2017, 5, 25).quarter //=> 2
     * @type {number}
     */get quarter(){return this.isValid?Math.ceil(this.c.month/3):NaN;}/**
     * Get the month (1-12).
     * @example DateTime.local(2017, 5, 25).month //=> 5
     * @type {number}
     */get month(){return this.isValid?this.c.month:NaN;}/**
     * Get the day of the month (1-30ish).
     * @example DateTime.local(2017, 5, 25).day //=> 25
     * @type {number}
     */get day(){return this.isValid?this.c.day:NaN;}/**
     * Get the hour of the day (0-23).
     * @example DateTime.local(2017, 5, 25, 9).hour //=> 9
     * @type {number}
     */get hour(){return this.isValid?this.c.hour:NaN;}/**
     * Get the minute of the hour (0-59).
     * @example DateTime.local(2017, 5, 25, 9, 30).minute //=> 30
     * @type {number}
     */get minute(){return this.isValid?this.c.minute:NaN;}/**
     * Get the second of the minute (0-59).
     * @example DateTime.local(2017, 5, 25, 9, 30, 52).second //=> 52
     * @type {number}
     */get second(){return this.isValid?this.c.second:NaN;}/**
     * Get the millisecond of the second (0-999).
     * @example DateTime.local(2017, 5, 25, 9, 30, 52, 654).millisecond //=> 654
     * @type {number}
     */get millisecond(){return this.isValid?this.c.millisecond:NaN;}/**
     * Get the week year
     * @see https://en.wikipedia.org/wiki/ISO_week_date
     * @example DateTime.local(2014, 12, 31).weekYear //=> 2015
     * @type {number}
     */get weekYear(){return this.isValid?possiblyCachedWeekData(this).weekYear:NaN;}/**
     * Get the week number of the week year (1-52ish).
     * @see https://en.wikipedia.org/wiki/ISO_week_date
     * @example DateTime.local(2017, 5, 25).weekNumber //=> 21
     * @type {number}
     */get weekNumber(){return this.isValid?possiblyCachedWeekData(this).weekNumber:NaN;}/**
     * Get the day of the week.
     * 1 is Monday and 7 is Sunday
     * @see https://en.wikipedia.org/wiki/ISO_week_date
     * @example DateTime.local(2014, 11, 31).weekday //=> 4
     * @type {number}
     */get weekday(){return this.isValid?possiblyCachedWeekData(this).weekday:NaN;}/**
     * Returns true if this date is on a weekend according to the locale, false otherwise
     * @returns {boolean}
     */get isWeekend(){return this.isValid&&this.loc.getWeekendDays().includes(this.weekday);}/**
     * Get the day of the week according to the locale.
     * 1 is the first day of the week and 7 is the last day of the week.
     * If the locale assigns Sunday as the first day of the week, then a date which is a Sunday will return 1,
     * @returns {number}
     */get localWeekday(){return this.isValid?possiblyCachedLocalWeekData(this).weekday:NaN;}/**
     * Get the week number of the week year according to the locale. Different locales assign week numbers differently,
     * because the week can start on different days of the week (see localWeekday) and because a different number of days
     * is required for a week to count as the first week of a year.
     * @returns {number}
     */get localWeekNumber(){return this.isValid?possiblyCachedLocalWeekData(this).weekNumber:NaN;}/**
     * Get the week year according to the locale. Different locales assign week numbers (and therefor week years)
     * differently, see localWeekNumber.
     * @returns {number}
     */get localWeekYear(){return this.isValid?possiblyCachedLocalWeekData(this).weekYear:NaN;}/**
     * Get the ordinal (meaning the day of the year)
     * @example DateTime.local(2017, 5, 25).ordinal //=> 145
     * @type {number|DateTime}
     */get ordinal(){return this.isValid?gregorianToOrdinal(this.c).ordinal:NaN;}/**
     * Get the human readable short month name, such as 'Oct'.
     * Defaults to the system's locale if no locale has been specified
     * @example DateTime.local(2017, 10, 30).monthShort //=> Oct
     * @type {string}
     */get monthShort(){return this.isValid?Info.months("short",{locObj:this.loc})[this.month-1]:null;}/**
     * Get the human readable long month name, such as 'October'.
     * Defaults to the system's locale if no locale has been specified
     * @example DateTime.local(2017, 10, 30).monthLong //=> October
     * @type {string}
     */get monthLong(){return this.isValid?Info.months("long",{locObj:this.loc})[this.month-1]:null;}/**
     * Get the human readable short weekday, such as 'Mon'.
     * Defaults to the system's locale if no locale has been specified
     * @example DateTime.local(2017, 10, 30).weekdayShort //=> Mon
     * @type {string}
     */get weekdayShort(){return this.isValid?Info.weekdays("short",{locObj:this.loc})[this.weekday-1]:null;}/**
     * Get the human readable long weekday, such as 'Monday'.
     * Defaults to the system's locale if no locale has been specified
     * @example DateTime.local(2017, 10, 30).weekdayLong //=> Monday
     * @type {string}
     */get weekdayLong(){return this.isValid?Info.weekdays("long",{locObj:this.loc})[this.weekday-1]:null;}/**
     * Get the UTC offset of this DateTime in minutes
     * @example DateTime.now().offset //=> -240
     * @example DateTime.utc().offset //=> 0
     * @type {number}
     */get offset(){return this.isValid?+this.o:NaN;}/**
     * Get the short human name for the zone's current offset, for example "EST" or "EDT".
     * Defaults to the system's locale if no locale has been specified
     * @type {string}
     */get offsetNameShort(){if(this.isValid){return this.zone.offsetName(this.ts,{format:"short",locale:this.locale});}else{return null;}}/**
     * Get the long human name for the zone's current offset, for example "Eastern Standard Time" or "Eastern Daylight Time".
     * Defaults to the system's locale if no locale has been specified
     * @type {string}
     */get offsetNameLong(){if(this.isValid){return this.zone.offsetName(this.ts,{format:"long",locale:this.locale});}else{return null;}}/**
     * Get whether this zone's offset ever changes, as in a DST.
     * @type {boolean}
     */get isOffsetFixed(){return this.isValid?this.zone.isUniversal:null;}/**
     * Get whether the DateTime is in a DST.
     * @type {boolean}
     */get isInDST(){if(this.isOffsetFixed){return false;}else{return this.offset>this.set({month:1,day:1}).offset||this.offset>this.set({month:5}).offset;}}/**
     * Get those DateTimes which have the same local time as this DateTime, but a different offset from UTC
     * in this DateTime's zone. During DST changes local time can be ambiguous, for example
     * `2023-10-29T02:30:00` in `Europe/Berlin` can have offset `+01:00` or `+02:00`.
     * This method will return both possible DateTimes if this DateTime's local time is ambiguous.
     * @returns {DateTime[]}
     */getPossibleOffsets(){if(!this.isValid||this.isOffsetFixed){return[this];}const dayMs=86400000;const minuteMs=60000;const localTS=objToLocalTS(this.c);const oEarlier=this.zone.offset(localTS-dayMs);const oLater=this.zone.offset(localTS+dayMs);const o1=this.zone.offset(localTS-oEarlier*minuteMs);const o2=this.zone.offset(localTS-oLater*minuteMs);if(o1===o2){return[this];}const ts1=localTS-o1*minuteMs;const ts2=localTS-o2*minuteMs;const c1=tsToObj(ts1,o1);const c2=tsToObj(ts2,o2);if(c1.hour===c2.hour&&c1.minute===c2.minute&&c1.second===c2.second&&c1.millisecond===c2.millisecond){return[clone(this,{ts:ts1}),clone(this,{ts:ts2})];}return[this];}/**
     * Returns true if this DateTime is in a leap year, false otherwise
     * @example DateTime.local(2016).isInLeapYear //=> true
     * @example DateTime.local(2013).isInLeapYear //=> false
     * @type {boolean}
     */get isInLeapYear(){return isLeapYear(this.year);}/**
     * Returns the number of days in this DateTime's month
     * @example DateTime.local(2016, 2).daysInMonth //=> 29
     * @example DateTime.local(2016, 3).daysInMonth //=> 31
     * @type {number}
     */get daysInMonth(){return daysInMonth(this.year,this.month);}/**
     * Returns the number of days in this DateTime's year
     * @example DateTime.local(2016).daysInYear //=> 366
     * @example DateTime.local(2013).daysInYear //=> 365
     * @type {number}
     */get daysInYear(){return this.isValid?daysInYear(this.year):NaN;}/**
     * Returns the number of weeks in this DateTime's year
     * @see https://en.wikipedia.org/wiki/ISO_week_date
     * @example DateTime.local(2004).weeksInWeekYear //=> 53
     * @example DateTime.local(2013).weeksInWeekYear //=> 52
     * @type {number}
     */get weeksInWeekYear(){return this.isValid?weeksInWeekYear(this.weekYear):NaN;}/**
     * Returns the number of weeks in this DateTime's local week year
     * @example DateTime.local(2020, 6, {locale: 'en-US'}).weeksInLocalWeekYear //=> 52
     * @example DateTime.local(2020, 6, {locale: 'de-DE'}).weeksInLocalWeekYear //=> 53
     * @type {number}
     */get weeksInLocalWeekYear(){return this.isValid?weeksInWeekYear(this.localWeekYear,this.loc.getMinDaysInFirstWeek(),this.loc.getStartOfWeek()):NaN;}/**
     * Returns the resolved Intl options for this DateTime.
     * This is useful in understanding the behavior of formatting methods
     * @param {Object} opts - the same options as toLocaleString
     * @return {Object}
     */resolvedLocaleOptions(opts={}){const{locale,numberingSystem,calendar}=Formatter.create(this.loc.clone(opts),opts).resolvedOptions(this);return{locale,numberingSystem,outputCalendar:calendar};}// TRANSFORM
/**
     * "Set" the DateTime's zone to UTC. Returns a newly-constructed DateTime.
     *
     * Equivalent to {@link DateTime#setZone}('utc')
     * @param {number} [offset=0] - optionally, an offset from UTC in minutes
     * @param {Object} [opts={}] - options to pass to `setZone()`
     * @return {DateTime}
     */toUTC(offset=0,opts={}){return this.setZone(FixedOffsetZone.instance(offset),opts);}/**
     * "Set" the DateTime's zone to the host's local zone. Returns a newly-constructed DateTime.
     *
     * Equivalent to `setZone('local')`
     * @return {DateTime}
     */toLocal(){return this.setZone(Settings.defaultZone);}/**
     * "Set" the DateTime's zone to specified zone. Returns a newly-constructed DateTime.
     *
     * By default, the setter keeps the underlying time the same (as in, the same timestamp), but the new instance will report different local times and consider DSTs when making computations, as with {@link DateTime#plus}. You may wish to use {@link DateTime#toLocal} and {@link DateTime#toUTC} which provide simple convenience wrappers for commonly used zones.
     * @param {string|Zone} [zone='local'] - a zone identifier. As a string, that can be any IANA zone supported by the host environment, or a fixed-offset name of the form 'UTC+3', or the strings 'local' or 'utc'. You may also supply an instance of a {@link DateTime#Zone} class.
     * @param {Object} opts - options
     * @param {boolean} [opts.keepLocalTime=false] - If true, adjust the underlying time so that the local time stays the same, but in the target zone. You should rarely need this.
     * @return {DateTime}
     */setZone(zone,{keepLocalTime=false,keepCalendarTime=false}={}){zone=normalizeZone(zone,Settings.defaultZone);if(zone.equals(this.zone)){return this;}else if(!zone.isValid){return DateTime.invalid(unsupportedZone(zone));}else{let newTS=this.ts;if(keepLocalTime||keepCalendarTime){const offsetGuess=zone.offset(this.ts);const asObj=this.toObject();[newTS]=objToTS(asObj,offsetGuess,zone);}return clone(this,{ts:newTS,zone});}}/**
     * "Set" the locale, numberingSystem, or outputCalendar. Returns a newly-constructed DateTime.
     * @param {Object} properties - the properties to set
     * @example DateTime.local(2017, 5, 25).reconfigure({ locale: 'en-GB' })
     * @return {DateTime}
     */reconfigure({locale,numberingSystem,outputCalendar}={}){const loc=this.loc.clone({locale,numberingSystem,outputCalendar});return clone(this,{loc});}/**
     * "Set" the locale. Returns a newly-constructed DateTime.
     * Just a convenient alias for reconfigure({ locale })
     * @example DateTime.local(2017, 5, 25).setLocale('en-GB')
     * @return {DateTime}
     */setLocale(locale){return this.reconfigure({locale});}/**
     * "Set" the values of specified units. Returns a newly-constructed DateTime.
     * You can only set units with this method; for "setting" metadata, see {@link DateTime#reconfigure} and {@link DateTime#setZone}.
     *
     * This method also supports setting locale-based week units, i.e. `localWeekday`, `localWeekNumber` and `localWeekYear`.
     * They cannot be mixed with ISO-week units like `weekday`.
     * @param {Object} values - a mapping of units to numbers
     * @example dt.set({ year: 2017 })
     * @example dt.set({ hour: 8, minute: 30 })
     * @example dt.set({ weekday: 5 })
     * @example dt.set({ year: 2005, ordinal: 234 })
     * @return {DateTime}
     */set(values){if(!this.isValid)return this;const normalized=normalizeObject(values,normalizeUnitWithLocalWeeks);const{minDaysInFirstWeek,startOfWeek}=usesLocalWeekValues(normalized,this.loc);const settingWeekStuff=!isUndefined(normalized.weekYear)||!isUndefined(normalized.weekNumber)||!isUndefined(normalized.weekday),containsOrdinal=!isUndefined(normalized.ordinal),containsGregorYear=!isUndefined(normalized.year),containsGregorMD=!isUndefined(normalized.month)||!isUndefined(normalized.day),containsGregor=containsGregorYear||containsGregorMD,definiteWeekDef=normalized.weekYear||normalized.weekNumber;if((containsGregor||containsOrdinal)&&definiteWeekDef){throw new ConflictingSpecificationError("Can't mix weekYear/weekNumber units with year/month/day or ordinals");}if(containsGregorMD&&containsOrdinal){throw new ConflictingSpecificationError("Can't mix ordinal dates with month/day");}let mixed;if(settingWeekStuff){mixed=weekToGregorian({...gregorianToWeek(this.c,minDaysInFirstWeek,startOfWeek),...normalized},minDaysInFirstWeek,startOfWeek);}else if(!isUndefined(normalized.ordinal)){mixed=ordinalToGregorian({...gregorianToOrdinal(this.c),...normalized});}else{mixed={...this.toObject(),...normalized};// if we didn't set the day but we ended up on an overflow date,
// use the last day of the right month
if(isUndefined(normalized.day)){mixed.day=Math.min(daysInMonth(mixed.year,mixed.month),mixed.day);}}const[ts,o]=objToTS(mixed,this.o,this.zone);return clone(this,{ts,o});}/**
     * Add a period of time to this DateTime and return the resulting DateTime
     *
     * Adding hours, minutes, seconds, or milliseconds increases the timestamp by the right number of milliseconds. Adding days, months, or years shifts the calendar, accounting for DSTs and leap years along the way. Thus, `dt.plus({ hours: 24 })` may result in a different time than `dt.plus({ days: 1 })` if there's a DST shift in between.
     * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
     * @example DateTime.now().plus(123) //~> in 123 milliseconds
     * @example DateTime.now().plus({ minutes: 15 }) //~> in 15 minutes
     * @example DateTime.now().plus({ days: 1 }) //~> this time tomorrow
     * @example DateTime.now().plus({ days: -1 }) //~> this time yesterday
     * @example DateTime.now().plus({ hours: 3, minutes: 13 }) //~> in 3 hr, 13 min
     * @example DateTime.now().plus(Duration.fromObject({ hours: 3, minutes: 13 })) //~> in 3 hr, 13 min
     * @return {DateTime}
     */plus(duration){if(!this.isValid)return this;const dur=Duration.fromDurationLike(duration);return clone(this,adjustTime(this,dur));}/**
     * Subtract a period of time to this DateTime and return the resulting DateTime
     * See {@link DateTime#plus}
     * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
     @return {DateTime}
     */minus(duration){if(!this.isValid)return this;const dur=Duration.fromDurationLike(duration).negate();return clone(this,adjustTime(this,dur));}/**
     * "Set" this DateTime to the beginning of a unit of time.
     * @param {string} unit - The unit to go to the beginning of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.
     * @param {Object} opts - options
     * @param {boolean} [opts.useLocaleWeeks=false] - If true, use weeks based on the locale, i.e. use the locale-dependent start of the week
     * @example DateTime.local(2014, 3, 3).startOf('month').toISODate(); //=> '2014-03-01'
     * @example DateTime.local(2014, 3, 3).startOf('year').toISODate(); //=> '2014-01-01'
     * @example DateTime.local(2014, 3, 3).startOf('week').toISODate(); //=> '2014-03-03', weeks always start on Mondays
     * @example DateTime.local(2014, 3, 3, 5, 30).startOf('day').toISOTime(); //=> '00:00.000-05:00'
     * @example DateTime.local(2014, 3, 3, 5, 30).startOf('hour').toISOTime(); //=> '05:00:00.000-05:00'
     * @return {DateTime}
     */startOf(unit,{useLocaleWeeks=false}={}){if(!this.isValid)return this;const o={},normalizedUnit=Duration.normalizeUnit(unit);switch(normalizedUnit){case"years":o.month=1;// falls through
case"quarters":case"months":o.day=1;// falls through
case"weeks":case"days":o.hour=0;// falls through
case"hours":o.minute=0;// falls through
case"minutes":o.second=0;// falls through
case"seconds":o.millisecond=0;break;// no default, invalid units throw in normalizeUnit()
}if(normalizedUnit==="weeks"){if(useLocaleWeeks){const startOfWeek=this.loc.getStartOfWeek();const{weekday}=this;if(weekday<startOfWeek){o.weekNumber=this.weekNumber-1;}o.weekday=startOfWeek;}else{o.weekday=1;}}if(normalizedUnit==="quarters"){const q=Math.ceil(this.month/3);o.month=(q-1)*3+1;}return this.set(o);}/**
     * "Set" this DateTime to the end (meaning the last millisecond) of a unit of time
     * @param {string} unit - The unit to go to the end of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.
     * @param {Object} opts - options
     * @param {boolean} [opts.useLocaleWeeks=false] - If true, use weeks based on the locale, i.e. use the locale-dependent start of the week
     * @example DateTime.local(2014, 3, 3).endOf('month').toISO(); //=> '2014-03-31T23:59:59.999-05:00'
     * @example DateTime.local(2014, 3, 3).endOf('year').toISO(); //=> '2014-12-31T23:59:59.999-05:00'
     * @example DateTime.local(2014, 3, 3).endOf('week').toISO(); // => '2014-03-09T23:59:59.999-05:00', weeks start on Mondays
     * @example DateTime.local(2014, 3, 3, 5, 30).endOf('day').toISO(); //=> '2014-03-03T23:59:59.999-05:00'
     * @example DateTime.local(2014, 3, 3, 5, 30).endOf('hour').toISO(); //=> '2014-03-03T05:59:59.999-05:00'
     * @return {DateTime}
     */endOf(unit,opts){return this.isValid?this.plus({[unit]:1}).startOf(unit,opts).minus(1):this;}// OUTPUT
/**
     * Returns a string representation of this DateTime formatted according to the specified format string.
     * **You may not want this.** See {@link DateTime#toLocaleString} for a more flexible formatting tool. For a table of tokens and their interpretations, see [here](https://moment.github.io/luxon/#/formatting?id=table-of-tokens).
     * Defaults to en-US if no locale has been specified, regardless of the system's locale.
     * @param {string} fmt - the format string
     * @param {Object} opts - opts to override the configuration options on this DateTime
     * @example DateTime.now().toFormat('yyyy LLL dd') //=> '2017 Apr 22'
     * @example DateTime.now().setLocale('fr').toFormat('yyyy LLL dd') //=> '2017 avr. 22'
     * @example DateTime.now().toFormat('yyyy LLL dd', { locale: "fr" }) //=> '2017 avr. 22'
     * @example DateTime.now().toFormat("HH 'hours and' mm 'minutes'") //=> '20 hours and 55 minutes'
     * @return {string}
     */toFormat(fmt,opts={}){return this.isValid?Formatter.create(this.loc.redefaultToEN(opts)).formatDateTimeFromString(this,fmt):INVALID;}/**
     * Returns a localized string representing this date. Accepts the same options as the Intl.DateTimeFormat constructor and any presets defined by Luxon, such as `DateTime.DATE_FULL` or `DateTime.TIME_SIMPLE`.
     * The exact behavior of this method is browser-specific, but in general it will return an appropriate representation
     * of the DateTime in the assigned locale.
     * Defaults to the system's locale if no locale has been specified
     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat
     * @param formatOpts {Object} - Intl.DateTimeFormat constructor options and configuration options
     * @param {Object} opts - opts to override the configuration options on this DateTime
     * @example DateTime.now().toLocaleString(); //=> 4/20/2017
     * @example DateTime.now().setLocale('en-gb').toLocaleString(); //=> '20/04/2017'
     * @example DateTime.now().toLocaleString(DateTime.DATE_FULL); //=> 'April 20, 2017'
     * @example DateTime.now().toLocaleString(DateTime.DATE_FULL, { locale: 'fr' }); //=> '28 août 2022'
     * @example DateTime.now().toLocaleString(DateTime.TIME_SIMPLE); //=> '11:32 AM'
     * @example DateTime.now().toLocaleString(DateTime.DATETIME_SHORT); //=> '4/20/2017, 11:32 AM'
     * @example DateTime.now().toLocaleString({ weekday: 'long', month: 'long', day: '2-digit' }); //=> 'Thursday, April 20'
     * @example DateTime.now().toLocaleString({ weekday: 'short', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }); //=> 'Thu, Apr 20, 11:27 AM'
     * @example DateTime.now().toLocaleString({ hour: '2-digit', minute: '2-digit', hourCycle: 'h23' }); //=> '11:32'
     * @return {string}
     */toLocaleString(formatOpts=DATE_SHORT,opts={}){return this.isValid?Formatter.create(this.loc.clone(opts),formatOpts).formatDateTime(this):INVALID;}/**
     * Returns an array of format "parts", meaning individual tokens along with metadata. This is allows callers to post-process individual sections of the formatted output.
     * Defaults to the system's locale if no locale has been specified
     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/formatToParts
     * @param opts {Object} - Intl.DateTimeFormat constructor options, same as `toLocaleString`.
     * @example DateTime.now().toLocaleParts(); //=> [
     *                                   //=>   { type: 'day', value: '25' },
     *                                   //=>   { type: 'literal', value: '/' },
     *                                   //=>   { type: 'month', value: '05' },
     *                                   //=>   { type: 'literal', value: '/' },
     *                                   //=>   { type: 'year', value: '1982' }
     *                                   //=> ]
     */toLocaleParts(opts={}){return this.isValid?Formatter.create(this.loc.clone(opts),opts).formatDateTimeParts(this):[];}/**
     * Returns an ISO 8601-compliant string representation of this DateTime
     * @param {Object} opts - options
     * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0
     * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0
     * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
     * @param {boolean} [opts.extendedZone=false] - add the time zone format extension
     * @param {string} [opts.format='extended'] - choose between the basic and extended format
     * @example DateTime.utc(1983, 5, 25).toISO() //=> '1982-05-25T00:00:00.000Z'
     * @example DateTime.now().toISO() //=> '2017-04-22T20:47:05.335-04:00'
     * @example DateTime.now().toISO({ includeOffset: false }) //=> '2017-04-22T20:47:05.335'
     * @example DateTime.now().toISO({ format: 'basic' }) //=> '20170422T204705.335-0400'
     * @return {string|null}
     */toISO({format="extended",suppressSeconds=false,suppressMilliseconds=false,includeOffset=true,extendedZone=false}={}){if(!this.isValid){return null;}const ext=format==="extended";let c=toISODate(this,ext);c+="T";c+=toISOTime(this,ext,suppressSeconds,suppressMilliseconds,includeOffset,extendedZone);return c;}/**
     * Returns an ISO 8601-compliant string representation of this DateTime's date component
     * @param {Object} opts - options
     * @param {string} [opts.format='extended'] - choose between the basic and extended format
     * @example DateTime.utc(1982, 5, 25).toISODate() //=> '1982-05-25'
     * @example DateTime.utc(1982, 5, 25).toISODate({ format: 'basic' }) //=> '19820525'
     * @return {string|null}
     */toISODate({format="extended"}={}){if(!this.isValid){return null;}return toISODate(this,format==="extended");}/**
     * Returns an ISO 8601-compliant string representation of this DateTime's week date
     * @example DateTime.utc(1982, 5, 25).toISOWeekDate() //=> '1982-W21-2'
     * @return {string}
     */toISOWeekDate(){return toTechFormat(this,"kkkk-'W'WW-c");}/**
     * Returns an ISO 8601-compliant string representation of this DateTime's time component
     * @param {Object} opts - options
     * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0
     * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0
     * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
     * @param {boolean} [opts.extendedZone=true] - add the time zone format extension
     * @param {boolean} [opts.includePrefix=false] - include the `T` prefix
     * @param {string} [opts.format='extended'] - choose between the basic and extended format
     * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime() //=> '07:34:19.361Z'
     * @example DateTime.utc().set({ hour: 7, minute: 34, seconds: 0, milliseconds: 0 }).toISOTime({ suppressSeconds: true }) //=> '07:34Z'
     * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ format: 'basic' }) //=> '073419.361Z'
     * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ includePrefix: true }) //=> 'T07:34:19.361Z'
     * @return {string}
     */toISOTime({suppressMilliseconds=false,suppressSeconds=false,includeOffset=true,includePrefix=false,extendedZone=false,format="extended"}={}){if(!this.isValid){return null;}let c=includePrefix?"T":"";return c+toISOTime(this,format==="extended",suppressSeconds,suppressMilliseconds,includeOffset,extendedZone);}/**
     * Returns an RFC 2822-compatible string representation of this DateTime
     * @example DateTime.utc(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 +0000'
     * @example DateTime.local(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 -0400'
     * @return {string}
     */toRFC2822(){return toTechFormat(this,"EEE, dd LLL yyyy HH:mm:ss ZZZ",false);}/**
     * Returns a string representation of this DateTime appropriate for use in HTTP headers. The output is always expressed in GMT.
     * Specifically, the string conforms to RFC 1123.
     * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1
     * @example DateTime.utc(2014, 7, 13).toHTTP() //=> 'Sun, 13 Jul 2014 00:00:00 GMT'
     * @example DateTime.utc(2014, 7, 13, 19).toHTTP() //=> 'Sun, 13 Jul 2014 19:00:00 GMT'
     * @return {string}
     */toHTTP(){return toTechFormat(this.toUTC(),"EEE, dd LLL yyyy HH:mm:ss 'GMT'");}/**
     * Returns a string representation of this DateTime appropriate for use in SQL Date
     * @example DateTime.utc(2014, 7, 13).toSQLDate() //=> '2014-07-13'
     * @return {string|null}
     */toSQLDate(){if(!this.isValid){return null;}return toISODate(this,true);}/**
     * Returns a string representation of this DateTime appropriate for use in SQL Time
     * @param {Object} opts - options
     * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.
     * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
     * @param {boolean} [opts.includeOffsetSpace=true] - include the space between the time and the offset, such as '05:15:16.345 -04:00'
     * @example DateTime.utc().toSQL() //=> '05:15:16.345'
     * @example DateTime.now().toSQL() //=> '05:15:16.345 -04:00'
     * @example DateTime.now().toSQL({ includeOffset: false }) //=> '05:15:16.345'
     * @example DateTime.now().toSQL({ includeZone: false }) //=> '05:15:16.345 America/New_York'
     * @return {string}
     */toSQLTime({includeOffset=true,includeZone=false,includeOffsetSpace=true}={}){let fmt="HH:mm:ss.SSS";if(includeZone||includeOffset){if(includeOffsetSpace){fmt+=" ";}if(includeZone){fmt+="z";}else if(includeOffset){fmt+="ZZ";}}return toTechFormat(this,fmt,true);}/**
     * Returns a string representation of this DateTime appropriate for use in SQL DateTime
     * @param {Object} opts - options
     * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.
     * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
     * @param {boolean} [opts.includeOffsetSpace=true] - include the space between the time and the offset, such as '05:15:16.345 -04:00'
     * @example DateTime.utc(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 Z'
     * @example DateTime.local(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 -04:00'
     * @example DateTime.local(2014, 7, 13).toSQL({ includeOffset: false }) //=> '2014-07-13 00:00:00.000'
     * @example DateTime.local(2014, 7, 13).toSQL({ includeZone: true }) //=> '2014-07-13 00:00:00.000 America/New_York'
     * @return {string}
     */toSQL(opts={}){if(!this.isValid){return null;}return`${this.toSQLDate()} ${this.toSQLTime(opts)}`;}/**
     * Returns a string representation of this DateTime appropriate for debugging
     * @return {string}
     */toString(){return this.isValid?this.toISO():INVALID;}/**
     * Returns a string representation of this DateTime appropriate for the REPL.
     * @return {string}
     */[Symbol.for("nodejs.util.inspect.custom")](){if(this.isValid){return`DateTime { ts: ${this.toISO()}, zone: ${this.zone.name}, locale: ${this.locale} }`;}else{return`DateTime { Invalid, reason: ${this.invalidReason} }`;}}/**
     * Returns the epoch milliseconds of this DateTime. Alias of {@link DateTime#toMillis}
     * @return {number}
     */valueOf(){return this.toMillis();}/**
     * Returns the epoch milliseconds of this DateTime.
     * @return {number}
     */toMillis(){return this.isValid?this.ts:NaN;}/**
     * Returns the epoch seconds (including milliseconds in the fractional part) of this DateTime.
     * @return {number}
     */toSeconds(){return this.isValid?this.ts/1000:NaN;}/**
     * Returns the epoch seconds (as a whole number) of this DateTime.
     * @return {number}
     */toUnixInteger(){return this.isValid?Math.floor(this.ts/1000):NaN;}/**
     * Returns an ISO 8601 representation of this DateTime appropriate for use in JSON.
     * @return {string}
     */toJSON(){return this.toISO();}/**
     * Returns a BSON serializable equivalent to this DateTime.
     * @return {Date}
     */toBSON(){return this.toJSDate();}/**
     * Returns a JavaScript object with this DateTime's year, month, day, and so on.
     * @param opts - options for generating the object
     * @param {boolean} [opts.includeConfig=false] - include configuration attributes in the output
     * @example DateTime.now().toObject() //=> { year: 2017, month: 4, day: 22, hour: 20, minute: 49, second: 42, millisecond: 268 }
     * @return {Object}
     */toObject(opts={}){if(!this.isValid)return{};const base={...this.c};if(opts.includeConfig){base.outputCalendar=this.outputCalendar;base.numberingSystem=this.loc.numberingSystem;base.locale=this.loc.locale;}return base;}/**
     * Returns a JavaScript Date equivalent to this DateTime.
     * @return {Date}
     */toJSDate(){return new Date(this.isValid?this.ts:NaN);}// COMPARE
/**
     * Return the difference between two DateTimes as a Duration.
     * @param {DateTime} otherDateTime - the DateTime to compare this one to
     * @param {string|string[]} [unit=['milliseconds']] - the unit or array of units (such as 'hours' or 'days') to include in the duration.
     * @param {Object} opts - options that affect the creation of the Duration
     * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
     * @example
     * var i1 = DateTime.fromISO('1982-05-25T09:45'),
     *     i2 = DateTime.fromISO('1983-10-14T10:30');
     * i2.diff(i1).toObject() //=> { milliseconds: 43807500000 }
     * i2.diff(i1, 'hours').toObject() //=> { hours: 12168.75 }
     * i2.diff(i1, ['months', 'days']).toObject() //=> { months: 16, days: 19.03125 }
     * i2.diff(i1, ['months', 'days', 'hours']).toObject() //=> { months: 16, days: 19, hours: 0.75 }
     * @return {Duration}
     */diff(otherDateTime,unit="milliseconds",opts={}){if(!this.isValid||!otherDateTime.isValid){return Duration.invalid("created by diffing an invalid DateTime");}const durOpts={locale:this.locale,numberingSystem:this.numberingSystem,...opts};const units=maybeArray(unit).map(Duration.normalizeUnit),otherIsLater=otherDateTime.valueOf()>this.valueOf(),earlier=otherIsLater?this:otherDateTime,later=otherIsLater?otherDateTime:this,diffed=diff(earlier,later,units,durOpts);return otherIsLater?diffed.negate():diffed;}/**
     * Return the difference between this DateTime and right now.
     * See {@link DateTime#diff}
     * @param {string|string[]} [unit=['milliseconds']] - the unit or units units (such as 'hours' or 'days') to include in the duration
     * @param {Object} opts - options that affect the creation of the Duration
     * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
     * @return {Duration}
     */diffNow(unit="milliseconds",opts={}){return this.diff(DateTime.now(),unit,opts);}/**
     * Return an Interval spanning between this DateTime and another DateTime
     * @param {DateTime} otherDateTime - the other end point of the Interval
     * @return {Interval|DateTime}
     */until(otherDateTime){return this.isValid?Interval.fromDateTimes(this,otherDateTime):this;}/**
     * Return whether this DateTime is in the same unit of time as another DateTime.
     * Higher-order units must also be identical for this function to return `true`.
     * Note that time zones are **ignored** in this comparison, which compares the **local** calendar time. Use {@link DateTime#setZone} to convert one of the dates if needed.
     * @param {DateTime} otherDateTime - the other DateTime
     * @param {string} unit - the unit of time to check sameness on
     * @param {Object} opts - options
     * @param {boolean} [opts.useLocaleWeeks=false] - If true, use weeks based on the locale, i.e. use the locale-dependent start of the week; only the locale of this DateTime is used
     * @example DateTime.now().hasSame(otherDT, 'day'); //~> true if otherDT is in the same current calendar day
     * @return {boolean}
     */hasSame(otherDateTime,unit,opts){if(!this.isValid)return false;const inputMs=otherDateTime.valueOf();const adjustedToZone=this.setZone(otherDateTime.zone,{keepLocalTime:true});return adjustedToZone.startOf(unit,opts)<=inputMs&&inputMs<=adjustedToZone.endOf(unit,opts);}/**
     * Equality check
     * Two DateTimes are equal if and only if they represent the same millisecond, have the same zone and location, and are both valid.
     * To compare just the millisecond values, use `+dt1 === +dt2`.
     * @param {DateTime} other - the other DateTime
     * @return {boolean}
     */equals(other){return this.isValid&&other.isValid&&this.valueOf()===other.valueOf()&&this.zone.equals(other.zone)&&this.loc.equals(other.loc);}/**
     * Returns a string representation of a this time relative to now, such as "in two days". Can only internationalize if your
     * platform supports Intl.RelativeTimeFormat. Rounds down by default.
     * @param {Object} options - options that affect the output
     * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.
     * @param {string} [options.style="long"] - the style of units, must be "long", "short", or "narrow"
     * @param {string|string[]} options.unit - use a specific unit or array of units; if omitted, or an array, the method will pick the best unit. Use an array or one of "years", "quarters", "months", "weeks", "days", "hours", "minutes", or "seconds"
     * @param {boolean} [options.round=true] - whether to round the numbers in the output.
     * @param {number} [options.padding=0] - padding in milliseconds. This allows you to round up the result if it fits inside the threshold. Don't use in combination with {round: false} because the decimal output will include the padding.
     * @param {string} options.locale - override the locale of this DateTime
     * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this
     * @example DateTime.now().plus({ days: 1 }).toRelative() //=> "in 1 day"
     * @example DateTime.now().setLocale("es").toRelative({ days: 1 }) //=> "dentro de 1 día"
     * @example DateTime.now().plus({ days: 1 }).toRelative({ locale: "fr" }) //=> "dans 23 heures"
     * @example DateTime.now().minus({ days: 2 }).toRelative() //=> "2 days ago"
     * @example DateTime.now().minus({ days: 2 }).toRelative({ unit: "hours" }) //=> "48 hours ago"
     * @example DateTime.now().minus({ hours: 36 }).toRelative({ round: false }) //=> "1.5 days ago"
     */toRelative(options={}){if(!this.isValid)return null;const base=options.base||DateTime.fromObject({},{zone:this.zone}),padding=options.padding?this<base?-options.padding:options.padding:0;let units=["years","months","days","hours","minutes","seconds"];let unit=options.unit;if(Array.isArray(options.unit)){units=options.unit;unit=undefined;}return diffRelative(base,this.plus(padding),{...options,numeric:"always",units,unit});}/**
     * Returns a string representation of this date relative to today, such as "yesterday" or "next month".
     * Only internationalizes on platforms that supports Intl.RelativeTimeFormat.
     * @param {Object} options - options that affect the output
     * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.
     * @param {string} options.locale - override the locale of this DateTime
     * @param {string} options.unit - use a specific unit; if omitted, the method will pick the unit. Use one of "years", "quarters", "months", "weeks", or "days"
     * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this
     * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar() //=> "tomorrow"
     * @example DateTime.now().setLocale("es").plus({ days: 1 }).toRelative() //=> ""mañana"
     * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar({ locale: "fr" }) //=> "demain"
     * @example DateTime.now().minus({ days: 2 }).toRelativeCalendar() //=> "2 days ago"
     */toRelativeCalendar(options={}){if(!this.isValid)return null;return diffRelative(options.base||DateTime.fromObject({},{zone:this.zone}),this,{...options,numeric:"auto",units:["years","months","days"],calendary:true});}/**
     * Return the min of several date times
     * @param {...DateTime} dateTimes - the DateTimes from which to choose the minimum
     * @return {DateTime} the min DateTime, or undefined if called with no argument
     */static min(...dateTimes){if(!dateTimes.every(DateTime.isDateTime)){throw new InvalidArgumentError("min requires all arguments be DateTimes");}return bestBy(dateTimes,i=>i.valueOf(),Math.min);}/**
     * Return the max of several date times
     * @param {...DateTime} dateTimes - the DateTimes from which to choose the maximum
     * @return {DateTime} the max DateTime, or undefined if called with no argument
     */static max(...dateTimes){if(!dateTimes.every(DateTime.isDateTime)){throw new InvalidArgumentError("max requires all arguments be DateTimes");}return bestBy(dateTimes,i=>i.valueOf(),Math.max);}// MISC
/**
     * Explain how a string would be parsed by fromFormat()
     * @param {string} text - the string to parse
     * @param {string} fmt - the format the string is expected to be in (see description)
     * @param {Object} options - options taken by fromFormat()
     * @return {Object}
     */static fromFormatExplain(text,fmt,options={}){const{locale=null,numberingSystem=null}=options,localeToUse=Locale.fromOpts({locale,numberingSystem,defaultToEN:true});return explainFromTokens(localeToUse,text,fmt);}/**
     * @deprecated use fromFormatExplain instead
     */static fromStringExplain(text,fmt,options={}){return DateTime.fromFormatExplain(text,fmt,options);}/**
     * Build a parser for `fmt` using the given locale. This parser can be passed
     * to {@link DateTime.fromFormatParser} to a parse a date in this format. This
     * can be used to optimize cases where many dates need to be parsed in a
     * specific format.
     *
     * @param {String} fmt - the format the string is expected to be in (see
     * description)
     * @param {Object} options - options used to set locale and numberingSystem
     * for parser
     * @returns {TokenParser} - opaque object to be used
     */static buildFormatParser(fmt,options={}){const{locale=null,numberingSystem=null}=options,localeToUse=Locale.fromOpts({locale,numberingSystem,defaultToEN:true});return new TokenParser(localeToUse,fmt);}/**
     * Create a DateTime from an input string and format parser.
     *
     * The format parser must have been created with the same locale as this call.
     *
     * @param {String} text - the string to parse
     * @param {TokenParser} formatParser - parser from {@link DateTime.buildFormatParser}
     * @param {Object} opts - options taken by fromFormat()
     * @returns {DateTime}
     */static fromFormatParser(text,formatParser,opts={}){if(isUndefined(text)||isUndefined(formatParser)){throw new InvalidArgumentError("fromFormatParser requires an input string and a format parser");}const{locale=null,numberingSystem=null}=opts,localeToUse=Locale.fromOpts({locale,numberingSystem,defaultToEN:true});if(!localeToUse.equals(formatParser.locale)){throw new InvalidArgumentError(`fromFormatParser called with a locale of ${localeToUse}, `+`but the format parser was created for ${formatParser.locale}`);}const{result,zone,specificOffset,invalidReason}=formatParser.explainFromTokens(text);if(invalidReason){return DateTime.invalid(invalidReason);}else{return parseDataToDateTime(result,zone,opts,`format ${formatParser.format}`,text,specificOffset);}}// FORMAT PRESETS
/**
     * {@link DateTime#toLocaleString} format like 10/14/1983
     * @type {Object}
     */static get DATE_SHORT(){return DATE_SHORT;}/**
     * {@link DateTime#toLocaleString} format like 'Oct 14, 1983'
     * @type {Object}
     */static get DATE_MED(){return DATE_MED;}/**
     * {@link DateTime#toLocaleString} format like 'Fri, Oct 14, 1983'
     * @type {Object}
     */static get DATE_MED_WITH_WEEKDAY(){return DATE_MED_WITH_WEEKDAY;}/**
     * {@link DateTime#toLocaleString} format like 'October 14, 1983'
     * @type {Object}
     */static get DATE_FULL(){return DATE_FULL;}/**
     * {@link DateTime#toLocaleString} format like 'Tuesday, October 14, 1983'
     * @type {Object}
     */static get DATE_HUGE(){return DATE_HUGE;}/**
     * {@link DateTime#toLocaleString} format like '09:30 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */static get TIME_SIMPLE(){return TIME_SIMPLE;}/**
     * {@link DateTime#toLocaleString} format like '09:30:23 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */static get TIME_WITH_SECONDS(){return TIME_WITH_SECONDS;}/**
     * {@link DateTime#toLocaleString} format like '09:30:23 AM EDT'. Only 12-hour if the locale is.
     * @type {Object}
     */static get TIME_WITH_SHORT_OFFSET(){return TIME_WITH_SHORT_OFFSET;}/**
     * {@link DateTime#toLocaleString} format like '09:30:23 AM Eastern Daylight Time'. Only 12-hour if the locale is.
     * @type {Object}
     */static get TIME_WITH_LONG_OFFSET(){return TIME_WITH_LONG_OFFSET;}/**
     * {@link DateTime#toLocaleString} format like '09:30', always 24-hour.
     * @type {Object}
     */static get TIME_24_SIMPLE(){return TIME_24_SIMPLE;}/**
     * {@link DateTime#toLocaleString} format like '09:30:23', always 24-hour.
     * @type {Object}
     */static get TIME_24_WITH_SECONDS(){return TIME_24_WITH_SECONDS;}/**
     * {@link DateTime#toLocaleString} format like '09:30:23 EDT', always 24-hour.
     * @type {Object}
     */static get TIME_24_WITH_SHORT_OFFSET(){return TIME_24_WITH_SHORT_OFFSET;}/**
     * {@link DateTime#toLocaleString} format like '09:30:23 Eastern Daylight Time', always 24-hour.
     * @type {Object}
     */static get TIME_24_WITH_LONG_OFFSET(){return TIME_24_WITH_LONG_OFFSET;}/**
     * {@link DateTime#toLocaleString} format like '10/14/1983, 9:30 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */static get DATETIME_SHORT(){return DATETIME_SHORT;}/**
     * {@link DateTime#toLocaleString} format like '10/14/1983, 9:30:33 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */static get DATETIME_SHORT_WITH_SECONDS(){return DATETIME_SHORT_WITH_SECONDS;}/**
     * {@link DateTime#toLocaleString} format like 'Oct 14, 1983, 9:30 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */static get DATETIME_MED(){return DATETIME_MED;}/**
     * {@link DateTime#toLocaleString} format like 'Oct 14, 1983, 9:30:33 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */static get DATETIME_MED_WITH_SECONDS(){return DATETIME_MED_WITH_SECONDS;}/**
     * {@link DateTime#toLocaleString} format like 'Fri, 14 Oct 1983, 9:30 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */static get DATETIME_MED_WITH_WEEKDAY(){return DATETIME_MED_WITH_WEEKDAY;}/**
     * {@link DateTime#toLocaleString} format like 'October 14, 1983, 9:30 AM EDT'. Only 12-hour if the locale is.
     * @type {Object}
     */static get DATETIME_FULL(){return DATETIME_FULL;}/**
     * {@link DateTime#toLocaleString} format like 'October 14, 1983, 9:30:33 AM EDT'. Only 12-hour if the locale is.
     * @type {Object}
     */static get DATETIME_FULL_WITH_SECONDS(){return DATETIME_FULL_WITH_SECONDS;}/**
     * {@link DateTime#toLocaleString} format like 'Friday, October 14, 1983, 9:30 AM Eastern Daylight Time'. Only 12-hour if the locale is.
     * @type {Object}
     */static get DATETIME_HUGE(){return DATETIME_HUGE;}/**
     * {@link DateTime#toLocaleString} format like 'Friday, October 14, 1983, 9:30:33 AM Eastern Daylight Time'. Only 12-hour if the locale is.
     * @type {Object}
     */static get DATETIME_HUGE_WITH_SECONDS(){return DATETIME_HUGE_WITH_SECONDS;}}/**
   * @private
   */function friendlyDateTime(dateTimeish){if(DateTime.isDateTime(dateTimeish)){return dateTimeish;}else if(dateTimeish&&dateTimeish.valueOf&&isNumber(dateTimeish.valueOf())){return DateTime.fromJSDate(dateTimeish);}else if(dateTimeish&&typeof dateTimeish==="object"){return DateTime.fromObject(dateTimeish);}else{throw new InvalidArgumentError(`Unknown datetime argument: ${dateTimeish}, of type ${typeof dateTimeish}`);}}/*!
   * chartjs-adapter-luxon v1.3.1
   * https://www.chartjs.org
   * (c) 2023 chartjs-adapter-luxon Contributors
   * Released under the MIT license
   */const FORMATS={datetime:DateTime.DATETIME_MED_WITH_SECONDS,millisecond:'h:mm:ss.SSS a',second:DateTime.TIME_WITH_SECONDS,minute:DateTime.TIME_SIMPLE,hour:{hour:'numeric'},day:{day:'numeric',month:'short'},week:'DD',month:{month:'short',year:'numeric'},quarter:"'Q'q - yyyy",year:{year:'numeric'}};adapters._date.override({_id:'luxon',// DEBUG
/**
     * @private
     */_create:function(time){return DateTime.fromMillis(time,this.options);},init(chartOptions){if(!this.options.locale){this.options.locale=chartOptions.locale;}},formats:function(){return FORMATS;},parse:function(value,format){const options=this.options;const type=typeof value;if(value===null||type==='undefined'){return null;}if(type==='number'){value=this._create(value);}else if(type==='string'){if(typeof format==='string'){value=DateTime.fromFormat(value,format,options);}else{value=DateTime.fromISO(value,options);}}else if(value instanceof Date){value=DateTime.fromJSDate(value,options);}else if(type==='object'&&!(value instanceof DateTime)){value=DateTime.fromObject(value,options);}return value.isValid?value.valueOf():null;},format:function(time,format){const datetime=this._create(time);return typeof format==='string'?datetime.toFormat(format):datetime.toLocaleString(format);},add:function(time,amount,unit){const args={};args[unit]=amount;return this._create(time).plus(args).valueOf();},diff:function(max,min,unit){return this._create(max).diff(this._create(min)).as(unit).valueOf();},startOf:function(time,unit,weekday){if(unit==='isoWeek'){weekday=Math.trunc(Math.min(Math.max(0,weekday),6));const dateTime=this._create(time);return dateTime.minus({days:(dateTime.weekday-weekday+7)%7}).startOf('day').valueOf();}return unit?this._create(time).startOf(unit).valueOf():time;},endOf:function(time,unit){return this._create(time).endOf(unit).valueOf();}});// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423
class Adder{constructor(){this._partials=new Float64Array(32);this._n=0;}add(x){const p=this._partials;let i=0;for(let j=0;j<this._n&&j<32;j++){const y=p[j],hi=x+y,lo=Math.abs(x)<Math.abs(y)?x-(hi-y):y-(hi-x);if(lo)p[i++]=lo;x=hi;}p[i]=x;this._n=i+1;return this;}valueOf(){const p=this._partials;let n=this._n,x,y,lo,hi=0;if(n>0){hi=p[--n];while(n>0){x=hi;y=p[--n];hi=x+y;lo=y-(hi-x);if(lo)break;}if(n>0&&(lo<0&&p[n-1]<0||lo>0&&p[n-1]>0)){y=lo*2;x=hi+y;if(y==x-hi)hi=x;}}return hi;}}function*flatten(arrays){for(const array of arrays){yield*array;}}function merge(arrays){return Array.from(flatten(arrays));}function range(start,stop,step){start=+start,stop=+stop,step=(n=arguments.length)<2?(stop=start,start=0,1):n<3?1:+step;var i=-1,n=Math.max(0,Math.ceil((stop-start)/step))|0,range=new Array(n);while(++i<n){range[i]=start+i*step;}return range;}var epsilon=1e-6;var epsilon2=1e-12;var pi=Math.PI;var halfPi=pi/2;var quarterPi=pi/4;var tau=pi*2;var degrees$1=180/pi;var radians$1=pi/180;var abs=Math.abs;var atan=Math.atan;var atan2=Math.atan2;var cos=Math.cos;var ceil=Math.ceil;var exp=Math.exp;var log=Math.log;var pow=Math.pow;var sin=Math.sin;var sign=Math.sign||function(x){return x>0?1:x<0?-1:0;};var sqrt=Math.sqrt;var tan=Math.tan;function acos(x){return x>1?0:x<-1?pi:Math.acos(x);}function asin(x){return x>1?halfPi:x<-1?-halfPi:Math.asin(x);}function noop(){}function streamGeometry(geometry,stream){if(geometry&&streamGeometryType.hasOwnProperty(geometry.type)){streamGeometryType[geometry.type](geometry,stream);}}var streamObjectType={Feature:function(object,stream){streamGeometry(object.geometry,stream);},FeatureCollection:function(object,stream){var features=object.features,i=-1,n=features.length;while(++i<n)streamGeometry(features[i].geometry,stream);}};var streamGeometryType={Sphere:function(object,stream){stream.sphere();},Point:function(object,stream){object=object.coordinates;stream.point(object[0],object[1],object[2]);},MultiPoint:function(object,stream){var coordinates=object.coordinates,i=-1,n=coordinates.length;while(++i<n)object=coordinates[i],stream.point(object[0],object[1],object[2]);},LineString:function(object,stream){streamLine(object.coordinates,stream,0);},MultiLineString:function(object,stream){var coordinates=object.coordinates,i=-1,n=coordinates.length;while(++i<n)streamLine(coordinates[i],stream,0);},Polygon:function(object,stream){streamPolygon(object.coordinates,stream);},MultiPolygon:function(object,stream){var coordinates=object.coordinates,i=-1,n=coordinates.length;while(++i<n)streamPolygon(coordinates[i],stream);},GeometryCollection:function(object,stream){var geometries=object.geometries,i=-1,n=geometries.length;while(++i<n)streamGeometry(geometries[i],stream);}};function streamLine(coordinates,stream,closed){var i=-1,n=coordinates.length-closed,coordinate;stream.lineStart();while(++i<n)coordinate=coordinates[i],stream.point(coordinate[0],coordinate[1],coordinate[2]);stream.lineEnd();}function streamPolygon(coordinates,stream){var i=-1,n=coordinates.length;stream.polygonStart();while(++i<n)streamLine(coordinates[i],stream,1);stream.polygonEnd();}function geoStream(object,stream){if(object&&streamObjectType.hasOwnProperty(object.type)){streamObjectType[object.type](object,stream);}else{streamGeometry(object,stream);}}function spherical(cartesian){return[atan2(cartesian[1],cartesian[0]),asin(cartesian[2])];}function cartesian(spherical){var lambda=spherical[0],phi=spherical[1],cosPhi=cos(phi);return[cosPhi*cos(lambda),cosPhi*sin(lambda),sin(phi)];}function cartesianDot(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2];}function cartesianCross(a,b){return[a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0]];}// TODO return a
function cartesianAddInPlace(a,b){a[0]+=b[0],a[1]+=b[1],a[2]+=b[2];}function cartesianScale(vector,k){return[vector[0]*k,vector[1]*k,vector[2]*k];}// TODO return d
function cartesianNormalizeInPlace(d){var l=sqrt(d[0]*d[0]+d[1]*d[1]+d[2]*d[2]);d[0]/=l,d[1]/=l,d[2]/=l;}function compose(a,b){function compose(x,y){return x=a(x,y),b(x[0],x[1]);}if(a.invert&&b.invert)compose.invert=function(x,y){return x=b.invert(x,y),x&&a.invert(x[0],x[1]);};return compose;}function rotationIdentity(lambda,phi){if(abs(lambda)>pi)lambda-=Math.round(lambda/tau)*tau;return[lambda,phi];}rotationIdentity.invert=rotationIdentity;function rotateRadians(deltaLambda,deltaPhi,deltaGamma){return(deltaLambda%=tau)?deltaPhi||deltaGamma?compose(rotationLambda(deltaLambda),rotationPhiGamma(deltaPhi,deltaGamma)):rotationLambda(deltaLambda):deltaPhi||deltaGamma?rotationPhiGamma(deltaPhi,deltaGamma):rotationIdentity;}function forwardRotationLambda(deltaLambda){return function(lambda,phi){lambda+=deltaLambda;if(abs(lambda)>pi)lambda-=Math.round(lambda/tau)*tau;return[lambda,phi];};}function rotationLambda(deltaLambda){var rotation=forwardRotationLambda(deltaLambda);rotation.invert=forwardRotationLambda(-deltaLambda);return rotation;}function rotationPhiGamma(deltaPhi,deltaGamma){var cosDeltaPhi=cos(deltaPhi),sinDeltaPhi=sin(deltaPhi),cosDeltaGamma=cos(deltaGamma),sinDeltaGamma=sin(deltaGamma);function rotation(lambda,phi){var cosPhi=cos(phi),x=cos(lambda)*cosPhi,y=sin(lambda)*cosPhi,z=sin(phi),k=z*cosDeltaPhi+x*sinDeltaPhi;return[atan2(y*cosDeltaGamma-k*sinDeltaGamma,x*cosDeltaPhi-z*sinDeltaPhi),asin(k*cosDeltaGamma+y*sinDeltaGamma)];}rotation.invert=function(lambda,phi){var cosPhi=cos(phi),x=cos(lambda)*cosPhi,y=sin(lambda)*cosPhi,z=sin(phi),k=z*cosDeltaGamma-y*sinDeltaGamma;return[atan2(y*cosDeltaGamma+z*sinDeltaGamma,x*cosDeltaPhi+k*sinDeltaPhi),asin(k*cosDeltaPhi-x*sinDeltaPhi)];};return rotation;}function rotation(rotate){rotate=rotateRadians(rotate[0]*radians$1,rotate[1]*radians$1,rotate.length>2?rotate[2]*radians$1:0);function forward(coordinates){coordinates=rotate(coordinates[0]*radians$1,coordinates[1]*radians$1);return coordinates[0]*=degrees$1,coordinates[1]*=degrees$1,coordinates;}forward.invert=function(coordinates){coordinates=rotate.invert(coordinates[0]*radians$1,coordinates[1]*radians$1);return coordinates[0]*=degrees$1,coordinates[1]*=degrees$1,coordinates;};return forward;}// Generates a circle centered at [0°, 0°], with a given radius and precision.
function circleStream(stream,radius,delta,direction,t0,t1){if(!delta)return;var cosRadius=cos(radius),sinRadius=sin(radius),step=direction*delta;if(t0==null){t0=radius+direction*tau;t1=radius-step/2;}else{t0=circleRadius(cosRadius,t0);t1=circleRadius(cosRadius,t1);if(direction>0?t0<t1:t0>t1)t0+=direction*tau;}for(var point,t=t0;direction>0?t>t1:t<t1;t-=step){point=spherical([cosRadius,-sinRadius*cos(t),-sinRadius*sin(t)]);stream.point(point[0],point[1]);}}// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].
function circleRadius(cosRadius,point){point=cartesian(point),point[0]-=cosRadius;cartesianNormalizeInPlace(point);var radius=acos(-point[1]);return((-point[2]<0?-radius:radius)+tau-epsilon)%tau;}function clipBuffer(){var lines=[],line;return{point:function(x,y,m){line.push([x,y,m]);},lineStart:function(){lines.push(line=[]);},lineEnd:noop,rejoin:function(){if(lines.length>1)lines.push(lines.pop().concat(lines.shift()));},result:function(){var result=lines;lines=[];line=null;return result;}};}function pointEqual(a,b){return abs(a[0]-b[0])<epsilon&&abs(a[1]-b[1])<epsilon;}function Intersection(point,points,other,entry){this.x=point;this.z=points;this.o=other;// another intersection
this.e=entry;// is an entry?
this.v=false;// visited
this.n=this.p=null;// next & previous
}// A generalized polygon clipping algorithm: given a polygon that has been cut
// into its visible line segments, and rejoins the segments by interpolating
// along the clip edge.
function clipRejoin(segments,compareIntersection,startInside,interpolate,stream){var subject=[],clip=[],i,n;segments.forEach(function(segment){if((n=segment.length-1)<=0)return;var n,p0=segment[0],p1=segment[n],x;if(pointEqual(p0,p1)){if(!p0[2]&&!p1[2]){stream.lineStart();for(i=0;i<n;++i)stream.point((p0=segment[i])[0],p0[1]);stream.lineEnd();return;}// handle degenerate cases by moving the point
p1[0]+=2*epsilon;}subject.push(x=new Intersection(p0,segment,null,true));clip.push(x.o=new Intersection(p0,null,x,false));subject.push(x=new Intersection(p1,segment,null,false));clip.push(x.o=new Intersection(p1,null,x,true));});if(!subject.length)return;clip.sort(compareIntersection);link(subject);link(clip);for(i=0,n=clip.length;i<n;++i){clip[i].e=startInside=!startInside;}var start=subject[0],points,point;while(1){// Find first unvisited intersection.
var current=start,isSubject=true;while(current.v)if((current=current.n)===start)return;points=current.z;stream.lineStart();do{current.v=current.o.v=true;if(current.e){if(isSubject){for(i=0,n=points.length;i<n;++i)stream.point((point=points[i])[0],point[1]);}else{interpolate(current.x,current.n.x,1,stream);}current=current.n;}else{if(isSubject){points=current.p.z;for(i=points.length-1;i>=0;--i)stream.point((point=points[i])[0],point[1]);}else{interpolate(current.x,current.p.x,-1,stream);}current=current.p;}current=current.o;points=current.z;isSubject=!isSubject;}while(!current.v);stream.lineEnd();}}function link(array){if(!(n=array.length))return;var n,i=0,a=array[0],b;while(++i<n){a.n=b=array[i];b.p=a;a=b;}a.n=b=array[0];b.p=a;}function longitude(point){return abs(point[0])<=pi?point[0]:sign(point[0])*((abs(point[0])+pi)%tau-pi);}function polygonContains(polygon,point){var lambda=longitude(point),phi=point[1],sinPhi=sin(phi),normal=[sin(lambda),-cos(lambda),0],angle=0,winding=0;var sum=new Adder();if(sinPhi===1)phi=halfPi+epsilon;else if(sinPhi===-1)phi=-halfPi-epsilon;for(var i=0,n=polygon.length;i<n;++i){if(!(m=(ring=polygon[i]).length))continue;var ring,m,point0=ring[m-1],lambda0=longitude(point0),phi0=point0[1]/2+quarterPi,sinPhi0=sin(phi0),cosPhi0=cos(phi0);for(var j=0;j<m;++j,lambda0=lambda1,sinPhi0=sinPhi1,cosPhi0=cosPhi1,point0=point1){var point1=ring[j],lambda1=longitude(point1),phi1=point1[1]/2+quarterPi,sinPhi1=sin(phi1),cosPhi1=cos(phi1),delta=lambda1-lambda0,sign=delta>=0?1:-1,absDelta=sign*delta,antimeridian=absDelta>pi,k=sinPhi0*sinPhi1;sum.add(atan2(k*sign*sin(absDelta),cosPhi0*cosPhi1+k*cos(absDelta)));angle+=antimeridian?delta+sign*tau:delta;// Are the longitudes either side of the point’s meridian (lambda),
// and are the latitudes smaller than the parallel (phi)?
if(antimeridian^lambda0>=lambda^lambda1>=lambda){var arc=cartesianCross(cartesian(point0),cartesian(point1));cartesianNormalizeInPlace(arc);var intersection=cartesianCross(normal,arc);cartesianNormalizeInPlace(intersection);var phiArc=(antimeridian^delta>=0?-1:1)*asin(intersection[2]);if(phi>phiArc||phi===phiArc&&(arc[0]||arc[1])){winding+=antimeridian^delta>=0?1:-1;}}}}// First, determine whether the South pole is inside or outside:
//
// It is inside if:
// * the polygon winds around it in a clockwise direction.
// * the polygon does not (cumulatively) wind around it, but has a negative
//   (counter-clockwise) area.
//
// Second, count the (signed) number of times a segment crosses a lambda
// from the point to the South pole.  If it is zero, then the point is the
// same side as the South pole.
return(angle<-1e-6||angle<epsilon&&sum<-1e-12)^winding&1;}function clip(pointVisible,clipLine,interpolate,start){return function(sink){var line=clipLine(sink),ringBuffer=clipBuffer(),ringSink=clipLine(ringBuffer),polygonStarted=false,polygon,segments,ring;var clip={point:point,lineStart:lineStart,lineEnd:lineEnd,polygonStart:function(){clip.point=pointRing;clip.lineStart=ringStart;clip.lineEnd=ringEnd;segments=[];polygon=[];},polygonEnd:function(){clip.point=point;clip.lineStart=lineStart;clip.lineEnd=lineEnd;segments=merge(segments);var startInside=polygonContains(polygon,start);if(segments.length){if(!polygonStarted)sink.polygonStart(),polygonStarted=true;clipRejoin(segments,compareIntersection,startInside,interpolate,sink);}else if(startInside){if(!polygonStarted)sink.polygonStart(),polygonStarted=true;sink.lineStart();interpolate(null,null,1,sink);sink.lineEnd();}if(polygonStarted)sink.polygonEnd(),polygonStarted=false;segments=polygon=null;},sphere:function(){sink.polygonStart();sink.lineStart();interpolate(null,null,1,sink);sink.lineEnd();sink.polygonEnd();}};function point(lambda,phi){if(pointVisible(lambda,phi))sink.point(lambda,phi);}function pointLine(lambda,phi){line.point(lambda,phi);}function lineStart(){clip.point=pointLine;line.lineStart();}function lineEnd(){clip.point=point;line.lineEnd();}function pointRing(lambda,phi){ring.push([lambda,phi]);ringSink.point(lambda,phi);}function ringStart(){ringSink.lineStart();ring=[];}function ringEnd(){pointRing(ring[0][0],ring[0][1]);ringSink.lineEnd();var clean=ringSink.clean(),ringSegments=ringBuffer.result(),i,n=ringSegments.length,m,segment,point;ring.pop();polygon.push(ring);ring=null;if(!n)return;// No intersections.
if(clean&1){segment=ringSegments[0];if((m=segment.length-1)>0){if(!polygonStarted)sink.polygonStart(),polygonStarted=true;sink.lineStart();for(i=0;i<m;++i)sink.point((point=segment[i])[0],point[1]);sink.lineEnd();}return;}// Rejoin connected segments.
// TODO reuse ringBuffer.rejoin()?
if(n>1&&clean&2)ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));segments.push(ringSegments.filter(validSegment));}return clip;};}function validSegment(segment){return segment.length>1;}// Intersections are sorted along the clip edge. For both antimeridian cutting
// and circle clipping, the same comparison is used.
function compareIntersection(a,b){return((a=a.x)[0]<0?a[1]-halfPi-epsilon:halfPi-a[1])-((b=b.x)[0]<0?b[1]-halfPi-epsilon:halfPi-b[1]);}var clipAntimeridian=clip(function(){return true;},clipAntimeridianLine,clipAntimeridianInterpolate,[-pi,-halfPi]);// Takes a line and cuts into visible segments. Return values: 0 - there were
// intersections or the line was empty; 1 - no intersections; 2 - there were
// intersections, and the first and last segments should be rejoined.
function clipAntimeridianLine(stream){var lambda0=NaN,phi0=NaN,sign0=NaN,clean;// no intersections
return{lineStart:function(){stream.lineStart();clean=1;},point:function(lambda1,phi1){var sign1=lambda1>0?pi:-pi,delta=abs(lambda1-lambda0);if(abs(delta-pi)<epsilon){// line crosses a pole
stream.point(lambda0,phi0=(phi0+phi1)/2>0?halfPi:-halfPi);stream.point(sign0,phi0);stream.lineEnd();stream.lineStart();stream.point(sign1,phi0);stream.point(lambda1,phi0);clean=0;}else if(sign0!==sign1&&delta>=pi){// line crosses antimeridian
if(abs(lambda0-sign0)<epsilon)lambda0-=sign0*epsilon;// handle degeneracies
if(abs(lambda1-sign1)<epsilon)lambda1-=sign1*epsilon;phi0=clipAntimeridianIntersect(lambda0,phi0,lambda1,phi1);stream.point(sign0,phi0);stream.lineEnd();stream.lineStart();stream.point(sign1,phi0);clean=0;}stream.point(lambda0=lambda1,phi0=phi1);sign0=sign1;},lineEnd:function(){stream.lineEnd();lambda0=phi0=NaN;},clean:function(){return 2-clean;// if intersections, rejoin first and last segments
}};}function clipAntimeridianIntersect(lambda0,phi0,lambda1,phi1){var cosPhi0,cosPhi1,sinLambda0Lambda1=sin(lambda0-lambda1);return abs(sinLambda0Lambda1)>epsilon?atan((sin(phi0)*(cosPhi1=cos(phi1))*sin(lambda1)-sin(phi1)*(cosPhi0=cos(phi0))*sin(lambda0))/(cosPhi0*cosPhi1*sinLambda0Lambda1)):(phi0+phi1)/2;}function clipAntimeridianInterpolate(from,to,direction,stream){var phi;if(from==null){phi=direction*halfPi;stream.point(-pi,phi);stream.point(0,phi);stream.point(pi,phi);stream.point(pi,0);stream.point(pi,-phi);stream.point(0,-phi);stream.point(-pi,-phi);stream.point(-pi,0);stream.point(-pi,phi);}else if(abs(from[0]-to[0])>epsilon){var lambda=from[0]<to[0]?pi:-pi;phi=direction*lambda/2;stream.point(-lambda,phi);stream.point(0,phi);stream.point(lambda,phi);}else{stream.point(to[0],to[1]);}}function clipCircle(radius){var cr=cos(radius),delta=2*radians$1,smallRadius=cr>0,notHemisphere=abs(cr)>epsilon;// TODO optimise for this common case
function interpolate(from,to,direction,stream){circleStream(stream,radius,delta,direction,from,to);}function visible(lambda,phi){return cos(lambda)*cos(phi)>cr;}// Takes a line and cuts into visible segments. Return values used for polygon
// clipping: 0 - there were intersections or the line was empty; 1 - no
// intersections 2 - there were intersections, and the first and last segments
// should be rejoined.
function clipLine(stream){var point0,// previous point
c0,// code for previous point
v0,// visibility of previous point
v00,// visibility of first point
clean;// no intersections
return{lineStart:function(){v00=v0=false;clean=1;},point:function(lambda,phi){var point1=[lambda,phi],point2,v=visible(lambda,phi),c=smallRadius?v?0:code(lambda,phi):v?code(lambda+(lambda<0?pi:-pi),phi):0;if(!point0&&(v00=v0=v))stream.lineStart();if(v!==v0){point2=intersect(point0,point1);if(!point2||pointEqual(point0,point2)||pointEqual(point1,point2))point1[2]=1;}if(v!==v0){clean=0;if(v){// outside going in
stream.lineStart();point2=intersect(point1,point0);stream.point(point2[0],point2[1]);}else{// inside going out
point2=intersect(point0,point1);stream.point(point2[0],point2[1],2);stream.lineEnd();}point0=point2;}else if(notHemisphere&&point0&&smallRadius^v){var t;// If the codes for two points are different, or are both zero,
// and there this segment intersects with the small circle.
if(!(c&c0)&&(t=intersect(point1,point0,true))){clean=0;if(smallRadius){stream.lineStart();stream.point(t[0][0],t[0][1]);stream.point(t[1][0],t[1][1]);stream.lineEnd();}else{stream.point(t[1][0],t[1][1]);stream.lineEnd();stream.lineStart();stream.point(t[0][0],t[0][1],3);}}}if(v&&(!point0||!pointEqual(point0,point1))){stream.point(point1[0],point1[1]);}point0=point1,v0=v,c0=c;},lineEnd:function(){if(v0)stream.lineEnd();point0=null;},// Rejoin first and last segments if there were intersections and the first
// and last points were visible.
clean:function(){return clean|(v00&&v0)<<1;}};}// Intersects the great circle between a and b with the clip circle.
function intersect(a,b,two){var pa=cartesian(a),pb=cartesian(b);// We have two planes, n1.p = d1 and n2.p = d2.
// Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).
var n1=[1,0,0],// normal
n2=cartesianCross(pa,pb),n2n2=cartesianDot(n2,n2),n1n2=n2[0],// cartesianDot(n1, n2),
determinant=n2n2-n1n2*n1n2;// Two polar points.
if(!determinant)return!two&&a;var c1=cr*n2n2/determinant,c2=-cr*n1n2/determinant,n1xn2=cartesianCross(n1,n2),A=cartesianScale(n1,c1),B=cartesianScale(n2,c2);cartesianAddInPlace(A,B);// Solve |p(t)|^2 = 1.
var u=n1xn2,w=cartesianDot(A,u),uu=cartesianDot(u,u),t2=w*w-uu*(cartesianDot(A,A)-1);if(t2<0)return;var t=sqrt(t2),q=cartesianScale(u,(-w-t)/uu);cartesianAddInPlace(q,A);q=spherical(q);if(!two)return q;// Two intersection points.
var lambda0=a[0],lambda1=b[0],phi0=a[1],phi1=b[1],z;if(lambda1<lambda0)z=lambda0,lambda0=lambda1,lambda1=z;var delta=lambda1-lambda0,polar=abs(delta-pi)<epsilon,meridian=polar||delta<epsilon;if(!polar&&phi1<phi0)z=phi0,phi0=phi1,phi1=z;// Check that the first point is between a and b.
if(meridian?polar?phi0+phi1>0^q[1]<(abs(q[0]-lambda0)<epsilon?phi0:phi1):phi0<=q[1]&&q[1]<=phi1:delta>pi^(lambda0<=q[0]&&q[0]<=lambda1)){var q1=cartesianScale(u,(-w+t)/uu);cartesianAddInPlace(q1,A);return[q,spherical(q1)];}}// Generates a 4-bit vector representing the location of a point relative to
// the small circle's bounding box.
function code(lambda,phi){var r=smallRadius?radius:pi-radius,code=0;if(lambda<-r)code|=1;// left
else if(lambda>r)code|=2;// right
if(phi<-r)code|=4;// below
else if(phi>r)code|=8;// above
return code;}return clip(visible,clipLine,interpolate,smallRadius?[0,-radius]:[-pi,radius-pi]);}function clipLine(a,b,x0,y0,x1,y1){var ax=a[0],ay=a[1],bx=b[0],by=b[1],t0=0,t1=1,dx=bx-ax,dy=by-ay,r;r=x0-ax;if(!dx&&r>0)return;r/=dx;if(dx<0){if(r<t0)return;if(r<t1)t1=r;}else if(dx>0){if(r>t1)return;if(r>t0)t0=r;}r=x1-ax;if(!dx&&r<0)return;r/=dx;if(dx<0){if(r>t1)return;if(r>t0)t0=r;}else if(dx>0){if(r<t0)return;if(r<t1)t1=r;}r=y0-ay;if(!dy&&r>0)return;r/=dy;if(dy<0){if(r<t0)return;if(r<t1)t1=r;}else if(dy>0){if(r>t1)return;if(r>t0)t0=r;}r=y1-ay;if(!dy&&r<0)return;r/=dy;if(dy<0){if(r>t1)return;if(r>t0)t0=r;}else if(dy>0){if(r<t0)return;if(r<t1)t1=r;}if(t0>0)a[0]=ax+t0*dx,a[1]=ay+t0*dy;if(t1<1)b[0]=ax+t1*dx,b[1]=ay+t1*dy;return true;}var clipMax=1e9,clipMin=-1e9;// TODO Use d3-polygon’s polygonContains here for the ring check?
// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?
function clipRectangle(x0,y0,x1,y1){function visible(x,y){return x0<=x&&x<=x1&&y0<=y&&y<=y1;}function interpolate(from,to,direction,stream){var a=0,a1=0;if(from==null||(a=corner(from,direction))!==(a1=corner(to,direction))||comparePoint(from,to)<0^direction>0){do stream.point(a===0||a===3?x0:x1,a>1?y1:y0);while((a=(a+direction+4)%4)!==a1);}else{stream.point(to[0],to[1]);}}function corner(p,direction){return abs(p[0]-x0)<epsilon?direction>0?0:3:abs(p[0]-x1)<epsilon?direction>0?2:1:abs(p[1]-y0)<epsilon?direction>0?1:0:direction>0?3:2;// abs(p[1] - y1) < epsilon
}function compareIntersection(a,b){return comparePoint(a.x,b.x);}function comparePoint(a,b){var ca=corner(a,1),cb=corner(b,1);return ca!==cb?ca-cb:ca===0?b[1]-a[1]:ca===1?a[0]-b[0]:ca===2?a[1]-b[1]:b[0]-a[0];}return function(stream){var activeStream=stream,bufferStream=clipBuffer(),segments,polygon,ring,x__,y__,v__,// first point
x_,y_,v_,// previous point
first,clean;var clipStream={point:point,lineStart:lineStart,lineEnd:lineEnd,polygonStart:polygonStart,polygonEnd:polygonEnd};function point(x,y){if(visible(x,y))activeStream.point(x,y);}function polygonInside(){var winding=0;for(var i=0,n=polygon.length;i<n;++i){for(var ring=polygon[i],j=1,m=ring.length,point=ring[0],a0,a1,b0=point[0],b1=point[1];j<m;++j){a0=b0,a1=b1,point=ring[j],b0=point[0],b1=point[1];if(a1<=y1){if(b1>y1&&(b0-a0)*(y1-a1)>(b1-a1)*(x0-a0))++winding;}else{if(b1<=y1&&(b0-a0)*(y1-a1)<(b1-a1)*(x0-a0))--winding;}}}return winding;}// Buffer geometry within a polygon and then clip it en masse.
function polygonStart(){activeStream=bufferStream,segments=[],polygon=[],clean=true;}function polygonEnd(){var startInside=polygonInside(),cleanInside=clean&&startInside,visible=(segments=merge(segments)).length;if(cleanInside||visible){stream.polygonStart();if(cleanInside){stream.lineStart();interpolate(null,null,1,stream);stream.lineEnd();}if(visible){clipRejoin(segments,compareIntersection,startInside,interpolate,stream);}stream.polygonEnd();}activeStream=stream,segments=polygon=ring=null;}function lineStart(){clipStream.point=linePoint;if(polygon)polygon.push(ring=[]);first=true;v_=false;x_=y_=NaN;}// TODO rather than special-case polygons, simply handle them separately.
// Ideally, coincident intersection points should be jittered to avoid
// clipping issues.
function lineEnd(){if(segments){linePoint(x__,y__);if(v__&&v_)bufferStream.rejoin();segments.push(bufferStream.result());}clipStream.point=point;if(v_)activeStream.lineEnd();}function linePoint(x,y){var v=visible(x,y);if(polygon)ring.push([x,y]);if(first){x__=x,y__=y,v__=v;first=false;if(v){activeStream.lineStart();activeStream.point(x,y);}}else{if(v&&v_)activeStream.point(x,y);else{var a=[x_=Math.max(clipMin,Math.min(clipMax,x_)),y_=Math.max(clipMin,Math.min(clipMax,y_))],b=[x=Math.max(clipMin,Math.min(clipMax,x)),y=Math.max(clipMin,Math.min(clipMax,y))];if(clipLine(a,b,x0,y0,x1,y1)){if(!v_){activeStream.lineStart();activeStream.point(a[0],a[1]);}activeStream.point(b[0],b[1]);if(!v)activeStream.lineEnd();clean=false;}else if(v){activeStream.lineStart();activeStream.point(x,y);clean=false;}}}x_=x,y_=y,v_=v;}return clipStream;};}var lengthSum$1,lambda0,sinPhi0,cosPhi0;var lengthStream$1={sphere:noop,point:noop,lineStart:lengthLineStart,lineEnd:noop,polygonStart:noop,polygonEnd:noop};function lengthLineStart(){lengthStream$1.point=lengthPointFirst$1;lengthStream$1.lineEnd=lengthLineEnd;}function lengthLineEnd(){lengthStream$1.point=lengthStream$1.lineEnd=noop;}function lengthPointFirst$1(lambda,phi){lambda*=radians$1,phi*=radians$1;lambda0=lambda,sinPhi0=sin(phi),cosPhi0=cos(phi);lengthStream$1.point=lengthPoint$1;}function lengthPoint$1(lambda,phi){lambda*=radians$1,phi*=radians$1;var sinPhi=sin(phi),cosPhi=cos(phi),delta=abs(lambda-lambda0),cosDelta=cos(delta),sinDelta=sin(delta),x=cosPhi*sinDelta,y=cosPhi0*sinPhi-sinPhi0*cosPhi*cosDelta,z=sinPhi0*sinPhi+cosPhi0*cosPhi*cosDelta;lengthSum$1.add(atan2(sqrt(x*x+y*y),z));lambda0=lambda,sinPhi0=sinPhi,cosPhi0=cosPhi;}function length(object){lengthSum$1=new Adder();geoStream(object,lengthStream$1);return+lengthSum$1;}var coordinates=[null,null],object={type:"LineString",coordinates:coordinates};function distance(a,b){coordinates[0]=a;coordinates[1]=b;return length(object);}var containsObjectType={Feature:function(object,point){return containsGeometry(object.geometry,point);},FeatureCollection:function(object,point){var features=object.features,i=-1,n=features.length;while(++i<n)if(containsGeometry(features[i].geometry,point))return true;return false;}};var containsGeometryType={Sphere:function(){return true;},Point:function(object,point){return containsPoint(object.coordinates,point);},MultiPoint:function(object,point){var coordinates=object.coordinates,i=-1,n=coordinates.length;while(++i<n)if(containsPoint(coordinates[i],point))return true;return false;},LineString:function(object,point){return containsLine(object.coordinates,point);},MultiLineString:function(object,point){var coordinates=object.coordinates,i=-1,n=coordinates.length;while(++i<n)if(containsLine(coordinates[i],point))return true;return false;},Polygon:function(object,point){return containsPolygon(object.coordinates,point);},MultiPolygon:function(object,point){var coordinates=object.coordinates,i=-1,n=coordinates.length;while(++i<n)if(containsPolygon(coordinates[i],point))return true;return false;},GeometryCollection:function(object,point){var geometries=object.geometries,i=-1,n=geometries.length;while(++i<n)if(containsGeometry(geometries[i],point))return true;return false;}};function containsGeometry(geometry,point){return geometry&&containsGeometryType.hasOwnProperty(geometry.type)?containsGeometryType[geometry.type](geometry,point):false;}function containsPoint(coordinates,point){return distance(coordinates,point)===0;}function containsLine(coordinates,point){var ao,bo,ab;for(var i=0,n=coordinates.length;i<n;i++){bo=distance(coordinates[i],point);if(bo===0)return true;if(i>0){ab=distance(coordinates[i],coordinates[i-1]);if(ab>0&&ao<=ab&&bo<=ab&&(ao+bo-ab)*(1-Math.pow((ao-bo)/ab,2))<epsilon2*ab)return true;}ao=bo;}return false;}function containsPolygon(coordinates,point){return!!polygonContains(coordinates.map(ringRadians),pointRadians(point));}function ringRadians(ring){return ring=ring.map(pointRadians),ring.pop(),ring;}function pointRadians(point){return[point[0]*radians$1,point[1]*radians$1];}function geoContains(object,point){return(object&&containsObjectType.hasOwnProperty(object.type)?containsObjectType[object.type]:containsGeometry)(object,point);}function graticuleX(y0,y1,dy){var y=range(y0,y1-epsilon,dy).concat(y1);return function(x){return y.map(function(y){return[x,y];});};}function graticuleY(x0,x1,dx){var x=range(x0,x1-epsilon,dx).concat(x1);return function(y){return x.map(function(x){return[x,y];});};}function graticule(){var x1,x0,X1,X0,y1,y0,Y1,Y0,dx=10,dy=dx,DX=90,DY=360,x,y,X,Y,precision=2.5;function graticule(){return{type:"MultiLineString",coordinates:lines()};}function lines(){return range(ceil(X0/DX)*DX,X1,DX).map(X).concat(range(ceil(Y0/DY)*DY,Y1,DY).map(Y)).concat(range(ceil(x0/dx)*dx,x1,dx).filter(function(x){return abs(x%DX)>epsilon;}).map(x)).concat(range(ceil(y0/dy)*dy,y1,dy).filter(function(y){return abs(y%DY)>epsilon;}).map(y));}graticule.lines=function(){return lines().map(function(coordinates){return{type:"LineString",coordinates:coordinates};});};graticule.outline=function(){return{type:"Polygon",coordinates:[X(X0).concat(Y(Y1).slice(1),X(X1).reverse().slice(1),Y(Y0).reverse().slice(1))]};};graticule.extent=function(_){if(!arguments.length)return graticule.extentMinor();return graticule.extentMajor(_).extentMinor(_);};graticule.extentMajor=function(_){if(!arguments.length)return[[X0,Y0],[X1,Y1]];X0=+_[0][0],X1=+_[1][0];Y0=+_[0][1],Y1=+_[1][1];if(X0>X1)_=X0,X0=X1,X1=_;if(Y0>Y1)_=Y0,Y0=Y1,Y1=_;return graticule.precision(precision);};graticule.extentMinor=function(_){if(!arguments.length)return[[x0,y0],[x1,y1]];x0=+_[0][0],x1=+_[1][0];y0=+_[0][1],y1=+_[1][1];if(x0>x1)_=x0,x0=x1,x1=_;if(y0>y1)_=y0,y0=y1,y1=_;return graticule.precision(precision);};graticule.step=function(_){if(!arguments.length)return graticule.stepMinor();return graticule.stepMajor(_).stepMinor(_);};graticule.stepMajor=function(_){if(!arguments.length)return[DX,DY];DX=+_[0],DY=+_[1];return graticule;};graticule.stepMinor=function(_){if(!arguments.length)return[dx,dy];dx=+_[0],dy=+_[1];return graticule;};graticule.precision=function(_){if(!arguments.length)return precision;precision=+_;x=graticuleX(y0,y1,90);y=graticuleY(x0,x1,precision);X=graticuleX(Y0,Y1,90);Y=graticuleY(X0,X1,precision);return graticule;};return graticule.extentMajor([[-180,-90+epsilon],[180,90-epsilon]]).extentMinor([[-180,-80-epsilon],[180,80+epsilon]]);}function graticule10(){return graticule()();}var identity=x=>x;var areaSum=new Adder(),areaRingSum=new Adder(),x00$2,y00$2,x0$3,y0$3;var areaStream={point:noop,lineStart:noop,lineEnd:noop,polygonStart:function(){areaStream.lineStart=areaRingStart;areaStream.lineEnd=areaRingEnd;},polygonEnd:function(){areaStream.lineStart=areaStream.lineEnd=areaStream.point=noop;areaSum.add(abs(areaRingSum));areaRingSum=new Adder();},result:function(){var area=areaSum/2;areaSum=new Adder();return area;}};function areaRingStart(){areaStream.point=areaPointFirst;}function areaPointFirst(x,y){areaStream.point=areaPoint;x00$2=x0$3=x,y00$2=y0$3=y;}function areaPoint(x,y){areaRingSum.add(y0$3*x-x0$3*y);x0$3=x,y0$3=y;}function areaRingEnd(){areaPoint(x00$2,y00$2);}var x0$2=Infinity,y0$2=x0$2,x1=-x0$2,y1=x1;var boundsStream={point:boundsPoint,lineStart:noop,lineEnd:noop,polygonStart:noop,polygonEnd:noop,result:function(){var bounds=[[x0$2,y0$2],[x1,y1]];x1=y1=-(y0$2=x0$2=Infinity);return bounds;}};function boundsPoint(x,y){if(x<x0$2)x0$2=x;if(x>x1)x1=x;if(y<y0$2)y0$2=y;if(y>y1)y1=y;}// TODO Enforce positive area for exterior, negative area for interior?
var X0=0,Y0=0,Z0=0,X1=0,Y1=0,Z1=0,X2=0,Y2=0,Z2=0,x00$1,y00$1,x0$1,y0$1;var centroidStream={point:centroidPoint,lineStart:centroidLineStart,lineEnd:centroidLineEnd,polygonStart:function(){centroidStream.lineStart=centroidRingStart;centroidStream.lineEnd=centroidRingEnd;},polygonEnd:function(){centroidStream.point=centroidPoint;centroidStream.lineStart=centroidLineStart;centroidStream.lineEnd=centroidLineEnd;},result:function(){var centroid=Z2?[X2/Z2,Y2/Z2]:Z1?[X1/Z1,Y1/Z1]:Z0?[X0/Z0,Y0/Z0]:[NaN,NaN];X0=Y0=Z0=X1=Y1=Z1=X2=Y2=Z2=0;return centroid;}};function centroidPoint(x,y){X0+=x;Y0+=y;++Z0;}function centroidLineStart(){centroidStream.point=centroidPointFirstLine;}function centroidPointFirstLine(x,y){centroidStream.point=centroidPointLine;centroidPoint(x0$1=x,y0$1=y);}function centroidPointLine(x,y){var dx=x-x0$1,dy=y-y0$1,z=sqrt(dx*dx+dy*dy);X1+=z*(x0$1+x)/2;Y1+=z*(y0$1+y)/2;Z1+=z;centroidPoint(x0$1=x,y0$1=y);}function centroidLineEnd(){centroidStream.point=centroidPoint;}function centroidRingStart(){centroidStream.point=centroidPointFirstRing;}function centroidRingEnd(){centroidPointRing(x00$1,y00$1);}function centroidPointFirstRing(x,y){centroidStream.point=centroidPointRing;centroidPoint(x00$1=x0$1=x,y00$1=y0$1=y);}function centroidPointRing(x,y){var dx=x-x0$1,dy=y-y0$1,z=sqrt(dx*dx+dy*dy);X1+=z*(x0$1+x)/2;Y1+=z*(y0$1+y)/2;Z1+=z;z=y0$1*x-x0$1*y;X2+=z*(x0$1+x);Y2+=z*(y0$1+y);Z2+=z*3;centroidPoint(x0$1=x,y0$1=y);}function PathContext(context){this._context=context;}PathContext.prototype={_radius:4.5,pointRadius:function(_){return this._radius=_,this;},polygonStart:function(){this._line=0;},polygonEnd:function(){this._line=NaN;},lineStart:function(){this._point=0;},lineEnd:function(){if(this._line===0)this._context.closePath();this._point=NaN;},point:function(x,y){switch(this._point){case 0:{this._context.moveTo(x,y);this._point=1;break;}case 1:{this._context.lineTo(x,y);break;}default:{this._context.moveTo(x+this._radius,y);this._context.arc(x,y,this._radius,0,tau);break;}}},result:noop};var lengthSum=new Adder(),lengthRing,x00,y00,x0,y0;var lengthStream={point:noop,lineStart:function(){lengthStream.point=lengthPointFirst;},lineEnd:function(){if(lengthRing)lengthPoint(x00,y00);lengthStream.point=noop;},polygonStart:function(){lengthRing=true;},polygonEnd:function(){lengthRing=null;},result:function(){var length=+lengthSum;lengthSum=new Adder();return length;}};function lengthPointFirst(x,y){lengthStream.point=lengthPoint;x00=x0=x,y00=y0=y;}function lengthPoint(x,y){x0-=x,y0-=y;lengthSum.add(sqrt(x0*x0+y0*y0));x0=x,y0=y;}// Simple caching for constant-radius points.
let cacheDigits,cacheAppend,cacheRadius,cacheCircle;class PathString{constructor(digits){this._append=digits==null?append:appendRound(digits);this._radius=4.5;this._="";}pointRadius(_){this._radius=+_;return this;}polygonStart(){this._line=0;}polygonEnd(){this._line=NaN;}lineStart(){this._point=0;}lineEnd(){if(this._line===0)this._+="Z";this._point=NaN;}point(x,y){switch(this._point){case 0:{this._append`M${x},${y}`;this._point=1;break;}case 1:{this._append`L${x},${y}`;break;}default:{this._append`M${x},${y}`;if(this._radius!==cacheRadius||this._append!==cacheAppend){const r=this._radius;const s=this._;this._="";// stash the old string so we can cache the circle path fragment
this._append`m0,${r}a${r},${r} 0 1,1 0,${-2*r}a${r},${r} 0 1,1 0,${2*r}z`;cacheRadius=r;cacheAppend=this._append;cacheCircle=this._;this._=s;}this._+=cacheCircle;break;}}}result(){const result=this._;this._="";return result.length?result:null;}}function append(strings){let i=1;this._+=strings[0];for(const j=strings.length;i<j;++i){this._+=arguments[i]+strings[i];}}function appendRound(digits){const d=Math.floor(digits);if(!(d>=0))throw new RangeError(`invalid digits: ${digits}`);if(d>15)return append;if(d!==cacheDigits){const k=10**d;cacheDigits=d;cacheAppend=function append(strings){let i=1;this._+=strings[0];for(const j=strings.length;i<j;++i){this._+=Math.round(arguments[i]*k)/k+strings[i];}};}return cacheAppend;}function geoPath(projection,context){let digits=3,pointRadius=4.5,projectionStream,contextStream;function path(object){if(object){if(typeof pointRadius==="function")contextStream.pointRadius(+pointRadius.apply(this,arguments));geoStream(object,projectionStream(contextStream));}return contextStream.result();}path.area=function(object){geoStream(object,projectionStream(areaStream));return areaStream.result();};path.measure=function(object){geoStream(object,projectionStream(lengthStream));return lengthStream.result();};path.bounds=function(object){geoStream(object,projectionStream(boundsStream));return boundsStream.result();};path.centroid=function(object){geoStream(object,projectionStream(centroidStream));return centroidStream.result();};path.projection=function(_){if(!arguments.length)return projection;projectionStream=_==null?(projection=null,identity):(projection=_).stream;return path;};path.context=function(_){if(!arguments.length)return context;contextStream=_==null?(context=null,new PathString(digits)):new PathContext(context=_);if(typeof pointRadius!=="function")contextStream.pointRadius(pointRadius);return path;};path.pointRadius=function(_){if(!arguments.length)return pointRadius;pointRadius=typeof _==="function"?_:(contextStream.pointRadius(+_),+_);return path;};path.digits=function(_){if(!arguments.length)return digits;if(_==null)digits=null;else{const d=Math.floor(_);if(!(d>=0))throw new RangeError(`invalid digits: ${_}`);digits=d;}if(context===null)contextStream=new PathString(digits);return path;};return path.projection(projection).digits(digits).context(context);}function transformer(methods){return function(stream){var s=new TransformStream();for(var key in methods)s[key]=methods[key];s.stream=stream;return s;};}function TransformStream(){}TransformStream.prototype={constructor:TransformStream,point:function(x,y){this.stream.point(x,y);},sphere:function(){this.stream.sphere();},lineStart:function(){this.stream.lineStart();},lineEnd:function(){this.stream.lineEnd();},polygonStart:function(){this.stream.polygonStart();},polygonEnd:function(){this.stream.polygonEnd();}};function fit(projection,fitBounds,object){var clip=projection.clipExtent&&projection.clipExtent();projection.scale(150).translate([0,0]);if(clip!=null)projection.clipExtent(null);geoStream(object,projection.stream(boundsStream));fitBounds(boundsStream.result());if(clip!=null)projection.clipExtent(clip);return projection;}function fitExtent(projection,extent,object){return fit(projection,function(b){var w=extent[1][0]-extent[0][0],h=extent[1][1]-extent[0][1],k=Math.min(w/(b[1][0]-b[0][0]),h/(b[1][1]-b[0][1])),x=+extent[0][0]+(w-k*(b[1][0]+b[0][0]))/2,y=+extent[0][1]+(h-k*(b[1][1]+b[0][1]))/2;projection.scale(150*k).translate([x,y]);},object);}function fitSize(projection,size,object){return fitExtent(projection,[[0,0],size],object);}function fitWidth(projection,width,object){return fit(projection,function(b){var w=+width,k=w/(b[1][0]-b[0][0]),x=(w-k*(b[1][0]+b[0][0]))/2,y=-k*b[0][1];projection.scale(150*k).translate([x,y]);},object);}function fitHeight(projection,height,object){return fit(projection,function(b){var h=+height,k=h/(b[1][1]-b[0][1]),x=-k*b[0][0],y=(h-k*(b[1][1]+b[0][1]))/2;projection.scale(150*k).translate([x,y]);},object);}var maxDepth=16,// maximum depth of subdivision
cosMinDistance=cos(30*radians$1);// cos(minimum angular distance)
function resample(project,delta2){return+delta2?resample$1(project,delta2):resampleNone(project);}function resampleNone(project){return transformer({point:function(x,y){x=project(x,y);this.stream.point(x[0],x[1]);}});}function resample$1(project,delta2){function resampleLineTo(x0,y0,lambda0,a0,b0,c0,x1,y1,lambda1,a1,b1,c1,depth,stream){var dx=x1-x0,dy=y1-y0,d2=dx*dx+dy*dy;if(d2>4*delta2&&depth--){var a=a0+a1,b=b0+b1,c=c0+c1,m=sqrt(a*a+b*b+c*c),phi2=asin(c/=m),lambda2=abs(abs(c)-1)<epsilon||abs(lambda0-lambda1)<epsilon?(lambda0+lambda1)/2:atan2(b,a),p=project(lambda2,phi2),x2=p[0],y2=p[1],dx2=x2-x0,dy2=y2-y0,dz=dy*dx2-dx*dy2;if(dz*dz/d2>delta2// perpendicular projected distance
||abs((dx*dx2+dy*dy2)/d2-0.5)>0.3// midpoint close to an end
||a0*a1+b0*b1+c0*c1<cosMinDistance){// angular distance
resampleLineTo(x0,y0,lambda0,a0,b0,c0,x2,y2,lambda2,a/=m,b/=m,c,depth,stream);stream.point(x2,y2);resampleLineTo(x2,y2,lambda2,a,b,c,x1,y1,lambda1,a1,b1,c1,depth,stream);}}}return function(stream){var lambda00,x00,y00,a00,b00,c00,// first point
lambda0,x0,y0,a0,b0,c0;// previous point
var resampleStream={point:point,lineStart:lineStart,lineEnd:lineEnd,polygonStart:function(){stream.polygonStart();resampleStream.lineStart=ringStart;},polygonEnd:function(){stream.polygonEnd();resampleStream.lineStart=lineStart;}};function point(x,y){x=project(x,y);stream.point(x[0],x[1]);}function lineStart(){x0=NaN;resampleStream.point=linePoint;stream.lineStart();}function linePoint(lambda,phi){var c=cartesian([lambda,phi]),p=project(lambda,phi);resampleLineTo(x0,y0,lambda0,a0,b0,c0,x0=p[0],y0=p[1],lambda0=lambda,a0=c[0],b0=c[1],c0=c[2],maxDepth,stream);stream.point(x0,y0);}function lineEnd(){resampleStream.point=point;stream.lineEnd();}function ringStart(){lineStart();resampleStream.point=ringPoint;resampleStream.lineEnd=ringEnd;}function ringPoint(lambda,phi){linePoint(lambda00=lambda,phi),x00=x0,y00=y0,a00=a0,b00=b0,c00=c0;resampleStream.point=linePoint;}function ringEnd(){resampleLineTo(x0,y0,lambda0,a0,b0,c0,x00,y00,lambda00,a00,b00,c00,maxDepth,stream);resampleStream.lineEnd=lineEnd;lineEnd();}return resampleStream;};}var transformRadians=transformer({point:function(x,y){this.stream.point(x*radians$1,y*radians$1);}});function transformRotate(rotate){return transformer({point:function(x,y){var r=rotate(x,y);return this.stream.point(r[0],r[1]);}});}function scaleTranslate(k,dx,dy,sx,sy){function transform(x,y){x*=sx;y*=sy;return[dx+k*x,dy-k*y];}transform.invert=function(x,y){return[(x-dx)/k*sx,(dy-y)/k*sy];};return transform;}function scaleTranslateRotate(k,dx,dy,sx,sy,alpha){if(!alpha)return scaleTranslate(k,dx,dy,sx,sy);var cosAlpha=cos(alpha),sinAlpha=sin(alpha),a=cosAlpha*k,b=sinAlpha*k,ai=cosAlpha/k,bi=sinAlpha/k,ci=(sinAlpha*dy-cosAlpha*dx)/k,fi=(sinAlpha*dx+cosAlpha*dy)/k;function transform(x,y){x*=sx;y*=sy;return[a*x-b*y+dx,dy-b*x-a*y];}transform.invert=function(x,y){return[sx*(ai*x-bi*y+ci),sy*(fi-bi*x-ai*y)];};return transform;}function projection(project){return projectionMutator(function(){return project;})();}function projectionMutator(projectAt){var project,k=150,// scale
x=480,y=250,// translate
lambda=0,phi=0,// center
deltaLambda=0,deltaPhi=0,deltaGamma=0,rotate,// pre-rotate
alpha=0,// post-rotate angle
sx=1,// reflectX
sy=1,// reflectX
theta=null,preclip=clipAntimeridian,// pre-clip angle
x0=null,y0,x1,y1,postclip=identity,// post-clip extent
delta2=0.5,// precision
projectResample,projectTransform,projectRotateTransform,cache,cacheStream;function projection(point){return projectRotateTransform(point[0]*radians$1,point[1]*radians$1);}function invert(point){point=projectRotateTransform.invert(point[0],point[1]);return point&&[point[0]*degrees$1,point[1]*degrees$1];}projection.stream=function(stream){return cache&&cacheStream===stream?cache:cache=transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream=stream)))));};projection.preclip=function(_){return arguments.length?(preclip=_,theta=undefined,reset()):preclip;};projection.postclip=function(_){return arguments.length?(postclip=_,x0=y0=x1=y1=null,reset()):postclip;};projection.clipAngle=function(_){return arguments.length?(preclip=+_?clipCircle(theta=_*radians$1):(theta=null,clipAntimeridian),reset()):theta*degrees$1;};projection.clipExtent=function(_){return arguments.length?(postclip=_==null?(x0=y0=x1=y1=null,identity):clipRectangle(x0=+_[0][0],y0=+_[0][1],x1=+_[1][0],y1=+_[1][1]),reset()):x0==null?null:[[x0,y0],[x1,y1]];};projection.scale=function(_){return arguments.length?(k=+_,recenter()):k;};projection.translate=function(_){return arguments.length?(x=+_[0],y=+_[1],recenter()):[x,y];};projection.center=function(_){return arguments.length?(lambda=_[0]%360*radians$1,phi=_[1]%360*radians$1,recenter()):[lambda*degrees$1,phi*degrees$1];};projection.rotate=function(_){return arguments.length?(deltaLambda=_[0]%360*radians$1,deltaPhi=_[1]%360*radians$1,deltaGamma=_.length>2?_[2]%360*radians$1:0,recenter()):[deltaLambda*degrees$1,deltaPhi*degrees$1,deltaGamma*degrees$1];};projection.angle=function(_){return arguments.length?(alpha=_%360*radians$1,recenter()):alpha*degrees$1;};projection.reflectX=function(_){return arguments.length?(sx=_?-1:1,recenter()):sx<0;};projection.reflectY=function(_){return arguments.length?(sy=_?-1:1,recenter()):sy<0;};projection.precision=function(_){return arguments.length?(projectResample=resample(projectTransform,delta2=_*_),reset()):sqrt(delta2);};projection.fitExtent=function(extent,object){return fitExtent(projection,extent,object);};projection.fitSize=function(size,object){return fitSize(projection,size,object);};projection.fitWidth=function(width,object){return fitWidth(projection,width,object);};projection.fitHeight=function(height,object){return fitHeight(projection,height,object);};function recenter(){var center=scaleTranslateRotate(k,0,0,sx,sy,alpha).apply(null,project(lambda,phi)),transform=scaleTranslateRotate(k,x-center[0],y-center[1],sx,sy,alpha);rotate=rotateRadians(deltaLambda,deltaPhi,deltaGamma);projectTransform=compose(project,transform);projectRotateTransform=compose(rotate,projectTransform);projectResample=resample(projectTransform,delta2);return reset();}function reset(){cache=cacheStream=null;return projection;}return function(){project=projectAt.apply(this,arguments);projection.invert=project.invert&&invert;return recenter();};}function conicProjection(projectAt){var phi0=0,phi1=pi/3,m=projectionMutator(projectAt),p=m(phi0,phi1);p.parallels=function(_){return arguments.length?m(phi0=_[0]*radians$1,phi1=_[1]*radians$1):[phi0*degrees$1,phi1*degrees$1];};return p;}function cylindricalEqualAreaRaw(phi0){var cosPhi0=cos(phi0);function forward(lambda,phi){return[lambda*cosPhi0,sin(phi)/cosPhi0];}forward.invert=function(x,y){return[x/cosPhi0,asin(y*cosPhi0)];};return forward;}function conicEqualAreaRaw(y0,y1){var sy0=sin(y0),n=(sy0+sin(y1))/2;// Are the parallels symmetrical around the Equator?
if(abs(n)<epsilon)return cylindricalEqualAreaRaw(y0);var c=1+sy0*(2*n-sy0),r0=sqrt(c)/n;function project(x,y){var r=sqrt(c-2*n*sin(y))/n;return[r*sin(x*=n),r0-r*cos(x)];}project.invert=function(x,y){var r0y=r0-y,l=atan2(x,abs(r0y))*sign(r0y);if(r0y*n<0)l-=pi*sign(x)*sign(r0y);return[l/n,asin((c-(x*x+r0y*r0y)*n*n)/(2*n))];};return project;}function geoConicEqualArea(){return conicProjection(conicEqualAreaRaw).scale(155.424).center([0,33.6442]);}function geoAlbers(){return geoConicEqualArea().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-0.6,38.7]);}// The projections must have mutually exclusive clip regions on the sphere,
// as this will avoid emitting interleaving lines and polygons.
function multiplex(streams){var n=streams.length;return{point:function(x,y){var i=-1;while(++i<n)streams[i].point(x,y);},sphere:function(){var i=-1;while(++i<n)streams[i].sphere();},lineStart:function(){var i=-1;while(++i<n)streams[i].lineStart();},lineEnd:function(){var i=-1;while(++i<n)streams[i].lineEnd();},polygonStart:function(){var i=-1;while(++i<n)streams[i].polygonStart();},polygonEnd:function(){var i=-1;while(++i<n)streams[i].polygonEnd();}};}// A composite projection for the United States, configured by default for
// 960×500. The projection also works quite well at 960×600 if you change the
// scale to 1285 and adjust the translate accordingly. The set of standard
// parallels for each region comes from USGS, which is published here:
// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers
function geoAlbersUsa(){var cache,cacheStream,lower48=geoAlbers(),lower48Point,alaska=geoConicEqualArea().rotate([154,0]).center([-2,58.5]).parallels([55,65]),alaskaPoint,// EPSG:3338
hawaii=geoConicEqualArea().rotate([157,0]).center([-3,19.9]).parallels([8,18]),hawaiiPoint,// ESRI:102007
point,pointStream={point:function(x,y){point=[x,y];}};function albersUsa(coordinates){var x=coordinates[0],y=coordinates[1];return point=null,(lower48Point.point(x,y),point)||(alaskaPoint.point(x,y),point)||(hawaiiPoint.point(x,y),point);}albersUsa.invert=function(coordinates){var k=lower48.scale(),t=lower48.translate(),x=(coordinates[0]-t[0])/k,y=(coordinates[1]-t[1])/k;return(y>=0.120&&y<0.234&&x>=-0.425&&x<-0.214?alaska:y>=0.166&&y<0.234&&x>=-0.214&&x<-0.115?hawaii:lower48).invert(coordinates);};albersUsa.stream=function(stream){return cache&&cacheStream===stream?cache:cache=multiplex([lower48.stream(cacheStream=stream),alaska.stream(stream),hawaii.stream(stream)]);};albersUsa.precision=function(_){if(!arguments.length)return lower48.precision();lower48.precision(_),alaska.precision(_),hawaii.precision(_);return reset();};albersUsa.scale=function(_){if(!arguments.length)return lower48.scale();lower48.scale(_),alaska.scale(_*0.35),hawaii.scale(_);return albersUsa.translate(lower48.translate());};albersUsa.translate=function(_){if(!arguments.length)return lower48.translate();var k=lower48.scale(),x=+_[0],y=+_[1];lower48Point=lower48.translate(_).clipExtent([[x-0.455*k,y-0.238*k],[x+0.455*k,y+0.238*k]]).stream(pointStream);alaskaPoint=alaska.translate([x-0.307*k,y+0.201*k]).clipExtent([[x-0.425*k+epsilon,y+0.120*k+epsilon],[x-0.214*k-epsilon,y+0.234*k-epsilon]]).stream(pointStream);hawaiiPoint=hawaii.translate([x-0.205*k,y+0.212*k]).clipExtent([[x-0.214*k+epsilon,y+0.166*k+epsilon],[x-0.115*k-epsilon,y+0.234*k-epsilon]]).stream(pointStream);return reset();};albersUsa.fitExtent=function(extent,object){return fitExtent(albersUsa,extent,object);};albersUsa.fitSize=function(size,object){return fitSize(albersUsa,size,object);};albersUsa.fitWidth=function(width,object){return fitWidth(albersUsa,width,object);};albersUsa.fitHeight=function(height,object){return fitHeight(albersUsa,height,object);};function reset(){cache=cacheStream=null;return albersUsa;}return albersUsa.scale(1070);}function azimuthalRaw(scale){return function(x,y){var cx=cos(x),cy=cos(y),k=scale(cx*cy);if(k===Infinity)return[2,0];return[k*cy*sin(x),k*sin(y)];};}function azimuthalInvert(angle){return function(x,y){var z=sqrt(x*x+y*y),c=angle(z),sc=sin(c),cc=cos(c);return[atan2(x*sc,z*cc),asin(z&&y*sc/z)];};}var azimuthalEqualAreaRaw=azimuthalRaw(function(cxcy){return sqrt(2/(1+cxcy));});azimuthalEqualAreaRaw.invert=azimuthalInvert(function(z){return 2*asin(z/2);});function geoAzimuthalEqualArea(){return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180-1e-3);}var azimuthalEquidistantRaw=azimuthalRaw(function(c){return(c=acos(c))&&c/sin(c);});azimuthalEquidistantRaw.invert=azimuthalInvert(function(z){return z;});function geoAzimuthalEquidistant(){return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180-1e-3);}function mercatorRaw(lambda,phi){return[lambda,log(tan((halfPi+phi)/2))];}mercatorRaw.invert=function(x,y){return[x,2*atan(exp(y))-halfPi];};function geoMercator(){return mercatorProjection(mercatorRaw).scale(961/tau);}function mercatorProjection(project){var m=projection(project),center=m.center,scale=m.scale,translate=m.translate,clipExtent=m.clipExtent,x0=null,y0,x1,y1;// clip extent
m.scale=function(_){return arguments.length?(scale(_),reclip()):scale();};m.translate=function(_){return arguments.length?(translate(_),reclip()):translate();};m.center=function(_){return arguments.length?(center(_),reclip()):center();};m.clipExtent=function(_){return arguments.length?(_==null?x0=y0=x1=y1=null:(x0=+_[0][0],y0=+_[0][1],x1=+_[1][0],y1=+_[1][1]),reclip()):x0==null?null:[[x0,y0],[x1,y1]];};function reclip(){var k=pi*scale(),t=m(rotation(m.rotate()).invert([0,0]));return clipExtent(x0==null?[[t[0]-k,t[1]-k],[t[0]+k,t[1]+k]]:project===mercatorRaw?[[Math.max(t[0]-k,x0),y0],[Math.min(t[0]+k,x1),y1]]:[[x0,Math.max(t[1]-k,y0)],[x1,Math.min(t[1]+k,y1)]]);}return reclip();}function tany(y){return tan((halfPi+y)/2);}function conicConformalRaw(y0,y1){var cy0=cos(y0),n=y0===y1?sin(y0):log(cy0/cos(y1))/log(tany(y1)/tany(y0)),f=cy0*pow(tany(y0),n)/n;if(!n)return mercatorRaw;function project(x,y){if(f>0){if(y<-halfPi+epsilon)y=-halfPi+epsilon;}else{if(y>halfPi-epsilon)y=halfPi-epsilon;}var r=f/pow(tany(y),n);return[r*sin(n*x),f-r*cos(n*x)];}project.invert=function(x,y){var fy=f-y,r=sign(n)*sqrt(x*x+fy*fy),l=atan2(x,abs(fy))*sign(fy);if(fy*n<0)l-=pi*sign(x)*sign(fy);return[l/n,2*atan(pow(f/r,1/n))-halfPi];};return project;}function geoConicConformal(){return conicProjection(conicConformalRaw).scale(109.5).parallels([30,30]);}function equirectangularRaw(lambda,phi){return[lambda,phi];}equirectangularRaw.invert=equirectangularRaw;function geoEquirectangular(){return projection(equirectangularRaw).scale(152.63);}function conicEquidistantRaw(y0,y1){var cy0=cos(y0),n=y0===y1?sin(y0):(cy0-cos(y1))/(y1-y0),g=cy0/n+y0;if(abs(n)<epsilon)return equirectangularRaw;function project(x,y){var gy=g-y,nx=n*x;return[gy*sin(nx),g-gy*cos(nx)];}project.invert=function(x,y){var gy=g-y,l=atan2(x,abs(gy))*sign(gy);if(gy*n<0)l-=pi*sign(x)*sign(gy);return[l/n,g-sign(n)*sqrt(x*x+gy*gy)];};return project;}function geoConicEquidistant(){return conicProjection(conicEquidistantRaw).scale(131.154).center([0,13.9389]);}var A1=1.340264,A2=-0.081106,A3=0.000893,A4=0.003796,M=sqrt(3)/2,iterations=12;function equalEarthRaw(lambda,phi){var l=asin(M*sin(phi)),l2=l*l,l6=l2*l2*l2;return[lambda*cos(l)/(M*(A1+3*A2*l2+l6*(7*A3+9*A4*l2))),l*(A1+A2*l2+l6*(A3+A4*l2))];}equalEarthRaw.invert=function(x,y){var l=y,l2=l*l,l6=l2*l2*l2;for(var i=0,delta,fy,fpy;i<iterations;++i){fy=l*(A1+A2*l2+l6*(A3+A4*l2))-y;fpy=A1+3*A2*l2+l6*(7*A3+9*A4*l2);l-=delta=fy/fpy,l2=l*l,l6=l2*l2*l2;if(abs(delta)<epsilon2)break;}return[M*x*(A1+3*A2*l2+l6*(7*A3+9*A4*l2))/cos(l),asin(sin(l)/M)];};function geoEqualEarth(){return projection(equalEarthRaw).scale(177.158);}function gnomonicRaw(x,y){var cy=cos(y),k=cos(x)*cy;return[cy*sin(x)/k,sin(y)/k];}gnomonicRaw.invert=azimuthalInvert(atan);function geoGnomonic(){return projection(gnomonicRaw).scale(144.049).clipAngle(60);}function naturalEarth1Raw(lambda,phi){var phi2=phi*phi,phi4=phi2*phi2;return[lambda*(0.8707-0.131979*phi2+phi4*(-0.013791+phi4*(0.003971*phi2-0.001529*phi4))),phi*(1.007226+phi2*(0.015085+phi4*(-0.044475+0.028874*phi2-0.005916*phi4)))];}naturalEarth1Raw.invert=function(x,y){var phi=y,i=25,delta;do{var phi2=phi*phi,phi4=phi2*phi2;phi-=delta=(phi*(1.007226+phi2*(0.015085+phi4*(-0.044475+0.028874*phi2-0.005916*phi4)))-y)/(1.007226+phi2*(0.015085*3+phi4*(-0.044475*7+0.028874*9*phi2-0.005916*11*phi4)));}while(abs(delta)>epsilon&&--i>0);return[x/(0.8707+(phi2=phi*phi)*(-0.131979+phi2*(-0.013791+phi2*phi2*phi2*(0.003971-0.001529*phi2)))),phi];};function geoNaturalEarth1(){return projection(naturalEarth1Raw).scale(175.295);}function orthographicRaw(x,y){return[cos(y)*sin(x),sin(y)];}orthographicRaw.invert=azimuthalInvert(asin);function geoOrthographic(){return projection(orthographicRaw).scale(249.5).clipAngle(90+epsilon);}function stereographicRaw(x,y){var cy=cos(y),k=1+cos(x)*cy;return[cy*sin(x)/k,sin(y)/k];}stereographicRaw.invert=azimuthalInvert(function(z){return 2*atan(z);});function geoStereographic(){return projection(stereographicRaw).scale(250).clipAngle(142);}function transverseMercatorRaw(lambda,phi){return[log(tan((halfPi+phi)/2)),-lambda];}transverseMercatorRaw.invert=function(x,y){return[-y,2*atan(exp(x))-halfPi];};function geoTransverseMercator(){var m=mercatorProjection(transverseMercatorRaw),center=m.center,rotate=m.rotate;m.center=function(_){return arguments.length?center([-_[1],_[0]]):(_=center(),[_[1],-_[0]]);};m.rotate=function(_){return arguments.length?rotate([_[0],_[1],_.length>2?_[2]+90:90]):(_=rotate(),[_[0],_[1],_[2]-90]);};return rotate([0,0,90]).scale(159.155);}function colors(specifier){var n=specifier.length/6|0,colors=new Array(n),i=0;while(i<n)colors[i]="#"+specifier.slice(i*6,++i*6);return colors;}function define$1(constructor,factory,prototype){constructor.prototype=factory.prototype=prototype;prototype.constructor=constructor;}function extend(parent,definition){var prototype=Object.create(parent.prototype);for(var key in definition)prototype[key]=definition[key];return prototype;}function Color(){}var darker=0.7;var brighter=1/darker;var reI="\\s*([+-]?\\d+)\\s*",reN="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",reP="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",reHex=/^#([0-9a-f]{3,8})$/,reRgbInteger=new RegExp(`^rgb\\(${reI},${reI},${reI}\\)$`),reRgbPercent=new RegExp(`^rgb\\(${reP},${reP},${reP}\\)$`),reRgbaInteger=new RegExp(`^rgba\\(${reI},${reI},${reI},${reN}\\)$`),reRgbaPercent=new RegExp(`^rgba\\(${reP},${reP},${reP},${reN}\\)$`),reHslPercent=new RegExp(`^hsl\\(${reN},${reP},${reP}\\)$`),reHslaPercent=new RegExp(`^hsla\\(${reN},${reP},${reP},${reN}\\)$`);var named={aliceblue:0xf0f8ff,antiquewhite:0xfaebd7,aqua:0x00ffff,aquamarine:0x7fffd4,azure:0xf0ffff,beige:0xf5f5dc,bisque:0xffe4c4,black:0x000000,blanchedalmond:0xffebcd,blue:0x0000ff,blueviolet:0x8a2be2,brown:0xa52a2a,burlywood:0xdeb887,cadetblue:0x5f9ea0,chartreuse:0x7fff00,chocolate:0xd2691e,coral:0xff7f50,cornflowerblue:0x6495ed,cornsilk:0xfff8dc,crimson:0xdc143c,cyan:0x00ffff,darkblue:0x00008b,darkcyan:0x008b8b,darkgoldenrod:0xb8860b,darkgray:0xa9a9a9,darkgreen:0x006400,darkgrey:0xa9a9a9,darkkhaki:0xbdb76b,darkmagenta:0x8b008b,darkolivegreen:0x556b2f,darkorange:0xff8c00,darkorchid:0x9932cc,darkred:0x8b0000,darksalmon:0xe9967a,darkseagreen:0x8fbc8f,darkslateblue:0x483d8b,darkslategray:0x2f4f4f,darkslategrey:0x2f4f4f,darkturquoise:0x00ced1,darkviolet:0x9400d3,deeppink:0xff1493,deepskyblue:0x00bfff,dimgray:0x696969,dimgrey:0x696969,dodgerblue:0x1e90ff,firebrick:0xb22222,floralwhite:0xfffaf0,forestgreen:0x228b22,fuchsia:0xff00ff,gainsboro:0xdcdcdc,ghostwhite:0xf8f8ff,gold:0xffd700,goldenrod:0xdaa520,gray:0x808080,green:0x008000,greenyellow:0xadff2f,grey:0x808080,honeydew:0xf0fff0,hotpink:0xff69b4,indianred:0xcd5c5c,indigo:0x4b0082,ivory:0xfffff0,khaki:0xf0e68c,lavender:0xe6e6fa,lavenderblush:0xfff0f5,lawngreen:0x7cfc00,lemonchiffon:0xfffacd,lightblue:0xadd8e6,lightcoral:0xf08080,lightcyan:0xe0ffff,lightgoldenrodyellow:0xfafad2,lightgray:0xd3d3d3,lightgreen:0x90ee90,lightgrey:0xd3d3d3,lightpink:0xffb6c1,lightsalmon:0xffa07a,lightseagreen:0x20b2aa,lightskyblue:0x87cefa,lightslategray:0x778899,lightslategrey:0x778899,lightsteelblue:0xb0c4de,lightyellow:0xffffe0,lime:0x00ff00,limegreen:0x32cd32,linen:0xfaf0e6,magenta:0xff00ff,maroon:0x800000,mediumaquamarine:0x66cdaa,mediumblue:0x0000cd,mediumorchid:0xba55d3,mediumpurple:0x9370db,mediumseagreen:0x3cb371,mediumslateblue:0x7b68ee,mediumspringgreen:0x00fa9a,mediumturquoise:0x48d1cc,mediumvioletred:0xc71585,midnightblue:0x191970,mintcream:0xf5fffa,mistyrose:0xffe4e1,moccasin:0xffe4b5,navajowhite:0xffdead,navy:0x000080,oldlace:0xfdf5e6,olive:0x808000,olivedrab:0x6b8e23,orange:0xffa500,orangered:0xff4500,orchid:0xda70d6,palegoldenrod:0xeee8aa,palegreen:0x98fb98,paleturquoise:0xafeeee,palevioletred:0xdb7093,papayawhip:0xffefd5,peachpuff:0xffdab9,peru:0xcd853f,pink:0xffc0cb,plum:0xdda0dd,powderblue:0xb0e0e6,purple:0x800080,rebeccapurple:0x663399,red:0xff0000,rosybrown:0xbc8f8f,royalblue:0x4169e1,saddlebrown:0x8b4513,salmon:0xfa8072,sandybrown:0xf4a460,seagreen:0x2e8b57,seashell:0xfff5ee,sienna:0xa0522d,silver:0xc0c0c0,skyblue:0x87ceeb,slateblue:0x6a5acd,slategray:0x708090,slategrey:0x708090,snow:0xfffafa,springgreen:0x00ff7f,steelblue:0x4682b4,tan:0xd2b48c,teal:0x008080,thistle:0xd8bfd8,tomato:0xff6347,turquoise:0x40e0d0,violet:0xee82ee,wheat:0xf5deb3,white:0xffffff,whitesmoke:0xf5f5f5,yellow:0xffff00,yellowgreen:0x9acd32};define$1(Color,color,{copy(channels){return Object.assign(new this.constructor(),this,channels);},displayable(){return this.rgb().displayable();},hex:color_formatHex,// Deprecated! Use color.formatHex.
formatHex:color_formatHex,formatHex8:color_formatHex8,formatHsl:color_formatHsl,formatRgb:color_formatRgb,toString:color_formatRgb});function color_formatHex(){return this.rgb().formatHex();}function color_formatHex8(){return this.rgb().formatHex8();}function color_formatHsl(){return hslConvert(this).formatHsl();}function color_formatRgb(){return this.rgb().formatRgb();}function color(format){var m,l;format=(format+"").trim().toLowerCase();return(m=reHex.exec(format))?(l=m[1].length,m=parseInt(m[1],16),l===6?rgbn(m)// #ff0000
:l===3?new Rgb(m>>8&0xf|m>>4&0xf0,m>>4&0xf|m&0xf0,(m&0xf)<<4|m&0xf,1)// #f00
:l===8?rgba(m>>24&0xff,m>>16&0xff,m>>8&0xff,(m&0xff)/0xff)// #ff000000
:l===4?rgba(m>>12&0xf|m>>8&0xf0,m>>8&0xf|m>>4&0xf0,m>>4&0xf|m&0xf0,((m&0xf)<<4|m&0xf)/0xff)// #f000
:null// invalid hex
):(m=reRgbInteger.exec(format))?new Rgb(m[1],m[2],m[3],1)// rgb(255, 0, 0)
:(m=reRgbPercent.exec(format))?new Rgb(m[1]*255/100,m[2]*255/100,m[3]*255/100,1)// rgb(100%, 0%, 0%)
:(m=reRgbaInteger.exec(format))?rgba(m[1],m[2],m[3],m[4])// rgba(255, 0, 0, 1)
:(m=reRgbaPercent.exec(format))?rgba(m[1]*255/100,m[2]*255/100,m[3]*255/100,m[4])// rgb(100%, 0%, 0%, 1)
:(m=reHslPercent.exec(format))?hsla(m[1],m[2]/100,m[3]/100,1)// hsl(120, 50%, 50%)
:(m=reHslaPercent.exec(format))?hsla(m[1],m[2]/100,m[3]/100,m[4])// hsla(120, 50%, 50%, 1)
:named.hasOwnProperty(format)?rgbn(named[format])// eslint-disable-line no-prototype-builtins
:format==="transparent"?new Rgb(NaN,NaN,NaN,0):null;}function rgbn(n){return new Rgb(n>>16&0xff,n>>8&0xff,n&0xff,1);}function rgba(r,g,b,a){if(a<=0)r=g=b=NaN;return new Rgb(r,g,b,a);}function rgbConvert(o){if(!(o instanceof Color))o=color(o);if(!o)return new Rgb();o=o.rgb();return new Rgb(o.r,o.g,o.b,o.opacity);}function rgb(r,g,b,opacity){return arguments.length===1?rgbConvert(r):new Rgb(r,g,b,opacity==null?1:opacity);}function Rgb(r,g,b,opacity){this.r=+r;this.g=+g;this.b=+b;this.opacity=+opacity;}define$1(Rgb,rgb,extend(Color,{brighter(k){k=k==null?brighter:Math.pow(brighter,k);return new Rgb(this.r*k,this.g*k,this.b*k,this.opacity);},darker(k){k=k==null?darker:Math.pow(darker,k);return new Rgb(this.r*k,this.g*k,this.b*k,this.opacity);},rgb(){return this;},clamp(){return new Rgb(clampi(this.r),clampi(this.g),clampi(this.b),clampa(this.opacity));},displayable(){return-0.5<=this.r&&this.r<255.5&&-0.5<=this.g&&this.g<255.5&&-0.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1;},hex:rgb_formatHex,// Deprecated! Use color.formatHex.
formatHex:rgb_formatHex,formatHex8:rgb_formatHex8,formatRgb:rgb_formatRgb,toString:rgb_formatRgb}));function rgb_formatHex(){return`#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;}function rgb_formatHex8(){return`#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity)?1:this.opacity)*255)}`;}function rgb_formatRgb(){const a=clampa(this.opacity);return`${a===1?"rgb(":"rgba("}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a===1?")":`, ${a})`}`;}function clampa(opacity){return isNaN(opacity)?1:Math.max(0,Math.min(1,opacity));}function clampi(value){return Math.max(0,Math.min(255,Math.round(value)||0));}function hex(value){value=clampi(value);return(value<16?"0":"")+value.toString(16);}function hsla(h,s,l,a){if(a<=0)h=s=l=NaN;else if(l<=0||l>=1)h=s=NaN;else if(s<=0)h=NaN;return new Hsl(h,s,l,a);}function hslConvert(o){if(o instanceof Hsl)return new Hsl(o.h,o.s,o.l,o.opacity);if(!(o instanceof Color))o=color(o);if(!o)return new Hsl();if(o instanceof Hsl)return o;o=o.rgb();var r=o.r/255,g=o.g/255,b=o.b/255,min=Math.min(r,g,b),max=Math.max(r,g,b),h=NaN,s=max-min,l=(max+min)/2;if(s){if(r===max)h=(g-b)/s+(g<b)*6;else if(g===max)h=(b-r)/s+2;else h=(r-g)/s+4;s/=l<0.5?max+min:2-max-min;h*=60;}else{s=l>0&&l<1?0:h;}return new Hsl(h,s,l,o.opacity);}function hsl(h,s,l,opacity){return arguments.length===1?hslConvert(h):new Hsl(h,s,l,opacity==null?1:opacity);}function Hsl(h,s,l,opacity){this.h=+h;this.s=+s;this.l=+l;this.opacity=+opacity;}define$1(Hsl,hsl,extend(Color,{brighter(k){k=k==null?brighter:Math.pow(brighter,k);return new Hsl(this.h,this.s,this.l*k,this.opacity);},darker(k){k=k==null?darker:Math.pow(darker,k);return new Hsl(this.h,this.s,this.l*k,this.opacity);},rgb(){var h=this.h%360+(this.h<0)*360,s=isNaN(h)||isNaN(this.s)?0:this.s,l=this.l,m2=l+(l<0.5?l:1-l)*s,m1=2*l-m2;return new Rgb(hsl2rgb(h>=240?h-240:h+120,m1,m2),hsl2rgb(h,m1,m2),hsl2rgb(h<120?h+240:h-120,m1,m2),this.opacity);},clamp(){return new Hsl(clamph(this.h),clampt(this.s),clampt(this.l),clampa(this.opacity));},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1;},formatHsl(){const a=clampa(this.opacity);return`${a===1?"hsl(":"hsla("}${clamph(this.h)}, ${clampt(this.s)*100}%, ${clampt(this.l)*100}%${a===1?")":`, ${a})`}`;}}));function clamph(value){value=(value||0)%360;return value<0?value+360:value;}function clampt(value){return Math.max(0,Math.min(1,value||0));}/* From FvD 13.37, CSS Color Module Level 3 */function hsl2rgb(h,m1,m2){return(h<60?m1+(m2-m1)*h/60:h<180?m2:h<240?m1+(m2-m1)*(240-h)/60:m1)*255;}const radians=Math.PI/180;const degrees=180/Math.PI;var A=-0.14861,B=1.78277,C=-0.29227,D=-0.90649,E=1.97294,ED=E*D,EB=E*B,BC_DA=B*C-D*A;function cubehelixConvert(o){if(o instanceof Cubehelix)return new Cubehelix(o.h,o.s,o.l,o.opacity);if(!(o instanceof Rgb))o=rgbConvert(o);var r=o.r/255,g=o.g/255,b=o.b/255,l=(BC_DA*b+ED*r-EB*g)/(BC_DA+ED-EB),bl=b-l,k=(E*(g-l)-C*bl)/D,s=Math.sqrt(k*k+bl*bl)/(E*l*(1-l)),// NaN if l=0 or l=1
h=s?Math.atan2(k,bl)*degrees-120:NaN;return new Cubehelix(h<0?h+360:h,s,l,o.opacity);}function cubehelix$1(h,s,l,opacity){return arguments.length===1?cubehelixConvert(h):new Cubehelix(h,s,l,opacity==null?1:opacity);}function Cubehelix(h,s,l,opacity){this.h=+h;this.s=+s;this.l=+l;this.opacity=+opacity;}define$1(Cubehelix,cubehelix$1,extend(Color,{brighter(k){k=k==null?brighter:Math.pow(brighter,k);return new Cubehelix(this.h,this.s,this.l*k,this.opacity);},darker(k){k=k==null?darker:Math.pow(darker,k);return new Cubehelix(this.h,this.s,this.l*k,this.opacity);},rgb(){var h=isNaN(this.h)?0:(this.h+120)*radians,l=+this.l,a=isNaN(this.s)?0:this.s*l*(1-l),cosh=Math.cos(h),sinh=Math.sin(h);return new Rgb(255*(l+a*(A*cosh+B*sinh)),255*(l+a*(C*cosh+D*sinh)),255*(l+a*(E*cosh)),this.opacity);}}));function basis(t1,v0,v1,v2,v3){var t2=t1*t1,t3=t2*t1;return((1-3*t1+3*t2-t3)*v0+(4-6*t2+3*t3)*v1+(1+3*t1+3*t2-3*t3)*v2+t3*v3)/6;}function basis$1(values){var n=values.length-1;return function(t){var i=t<=0?t=0:t>=1?(t=1,n-1):Math.floor(t*n),v1=values[i],v2=values[i+1],v0=i>0?values[i-1]:2*v1-v2,v3=i<n-1?values[i+2]:2*v2-v1;return basis((t-i/n)*n,v0,v1,v2,v3);};}var constant=x=>()=>x;function linear(a,d){return function(t){return a+t*d;};}function exponential(a,b,y){return a=Math.pow(a,y),b=Math.pow(b,y)-a,y=1/y,function(t){return Math.pow(a+t*b,y);};}function hue(a,b){var d=b-a;return d?linear(a,d>180||d<-180?d-360*Math.round(d/360):d):constant(isNaN(a)?b:a);}function gamma(y){return(y=+y)===1?nogamma:function(a,b){return b-a?exponential(a,b,y):constant(isNaN(a)?b:a);};}function nogamma(a,b){var d=b-a;return d?linear(a,d):constant(isNaN(a)?b:a);}(function rgbGamma(y){var color=gamma(y);function rgb$1(start,end){var r=color((start=rgb(start)).r,(end=rgb(end)).r),g=color(start.g,end.g),b=color(start.b,end.b),opacity=nogamma(start.opacity,end.opacity);return function(t){start.r=r(t);start.g=g(t);start.b=b(t);start.opacity=opacity(t);return start+"";};}rgb$1.gamma=rgbGamma;return rgb$1;})(1);function rgbSpline(spline){return function(colors){var n=colors.length,r=new Array(n),g=new Array(n),b=new Array(n),i,color;for(i=0;i<n;++i){color=rgb(colors[i]);r[i]=color.r||0;g[i]=color.g||0;b[i]=color.b||0;}r=spline(r);g=spline(g);b=spline(b);color.opacity=1;return function(t){color.r=r(t);color.g=g(t);color.b=b(t);return color+"";};};}var rgbBasis=rgbSpline(basis$1);function cubehelix(hue){return function cubehelixGamma(y){y=+y;function cubehelix(start,end){var h=hue((start=cubehelix$1(start)).h,(end=cubehelix$1(end)).h),s=nogamma(start.s,end.s),l=nogamma(start.l,end.l),opacity=nogamma(start.opacity,end.opacity);return function(t){start.h=h(t);start.s=s(t);start.l=l(Math.pow(t,y));start.opacity=opacity(t);return start+"";};}cubehelix.gamma=cubehelixGamma;return cubehelix;}(1);}cubehelix(hue);var cubehelixLong=cubehelix(nogamma);var ramp$1=scheme=>rgbBasis(scheme[scheme.length-1]);var scheme$q=new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(colors);var interpolateBrBG=ramp$1(scheme$q);var scheme$p=new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(colors);var interpolatePRGn=ramp$1(scheme$p);var scheme$o=new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(colors);var interpolatePiYG=ramp$1(scheme$o);var scheme$n=new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(colors);var interpolatePuOr=ramp$1(scheme$n);var scheme$m=new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(colors);var interpolateRdBu=ramp$1(scheme$m);var scheme$l=new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(colors);var interpolateRdGy=ramp$1(scheme$l);var scheme$k=new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(colors);var interpolateRdYlBu=ramp$1(scheme$k);var scheme$j=new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(colors);var interpolateRdYlGn=ramp$1(scheme$j);var scheme$i=new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(colors);var interpolateSpectral=ramp$1(scheme$i);var scheme$h=new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(colors);var interpolateBuGn=ramp$1(scheme$h);var scheme$g=new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(colors);var interpolateBuPu=ramp$1(scheme$g);var scheme$f=new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(colors);var interpolateGnBu=ramp$1(scheme$f);var scheme$e=new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(colors);var interpolateOrRd=ramp$1(scheme$e);var scheme$d=new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(colors);var interpolatePuBuGn=ramp$1(scheme$d);var scheme$c=new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(colors);var interpolatePuBu=ramp$1(scheme$c);var scheme$b=new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(colors);var interpolatePuRd=ramp$1(scheme$b);var scheme$a=new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(colors);var interpolateRdPu=ramp$1(scheme$a);var scheme$9=new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(colors);var interpolateYlGnBu=ramp$1(scheme$9);var scheme$8=new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(colors);var interpolateYlGn=ramp$1(scheme$8);var scheme$7=new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(colors);var interpolateYlOrBr=ramp$1(scheme$7);var scheme$6=new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(colors);var interpolateYlOrRd=ramp$1(scheme$6);var scheme$5=new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(colors);var interpolateBlues=ramp$1(scheme$5);var scheme$4=new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(colors);var interpolateGreens=ramp$1(scheme$4);var scheme$3=new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(colors);var interpolateGreys=ramp$1(scheme$3);var scheme$2=new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(colors);var interpolatePurples=ramp$1(scheme$2);var scheme$1=new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(colors);var interpolateReds=ramp$1(scheme$1);var scheme=new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(colors);var interpolateOranges=ramp$1(scheme);function interpolateCividis(t){t=Math.max(0,Math.min(1,t));return"rgb("+Math.max(0,Math.min(255,Math.round(-4.54-t*(35.34-t*(2381.73-t*(6402.7-t*(7024.72-t*2710.57)))))))+", "+Math.max(0,Math.min(255,Math.round(32.49+t*(170.73+t*(52.82-t*(131.46-t*(176.58-t*67.37)))))))+", "+Math.max(0,Math.min(255,Math.round(81.24+t*(442.36-t*(2482.43-t*(6167.24-t*(6614.94-t*2475.67)))))))+")";}var interpolateCubehelixDefault=cubehelixLong(cubehelix$1(300,0.5,0.0),cubehelix$1(-240,0.5,1.0));var warm=cubehelixLong(cubehelix$1(-100,0.75,0.35),cubehelix$1(80,1.50,0.8));var cool=cubehelixLong(cubehelix$1(260,0.75,0.35),cubehelix$1(80,1.50,0.8));var c$1=cubehelix$1();function interpolateRainbow(t){if(t<0||t>1)t-=Math.floor(t);var ts=Math.abs(t-0.5);c$1.h=360*t-100;c$1.s=1.5-1.5*ts;c$1.l=0.8-0.9*ts;return c$1+"";}var c=rgb(),pi_1_3=Math.PI/3,pi_2_3=Math.PI*2/3;function interpolateSinebow(t){var x;t=(0.5-t)*Math.PI;c.r=255*(x=Math.sin(t))*x;c.g=255*(x=Math.sin(t+pi_1_3))*x;c.b=255*(x=Math.sin(t+pi_2_3))*x;return c+"";}function interpolateTurbo(t){t=Math.max(0,Math.min(1,t));return"rgb("+Math.max(0,Math.min(255,Math.round(34.61+t*(1172.33-t*(10793.56-t*(33300.12-t*(38394.49-t*14825.05)))))))+", "+Math.max(0,Math.min(255,Math.round(23.31+t*(557.33+t*(1225.33-t*(3574.96-t*(1073.77+t*707.56)))))))+", "+Math.max(0,Math.min(255,Math.round(27.2+t*(3211.1-t*(15327.97-t*(27814-t*(22569.18-t*6838.66)))))))+")";}function ramp(range){var n=range.length;return function(t){return range[Math.max(0,Math.min(n-1,Math.floor(t*n)))];};}var interpolateViridis=ramp(colors("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));var magma=ramp(colors("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));var inferno=ramp(colors("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));var plasma=ramp(colors("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));/**
   * chartjs-chart-geo
   * https://github.com/sgratzl/chartjs-chart-geo
   *
   * Copyright (c) 2019-2023 Samuel Gratzl <sam@sgratzl.com>
   */const lookup$1={geoAzimuthalEqualArea,geoAzimuthalEquidistant,geoGnomonic,geoOrthographic,geoStereographic,geoEqualEarth,geoAlbers,geoAlbersUsa,geoConicConformal,geoConicEqualArea,geoConicEquidistant,geoEquirectangular,geoMercator,geoTransverseMercator,geoNaturalEarth1};Object.keys(lookup$1).forEach(key=>{lookup$1[`${key.charAt(3).toLowerCase()}${key.slice(4)}`]=lookup$1[key];});class ProjectionScale extends Scale{constructor(cfg){super(cfg);this.outlineBounds=null;this.oldChartBounds=null;this.geoPath=geoPath();}init(options){options.position='chartArea';super.init(options);if(typeof options.projection==='function'){this.projection=options.projection;}else{this.projection=(lookup$1[options.projection]||lookup$1.albersUsa)();}this.geoPath.projection(this.projection);this.outlineBounds=null;this.oldChartBounds=null;}computeBounds(outline){const bb=geoPath(this.projection.fitWidth(1000,outline)).bounds(outline);const bHeight=Math.ceil(bb[1][1]-bb[0][1]);const bWidth=Math.ceil(bb[1][0]-bb[0][0]);const t=this.projection.translate();this.outlineBounds={width:bWidth,height:bHeight,aspectRatio:bWidth/bHeight,refScale:this.projection.scale(),refX:t[0],refY:t[1]};}updateBounds(){const area=this.chart.chartArea;const bb=this.outlineBounds;if(!bb){return false;}const padding=this.options.padding;const paddingTop=typeof padding==='number'?padding:padding.top;const paddingLeft=typeof padding==='number'?padding:padding.left;const paddingBottom=typeof padding==='number'?padding:padding.bottom;const paddingRight=typeof padding==='number'?padding:padding.right;const chartWidth=area.right-area.left-paddingLeft-paddingRight;const chartHeight=area.bottom-area.top-paddingTop-paddingBottom;const bak=this.oldChartBounds;this.oldChartBounds={chartWidth,chartHeight};const scale=Math.min(chartWidth/bb.width,chartHeight/bb.height);const viewWidth=bb.width*scale;const viewHeight=bb.height*scale;const x=(chartWidth-viewWidth)*0.5+area.left+paddingLeft;const y=(chartHeight-viewHeight)*0.5+area.top+paddingTop;const o=this.options;this.projection.scale(bb.refScale*scale*o.projectionScale).translate([scale*bb.refX+x+o.projectionOffset[0],scale*bb.refY+y+o.projectionOffset[1]]);return!bak||bak.chartWidth!==this.oldChartBounds.chartWidth||bak.chartHeight!==this.oldChartBounds.chartHeight;}}ProjectionScale.id='projection';ProjectionScale.defaults={projection:'albersUsa',projectionScale:1,projectionOffset:[0,0],padding:0};ProjectionScale.descriptors={_scriptable:name=>name!=='projection',_indexable:name=>name!=='projectionOffset'};const baseDefaults={position:'chartArea',property:'value',grid:{z:1,drawOnChartArea:false},ticks:{z:1},legend:{align:'right',position:'bottom-right',length:100,width:50,margin:8,indicatorWidth:10}};function computeLegendMargin(legend){const{indicatorWidth,align:pos,margin}=legend;const left=(typeof margin==='number'?margin:margin.left)+(pos==='right'?indicatorWidth:0);const top=(typeof margin==='number'?margin:margin.top)+(pos==='bottom'?indicatorWidth:0);const right=(typeof margin==='number'?margin:margin.right)+(pos==='left'?indicatorWidth:0);const bottom=(typeof margin==='number'?margin:margin.bottom)+(pos==='top'?indicatorWidth:0);return{left,top,right,bottom};}function computeLegendPosition(chartArea,legend,width,height,legendSize){const{indicatorWidth,align:axisPos,position:pos}=legend;const isHor=axisPos==='top'||axisPos==='bottom';const w=(axisPos==='left'?legendSize.w:width)+(isHor?indicatorWidth:0);const h=(axisPos==='top'?legendSize.h:height)+(!isHor?indicatorWidth:0);const margin=computeLegendMargin(legend);if(typeof pos==='string'){switch(pos){case'top-left':return[margin.left,margin.top];case'top':return[(chartArea.right-w)/2,margin.top];case'left':return[margin.left,(chartArea.bottom-h)/2];case'top-right':return[chartArea.right-w-margin.right,margin.top];case'bottom-right':return[chartArea.right-w-margin.right,chartArea.bottom-h-margin.bottom];case'bottom':return[(chartArea.right-w)/2,chartArea.bottom-h-margin.bottom];case'bottom-left':return[margin.left,chartArea.bottom-h-margin.bottom];default:return[chartArea.right-w-margin.right,(chartArea.bottom-h)/2];}}return[pos.x,pos.y];}class LegendScale extends LinearScale{constructor(){super(...arguments);this.legendSize={w:0,h:0};}init(options){options.position='chartArea';super.init(options);this.axis='r';}parse(raw,index){if(raw&&typeof raw[this.options.property]==='number'){return raw[this.options.property];}return super.parse(raw,index);}isHorizontal(){return this.options.legend.align==='top'||this.options.legend.align==='bottom';}_getNormalizedValue(v){if(v==null||Number.isNaN(v)){return null;}return(v-this._startValue)/this._valueRange;}update(maxWidth,maxHeight,margins){const ch=Math.min(maxHeight,this.bottom==null?Number.POSITIVE_INFINITY:this.bottom);const cw=Math.min(maxWidth,this.right==null?Number.POSITIVE_INFINITY:this.right);const l=this.options.legend;const isHor=this.isHorizontal();const factor=(v,full)=>v<1?full*v:v;const w=Math.min(cw,factor(isHor?l.length:l.width,cw))-(!isHor?l.indicatorWidth:0);const h=Math.min(ch,factor(!isHor?l.length:l.width,ch))-(isHor?l.indicatorWidth:0);this.legendSize={w,h};this.bottom=h;this.height=h;this.right=w;this.width=w;const bak=this.options.position;this.options.position=this.options.legend.align;const r=super.update(w,h,margins);this.options.position=bak;this.height=Math.min(h,this.height);this.width=Math.min(w,this.width);return r;}_computeLabelArea(){return undefined;}draw(chartArea){if(!this._isVisible()){return;}const pos=computeLegendPosition(chartArea,this.options.legend,this.width,this.height,this.legendSize);const{ctx}=this;ctx.save();ctx.translate(pos[0],pos[1]);const bak=this.options.position;this.options.position=this.options.legend.align;super.draw({...chartArea,bottom:this.height+10,right:this.width});this.options.position=bak;const{indicatorWidth}=this.options.legend;switch(this.options.legend.align){case'left':ctx.translate(this.legendSize.w,0);break;case'top':ctx.translate(0,this.legendSize.h);break;case'bottom':ctx.translate(0,-indicatorWidth);break;default:ctx.translate(-indicatorWidth,0);break;}this._drawIndicator();ctx.restore();}_drawIndicator(){}}class LogarithmicLegendScale extends LogarithmicScale{constructor(){super(...arguments);this.legendSize={w:0,h:0};}init(options){LegendScale.prototype.init.call(this,options);}parse(raw,index){return LegendScale.prototype.parse.call(this,raw,index);}isHorizontal(){return this.options.legend.align==='top'||this.options.legend.align==='bottom';}_getNormalizedValue(v){if(v==null||Number.isNaN(v)){return null;}return(Math.log10(v)-this._startValue)/this._valueRange;}update(maxWidth,maxHeight,margins){return LegendScale.prototype.update.call(this,maxWidth,maxHeight,margins);}_computeLabelArea(){return undefined;}draw(chartArea){return LegendScale.prototype.draw.call(this,chartArea);}_drawIndicator(){}}const lookup={interpolateBlues,interpolateBrBG,interpolateBuGn,interpolateBuPu,interpolateCividis,interpolateCool:cool,interpolateCubehelixDefault,interpolateGnBu,interpolateGreens,interpolateGreys,interpolateInferno:inferno,interpolateMagma:magma,interpolateOrRd,interpolateOranges,interpolatePRGn,interpolatePiYG,interpolatePlasma:plasma,interpolatePuBu,interpolatePuBuGn,interpolatePuOr,interpolatePuRd,interpolatePurples,interpolateRainbow,interpolateRdBu,interpolateRdGy,interpolateRdPu,interpolateRdYlBu,interpolateRdYlGn,interpolateReds,interpolateSinebow,interpolateSpectral,interpolateTurbo,interpolateViridis,interpolateWarm:warm,interpolateYlGn,interpolateYlGnBu,interpolateYlOrBr,interpolateYlOrRd};Object.keys(lookup).forEach(key=>{lookup[`${key.charAt(11).toLowerCase()}${key.slice(12)}`]=lookup[key];lookup[key.slice(11)]=lookup[key];});function quantize(v,steps){const perStep=1/steps;if(v<=perStep){return 0;}if(v>=1-perStep){return 1;}for(let acc=0;acc<1;acc+=perStep){if(v<acc){return acc-perStep/2;}}return v;}const colorScaleDefaults={interpolate:'blues',missing:'transparent',quantize:0};class ColorScale extends LegendScale{get interpolate(){const o=this.options;if(!o){return v=>`rgb(${v},${v},${v})`;}if(typeof o.interpolate==='function'){return o.interpolate;}return lookup[o.interpolate]||lookup.blues;}getColorForValue(value){const v=this._getNormalizedValue(value);if(v==null||Number.isNaN(v)){return this.options.missing;}return this.getColor(v);}getColor(normalized){let v=normalized;if(this.options.quantize>0){v=quantize(v,this.options.quantize);}return this.interpolate(v);}_drawIndicator(){const{indicatorWidth:indicatorSize}=this.options.legend;const reverse=this._reversePixels;if(this.isHorizontal()){const w=this.width;if(this.options.quantize>0){const stepWidth=w/this.options.quantize;const offset=!reverse?i=>i:i=>w-stepWidth-i;for(let i=0;i<w;i+=stepWidth){const v=(i+stepWidth/2)/w;this.ctx.fillStyle=this.getColor(v);this.ctx.fillRect(offset(i),0,stepWidth,indicatorSize);}}else{const offset=!reverse?i=>i:i=>w-1-i;for(let i=0;i<w;i+=1){this.ctx.fillStyle=this.getColor((i+0.5)/w);this.ctx.fillRect(offset(i),0,1,indicatorSize);}}}else{const h=this.height;if(this.options.quantize>0){const stepWidth=h/this.options.quantize;const offset=!reverse?i=>i:i=>h-stepWidth-i;for(let i=0;i<h;i+=stepWidth){const v=(i+stepWidth/2)/h;this.ctx.fillStyle=this.getColor(v);this.ctx.fillRect(0,offset(i),indicatorSize,stepWidth);}}else{const offset=!reverse?i=>i:i=>h-1-i;for(let i=0;i<h;i+=1){this.ctx.fillStyle=this.getColor((i+0.5)/h);this.ctx.fillRect(0,offset(i),indicatorSize,1);}}}}}ColorScale.id='color';ColorScale.defaults=merge$1({},[LinearScale.defaults,baseDefaults,colorScaleDefaults]);ColorScale.descriptors={_scriptable:name=>name!=='interpolate',_indexable:false};class ColorLogarithmicScale extends LogarithmicLegendScale{constructor(){super(...arguments);this.interpolate=v=>`rgb(${v},${v},${v})`;}init(options){super.init(options);if(typeof options.interpolate==='function'){this.interpolate=options.interpolate;}else{this.interpolate=lookup[options.interpolate]||lookup.blues;}}getColorForValue(value){return ColorScale.prototype.getColorForValue.call(this,value);}getColor(normalized){let v=normalized;if(this.options.quantize>0){v=quantize(v,this.options.quantize);}return this.interpolate(v);}_drawIndicator(){return ColorScale.prototype._drawIndicator.call(this);}}ColorLogarithmicScale.id='colorLogarithmic';ColorLogarithmicScale.defaults=merge$1({},[LogarithmicScale.defaults,baseDefaults,colorScaleDefaults]);ColorLogarithmicScale.descriptors={_scriptable:name=>name!=='interpolate',_indexable:false};const scaleDefaults={missing:1,mode:'area',range:[2,20],legend:{align:'bottom',length:90,width:70,indicatorWidth:42}};class SizeScale extends LegendScale{constructor(){super(...arguments);this._model=null;}getSizeForValue(value){const v=this._getNormalizedValue(value);if(v==null||Number.isNaN(v)){return this.options.missing;}return this.getSizeImpl(v);}getSizeImpl(normalized){const[r0,r1]=this.options.range;if(this.options.mode==='area'){const a1=r1*r1*Math.PI;const a0=r0*r0*Math.PI;const range=a1-a0;const a=normalized*range+a0;return Math.sqrt(a/Math.PI);}const range=r1-r0;return normalized*range+r0;}_drawIndicator(){const{ctx}=this;const shift=this.options.legend.indicatorWidth/2;const isHor=this.isHorizontal();const values=this.ticks;const labelItems=this.getLabelItems();const positions=labelItems?labelItems.map(el=>({[isHor?'x':'y']:el.options.translation[isHor?0:1]})):values.map((_,i)=>({[isHor?'x':'y']:this.getPixelForTick(i)}));(this._gridLineItems||[]).forEach(item=>{ctx.save();ctx.strokeStyle=item.color;ctx.lineWidth=item.width;if(ctx.setLineDash){ctx.setLineDash(item.borderDash);ctx.lineDashOffset=item.borderDashOffset;}ctx.beginPath();if(this.options.grid.drawTicks){switch(this.options.legend.align){case'left':ctx.moveTo(0,item.ty1);ctx.lineTo(shift,item.ty2);break;case'top':ctx.moveTo(item.tx1,0);ctx.lineTo(item.tx2,shift);break;case'bottom':ctx.moveTo(item.tx1,shift);ctx.lineTo(item.tx2,shift*2);break;default:ctx.moveTo(shift,item.ty1);ctx.lineTo(shift*2,item.ty2);break;}}ctx.stroke();ctx.restore();});if(this._model){const props=this._model;ctx.strokeStyle=props.borderColor;ctx.lineWidth=props.borderWidth||0;ctx.fillStyle=props.backgroundColor;}else{ctx.fillStyle='blue';}values.forEach((v,i)=>{const pos=positions[i];const radius=this.getSizeForValue(v.value);const x=isHor?pos.x:shift;const y=isHor?shift:pos.y;const renderOptions={pointStyle:'circle',borderWidth:0,...(this._model||{}),radius};drawPoint(ctx,renderOptions,x,y);});}}SizeScale.id='size';SizeScale.defaults=merge$1({},[LinearScale.defaults,baseDefaults,scaleDefaults]);SizeScale.descriptors={_scriptable:true,_indexable:name=>name!=='range'};class SizeLogarithmicScale extends LogarithmicLegendScale{constructor(){super(...arguments);this._model=null;}getSizeForValue(value){const v=this._getNormalizedValue(value);if(v==null||Number.isNaN(v)){return this.options.missing;}return this.getSizeImpl(v);}getSizeImpl(normalized){return SizeScale.prototype.getSizeImpl.call(this,normalized);}_drawIndicator(){SizeScale.prototype._drawIndicator.call(this);}}SizeLogarithmicScale.id='sizeLogarithmic';SizeLogarithmicScale.defaults=merge$1({},[LogarithmicScale.defaults,baseDefaults,scaleDefaults]);function growGeoBounds(bounds,amount){return[[bounds[0][0]-amount,bounds[0][1]-amount],[bounds[1][0]+amount,bounds[1][1]+amount]];}class GeoFeature extends Element{constructor(){super(...arguments);this.cache=undefined;}inRange(mouseX,mouseY){const bb=this.getBounds();const r=(Number.isNaN(mouseX)||mouseX>=bb.x&&mouseX<=bb.x2)&&(Number.isNaN(mouseY)||mouseY>=bb.y&&mouseY<=bb.y2);const projection=this.projectionScale.geoPath.projection();if(r&&!Number.isNaN(mouseX)&&!Number.isNaN(mouseY)&&typeof projection.invert==='function'){const longLat=projection.invert([mouseX,mouseY]);return longLat!=null&&geoContains(this.feature,longLat);}return r;}inXRange(mouseX){return this.inRange(mouseX,Number.NaN);}inYRange(mouseY){return this.inRange(Number.NaN,mouseY);}getCenterPoint(){if(this.cache&&this.cache.center){return this.cache.center;}let center;if(this.center){const p=this.projectionScale.projection([this.center.longitude,this.center.latitude]);center={x:p[0],y:p[1]};}else{const centroid=this.projectionScale.geoPath.centroid(this.feature);center={x:centroid[0],y:centroid[1]};}this.cache={...(this.cache||{}),center};return center;}getBounds(){if(this.cache&&this.cache.bounds){return this.cache.bounds;}const bb=growGeoBounds(this.projectionScale.geoPath.bounds(this.feature),this.options.borderWidth/2);const bounds={x:bb[0][0],x2:bb[1][0],y:bb[0][1],y2:bb[1][1],width:bb[1][0]-bb[0][0],height:bb[1][1]-bb[0][1]};this.cache={...(this.cache||{}),bounds};return bounds;}_drawInCache(doc){const bounds=this.getBounds();if(!Number.isFinite(bounds.x)){return;}const canvas=this.cache&&this.cache.canvas?this.cache.canvas:doc.createElement('canvas');const x1=Math.floor(bounds.x);const y1=Math.floor(bounds.y);const x2=Math.ceil(bounds.x+bounds.width);const y2=Math.ceil(bounds.y+bounds.height);const pixelRatio=this.pixelRatio||1;const width=Math.ceil(Math.max(x2-x1,1)*pixelRatio);const height=Math.ceil(Math.max(y2-y1,1)*pixelRatio);if(width<=0||height<=0){return;}canvas.width=width;canvas.height=height;const ctx=canvas.getContext('2d');if(ctx){ctx.clearRect(0,0,canvas.width,canvas.height);ctx.save();ctx.scale(pixelRatio,pixelRatio);ctx.translate(-x1,-y1);this._drawImpl(ctx);ctx.restore();this.cache={...(this.cache||{}),canvas,canvasKey:this._optionsToKey()};}}_optionsToKey(){const{options}=this;return`${options.backgroundColor};${options.borderColor};${options.borderWidth};${this.pixelRatio}`;}_drawImpl(ctx){const{feature}=this;const{options}=this;ctx.beginPath();this.projectionScale.geoPath.context(ctx)(feature);if(options.backgroundColor){ctx.fillStyle=options.backgroundColor;ctx.fill();}if(options.borderColor){ctx.strokeStyle=options.borderColor;ctx.lineWidth=options.borderWidth;ctx.stroke();}}draw(ctx){const{feature}=this;if(!feature){return;}if((!this.cache||this.cache.canvasKey!==this._optionsToKey())&&ctx.canvas.ownerDocument!=null){this._drawInCache(ctx.canvas.ownerDocument);}const bounds=this.getBounds();if(this.cache&&this.cache.canvas&&this.cache.canvas.width>0&&this.cache.canvas.height>0){const x1=Math.floor(bounds.x);const y1=Math.floor(bounds.y);const x2=Math.ceil(bounds.x+bounds.width);const y2=Math.ceil(bounds.y+bounds.height);const width=x2-x1;const height=y2-y1;if(width>0&&height>0){ctx.drawImage(this.cache.canvas,x1,y1,x2-x1,y2-y1);}}else if(Number.isFinite(bounds.x)){ctx.save();this._drawImpl(ctx);ctx.restore();}}}GeoFeature.id='geoFeature';GeoFeature.defaults={...BarElement.defaults,outlineBackgroundColor:null,outlineBorderWidth:0,graticuleBorderColor:'#CCCCCC',graticuleBorderWidth:0};GeoFeature.defaultRoutes={outlineBorderColor:'borderColor',...(BarElement.defaultRoutes||{})};const geoDefaults={showOutline:false,showGraticule:false,clipMap:true};const geoOverrides={scales:{projection:{axis:'x',type:ProjectionScale.id,position:'chartArea',display:false}}};function patchDatasetElementOptions(options){const r={...options};Object.keys(options).forEach(key=>{let targetKey=key;if(key.startsWith('outline')){const sub=key.slice('outline'.length);targetKey=sub[0].toLowerCase()+sub.slice(1);}else if(key.startsWith('hoverOutline')){targetKey=`hover${key.slice('hoverOutline'.length)}`;}else{return;}delete r[key];r[targetKey]=options[key];});return r;}class GeoController extends DatasetController{getGeoDataset(){return super.getDataset();}getGeoOptions(){return this.chart.options;}getProjectionScale(){return this.getScaleForId('projection');}linkScales(){const dataset=this.getGeoDataset();const meta=this.getMeta();meta.xAxisID='projection';dataset.xAxisID='projection';meta.yAxisID='projection';dataset.yAxisID='projection';meta.xScale=this.getScaleForId('projection');meta.yScale=this.getScaleForId('projection');this.getProjectionScale().computeBounds(this.resolveOutline());}showOutline(){return valueOrDefault(this.getGeoDataset().showOutline,this.getGeoOptions().showOutline);}clipMap(){return valueOrDefault(this.getGeoDataset().clipMap,this.getGeoOptions().clipMap);}getGraticule(){return valueOrDefault(this.getGeoDataset().showGraticule,this.getGeoOptions().showGraticule);}update(mode){super.update(mode);const meta=this.getMeta();const scale=this.getProjectionScale();const dirtyCache=scale.updateBounds();if(this.showOutline()){const elem=meta.dataset;if(dirtyCache){delete elem.cache;}elem.projectionScale=scale;elem.pixelRatio=this.chart.currentDevicePixelRatio;if(mode!=='resize'){const options=patchDatasetElementOptions(this.resolveDatasetElementOptions(mode));const properties={feature:this.resolveOutline(),options};this.updateElement(elem,undefined,properties,mode);if(this.getGraticule()){meta.graticule=options;}}}else if(this.getGraticule()&&mode!=='resize'){meta.graticule=patchDatasetElementOptions(this.resolveDatasetElementOptions(mode));}this.updateElements(meta.data,0,meta.data.length,mode);if(dirtyCache){meta.data.forEach(elem=>delete elem.cache);}}resolveOutline(){const ds=this.getGeoDataset();const outline=ds.outline||{type:'Sphere'};if(Array.isArray(outline)){return{type:'FeatureCollection',features:outline};}return outline;}showGraticule(){const g=this.getGraticule();const options=this.getMeta().graticule;if(!g||!options){return;}const{ctx}=this.chart;const scale=this.getProjectionScale();const path=scale.geoPath.context(ctx);ctx.save();ctx.beginPath();if(typeof g==='boolean'){if(g){path(graticule10());}}else{const geo=graticule();if(g.stepMajor){geo.stepMajor(g.stepMajor);}if(g.stepMinor){geo.stepMinor(g.stepMinor);}path(geo());}ctx.strokeStyle=options.graticuleBorderColor;ctx.lineWidth=options.graticuleBorderWidth;ctx.stroke();ctx.restore();}draw(){const{chart}=this;const clipMap=this.clipMap();let enabled=false;if(clipMap===true||clipMap==='outline'||clipMap==='outline+graticule'){enabled=true;clipArea(chart.ctx,chart.chartArea);}if(this.showOutline()&&this.getMeta().dataset){this.getMeta().dataset.draw.call(this.getMeta().dataset,chart.ctx,chart.chartArea);}if(clipMap===true||clipMap==='graticule'||clipMap==='outline+graticule'){if(!enabled){clipArea(chart.ctx,chart.chartArea);}}else if(enabled){enabled=false;unclipArea(chart.ctx);}this.showGraticule();if(clipMap===true||clipMap==='items'){if(!enabled){clipArea(chart.ctx,chart.chartArea);}}else if(enabled){enabled=false;unclipArea(chart.ctx);}this.getMeta().data.forEach(elem=>elem.draw.call(elem,chart.ctx,chart.chartArea));if(enabled){enabled=false;unclipArea(chart.ctx);}}}function patchController(type,config,controller,elements=[],scales=[]){registry.addControllers(controller);if(Array.isArray(elements)){registry.addElements(...elements);}else{registry.addElements(elements);}if(Array.isArray(scales)){registry.addScales(...scales);}else{registry.addScales(scales);}const c=config;c.type=type;return c;}class ChoroplethController extends GeoController{initialize(){super.initialize();this.enableOptionSharing=true;}linkScales(){super.linkScales();const dataset=this.getGeoDataset();const meta=this.getMeta();meta.vAxisID='color';meta.rAxisID='color';dataset.vAxisID='color';dataset.rAxisID='color';meta.rScale=this.getScaleForId('color');meta.vScale=meta.rScale;meta.iScale=meta.xScale;meta.iAxisID=meta.xAxisID;dataset.iAxisID=meta.xAxisID;}_getOtherScale(scale){return scale;}parse(start,count){const rScale=this.getMeta().rScale;const{data}=this.getDataset();const meta=this._cachedMeta;for(let i=start;i<start+count;i+=1){meta._parsed[i]={[rScale.axis]:rScale.parse(data[i],i)};}}updateElements(elems,start,count,mode){const firstOpts=this.resolveDataElementOptions(start,mode);const sharedOptions=this.getSharedOptions(firstOpts);const includeOptions=this.includeOptions(mode,sharedOptions);const scale=this.getProjectionScale();this.updateSharedOptions(sharedOptions,mode,firstOpts);for(let i=start;i<start+count;i+=1){const elem=elems[i];elem.projectionScale=scale;elem.feature=this._data[i].feature;elem.center=this._data[i].center;elem.pixelRatio=this.chart.currentDevicePixelRatio;const center=elem.getCenterPoint();const properties={x:center.x,y:center.y};if(includeOptions){properties.options=sharedOptions||this.resolveDataElementOptions(i,mode);}this.updateElement(elem,i,properties,mode);}}indexToColor(index){const rScale=this.getMeta().rScale;return rScale.getColorForValue(this.getParsed(index)[rScale.axis]);}}ChoroplethController.id='choropleth';ChoroplethController.defaults=merge$1({},[geoDefaults,{datasetElementType:GeoFeature.id,dataElementType:GeoFeature.id}]);ChoroplethController.overrides=merge$1({},[geoOverrides,{plugins:{tooltip:{callbacks:{title(){return'';},label(item){var _a,_b,_c,_d;if(item.formattedValue==null){return(_b=(_a=item.chart.data)===null||_a===void 0?void 0:_a.labels)===null||_b===void 0?void 0:_b[item.dataIndex];}return`${(_d=(_c=item.chart.data)===null||_c===void 0?void 0:_c.labels)===null||_d===void 0?void 0:_d[item.dataIndex]}: ${item.formattedValue}`;}}},colors:{enabled:false}},scales:{color:{type:ColorScale.id,axis:'x'}},elements:{geoFeature:{backgroundColor(context){if(context.dataIndex==null){return null;}const controller=context.chart.getDatasetMeta(context.datasetIndex).controller;return controller.indexToColor(context.dataIndex);}}}}]);class ChoroplethChart extends Chart{constructor(item,config){super(item,patchController('choropleth',config,ChoroplethController,GeoFeature,[ColorScale,ProjectionScale]));}}ChoroplethChart.id=ChoroplethController.id;class BubbleMapController extends GeoController{initialize(){super.initialize();this.enableOptionSharing=true;}linkScales(){super.linkScales();const dataset=this.getGeoDataset();const meta=this.getMeta();meta.vAxisID='size';meta.rAxisID='size';dataset.vAxisID='size';dataset.rAxisID='size';meta.rScale=this.getScaleForId('size');meta.vScale=meta.rScale;meta.iScale=meta.xScale;meta.iAxisID=meta.xAxisID;dataset.iAxisID=meta.xAxisID;}_getOtherScale(scale){return scale;}parse(start,count){const rScale=this.getMeta().rScale;const data=this.getDataset().data;const meta=this._cachedMeta;for(let i=start;i<start+count;i+=1){const d=data[i];meta._parsed[i]={x:d.longitude==null?d.x:d.longitude,y:d.latitude==null?d.y:d.latitude,[rScale.axis]:rScale.parse(d,i)};}}updateElements(elems,start,count,mode){const reset=mode==='reset';const firstOpts=this.resolveDataElementOptions(start,mode);const sharedOptions=this.getSharedOptions(firstOpts);const includeOptions=this.includeOptions(mode,sharedOptions);const scale=this.getProjectionScale();this.getMeta().rScale._model=firstOpts;this.updateSharedOptions(sharedOptions,mode,firstOpts);for(let i=start;i<start+count;i+=1){const elem=elems[i];const parsed=this.getParsed(i);const projection=scale.projection([parsed.x,parsed.y]);const properties={x:projection?projection[0]:0,y:projection?projection[1]:0,skip:Number.isNaN(parsed.x)||Number.isNaN(parsed.y)};if(includeOptions){properties.options=sharedOptions||this.resolveDataElementOptions(i,mode);if(reset){properties.options.radius=0;}}this.updateElement(elem,i,properties,mode);}}indexToRadius(index){const rScale=this.getMeta().rScale;return rScale.getSizeForValue(this.getParsed(index)[rScale.axis]);}}BubbleMapController.id='bubbleMap';BubbleMapController.defaults=merge$1({},[geoDefaults,{dataElementType:PointElement.id,datasetElementType:GeoFeature.id,showOutline:true,clipMap:'outline+graticule'}]);BubbleMapController.overrides=merge$1({},[geoOverrides,{plugins:{tooltip:{callbacks:{title(){return'';},label(item){var _a,_b,_c,_d;if(item.formattedValue==null){return(_b=(_a=item.chart.data)===null||_a===void 0?void 0:_a.labels)===null||_b===void 0?void 0:_b[item.dataIndex];}return`${(_d=(_c=item.chart.data)===null||_c===void 0?void 0:_c.labels)===null||_d===void 0?void 0:_d[item.dataIndex]}: ${item.formattedValue}`;}}}},scales:{size:{axis:'x',type:SizeScale.id}},elements:{point:{radius(context){if(context.dataIndex==null){return null;}const controller=context.chart.getDatasetMeta(context.datasetIndex).controller;return controller.indexToRadius(context.dataIndex);},hoverRadius(context){if(context.dataIndex==null){return null;}const controller=context.chart.getDatasetMeta(context.datasetIndex).controller;return controller.indexToRadius(context.dataIndex)+1;}}}}]);class BubbleMapChart extends Chart{constructor(item,config){super(item,patchController('bubbleMap',config,BubbleMapController,GeoFeature,[SizeScale,ProjectionScale]));}}BubbleMapChart.id=BubbleMapController.id;var EmptyChartPlugin={id:'emptyChart',afterDraw:function(chart){var datasets=chart.data.datasets;var hasData=false;for(var _i=0,datasets_1=datasets;_i<datasets_1.length;_i++){var dataset=datasets_1[_i];if(dataset.data.length>0&&dataset.data.some(function(item){return item!==0;})||typeof dataset.data==='object'&&Object.keys(dataset.data).length&&Object.values(dataset.data).some(function(item){return item!==0;})){hasData=true;break;}}var ctx=chart.ctx;if(!hasData&&ctx){var line1=Lang.get('report.no_data_found'),line2=Lang.get('report.adjust_time_range'),line1X=chart.width/2-ctx.measureText(line1).width/2,line1Y=chart.height/2,line2X=chart.width/2-ctx.measureText(line2).width/2,line2Y=chart.height/2+14;if(typeof chart.options.plugins==='undefined'){chart.options.plugins={tooltip:{enabled:false}};}if(typeof chart.options.plugins.tooltip==='undefined'){chart.options.plugins.tooltip={enabled:false};}chart.options.plugins.tooltip.enabled=false;chart.update();ctx.save();ctx.fillStyle=cssvar('--color-text-primary');ctx.fillText(line1,line1X,line1Y);ctx.fillText(line2,line2X,line2Y);ctx.restore();}}};// register controller in chart.js and ensure the defaults are set
Chart.register(ChoroplethController,GeoFeature,ColorScale,ProjectionScale);Chart.register(EmptyChartPlugin);// https://www.chartjs.org/docs/latest/general/colors.html#default-colors
Chart.defaults.color=cssvar('--color-text-primary');var ChartCard=/** @class */function(_super){__extends(ChartCard,_super);function ChartCard(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.chart=null;return _this;}ChartCard.prototype.refresh=function(){var instance=this;return this.fetchData(function(response){instance.setUnits(response.data.units);if(instance.chart===null){instance.chart=new Chart(instance.$elm.find('canvas')[0],{type:response.data.chart.type,data:response.data.chart.data,options:instance.options(response.data.chart.options)});}else{instance.chart.data=response.data.chart.data;instance.chart.options=instance.options(response.data.chart.options);instance.chart.update();}// Bit of a hack to force the chart to the correct size.
var _a=instance.$elm.find('.chart-card')[0].getBoundingClientRect(),width=_a.width,height=_a.height;instance.chart.resize(width,height);});};ChartCard.prototype.registerHandlers=function(){var _this=this;_super.prototype.registerHandlers.call(this);var instance=this;this.$elm.on('timeframe:change',function(){return _this.filters.unset('units');});this.$elm.on('change','.timeframe-units',function(){instance.filters.set('units',$(this).val());instance.refresh();});};ChartCard.prototype.print=function(){_super.prototype.setOptions.call(this,{animation:false});_super.prototype.print.call(this);};ChartCard.prototype.clickHandler=function(evt,elements,chart){var _a;if(!_super.prototype.implementsUnderlyingData.call(this)||evt.native===null){return;}var points=chart.getElementsAtEventForMode(evt.native,'nearest',{intersect:true},true);if(points.length===0){return;}var firstPoint=points[0];var label=((_a=chart.data.labels)===null||_a===void 0?void 0:_a[firstPoint.index])||chart.data.datasets[firstPoint.datasetIndex].label;var value=obj_get(chart.data.datasets[firstPoint.datasetIndex].data[firstPoint.index],_super.prototype.underlyingDataValueKey.call(this));var route=url(_super.prototype.underlyingDataRoute.call(this),$.extend({label:label,value:value},this.filters.all()));var exportRoute=url(_super.prototype.underlyingDataExportRoute.call(this),$.extend({label:label,value:value},this.filters.all()));UnderlyingData.show(route,exportRoute);};ChartCard.prototype.hoverHandler=function(evt,elements,chart){if(!_super.prototype.implementsUnderlyingData.call(this)||evt.native===null){return;}var points=chart.getElementsAtEventForMode(evt.native,'index',{intersect:true},false);evt.native.target.style.cursor=points.length?'pointer':'default';};ChartCard.prototype.fetchData=function(callback){var _this=this;this.toggleLoading(true);return $.get(this.$elm.data('route'),this.filters.all()).done(callback).always(function(){return _this.toggleLoading(false);});};ChartCard.prototype.options=function(opts){var defaults={scales:{x:{display:'auto',ticks:{callback:function(val){var label=this.getLabelForValue(val);return wordwrap(label.length>30?"".concat(label.substring(0,30),"..."):label,15,true);}}},y:{display:'auto',ticks:{callback:function(val){var label=this.getLabelForValue(val);return wordwrap(label.length>30?"".concat(label.substring(0,30),"..."):label,15,true);}}}},responsive:true,plugins:{legend:{position:'top'},tooltip:{position:'nearest'}},interaction:{intersect:false,mode:'nearest'},onClick:this.clickHandler.bind(this),onHover:this.hoverHandler.bind(this)};return $.extend(true,{},defaults,opts,this.opts);};ChartCard.prototype.toggleLoading=function(show){this.$elm.find('.fa-spinner').toggle(show);this.$elm.find('canvas').toggle(!show);};ChartCard.prototype.setUnits=function(units){var selectedValue=this.$elm.find('.timeframe-units option:selected').attr('value');this.$elm.find('.timeframe-units option').remove();for(var i=0;i<units.length;i++){var data={value:units[i].value,text:units[i].label};if(selectedValue===units[i].value){data['selected']='selected';}this.$elm.find('.timeframe-units').append($('<option>',data));}if(units.length){this.$elm.find('.interacts-with-timeframe').addClass('md:sp-inline-block');}};return ChartCard;}(Card);var HtmlCard=/** @class */function(_super){__extends(HtmlCard,_super);function HtmlCard(){return _super!==null&&_super.apply(this,arguments)||this;}HtmlCard.prototype.refresh=function(){var _this=this;this.toggleLoading(true);return $.get(this.$elm.data('route'),this.filters.all()).done(function(response){return _this.$elm.find('.html-card').html(response.data);}).always(function(){return _this.toggleLoading(false);});};HtmlCard.prototype.toggleLoading=function(show){this.$elm.find('.loading').toggle(show);this.$elm.find('.html-card').toggle(!show);};return HtmlCard;}(Card);/**
   * Maps to component() in PHP Card class.
   */var ComponentMap={'number':NumberCard,'table':TableCard,'chart':ChartCard,'html':HtmlCard};function initTimeframe(manager){var t=new Timeframe();t.onSelect(function(){manager.trigger('timeframe:change');manager.refreshAll();});return t;}var Manager=/** @class */function(){function Manager(){this.cards={};this.timeframe=initTimeframe(this);this.filters=new Filters(this.timeframe);}Manager.prototype.initFiltersFromUrl=function(){var params=new URLSearchParams(window.location.search);var start=params.get('startTimestamp');if(start!==null){this.timeframe.setStartTimestamp(parseInt(start));}var end=params.get('endTimestamp');if(end!==null){this.timeframe.setEndTimestamp(parseInt(end));}var filters={};params.forEach(function(value,key){if(key.startsWith('conditions[')){filters[key]=value;}});this.filters.setData(filters);return this;};Manager.prototype.load=function(){var instance=this;$('.grid-stack-item').each(function(){var id=$(this).data('id');var component=$(this).data('component');instance.cards[id]=new ComponentMap[component](instance.filters,$(this));instance.cards[id].registerHandlers();});return instance;};Manager.prototype.first=function(){for(var id in this.cards){if(this.cards.hasOwnProperty(id)){return this.cards[id];}}throw Error('There are no cards.');};Manager.prototype.get=function(id){if(typeof this.cards[id]==='undefined'){throw Error('Card of id \''+id+'\' is not defined.');}return this.cards[id];};Manager.prototype.trigger=function(event,data){$.each(this.cards,function(id,card){return card.$elm.trigger(event,data);});};Manager.prototype.refreshAll=function(){var $refreshBtn=$('.refresh-all').find('i');var $dashboardActions=$('.sp-dashboard-actions').find('button');$refreshBtn.addClass('fa-spin');$dashboardActions.prop('disabled',true);var promises=[];$.each(this.cards,function(id,card){return promises.push(card.refresh());});$.when.apply($,promises).then(function(){$refreshBtn.removeClass('fa-spin');$dashboardActions.prop('disabled',false);});};return Manager;}();/**
   * utils.ts 11.5.1
   * Copyright (c) 2021-2024 Alain Dumesny - see GridStack root license
   */ /** checks for obsolete method names */ // eslint-disable-next-line
function obsolete(self,f,oldName,newName,rev){const wrapper=(...args)=>{void 0;return f.apply(self,args);};wrapper.prototype=f.prototype;return wrapper;}/**
   * Utility methods
   */class Utils{/** convert a potential selector into actual list of html elements. optional root which defaults to document (for shadow dom) */static getElements(els,root=document){if(typeof els==='string'){const doc='getElementById'in root?root:undefined;// Note: very common for people use to id='1,2,3' which is only legal as HTML5 id, but not CSS selectors
// so if we start with a number, assume it's an id and just return that one item...
// see https://github.com/gridstack/gridstack.js/issues/2234#issuecomment-1523796562
if(doc&&!isNaN(+els[0])){// start with digit
const el=doc.getElementById(els);return el?[el]:[];}let list=root.querySelectorAll(els);if(!list.length&&els[0]!=='.'&&els[0]!=='#'){list=root.querySelectorAll('.'+els);if(!list.length){list=root.querySelectorAll('#'+els);}}return Array.from(list);}return[els];}/** convert a potential selector into actual single element. optional root which defaults to document (for shadow dom) */static getElement(els,root=document){if(typeof els==='string'){const doc='getElementById'in root?root:undefined;if(!els.length)return null;if(doc&&els[0]==='#'){return doc.getElementById(els.substring(1));}if(els[0]==='#'||els[0]==='.'||els[0]==='['){return root.querySelector(els);}// if we start with a digit, assume it's an id (error calling querySelector('#1')) as class are not valid CSS
if(doc&&!isNaN(+els[0])){// start with digit
return doc.getElementById(els);}// finally try string, then id, then class
let el=root.querySelector(els);if(doc&&!el){el=doc.getElementById(els);}if(!el){el=root.querySelector('.'+els);}return el;}return els;}/** true if widget (or grid) makes this item lazyLoad */static lazyLoad(n){return n.lazyLoad||n.grid?.opts?.lazyLoad&&n.lazyLoad!==false;}/** create a div with the given classes */static createDiv(classes,parent){const el=document.createElement('div');classes.forEach(c=>{if(c)el.classList.add(c);});parent?.appendChild(el);return el;}/** true if we should resize to content. strict=true when only 'sizeToContent:true' and not a number which lets user adjust */static shouldSizeToContent(n,strict=false){return n?.grid&&(strict?n.sizeToContent===true||n.grid.opts.sizeToContent===true&&n.sizeToContent===undefined:!!n.sizeToContent||n.grid.opts.sizeToContent&&n.sizeToContent!==false);}/** returns true if a and b overlap */static isIntercepted(a,b){return!(a.y>=b.y+b.h||a.y+a.h<=b.y||a.x+a.w<=b.x||a.x>=b.x+b.w);}/** returns true if a and b touch edges or corners */static isTouching(a,b){return Utils.isIntercepted(a,{x:b.x-0.5,y:b.y-0.5,w:b.w+1,h:b.h+1});}/** returns the area a and b overlap */static areaIntercept(a,b){const x0=a.x>b.x?a.x:b.x;const x1=a.x+a.w<b.x+b.w?a.x+a.w:b.x+b.w;if(x1<=x0)return 0;// no overlap
const y0=a.y>b.y?a.y:b.y;const y1=a.y+a.h<b.y+b.h?a.y+a.h:b.y+b.h;if(y1<=y0)return 0;// no overlap
return(x1-x0)*(y1-y0);}/** returns the area */static area(a){return a.w*a.h;}/**
       * Sorts array of nodes
       * @param nodes array to sort
       * @param dir 1 for ascending, -1 for descending (optional)
       **/static sort(nodes,dir=1){const und=10000;return nodes.sort((a,b)=>{const diffY=dir*((a.y??und)-(b.y??und));if(diffY===0)return dir*((a.x??und)-(b.x??und));return diffY;});}/** find an item by id */static find(nodes,id){return id?nodes.find(n=>n.id===id):undefined;}/**
       * creates a style sheet with style id under given parent
       * @param id will set the 'gs-style-id' attribute to that id
       * @param parent to insert the stylesheet as first child,
       * if none supplied it will be appended to the document head instead.
       */static createStylesheet(id,parent,options){const style=document.createElement('style');const nonce=options?.nonce;if(nonce)style.nonce=nonce;style.setAttribute('type','text/css');style.setAttribute('gs-style-id',id);// eslint-disable-next-line @typescript-eslint/no-explicit-any
if(style.styleSheet){// TODO: only CSSImportRule have that and different beast ??
// eslint-disable-next-line @typescript-eslint/no-explicit-any
style.styleSheet.cssText='';}else{style.appendChild(document.createTextNode(''));// WebKit hack
}if(!parent){// default to head
parent=document.getElementsByTagName('head')[0];parent.appendChild(style);}else{parent.insertBefore(style,parent.firstChild);}return style;}/** removed the given stylesheet id */static removeStylesheet(id,parent){const target=parent||document;const el=target.querySelector('STYLE[gs-style-id='+id+']');if(el&&el.parentNode)el.remove();}/** inserts a CSS rule */static addCSSRule(sheet,selector,rules){// Rather than using sheet.insertRule, use text since it supports
// gridstack node reparenting around in the DOM
sheet.textContent+=`${selector} { ${rules} } `;}// eslint-disable-next-line @typescript-eslint/no-explicit-any
static toBool(v){if(typeof v==='boolean'){return v;}if(typeof v==='string'){v=v.toLowerCase();return!(v===''||v==='no'||v==='false'||v==='0');}return Boolean(v);}static toNumber(value){return value===null||value.length===0?undefined:Number(value);}static parseHeight(val){let h;let unit='px';if(typeof val==='string'){if(val==='auto'||val==='')h=0;else{const match=val.match(/^(-[0-9]+\.[0-9]+|[0-9]*\.[0-9]+|-[0-9]+|[0-9]+)(px|em|rem|vh|vw|%|cm|mm)?$/);if(!match){throw new Error(`Invalid height val = ${val}`);}unit=match[2]||'px';h=parseFloat(match[1]);}}else{h=val;}return{h,unit};}/** copies unset fields in target to use the given default sources values */ // eslint-disable-next-line
static defaults(target,...sources){sources.forEach(source=>{for(const key in source){if(!source.hasOwnProperty(key))return;if(target[key]===null||target[key]===undefined){target[key]=source[key];}else if(typeof source[key]==='object'&&typeof target[key]==='object'){// property is an object, recursively add it's field over... #1373
this.defaults(target[key],source[key]);}}});return target;}/** given 2 objects return true if they have the same values. Checks for Object {} having same fields and values (just 1 level down) */static same(a,b){if(typeof a!=='object')return a==b;if(typeof a!==typeof b)return false;// else we have object, check just 1 level deep for being same things...
if(Object.keys(a).length!==Object.keys(b).length)return false;for(const key in a){if(a[key]!==b[key])return false;}return true;}/** copies over b size & position (GridStackPosition), and optionally min/max as well */static copyPos(a,b,doMinMax=false){if(b.x!==undefined)a.x=b.x;if(b.y!==undefined)a.y=b.y;if(b.w!==undefined)a.w=b.w;if(b.h!==undefined)a.h=b.h;if(doMinMax){if(b.minW)a.minW=b.minW;if(b.minH)a.minH=b.minH;if(b.maxW)a.maxW=b.maxW;if(b.maxH)a.maxH=b.maxH;}return a;}/** true if a and b has same size & position */static samePos(a,b){return a&&b&&a.x===b.x&&a.y===b.y&&(a.w||1)===(b.w||1)&&(a.h||1)===(b.h||1);}/** given a node, makes sure it's min/max are valid */static sanitizeMinMax(node){// remove 0, undefine, null
if(!node.minW){delete node.minW;}if(!node.minH){delete node.minH;}if(!node.maxW){delete node.maxW;}if(!node.maxH){delete node.maxH;}}/** removes field from the first object if same as the second objects (like diffing) and internal '_' for saving */static removeInternalAndSame(a,b){if(typeof a!=='object'||typeof b!=='object')return;for(let key in a){const aVal=a[key];const bVal=b[key];if(key[0]==='_'||aVal===bVal){delete a[key];}else if(aVal&&typeof aVal==='object'&&bVal!==undefined){Utils.removeInternalAndSame(aVal,bVal);if(!Object.keys(aVal).length){delete a[key];}}}}/** removes internal fields '_' and default values for saving */static removeInternalForSave(n,removeEl=true){for(let key in n){if(key[0]==='_'||n[key]===null||n[key]===undefined)delete n[key];}delete n.grid;if(removeEl)delete n.el;// delete default values (will be re-created on read)
if(!n.autoPosition)delete n.autoPosition;if(!n.noResize)delete n.noResize;if(!n.noMove)delete n.noMove;if(!n.locked)delete n.locked;if(n.w===1||n.w===n.minW)delete n.w;if(n.h===1||n.h===n.minH)delete n.h;}/** return the closest parent (or itself) matching the given class */ // static closestUpByClass(el: HTMLElement, name: string): HTMLElement {
//   while (el) {
//     if (el.classList.contains(name)) return el;
//     el = el.parentElement
//   }
//   return null;
// }
/** delay calling the given function for given delay, preventing new calls from happening while waiting */static throttle(func,delay){let isWaiting=false;return(...args)=>{if(!isWaiting){isWaiting=true;setTimeout(()=>{func(...args);isWaiting=false;},delay);}};}static removePositioningStyles(el){const style=el.style;if(style.position){style.removeProperty('position');}if(style.left){style.removeProperty('left');}if(style.top){style.removeProperty('top');}if(style.width){style.removeProperty('width');}if(style.height){style.removeProperty('height');}}/** @internal returns the passed element if scrollable, else the closest parent that will, up to the entire document scrolling element */static getScrollElement(el){if(!el)return document.scrollingElement||document.documentElement;// IE support
const style=getComputedStyle(el);const overflowRegex=/(auto|scroll)/;if(overflowRegex.test(style.overflow+style.overflowY)){return el;}else{return this.getScrollElement(el.parentElement);}}/** @internal */static updateScrollPosition(el,position,distance){// is widget in view?
const rect=el.getBoundingClientRect();const innerHeightOrClientHeight=window.innerHeight||document.documentElement.clientHeight;if(rect.top<0||rect.bottom>innerHeightOrClientHeight){// set scrollTop of first parent that scrolls
// if parent is larger than el, set as low as possible
// to get entire widget on screen
const offsetDiffDown=rect.bottom-innerHeightOrClientHeight;const offsetDiffUp=rect.top;const scrollEl=this.getScrollElement(el);if(scrollEl!==null){const prevScroll=scrollEl.scrollTop;if(rect.top<0&&distance<0){// moving up
if(el.offsetHeight>innerHeightOrClientHeight){scrollEl.scrollTop+=distance;}else{scrollEl.scrollTop+=Math.abs(offsetDiffUp)>Math.abs(distance)?distance:offsetDiffUp;}}else if(distance>0){// moving down
if(el.offsetHeight>innerHeightOrClientHeight){scrollEl.scrollTop+=distance;}else{scrollEl.scrollTop+=offsetDiffDown>distance?distance:offsetDiffDown;}}// move widget y by amount scrolled
position.top+=scrollEl.scrollTop-prevScroll;}}}/**
       * @internal Function used to scroll the page.
       *
       * @param event `MouseEvent` that triggers the resize
       * @param el `HTMLElement` that's being resized
       * @param distance Distance from the V edges to start scrolling
       */static updateScrollResize(event,el,distance){const scrollEl=this.getScrollElement(el);const height=scrollEl.clientHeight;// #1727 event.clientY is relative to viewport, so must compare this against position of scrollEl getBoundingClientRect().top
// #1745 Special situation if scrollEl is document 'html': here browser spec states that
// clientHeight is height of viewport, but getBoundingClientRect() is rectangle of html element;
// this discrepancy arises because in reality scrollbar is attached to viewport, not html element itself.
const offsetTop=scrollEl===this.getScrollElement()?0:scrollEl.getBoundingClientRect().top;const pointerPosY=event.clientY-offsetTop;const top=pointerPosY<distance;const bottom=pointerPosY>height-distance;if(top){// This also can be done with a timeout to keep scrolling while the mouse is
// in the scrolling zone. (will have smoother behavior)
scrollEl.scrollBy({behavior:'smooth',top:pointerPosY-distance});}else if(bottom){scrollEl.scrollBy({behavior:'smooth',top:distance-(height-pointerPosY)});}}/** single level clone, returning a new object with same top fields. This will share sub objects and arrays */static clone(obj){if(obj===null||obj===undefined||typeof obj!=='object'){return obj;}// return Object.assign({}, obj);
if(obj instanceof Array){// eslint-disable-next-line @typescript-eslint/no-explicit-any
return[...obj];}return{...obj};}/**
       * Recursive clone version that returns a full copy, checking for nested objects and arrays ONLY.
       * Note: this will use as-is any key starting with double __ (and not copy inside) some lib have circular dependencies.
       */static cloneDeep(obj){// list of fields we will skip during cloneDeep (nested objects, other internal)
const skipFields=['parentGrid','el','grid','subGrid','engine'];// return JSON.parse(JSON.stringify(obj)); // doesn't work with date format ?
const ret=Utils.clone(obj);for(const key in ret){// NOTE: we don't support function/circular dependencies so skip those properties for now...
if(ret.hasOwnProperty(key)&&typeof ret[key]==='object'&&key.substring(0,2)!=='__'&&!skipFields.find(k=>k===key)){ret[key]=Utils.cloneDeep(obj[key]);}}return ret;}/** deep clone the given HTML node, removing teh unique id field */static cloneNode(el){const node=el.cloneNode(true);node.removeAttribute('id');return node;}static appendTo(el,parent){let parentNode;if(typeof parent==='string'){parentNode=Utils.getElement(parent);}else{parentNode=parent;}if(parentNode){parentNode.appendChild(el);}}// public static setPositionRelative(el: HTMLElement): void {
//   if (!(/^(?:r|a|f)/).test(getComputedStyle(el).position)) {
//     el.style.position = "relative";
//   }
// }
static addElStyles(el,styles){if(styles instanceof Object){for(const s in styles){if(styles.hasOwnProperty(s)){if(Array.isArray(styles[s])){// support fallback value
styles[s].forEach(val=>{el.style[s]=val;});}else{el.style[s]=styles[s];}}}}}static initEvent(e,info){const evt={type:info.type};const obj={button:0,which:0,buttons:1,bubbles:true,cancelable:true,target:info.target?info.target:e.target};['altKey','ctrlKey','metaKey','shiftKey'].forEach(p=>evt[p]=e[p]);// keys
['pageX','pageY','clientX','clientY','screenX','screenY'].forEach(p=>evt[p]=e[p]);// point info
return{...evt,...obj};}/** copies the MouseEvent (or convert Touch) properties and sends it as another event to the given target */static simulateMouseEvent(e,simulatedType,target){const me=e;const simulatedEvent=new MouseEvent(simulatedType,{bubbles:true,composed:true,cancelable:true,view:window,detail:1,screenX:e.screenX,screenY:e.screenY,clientX:e.clientX,clientY:e.clientY,ctrlKey:me.ctrlKey??false,altKey:me.altKey??false,shiftKey:me.shiftKey??false,metaKey:me.metaKey??false,button:0,relatedTarget:e.target});(target||e.target).dispatchEvent(simulatedEvent);}/**
       * defines an element that is used to get the offset and scale from grid transforms
       * returns the scale and offsets from said element
      */static getValuesFromTransformedElement(parent){const transformReference=document.createElement('div');Utils.addElStyles(transformReference,{opacity:'0',position:'fixed',top:0+'px',left:0+'px',width:'1px',height:'1px',zIndex:'-999999'});parent.appendChild(transformReference);const transformValues=transformReference.getBoundingClientRect();parent.removeChild(transformReference);transformReference.remove();return{xScale:1/transformValues.width,yScale:1/transformValues.height,xOffset:transformValues.left,yOffset:transformValues.top};}/** swap the given object 2 field values */static swap(o,a,b){if(!o)return;const tmp=o[a];o[a]=o[b];o[b]=tmp;}/** returns true if event is inside the given element rectangle */ // Note: Safari Mac has null event.relatedTarget which causes #1684 so check if DragEvent is inside the coordinates instead
//    this.el.contains(event.relatedTarget as HTMLElement)
// public static inside(e: MouseEvent, el: HTMLElement): boolean {
//   // srcElement, toElement, target: all set to placeholder when leaving simple grid, so we can't use that (Chrome)
//   const target: HTMLElement = e.relatedTarget || (e as any).fromElement;
//   if (!target) {
//     const { bottom, left, right, top } = el.getBoundingClientRect();
//     return (e.x < right && e.x > left && e.y < bottom && e.y > top);
//   }
//   return el.contains(target);
// }
/** true if the item can be rotated (checking for prop, not space available) */static canBeRotated(n){return!(!n||n.w===n.h||n.locked||n.noResize||n.grid?.opts.disableResize||n.minW&&n.minW===n.maxW||n.minH&&n.minH===n.maxH);}}/**
   * gridstack-engine.ts 11.5.1
   * Copyright (c) 2021-2024  Alain Dumesny - see GridStack root license
   */ /**
   * Defines the GridStack engine that does most no DOM grid manipulation.
   * See GridStack methods and vars for descriptions.
   *
   * NOTE: values should not be modified directly - call the main GridStack API instead
   */class GridStackEngine{constructor(opts={}){this.addedNodes=[];this.removedNodes=[];this.defaultColumn=12;this.column=opts.column||this.defaultColumn;if(this.column>this.defaultColumn)this.defaultColumn=this.column;this.maxRow=opts.maxRow;this._float=opts.float;this.nodes=opts.nodes||[];this.onChange=opts.onChange;}batchUpdate(flag=true,doPack=true){if(!!this.batchMode===flag)return this;this.batchMode=flag;if(flag){this._prevFloat=this._float;this._float=true;// let things go anywhere for now... will restore and possibly reposition later
this.cleanNodes();this.saveInitial();// since begin update (which is called multiple times) won't do this
}else{this._float=this._prevFloat;delete this._prevFloat;if(doPack)this._packNodes();this._notify();}return this;}// use entire row for hitting area (will use bottom reverse sorted first) if we not actively moving DOWN and didn't already skip
_useEntireRowArea(node,nn){return(!this.float||this.batchMode&&!this._prevFloat)&&!this._hasLocked&&(!node._moving||node._skipDown||nn.y<=node.y);}/** @internal fix collision on given 'node', going to given new location 'nn', with optional 'collide' node already found.
       * return true if we moved. */_fixCollisions(node,nn=node,collide,opt={}){this.sortNodes(-1);// from last to first, so recursive collision move items in the right order
collide=collide||this.collide(node,nn);// REAL area collide for swap and skip if none...
if(!collide)return false;// swap check: if we're actively moving in gravity mode, see if we collide with an object the same size
if(node._moving&&!opt.nested&&!this.float){if(this.swap(node,collide))return true;}// during while() collisions MAKE SURE to check entire row so larger items don't leap frog small ones (push them all down starting last in grid)
let area=nn;if(!this._loading&&this._useEntireRowArea(node,nn)){area={x:0,w:this.column,y:nn.y,h:nn.h};collide=this.collide(node,area,opt.skip);// force new hit
}let didMove=false;const newOpt={nested:true,pack:false};let counter=0;while(collide=collide||this.collide(node,area,opt.skip)){// could collide with more than 1 item... so repeat for each
if(counter++>this.nodes.length*2){throw new Error("Infinite collide check");}let moved;// if colliding with a locked item OR loading (move after) OR moving down with top gravity (and collide could move up) -> skip past the collide,
// but remember that skip down so we only do this once (and push others otherwise).
if(collide.locked||this._loading||node._moving&&!node._skipDown&&nn.y>node.y&&!this.float&&(// can take space we had, or before where we're going
!this.collide(collide,{...collide,y:node.y},node)||!this.collide(collide,{...collide,y:nn.y-collide.h},node))){node._skipDown=node._skipDown||nn.y>node.y;const newNN={...nn,y:collide.y+collide.h,...newOpt};// pretent we moved to where we are now so we can continue any collision checks #2492
moved=this._loading&&Utils.samePos(node,newNN)?true:this.moveNode(node,newNN);if((collide.locked||this._loading)&&moved){Utils.copyPos(nn,node);// moving after lock become our new desired location
}else if(!collide.locked&&moved&&opt.pack){// we moved after and will pack: do it now and keep the original drop location, but past the old collide to see what else we might push way
this._packNodes();nn.y=collide.y+collide.h;Utils.copyPos(node,nn);}didMove=didMove||moved;}else{// move collide down *after* where we will be, ignoring where we are now (don't collide with us)
moved=this.moveNode(collide,{...collide,y:nn.y+nn.h,skip:node,...newOpt});}if(!moved)return didMove;// break inf loop if we couldn't move after all (ex: maxRow, fixed)
collide=undefined;}return didMove;}/** return the nodes that intercept the given node. Optionally a different area can be used, as well as a second node to skip */collide(skip,area=skip,skip2){const skipId=skip._id;const skip2Id=skip2?._id;return this.nodes.find(n=>n._id!==skipId&&n._id!==skip2Id&&Utils.isIntercepted(n,area));}collideAll(skip,area=skip,skip2){const skipId=skip._id;const skip2Id=skip2?._id;return this.nodes.filter(n=>n._id!==skipId&&n._id!==skip2Id&&Utils.isIntercepted(n,area));}/** does a pixel coverage collision based on where we started, returning the node that has the most coverage that is >50% mid line */directionCollideCoverage(node,o,collides){if(!o.rect||!node._rect)return;const r0=node._rect;// where started
const r={...o.rect};// where we are
// update dragged rect to show where it's coming from (above or below, etc...)
if(r.y>r0.y){r.h+=r.y-r0.y;r.y=r0.y;}else{r.h+=r0.y-r.y;}if(r.x>r0.x){r.w+=r.x-r0.x;r.x=r0.x;}else{r.w+=r0.x-r.x;}let collide;let overMax=0.5;// need >50%
for(let n of collides){if(n.locked||!n._rect){break;}const r2=n._rect;// overlapping target
let yOver=Number.MAX_VALUE,xOver=Number.MAX_VALUE;// depending on which side we started from, compute the overlap % of coverage
// (ex: from above/below we only compute the max horizontal line coverage)
if(r0.y<r2.y){// from above
yOver=(r.y+r.h-r2.y)/r2.h;}else if(r0.y+r0.h>r2.y+r2.h){// from below
yOver=(r2.y+r2.h-r.y)/r2.h;}if(r0.x<r2.x){// from the left
xOver=(r.x+r.w-r2.x)/r2.w;}else if(r0.x+r0.w>r2.x+r2.w){// from the right
xOver=(r2.x+r2.w-r.x)/r2.w;}const over=Math.min(xOver,yOver);if(over>overMax){overMax=over;collide=n;}}o.collide=collide;// save it so we don't have to find it again
return collide;}/** does a pixel coverage returning the node that has the most coverage by area */ /*
      protected collideCoverage(r: GridStackPosition, collides: GridStackNode[]): {collide: GridStackNode, over: number} {
        const collide: GridStackNode;
        const overMax = 0;
        collides.forEach(n => {
          if (n.locked || !n._rect) return;
          const over = Utils.areaIntercept(r, n._rect);
          if (over > overMax) {
            overMax = over;
            collide = n;
          }
        });
        return {collide, over: overMax};
      }
      */ /** called to cache the nodes pixel rectangles used for collision detection during drag */cacheRects(w,h,top,right,bottom,left){this.nodes.forEach(n=>n._rect={y:n.y*h+top,x:n.x*w+left,w:n.w*w-left-right,h:n.h*h-top-bottom});return this;}/** called to possibly swap between 2 nodes (same size or column, not locked, touching), returning true if successful */swap(a,b){if(!b||b.locked||!a||a.locked)return false;function _doSwap(){const x=b.x,y=b.y;b.x=a.x;b.y=a.y;// b -> a position
if(a.h!=b.h){a.x=x;a.y=b.y+b.h;// a -> goes after b
}else if(a.w!=b.w){a.x=b.x+b.w;a.y=y;// a -> goes after b
}else{a.x=x;a.y=y;// a -> old b position
}a._dirty=b._dirty=true;return true;}let touching;// remember if we called it (vs undefined)
// same size and same row or column, and touching
if(a.w===b.w&&a.h===b.h&&(a.x===b.x||a.y===b.y)&&(touching=Utils.isTouching(a,b)))return _doSwap();if(touching===false)return;// IFF ran test and fail, bail out
// check for taking same columns (but different height) and touching
if(a.w===b.w&&a.x===b.x&&(touching||(touching=Utils.isTouching(a,b)))){if(b.y<a.y){const t=a;a=b;b=t;}// swap a <-> b vars so a is first
return _doSwap();}if(touching===false)return;// check if taking same row (but different width) and touching
if(a.h===b.h&&a.y===b.y&&(touching||(touching=Utils.isTouching(a,b)))){if(b.x<a.x){const t=a;a=b;b=t;}// swap a <-> b vars so a is first
return _doSwap();}return false;}isAreaEmpty(x,y,w,h){const nn={x:x||0,y:y||0,w:w||1,h:h||1};return!this.collide(nn);}/** re-layout grid items to reclaim any empty space - optionally keeping the sort order exactly the same ('list' mode) vs truly finding an empty spaces */compact(layout='compact',doSort=true){if(this.nodes.length===0)return this;if(doSort)this.sortNodes();const wasBatch=this.batchMode;if(!wasBatch)this.batchUpdate();const wasColumnResize=this._inColumnResize;if(!wasColumnResize)this._inColumnResize=true;// faster addNode()
const copyNodes=this.nodes;this.nodes=[];// pretend we have no nodes to conflict layout to start with...
copyNodes.forEach((n,index,list)=>{let after;if(!n.locked){n.autoPosition=true;if(layout==='list'&&index)after=list[index-1];}this.addNode(n,false,after);// 'false' for add event trigger
});if(!wasColumnResize)delete this._inColumnResize;if(!wasBatch)this.batchUpdate(false);return this;}/** enable/disable floating widgets (default: `false`) See [example](http://gridstackjs.com/demo/float.html) */set float(val){if(this._float===val)return;this._float=val||false;if(!val){this._packNodes()._notify();}}/** float getter method */get float(){return this._float||false;}/** sort the nodes array from first to last, or reverse. Called during collision/placement to force an order */sortNodes(dir=1){this.nodes=Utils.sort(this.nodes,dir);return this;}/** @internal called to top gravity pack the items back OR revert back to original Y positions when floating */_packNodes(){if(this.batchMode){return this;}this.sortNodes();// first to last
if(this.float){// restore original Y pos
this.nodes.forEach(n=>{if(n._updating||n._orig===undefined||n.y===n._orig.y)return;let newY=n.y;while(newY>n._orig.y){--newY;const collide=this.collide(n,{x:n.x,y:newY,w:n.w,h:n.h});if(!collide){n._dirty=true;n.y=newY;}}});}else{// top gravity pack
this.nodes.forEach((n,i)=>{if(n.locked)return;while(n.y>0){const newY=i===0?0:n.y-1;const canBeMoved=i===0||!this.collide(n,{x:n.x,y:newY,w:n.w,h:n.h});if(!canBeMoved)break;// Note: must be dirty (from last position) for GridStack::OnChange CB to update positions
// and move items back. The user 'change' CB should detect changes from the original
// starting position instead.
n._dirty=n.y!==newY;n.y=newY;}});}return this;}/**
       * given a random node, makes sure it's coordinates/values are valid in the current grid
       * @param node to adjust
       * @param resizing if out of bound, resize down or move into the grid to fit ?
       */prepareNode(node,resizing){node._id=node._id??GridStackEngine._idSeq++;// make sure USER supplied id are unique in our list, else assign a new one as it will create issues during load/update/etc...
const id=node.id;if(id){let count=1;// append nice _n rather than some random number
while(this.nodes.find(n=>n.id===node.id&&n!==node)){node.id=id+'_'+count++;}}// if we're missing position, have the grid position us automatically (before we set them to 0,0)
if(node.x===undefined||node.y===undefined||node.x===null||node.y===null){node.autoPosition=true;}// assign defaults for missing required fields
const defaults={x:0,y:0,w:1,h:1};Utils.defaults(node,defaults);if(!node.autoPosition){delete node.autoPosition;}if(!node.noResize){delete node.noResize;}if(!node.noMove){delete node.noMove;}Utils.sanitizeMinMax(node);// check for NaN (in case messed up strings were passed. can't do parseInt() || defaults.x above as 0 is valid #)
if(typeof node.x=='string'){node.x=Number(node.x);}if(typeof node.y=='string'){node.y=Number(node.y);}if(typeof node.w=='string'){node.w=Number(node.w);}if(typeof node.h=='string'){node.h=Number(node.h);}if(isNaN(node.x)){node.x=defaults.x;node.autoPosition=true;}if(isNaN(node.y)){node.y=defaults.y;node.autoPosition=true;}if(isNaN(node.w)){node.w=defaults.w;}if(isNaN(node.h)){node.h=defaults.h;}this.nodeBoundFix(node,resizing);return node;}/** part2 of preparing a node to fit inside our grid - checks for x,y,w from grid dimensions */nodeBoundFix(node,resizing){const before=node._orig||Utils.copyPos({},node);if(node.maxW){node.w=Math.min(node.w||1,node.maxW);}if(node.maxH){node.h=Math.min(node.h||1,node.maxH);}if(node.minW){node.w=Math.max(node.w||1,node.minW);}if(node.minH){node.h=Math.max(node.h||1,node.minH);}// if user loaded a larger than allowed widget for current # of columns,
// remember it's position & width so we can restore back (1 -> 12 column) #1655 #1985
// IFF we're not in the middle of column resizing!
const saveOrig=(node.x||0)+(node.w||1)>this.column;if(saveOrig&&this.column<this.defaultColumn&&!this._inColumnResize&&!this.skipCacheUpdate&&node._id&&this.findCacheLayout(node,this.defaultColumn)===-1){const copy={...node};// need _id + positions
if(copy.autoPosition||copy.x===undefined){delete copy.x;delete copy.y;}else copy.x=Math.min(this.defaultColumn-1,copy.x);copy.w=Math.min(this.defaultColumn,copy.w||1);this.cacheOneLayout(copy,this.defaultColumn);}if(node.w>this.column){node.w=this.column;}else if(node.w<1){node.w=1;}if(this.maxRow&&node.h>this.maxRow){node.h=this.maxRow;}else if(node.h<1){node.h=1;}if(node.x<0){node.x=0;}if(node.y<0){node.y=0;}if(node.x+node.w>this.column){if(resizing){node.w=this.column-node.x;}else{node.x=this.column-node.w;}}if(this.maxRow&&node.y+node.h>this.maxRow){if(resizing){node.h=this.maxRow-node.y;}else{node.y=this.maxRow-node.h;}}if(!Utils.samePos(node,before)){node._dirty=true;}return this;}/** returns a list of modified nodes from their original values */getDirtyNodes(verify){// compare original x,y,w,h instead as _dirty can be a temporary state
if(verify){return this.nodes.filter(n=>n._dirty&&!Utils.samePos(n,n._orig));}return this.nodes.filter(n=>n._dirty);}/** @internal call this to call onChange callback with dirty nodes so DOM can be updated */_notify(removedNodes){if(this.batchMode||!this.onChange)return this;const dirtyNodes=(removedNodes||[]).concat(this.getDirtyNodes());this.onChange(dirtyNodes);return this;}/** @internal remove dirty and last tried info */cleanNodes(){if(this.batchMode)return this;this.nodes.forEach(n=>{delete n._dirty;delete n._lastTried;});return this;}/** @internal called to save initial position/size to track real dirty state.
       * Note: should be called right after we call change event (so next API is can detect changes)
       * as well as right before we start move/resize/enter (so we can restore items to prev values) */saveInitial(){this.nodes.forEach(n=>{n._orig=Utils.copyPos({},n);delete n._dirty;});this._hasLocked=this.nodes.some(n=>n.locked);return this;}/** @internal restore all the nodes back to initial values (called when we leave) */restoreInitial(){this.nodes.forEach(n=>{if(!n._orig||Utils.samePos(n,n._orig))return;Utils.copyPos(n,n._orig);n._dirty=true;});this._notify();return this;}/** find the first available empty spot for the given node width/height, updating the x,y attributes. return true if found.
       * optionally you can pass your own existing node list and column count, otherwise defaults to that engine data.
       * Optionally pass a widget to start search AFTER, meaning the order will remain the same but possibly have empty slots we skipped
       */findEmptyPosition(node,nodeList=this.nodes,column=this.column,after){const start=after?after.y*column+(after.x+after.w):0;let found=false;for(let i=start;!found;++i){const x=i%column;const y=Math.floor(i/column);if(x+node.w>column){continue;}const box={x,y,w:node.w,h:node.h};if(!nodeList.find(n=>Utils.isIntercepted(box,n))){if(node.x!==x||node.y!==y)node._dirty=true;node.x=x;node.y=y;delete node.autoPosition;found=true;}}return found;}/** call to add the given node to our list, fixing collision and re-packing */addNode(node,triggerAddEvent=false,after){const dup=this.nodes.find(n=>n._id===node._id);if(dup)return dup;// prevent inserting twice! return it instead.
// skip prepareNode if we're in middle of column resize (not new) but do check for bounds!
this._inColumnResize?this.nodeBoundFix(node):this.prepareNode(node);delete node._temporaryRemoved;delete node._removeDOM;let skipCollision;if(node.autoPosition&&this.findEmptyPosition(node,this.nodes,this.column,after)){delete node.autoPosition;// found our slot
skipCollision=true;}this.nodes.push(node);if(triggerAddEvent){this.addedNodes.push(node);}if(!skipCollision)this._fixCollisions(node);if(!this.batchMode){this._packNodes()._notify();}return node;}removeNode(node,removeDOM=true,triggerEvent=false){if(!this.nodes.find(n=>n._id===node._id)){// TEST console.log(`Error: GridStackEngine.removeNode() node._id=${node._id} not found!`)
return this;}if(triggerEvent){// we wait until final drop to manually track removed items (rather than during drag)
this.removedNodes.push(node);}if(removeDOM)node._removeDOM=true;// let CB remove actual HTML (used to set _id to null, but then we loose layout info)
// don't use 'faster' .splice(findIndex(),1) in case node isn't in our list, or in multiple times.
this.nodes=this.nodes.filter(n=>n._id!==node._id);if(!node._isAboutToRemove)this._packNodes();// if dragged out, no need to relayout as already done...
this._notify([node]);return this;}removeAll(removeDOM=true,triggerEvent=true){delete this._layouts;if(!this.nodes.length)return this;removeDOM&&this.nodes.forEach(n=>n._removeDOM=true);// let CB remove actual HTML (used to set _id to null, but then we loose layout info)
const removedNodes=this.nodes;this.removedNodes=triggerEvent?removedNodes:[];this.nodes=[];return this._notify(removedNodes);}/** checks if item can be moved (layout constrain) vs moveNode(), returning true if was able to move.
       * In more complicated cases (maxRow) it will attempt at moving the item and fixing
       * others in a clone first, then apply those changes if still within specs. */moveNodeCheck(node,o){// if (node.locked) return false;
if(!this.changedPosConstrain(node,o))return false;o.pack=true;// simpler case: move item directly...
if(!this.maxRow){return this.moveNode(node,o);}// complex case: create a clone with NO maxRow (will check for out of bounds at the end)
let clonedNode;const clone=new GridStackEngine({column:this.column,float:this.float,nodes:this.nodes.map(n=>{if(n._id===node._id){clonedNode={...n};return clonedNode;}return{...n};})});if(!clonedNode)return false;// check if we're covering 50% collision and could move, while still being under maxRow or at least not making it worse
// (case where widget was somehow added past our max #2449)
const canMove=clone.moveNode(clonedNode,o)&&clone.getRow()<=Math.max(this.getRow(),this.maxRow);// else check if we can force a swap (float=true, or different shapes) on non-resize
if(!canMove&&!o.resizing&&o.collide){const collide=o.collide.el.gridstackNode;// find the source node the clone collided with at 50%
if(this.swap(node,collide)){// swaps and mark dirty
this._notify();return true;}}if(!canMove)return false;// if clone was able to move, copy those mods over to us now instead of caller trying to do this all over!
// Note: we can't use the list directly as elements and other parts point to actual node, so copy content
clone.nodes.filter(n=>n._dirty).forEach(c=>{const n=this.nodes.find(a=>a._id===c._id);if(!n)return;Utils.copyPos(n,c);n._dirty=true;});this._notify();return true;}/** return true if can fit in grid height constrain only (always true if no maxRow) */willItFit(node){delete node._willFitPos;if(!this.maxRow)return true;// create a clone with NO maxRow and check if still within size
const clone=new GridStackEngine({column:this.column,float:this.float,nodes:this.nodes.map(n=>{return{...n};})});const n={...node};// clone node so we don't mod any settings on it but have full autoPosition and min/max as well! #1687
this.cleanupNode(n);delete n.el;delete n._id;delete n.content;delete n.grid;clone.addNode(n);if(clone.getRow()<=this.maxRow){node._willFitPos=Utils.copyPos({},n);return true;}return false;}/** true if x,y or w,h are different after clamping to min/max */changedPosConstrain(node,p){// first make sure w,h are set for caller
p.w=p.w||node.w;p.h=p.h||node.h;if(node.x!==p.x||node.y!==p.y)return true;// check constrained w,h
if(node.maxW){p.w=Math.min(p.w,node.maxW);}if(node.maxH){p.h=Math.min(p.h,node.maxH);}if(node.minW){p.w=Math.max(p.w,node.minW);}if(node.minH){p.h=Math.max(p.h,node.minH);}return node.w!==p.w||node.h!==p.h;}/** return true if the passed in node was actually moved (checks for no-op and locked) */moveNode(node,o){if(!node||/*node.locked ||*/!o)return false;let wasUndefinedPack;if(o.pack===undefined&&!this.batchMode){wasUndefinedPack=o.pack=true;}// constrain the passed in values and check if we're still changing our node
if(typeof o.x!=='number'){o.x=node.x;}if(typeof o.y!=='number'){o.y=node.y;}if(typeof o.w!=='number'){o.w=node.w;}if(typeof o.h!=='number'){o.h=node.h;}const resizing=node.w!==o.w||node.h!==o.h;const nn=Utils.copyPos({},node,true);// get min/max out first, then opt positions next
Utils.copyPos(nn,o);this.nodeBoundFix(nn,resizing);Utils.copyPos(o,nn);if(!o.forceCollide&&Utils.samePos(node,o))return false;const prevPos=Utils.copyPos({},node);// check if we will need to fix collision at our new location
const collides=this.collideAll(node,nn,o.skip);let needToMove=true;if(collides.length){const activeDrag=node._moving&&!o.nested;// check to make sure we actually collided over 50% surface area while dragging
let collide=activeDrag?this.directionCollideCoverage(node,o,collides):collides[0];// if we're enabling creation of sub-grids on the fly, see if we're covering 80% of either one, if we didn't already do that
if(activeDrag&&collide&&node.grid?.opts?.subGridDynamic&&!node.grid._isTemp){const over=Utils.areaIntercept(o.rect,collide._rect);const a1=Utils.area(o.rect);const a2=Utils.area(collide._rect);const perc=over/(a1<a2?a1:a2);if(perc>.8){collide.grid.makeSubGrid(collide.el,undefined,node);collide=undefined;}}if(collide){needToMove=!this._fixCollisions(node,nn,collide,o);// check if already moved...
}else{needToMove=false;// we didn't cover >50% for a move, skip...
if(wasUndefinedPack)delete o.pack;}}// now move (to the original ask vs the collision version which might differ) and repack things
if(needToMove&&!Utils.samePos(node,nn)){node._dirty=true;Utils.copyPos(node,nn);}if(o.pack){this._packNodes()._notify();}return!Utils.samePos(node,prevPos);// pack might have moved things back
}getRow(){return this.nodes.reduce((row,n)=>Math.max(row,n.y+n.h),0);}beginUpdate(node){if(!node._updating){node._updating=true;delete node._skipDown;if(!this.batchMode)this.saveInitial();}return this;}endUpdate(){const n=this.nodes.find(n=>n._updating);if(n){delete n._updating;delete n._skipDown;}return this;}/** saves a copy of the largest column layout (eg 12 even when rendering oneColumnMode) so we don't loose orig layout,
       * returning a list of widgets for serialization */save(saveElement=true,saveCB){// use the highest layout for any saved info so we can have full detail on reload #1849
const len=this._layouts?.length;const layout=len&&this.column!==len-1?this._layouts[len-1]:null;const list=[];this.sortNodes();this.nodes.forEach(n=>{const wl=layout?.find(l=>l._id===n._id);// use layout info fields instead if set
const w={...n,...(wl||{})};Utils.removeInternalForSave(w,!saveElement);if(saveCB)saveCB(n,w);list.push(w);});return list;}/** @internal called whenever a node is added or moved - updates the cached layouts */layoutsNodesChange(nodes){if(!this._layouts||this._inColumnResize)return this;// remove smaller layouts - we will re-generate those on the fly... larger ones need to update
this._layouts.forEach((layout,column)=>{if(!layout||column===this.column)return this;if(column<this.column){this._layouts[column]=undefined;}else{// we save the original x,y,w (h isn't cached) to see what actually changed to propagate better.
// NOTE: we don't need to check against out of bound scaling/moving as that will be done when using those cache values. #1785
const ratio=column/this.column;nodes.forEach(node=>{if(!node._orig)return;// didn't change (newly added ?)
const n=layout.find(l=>l._id===node._id);if(!n)return;// no cache for new nodes. Will use those values.
// Y changed, push down same amount
// TODO: detect doing item 'swaps' will help instead of move (especially in 1 column mode)
if(n.y>=0&&node.y!==node._orig.y){n.y+=node.y-node._orig.y;}// X changed, scale from new position
if(node.x!==node._orig.x){n.x=Math.round(node.x*ratio);}// width changed, scale from new width
if(node.w!==node._orig.w){n.w=Math.round(node.w*ratio);}// ...height always carries over from cache
});}});return this;}/**
       * @internal Called to scale the widget width & position up/down based on the column change.
       * Note we store previous layouts (especially original ones) to make it possible to go
       * from say 12 -> 1 -> 12 and get back to where we were.
       *
       * @param prevColumn previous number of columns
       * @param column  new column number
       * @param layout specify the type of re-layout that will happen (position, size, etc...).
       * Note: items will never be outside of the current column boundaries. default (moveScale). Ignored for 1 column
       */columnChanged(prevColumn,column,layout='moveScale'){if(!this.nodes.length||!column||prevColumn===column)return this;// simpler shortcuts layouts
const doCompact=layout==='compact'||layout==='list';if(doCompact){this.sortNodes(1);// sort with original layout once and only once (new column will affect order otherwise)
}// cache the current layout in case they want to go back (like 12 -> 1 -> 12) as it requires original data IFF we're sizing down (see below)
if(column<prevColumn)this.cacheLayout(this.nodes,prevColumn);this.batchUpdate();// do this EARLY as it will call saveInitial() so we can detect where we started for _dirty and collision
let newNodes=[];let nodes=doCompact?this.nodes:Utils.sort(this.nodes,-1);// current column reverse sorting so we can insert last to front (limit collision)
// see if we have cached previous layout IFF we are going up in size (restore) otherwise always
// generate next size down from where we are (looks more natural as you gradually size down).
if(column>prevColumn&&this._layouts){const cacheNodes=this._layouts[column]||[];// ...if not, start with the largest layout (if not already there) as down-scaling is more accurate
// by pretending we came from that larger column by assigning those values as starting point
const lastIndex=this._layouts.length-1;if(!cacheNodes.length&&prevColumn!==lastIndex&&this._layouts[lastIndex]?.length){prevColumn=lastIndex;this._layouts[lastIndex].forEach(cacheNode=>{const n=nodes.find(n=>n._id===cacheNode._id);if(n){// still current, use cache info positions
if(!doCompact&&!cacheNode.autoPosition){n.x=cacheNode.x??n.x;n.y=cacheNode.y??n.y;}n.w=cacheNode.w??n.w;if(cacheNode.x==undefined||cacheNode.y===undefined)n.autoPosition=true;}});}// if we found cache re-use those nodes that are still current
cacheNodes.forEach(cacheNode=>{const j=nodes.findIndex(n=>n._id===cacheNode._id);if(j!==-1){const n=nodes[j];// still current, use cache info positions
if(doCompact){n.w=cacheNode.w;// only w is used, and don't trim the list
return;}if(cacheNode.autoPosition||isNaN(cacheNode.x)||isNaN(cacheNode.y)){this.findEmptyPosition(cacheNode,newNodes);}if(!cacheNode.autoPosition){n.x=cacheNode.x??n.x;n.y=cacheNode.y??n.y;n.w=cacheNode.w??n.w;newNodes.push(n);}nodes.splice(j,1);}});}// much simpler layout that just compacts
if(doCompact){this.compact(layout,false);}else{// ...and add any extra non-cached ones
if(nodes.length){if(typeof layout==='function'){layout(column,prevColumn,newNodes,nodes);}else{const ratio=doCompact||layout==='none'?1:column/prevColumn;const move=layout==='move'||layout==='moveScale';const scale=layout==='scale'||layout==='moveScale';nodes.forEach(node=>{// NOTE: x + w could be outside of the grid, but addNode() below will handle that
node.x=column===1?0:move?Math.round(node.x*ratio):Math.min(node.x,column-1);node.w=column===1||prevColumn===1?1:scale?Math.round(node.w*ratio)||1:Math.min(node.w,column);newNodes.push(node);});nodes=[];}}// finally re-layout them in reverse order (to get correct placement)
newNodes=Utils.sort(newNodes,-1);this._inColumnResize=true;// prevent cache update
this.nodes=[];// pretend we have no nodes to start with (add() will use same structures) to simplify layout
newNodes.forEach(node=>{this.addNode(node,false);// 'false' for add event trigger
delete node._orig;// make sure the commit doesn't try to restore things back to original
});}this.nodes.forEach(n=>delete n._orig);// clear _orig before batch=false so it doesn't handle float=true restore
this.batchUpdate(false,!doCompact);delete this._inColumnResize;return this;}/**
       * call to cache the given layout internally to the given location so we can restore back when column changes size
       * @param nodes list of nodes
       * @param column corresponding column index to save it under
       * @param clear if true, will force other caches to be removed (default false)
       */cacheLayout(nodes,column,clear=false){const copy=[];nodes.forEach((n,i)=>{// make sure we have an id in case this is new layout, else re-use id already set
if(n._id===undefined){const existing=n.id?this.nodes.find(n2=>n2.id===n.id):undefined;// find existing node using users id
n._id=existing?._id??GridStackEngine._idSeq++;}copy[i]={x:n.x,y:n.y,w:n.w,_id:n._id};// only thing we change is x,y,w and id to find it back
});this._layouts=clear?[]:this._layouts||[];// use array to find larger quick
this._layouts[column]=copy;return this;}/**
       * call to cache the given node layout internally to the given location so we can restore back when column changes size
       * @param node single node to cache
       * @param column corresponding column index to save it under
       */cacheOneLayout(n,column){n._id=n._id??GridStackEngine._idSeq++;const l={x:n.x,y:n.y,w:n.w,_id:n._id};if(n.autoPosition||n.x===undefined){delete l.x;delete l.y;if(n.autoPosition)l.autoPosition=true;}this._layouts=this._layouts||[];this._layouts[column]=this._layouts[column]||[];const index=this.findCacheLayout(n,column);if(index===-1)this._layouts[column].push(l);else this._layouts[column][index]=l;return this;}findCacheLayout(n,column){return this._layouts?.[column]?.findIndex(l=>l._id===n._id)??-1;}removeNodeFromLayoutCache(n){if(!this._layouts){return;}for(let i=0;i<this._layouts.length;i++){const index=this.findCacheLayout(n,i);if(index!==-1){this._layouts[i].splice(index,1);}}}/** called to remove all internal values but the _id */cleanupNode(node){for(const prop in node){if(prop[0]==='_'&&prop!=='_id')delete node[prop];}return this;}}/** @internal unique global internal _id counter */GridStackEngine._idSeq=0;/**
   * types.ts 11.5.1
   * Copyright (c) 2021-2024 Alain Dumesny - see GridStack root license
   */ // default values for grid options - used during init and when saving out
const gridDefaults={alwaysShowResizeHandle:'mobile',animate:true,auto:true,cellHeight:'auto',cellHeightThrottle:100,cellHeightUnit:'px',column:12,draggable:{handle:'.grid-stack-item-content',appendTo:'body',scroll:true},handle:'.grid-stack-item-content',itemClass:'grid-stack-item',margin:10,marginUnit:'px',maxRow:0,minRow:0,placeholderClass:'grid-stack-placeholder',placeholderText:'',removableOptions:{accept:'grid-stack-item',decline:'grid-stack-non-removable'},resizable:{handles:'se'},rtl:'auto'// **** same as not being set ****
// disableDrag: false,
// disableResize: false,
// float: false,
// handleClass: null,
// removable: false,
// staticGrid: false,
// styleInHead: false,
//removable
};/**
   * dd-manager.ts 11.5.1
   * Copyright (c) 2021-2024 Alain Dumesny - see GridStack root license
   */ /**
   * globals that are shared across Drag & Drop instances
   */class DDManager{}/**
   * touch.ts 11.5.1
   * Copyright (c) 2021-2024 Alain Dumesny - see GridStack root license
   */ /**
   * Detect touch support - Windows Surface devices and other touch devices
   * should we use this instead ? (what we had for always showing resize handles)
   * /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)
   */const isTouch=typeof window!=='undefined'&&typeof document!=='undefined'&&('ontouchstart'in document||'ontouchstart'in window// || !!window.TouchEvent // true on Windows 10 Chrome desktop so don't use this
// eslint-disable-next-line @typescript-eslint/no-explicit-any
||window.DocumentTouch&&document instanceof window.DocumentTouch||navigator.maxTouchPoints>0// eslint-disable-next-line @typescript-eslint/no-explicit-any
||navigator.msMaxTouchPoints>0);// interface TouchCoord {x: number, y: number};
class DDTouch{}/**
  * Get the x,y position of a touch event
  */ // function getTouchCoords(e: TouchEvent): TouchCoord {
//   return {
//     x: e.changedTouches[0].pageX,
//     y: e.changedTouches[0].pageY
//   };
// }
/**
   * Simulate a mouse event based on a corresponding touch event
   * @param {Object} e A touch event
   * @param {String} simulatedType The corresponding mouse event
   */function simulateMouseEvent(e,simulatedType){// Ignore multi-touch events
if(e.touches.length>1)return;// Prevent "Ignored attempt to cancel a touchmove event with cancelable=false" errors
if(e.cancelable)e.preventDefault();// Dispatch the simulated event to the target element
Utils.simulateMouseEvent(e.changedTouches[0],simulatedType);}/**
   * Simulate a mouse event based on a corresponding Pointer event
   * @param {Object} e A pointer event
   * @param {String} simulatedType The corresponding mouse event
   */function simulatePointerMouseEvent(e,simulatedType){// Prevent "Ignored attempt to cancel a touchmove event with cancelable=false" errors
if(e.cancelable)e.preventDefault();// Dispatch the simulated event to the target element
Utils.simulateMouseEvent(e,simulatedType);}/**
   * Handle the touchstart events
   * @param {Object} e The widget element's touchstart event
   */function touchstart(e){// Ignore the event if another widget is already being handled
if(DDTouch.touchHandled)return;DDTouch.touchHandled=true;// Simulate the mouse events
// simulateMouseEvent(e, 'mouseover');
// simulateMouseEvent(e, 'mousemove');
simulateMouseEvent(e,'mousedown');}/**
   * Handle the touchmove events
   * @param {Object} e The document's touchmove event
   */function touchmove(e){// Ignore event if not handled by us
if(!DDTouch.touchHandled)return;simulateMouseEvent(e,'mousemove');}/**
   * Handle the touchend events
   * @param {Object} e The document's touchend event
   */function touchend(e){// Ignore event if not handled
if(!DDTouch.touchHandled)return;// cancel delayed leave event when we release on ourself which happens BEFORE we get this!
if(DDTouch.pointerLeaveTimeout){window.clearTimeout(DDTouch.pointerLeaveTimeout);delete DDTouch.pointerLeaveTimeout;}const wasDragging=!!DDManager.dragElement;// Simulate the mouseup event
simulateMouseEvent(e,'mouseup');// simulateMouseEvent(event, 'mouseout');
// If the touch interaction did not move, it should trigger a click
if(!wasDragging){simulateMouseEvent(e,'click');}// Unset the flag to allow other widgets to inherit the touch event
DDTouch.touchHandled=false;}/**
   * Note we don't get touchenter/touchleave (which are deprecated)
   * see https://stackoverflow.com/questions/27908339/js-touch-equivalent-for-mouseenter
   * so instead of PointerEvent to still get enter/leave and send the matching mouse event.
   */function pointerdown(e){// console.log("pointer down")
if(e.pointerType==='mouse')return;e.target.releasePointerCapture(e.pointerId);// <- Important!
}function pointerenter(e){// ignore the initial one we get on pointerdown on ourself
if(!DDManager.dragElement){// console.log('pointerenter ignored');
return;}// console.log('pointerenter');
if(e.pointerType==='mouse')return;simulatePointerMouseEvent(e,'mouseenter');}function pointerleave(e){// ignore the leave on ourself we get before releasing the mouse over ourself
// by delaying sending the event and having the up event cancel us
if(!DDManager.dragElement){// console.log('pointerleave ignored');
return;}if(e.pointerType==='mouse')return;DDTouch.pointerLeaveTimeout=window.setTimeout(()=>{delete DDTouch.pointerLeaveTimeout;// console.log('pointerleave delayed');
simulatePointerMouseEvent(e,'mouseleave');},10);}/**
   * dd-resizable-handle.ts 11.5.1
   * Copyright (c) 2021-2024  Alain Dumesny - see GridStack root license
   */class DDResizableHandle{constructor(host,dir,option){this.host=host;this.dir=dir;this.option=option;/** @internal true after we've moved enough pixels to start a resize */this.moving=false;// create var event binding so we can easily remove and still look like TS methods (unlike anonymous functions)
this._mouseDown=this._mouseDown.bind(this);this._mouseMove=this._mouseMove.bind(this);this._mouseUp=this._mouseUp.bind(this);this._keyEvent=this._keyEvent.bind(this);this._init();}/** @internal */_init(){const el=this.el=document.createElement('div');el.classList.add('ui-resizable-handle');el.classList.add(`${DDResizableHandle.prefix}${this.dir}`);el.style.zIndex='100';el.style.userSelect='none';this.host.appendChild(this.el);this.el.addEventListener('mousedown',this._mouseDown);if(isTouch){this.el.addEventListener('touchstart',touchstart);this.el.addEventListener('pointerdown',pointerdown);// this.el.style.touchAction = 'none'; // not needed unlike pointerdown doc comment
}return this;}/** call this when resize handle needs to be removed and cleaned up */destroy(){if(this.moving)this._mouseUp(this.mouseDownEvent);this.el.removeEventListener('mousedown',this._mouseDown);if(isTouch){this.el.removeEventListener('touchstart',touchstart);this.el.removeEventListener('pointerdown',pointerdown);}this.host.removeChild(this.el);delete this.el;delete this.host;return this;}/** @internal called on mouse down on us: capture move on the entire document (mouse might not stay on us) until we release the mouse */_mouseDown(e){this.mouseDownEvent=e;document.addEventListener('mousemove',this._mouseMove,{capture:true,passive:true});// capture, not bubble
document.addEventListener('mouseup',this._mouseUp,true);if(isTouch){this.el.addEventListener('touchmove',touchmove);this.el.addEventListener('touchend',touchend);}e.stopPropagation();e.preventDefault();}/** @internal */_mouseMove(e){const s=this.mouseDownEvent;if(this.moving){this._triggerEvent('move',e);}else if(Math.abs(e.x-s.x)+Math.abs(e.y-s.y)>2){// don't start unless we've moved at least 3 pixels
this.moving=true;this._triggerEvent('start',this.mouseDownEvent);this._triggerEvent('move',e);// now track keyboard events to cancel
document.addEventListener('keydown',this._keyEvent);}e.stopPropagation();// e.preventDefault(); passive = true
}/** @internal */_mouseUp(e){if(this.moving){this._triggerEvent('stop',e);document.removeEventListener('keydown',this._keyEvent);}document.removeEventListener('mousemove',this._mouseMove,true);document.removeEventListener('mouseup',this._mouseUp,true);if(isTouch){this.el.removeEventListener('touchmove',touchmove);this.el.removeEventListener('touchend',touchend);}delete this.moving;delete this.mouseDownEvent;e.stopPropagation();e.preventDefault();}/** @internal call when keys are being pressed - use Esc to cancel */_keyEvent(e){if(e.key==='Escape'){this.host.gridstackNode?.grid?.engine.restoreInitial();this._mouseUp(this.mouseDownEvent);}}/** @internal */_triggerEvent(name,event){if(this.option[name])this.option[name](event);return this;}}/** @internal */DDResizableHandle.prefix='ui-resizable-';/**
   * dd-base-impl.ts 11.5.1
   * Copyright (c) 2021-2024  Alain Dumesny - see GridStack root license
   */class DDBaseImplement{constructor(){/** @internal */this._eventRegister={};}/** returns the enable state, but you have to call enable()/disable() to change (as other things need to happen) */get disabled(){return this._disabled;}on(event,callback){this._eventRegister[event]=callback;}off(event){delete this._eventRegister[event];}enable(){this._disabled=false;}disable(){this._disabled=true;}destroy(){delete this._eventRegister;}triggerEvent(eventName,event){if(!this.disabled&&this._eventRegister&&this._eventRegister[eventName])return this._eventRegister[eventName](event);}}/**
   * dd-resizable.ts 11.5.1
   * Copyright (c) 2021-2024  Alain Dumesny - see GridStack root license
   */class DDResizable extends DDBaseImplement{// have to be public else complains for HTMLElementExtendOpt ?
constructor(el,option={}){super();this.el=el;this.option=option;/** @internal */this.rectScale={x:1,y:1};/** @internal */this._ui=()=>{const containmentEl=this.el.parentElement;const containmentRect=containmentEl.getBoundingClientRect();const newRect={width:this.originalRect.width,height:this.originalRect.height+this.scrolled,left:this.originalRect.left,top:this.originalRect.top-this.scrolled};const rect=this.temporalRect||newRect;return{position:{left:(rect.left-containmentRect.left)*this.rectScale.x,top:(rect.top-containmentRect.top)*this.rectScale.y},size:{width:rect.width*this.rectScale.x,height:rect.height*this.rectScale.y}/* Gridstack ONLY needs position set above... keep around in case.
                  element: [this.el], // The object representing the element to be resized
                  helper: [], // TODO: not support yet - The object representing the helper that's being resized
                  originalElement: [this.el],// we don't wrap here, so simplify as this.el //The object representing the original element before it is wrapped
                  originalPosition: { // The position represented as { left, top } before the resizable is resized
                    left: this.originalRect.left - containmentRect.left,
                    top: this.originalRect.top - containmentRect.top
                  },
                  originalSize: { // The size represented as { width, height } before the resizable is resized
                    width: this.originalRect.width,
                    height: this.originalRect.height
                  }
                  */};};// create var event binding so we can easily remove and still look like TS methods (unlike anonymous functions)
this._mouseOver=this._mouseOver.bind(this);this._mouseOut=this._mouseOut.bind(this);this.enable();this._setupAutoHide(this.option.autoHide);this._setupHandlers();}on(event,callback){super.on(event,callback);}off(event){super.off(event);}enable(){super.enable();this.el.classList.remove('ui-resizable-disabled');this._setupAutoHide(this.option.autoHide);}disable(){super.disable();this.el.classList.add('ui-resizable-disabled');this._setupAutoHide(false);}destroy(){this._removeHandlers();this._setupAutoHide(false);delete this.el;super.destroy();}updateOption(opts){const updateHandles=opts.handles&&opts.handles!==this.option.handles;const updateAutoHide=opts.autoHide&&opts.autoHide!==this.option.autoHide;Object.keys(opts).forEach(key=>this.option[key]=opts[key]);if(updateHandles){this._removeHandlers();this._setupHandlers();}if(updateAutoHide){this._setupAutoHide(this.option.autoHide);}return this;}/** @internal turns auto hide on/off */_setupAutoHide(auto){if(auto){this.el.classList.add('ui-resizable-autohide');// use mouseover and not mouseenter to get better performance and track for nested cases
this.el.addEventListener('mouseover',this._mouseOver);this.el.addEventListener('mouseout',this._mouseOut);}else{this.el.classList.remove('ui-resizable-autohide');this.el.removeEventListener('mouseover',this._mouseOver);this.el.removeEventListener('mouseout',this._mouseOut);if(DDManager.overResizeElement===this){delete DDManager.overResizeElement;}}return this;}/** @internal */ // eslint-disable-next-line @typescript-eslint/no-unused-vars
_mouseOver(e){// console.log(`${count++} pre-enter ${(this.el as GridItemHTMLElement).gridstackNode._id}`)
// already over a child, ignore. Ideally we just call e.stopPropagation() but see https://github.com/gridstack/gridstack.js/issues/2018
if(DDManager.overResizeElement||DDManager.dragElement)return;DDManager.overResizeElement=this;// console.log(`${count++} enter ${(this.el as GridItemHTMLElement).gridstackNode._id}`)
this.el.classList.remove('ui-resizable-autohide');}/** @internal */ // eslint-disable-next-line @typescript-eslint/no-unused-vars
_mouseOut(e){// console.log(`${count++} pre-leave ${(this.el as GridItemHTMLElement).gridstackNode._id}`)
if(DDManager.overResizeElement!==this)return;delete DDManager.overResizeElement;// console.log(`${count++} leave ${(this.el as GridItemHTMLElement).gridstackNode._id}`)
this.el.classList.add('ui-resizable-autohide');}/** @internal */_setupHandlers(){this.handlers=this.option.handles.split(',').map(dir=>dir.trim()).map(dir=>new DDResizableHandle(this.el,dir,{start:event=>{this._resizeStart(event);},stop:event=>{this._resizeStop(event);},move:event=>{this._resizing(event,dir);}}));return this;}/** @internal */_resizeStart(event){this.sizeToContent=Utils.shouldSizeToContent(this.el.gridstackNode,true);// strick true only and not number
this.originalRect=this.el.getBoundingClientRect();this.scrollEl=Utils.getScrollElement(this.el);this.scrollY=this.scrollEl.scrollTop;this.scrolled=0;this.startEvent=event;this._setupHelper();this._applyChange();const ev=Utils.initEvent(event,{type:'resizestart',target:this.el});if(this.option.start){this.option.start(ev,this._ui());}this.el.classList.add('ui-resizable-resizing');this.triggerEvent('resizestart',ev);return this;}/** @internal */_resizing(event,dir){this.scrolled=this.scrollEl.scrollTop-this.scrollY;this.temporalRect=this._getChange(event,dir);this._applyChange();const ev=Utils.initEvent(event,{type:'resize',target:this.el});if(this.option.resize){this.option.resize(ev,this._ui());}this.triggerEvent('resize',ev);return this;}/** @internal */_resizeStop(event){const ev=Utils.initEvent(event,{type:'resizestop',target:this.el});if(this.option.stop){this.option.stop(ev);// Note: ui() not used by gridstack so don't pass
}this.el.classList.remove('ui-resizable-resizing');this.triggerEvent('resizestop',ev);this._cleanHelper();delete this.startEvent;delete this.originalRect;delete this.temporalRect;delete this.scrollY;delete this.scrolled;return this;}/** @internal */_setupHelper(){this.elOriginStyleVal=DDResizable._originStyleProp.map(prop=>this.el.style[prop]);this.parentOriginStylePosition=this.el.parentElement.style.position;const parent=this.el.parentElement;const dragTransform=Utils.getValuesFromTransformedElement(parent);this.rectScale={x:dragTransform.xScale,y:dragTransform.yScale};if(getComputedStyle(this.el.parentElement).position.match(/static/)){this.el.parentElement.style.position='relative';}this.el.style.position='absolute';this.el.style.opacity='0.8';return this;}/** @internal */_cleanHelper(){DDResizable._originStyleProp.forEach((prop,i)=>{this.el.style[prop]=this.elOriginStyleVal[i]||null;});this.el.parentElement.style.position=this.parentOriginStylePosition||null;return this;}/** @internal */_getChange(event,dir){const oEvent=this.startEvent;const newRect={width:this.originalRect.width,height:this.originalRect.height+this.scrolled,left:this.originalRect.left,top:this.originalRect.top-this.scrolled};const offsetX=event.clientX-oEvent.clientX;const offsetY=this.sizeToContent?0:event.clientY-oEvent.clientY;// prevent vert resize
let moveLeft;let moveUp;if(dir.indexOf('e')>-1){newRect.width+=offsetX;}else if(dir.indexOf('w')>-1){newRect.width-=offsetX;newRect.left+=offsetX;moveLeft=true;}if(dir.indexOf('s')>-1){newRect.height+=offsetY;}else if(dir.indexOf('n')>-1){newRect.height-=offsetY;newRect.top+=offsetY;moveUp=true;}const constrain=this._constrainSize(newRect.width,newRect.height,moveLeft,moveUp);if(Math.round(newRect.width)!==Math.round(constrain.width)){// round to ignore slight round-off errors
if(dir.indexOf('w')>-1){newRect.left+=newRect.width-constrain.width;}newRect.width=constrain.width;}if(Math.round(newRect.height)!==Math.round(constrain.height)){if(dir.indexOf('n')>-1){newRect.top+=newRect.height-constrain.height;}newRect.height=constrain.height;}return newRect;}/** @internal constrain the size to the set min/max values */_constrainSize(oWidth,oHeight,moveLeft,moveUp){const o=this.option;const maxWidth=(moveLeft?o.maxWidthMoveLeft:o.maxWidth)||Number.MAX_SAFE_INTEGER;const minWidth=o.minWidth/this.rectScale.x||oWidth;const maxHeight=(moveUp?o.maxHeightMoveUp:o.maxHeight)||Number.MAX_SAFE_INTEGER;const minHeight=o.minHeight/this.rectScale.y||oHeight;const width=Math.min(maxWidth,Math.max(minWidth,oWidth));const height=Math.min(maxHeight,Math.max(minHeight,oHeight));return{width,height};}/** @internal */_applyChange(){let containmentRect={left:0,top:0,width:0,height:0};if(this.el.style.position==='absolute'){const containmentEl=this.el.parentElement;const{left,top}=containmentEl.getBoundingClientRect();containmentRect={left,top,width:0,height:0};}if(!this.temporalRect)return this;Object.keys(this.temporalRect).forEach(key=>{const value=this.temporalRect[key];const scaleReciprocal=key==='width'||key==='left'?this.rectScale.x:key==='height'||key==='top'?this.rectScale.y:1;this.el.style[key]=(value-containmentRect[key])*scaleReciprocal+'px';});return this;}/** @internal */_removeHandlers(){this.handlers.forEach(handle=>handle.destroy());delete this.handlers;return this;}}/** @internal */DDResizable._originStyleProp=['width','height','position','left','top','opacity','zIndex'];/**
   * dd-draggable.ts 11.5.1
   * Copyright (c) 2021-2024  Alain Dumesny - see GridStack root license
   */ // make sure we are not clicking on known object that handles mouseDown
const skipMouseDown='input,textarea,button,select,option,[contenteditable="true"],.ui-resizable-handle';// let count = 0; // TEST
class DDDraggable extends DDBaseImplement{constructor(el,option={}){super();this.el=el;this.option=option;/** @internal */this.dragTransform={xScale:1,yScale:1,xOffset:0,yOffset:0};// get the element that is actually supposed to be dragged by
const handleName=option?.handle?.substring(1);const n=el.gridstackNode;this.dragEls=!handleName||el.classList.contains(handleName)?[el]:n?.subGrid?[el.querySelector(option.handle)||el]:Array.from(el.querySelectorAll(option.handle));if(this.dragEls.length===0){this.dragEls=[el];}// create var event binding so we can easily remove and still look like TS methods (unlike anonymous functions)
this._mouseDown=this._mouseDown.bind(this);this._mouseMove=this._mouseMove.bind(this);this._mouseUp=this._mouseUp.bind(this);this._keyEvent=this._keyEvent.bind(this);this.enable();}on(event,callback){super.on(event,callback);}off(event){super.off(event);}enable(){if(this.disabled===false)return;super.enable();this.dragEls.forEach(dragEl=>{dragEl.addEventListener('mousedown',this._mouseDown);if(isTouch){dragEl.addEventListener('touchstart',touchstart);dragEl.addEventListener('pointerdown',pointerdown);// dragEl.style.touchAction = 'none'; // not needed unlike pointerdown doc comment
}});this.el.classList.remove('ui-draggable-disabled');}disable(forDestroy=false){if(this.disabled===true)return;super.disable();this.dragEls.forEach(dragEl=>{dragEl.removeEventListener('mousedown',this._mouseDown);if(isTouch){dragEl.removeEventListener('touchstart',touchstart);dragEl.removeEventListener('pointerdown',pointerdown);}});if(!forDestroy)this.el.classList.add('ui-draggable-disabled');}destroy(){if(this.dragTimeout)window.clearTimeout(this.dragTimeout);delete this.dragTimeout;if(this.mouseDownEvent)this._mouseUp(this.mouseDownEvent);this.disable(true);delete this.el;delete this.helper;delete this.option;super.destroy();}updateOption(opts){Object.keys(opts).forEach(key=>this.option[key]=opts[key]);return this;}/** @internal call when mouse goes down before a dragstart happens */_mouseDown(e){// don't let more than one widget handle mouseStart
if(DDManager.mouseHandled)return;if(e.button!==0)return true;// only left click
// make sure we are not clicking on known object that handles mouseDown, or ones supplied by the user
if(!this.dragEls.find(el=>el===e.target)&&e.target.closest(skipMouseDown))return true;if(this.option.cancel){if(e.target.closest(this.option.cancel))return true;}this.mouseDownEvent=e;delete this.dragging;delete DDManager.dragElement;delete DDManager.dropElement;// document handler so we can continue receiving moves as the item is 'fixed' position, and capture=true so WE get a first crack
document.addEventListener('mousemove',this._mouseMove,{capture:true,passive:true});// true=capture, not bubble
document.addEventListener('mouseup',this._mouseUp,true);if(isTouch){e.currentTarget.addEventListener('touchmove',touchmove);e.currentTarget.addEventListener('touchend',touchend);}e.preventDefault();// preventDefault() prevents blur event which occurs just after mousedown event.
// if an editable content has focus, then blur must be call
if(document.activeElement)document.activeElement.blur();DDManager.mouseHandled=true;return true;}/** @internal method to call actual drag event */_callDrag(e){if(!this.dragging)return;const ev=Utils.initEvent(e,{target:this.el,type:'drag'});if(this.option.drag){this.option.drag(ev,this.ui());}this.triggerEvent('drag',ev);}/** @internal called when the main page (after successful mousedown) receives a move event to drag the item around the screen */_mouseMove(e){// console.log(`${count++} move ${e.x},${e.y}`)
const s=this.mouseDownEvent;this.lastDrag=e;if(this.dragging){this._dragFollow(e);// delay actual grid handling drag until we pause for a while if set
if(DDManager.pauseDrag){const pause=Number.isInteger(DDManager.pauseDrag)?DDManager.pauseDrag:100;if(this.dragTimeout)window.clearTimeout(this.dragTimeout);this.dragTimeout=window.setTimeout(()=>this._callDrag(e),pause);}else{this._callDrag(e);}}else if(Math.abs(e.x-s.x)+Math.abs(e.y-s.y)>3){/**
               * don't start unless we've moved at least 3 pixels
               */this.dragging=true;DDManager.dragElement=this;// if we're dragging an actual grid item, set the current drop as the grid (to detect enter/leave)
const grid=this.el.gridstackNode?.grid;if(grid){DDManager.dropElement=grid.el.ddElement.ddDroppable;}else{delete DDManager.dropElement;}this.helper=this._createHelper();this._setupHelperContainmentStyle();this.dragTransform=Utils.getValuesFromTransformedElement(this.helperContainment);this.dragOffset=this._getDragOffset(e,this.el,this.helperContainment);this._setupHelperStyle(e);const ev=Utils.initEvent(e,{target:this.el,type:'dragstart'});if(this.option.start){this.option.start(ev,this.ui());}this.triggerEvent('dragstart',ev);// now track keyboard events to cancel or rotate
document.addEventListener('keydown',this._keyEvent);}// e.preventDefault(); // passive = true. OLD: was needed otherwise we get text sweep text selection as we drag around
return true;}/** @internal call when the mouse gets released to drop the item at current location */_mouseUp(e){document.removeEventListener('mousemove',this._mouseMove,true);document.removeEventListener('mouseup',this._mouseUp,true);if(isTouch&&e.currentTarget){// destroy() during nested grid call us again wit fake _mouseUp
e.currentTarget.removeEventListener('touchmove',touchmove,true);e.currentTarget.removeEventListener('touchend',touchend,true);}if(this.dragging){delete this.dragging;delete this.el.gridstackNode?._origRotate;document.removeEventListener('keydown',this._keyEvent);// reset the drop target if dragging over ourself (already parented, just moving during stop callback below)
if(DDManager.dropElement?.el===this.el.parentElement){delete DDManager.dropElement;}this.helperContainment.style.position=this.parentOriginStylePosition||null;if(this.helper!==this.el)this.helper.remove();// hide now
this._removeHelperStyle();const ev=Utils.initEvent(e,{target:this.el,type:'dragstop'});if(this.option.stop){this.option.stop(ev);// NOTE: destroy() will be called when removing item, so expect NULL ptr after!
}this.triggerEvent('dragstop',ev);// call the droppable method to receive the item
if(DDManager.dropElement){DDManager.dropElement.drop(e);}}delete this.helper;delete this.mouseDownEvent;delete DDManager.dragElement;delete DDManager.dropElement;delete DDManager.mouseHandled;e.preventDefault();}/** @internal call when keys are being pressed - use Esc to cancel, R to rotate */_keyEvent(e){const n=this.el.gridstackNode;const grid=n?.grid||DDManager.dropElement?.el?.gridstack;if(e.key==='Escape'){if(n&&n._origRotate){n._orig=n._origRotate;delete n._origRotate;}grid?.cancelDrag();this._mouseUp(this.mouseDownEvent);}else if(n&&grid&&(e.key==='r'||e.key==='R')){if(!Utils.canBeRotated(n))return;n._origRotate=n._origRotate||{...n._orig};// store the real orig size in case we Esc after doing rotation
delete n._moving;// force rotate to happen (move waits for >50% coverage otherwise)
grid.setAnimation(false)// immediate rotate so _getDragOffset() gets the right dom size below
.rotate(n.el,{top:-this.dragOffset.offsetTop,left:-this.dragOffset.offsetLeft}).setAnimation();n._moving=true;this.dragOffset=this._getDragOffset(this.lastDrag,n.el,this.helperContainment);this.helper.style.width=this.dragOffset.width+'px';this.helper.style.height=this.dragOffset.height+'px';Utils.swap(n._orig,'w','h');delete n._rect;this._mouseMove(this.lastDrag);}}/** @internal create a clone copy (or user defined method) of the original drag item if set */_createHelper(){let helper=this.el;if(typeof this.option.helper==='function'){helper=this.option.helper(this.el);}else if(this.option.helper==='clone'){helper=Utils.cloneNode(this.el);}if(!helper.parentElement){Utils.appendTo(helper,this.option.appendTo==='parent'?this.el.parentElement:this.option.appendTo);}this.dragElementOriginStyle=DDDraggable.originStyleProp.map(prop=>this.el.style[prop]);return helper;}/** @internal set the fix position of the dragged item */_setupHelperStyle(e){this.helper.classList.add('ui-draggable-dragging');// TODO: set all at once with style.cssText += ... ? https://stackoverflow.com/questions/3968593
const style=this.helper.style;style.pointerEvents='none';// needed for over items to get enter/leave
// style.cursor = 'move'; //  TODO: can't set with pointerEvents=none ! (done in CSS as well)
style.width=this.dragOffset.width+'px';style.height=this.dragOffset.height+'px';style.willChange='left, top';style.position='fixed';// let us drag between grids by not clipping as parent .grid-stack is position: 'relative'
this._dragFollow(e);// now position it
style.transition='none';// show up instantly
setTimeout(()=>{if(this.helper){style.transition=null;// recover animation
}},0);return this;}/** @internal restore back the original style before dragging */_removeHelperStyle(){this.helper.classList.remove('ui-draggable-dragging');const node=this.helper?.gridstackNode;// don't bother restoring styles if we're gonna remove anyway...
if(!node?._isAboutToRemove&&this.dragElementOriginStyle){const helper=this.helper;// don't animate, otherwise we animate offseted when switching back to 'absolute' from 'fixed'.
// TODO: this also removes resizing animation which doesn't have this issue, but others.
// Ideally both would animate ('move' would immediately restore 'absolute' and adjust coordinate to match,
// then trigger a delay (repaint) to restore to final dest with animate) but then we need to make sure 'resizestop'
// is called AFTER 'transitionend' event is received (see https://github.com/gridstack/gridstack.js/issues/2033)
const transition=this.dragElementOriginStyle['transition']||null;helper.style.transition=this.dragElementOriginStyle['transition']='none';// can't be NULL #1973
DDDraggable.originStyleProp.forEach(prop=>helper.style[prop]=this.dragElementOriginStyle[prop]||null);setTimeout(()=>helper.style.transition=transition,50);// recover animation from saved vars after a pause (0 isn't enough #1973)
}delete this.dragElementOriginStyle;return this;}/** @internal updates the top/left position to follow the mouse */_dragFollow(e){const containmentRect={left:0,top:0};// if (this.helper.style.position === 'absolute') { // we use 'fixed'
//   const { left, top } = this.helperContainment.getBoundingClientRect();
//   containmentRect = { left, top };
// }
const style=this.helper.style;const offset=this.dragOffset;style.left=(e.clientX+offset.offsetLeft-containmentRect.left)*this.dragTransform.xScale+'px';style.top=(e.clientY+offset.offsetTop-containmentRect.top)*this.dragTransform.yScale+'px';}/** @internal */_setupHelperContainmentStyle(){this.helperContainment=this.helper.parentElement;if(this.helper.style.position!=='fixed'){this.parentOriginStylePosition=this.helperContainment.style.position;if(getComputedStyle(this.helperContainment).position.match(/static/)){this.helperContainment.style.position='relative';}}return this;}/** @internal */_getDragOffset(event,el,parent){// in case ancestor has transform/perspective css properties that change the viewpoint
let xformOffsetX=0;let xformOffsetY=0;if(parent){xformOffsetX=this.dragTransform.xOffset;xformOffsetY=this.dragTransform.yOffset;}const targetOffset=el.getBoundingClientRect();return{left:targetOffset.left,top:targetOffset.top,offsetLeft:-event.clientX+targetOffset.left-xformOffsetX,offsetTop:-event.clientY+targetOffset.top-xformOffsetY,width:targetOffset.width*this.dragTransform.xScale,height:targetOffset.height*this.dragTransform.yScale};}/** @internal TODO: set to public as called by DDDroppable! */ui(){const containmentEl=this.el.parentElement;const containmentRect=containmentEl.getBoundingClientRect();const offset=this.helper.getBoundingClientRect();return{position:{top:(offset.top-containmentRect.top)*this.dragTransform.yScale,left:(offset.left-containmentRect.left)*this.dragTransform.xScale}/* not used by GridStack for now...
              helper: [this.helper], //The object arr representing the helper that's being dragged.
              offset: { top: offset.top, left: offset.left } // Current offset position of the helper as { top, left } object.
              */};}}/** @internal properties we change during dragging, and restore back */DDDraggable.originStyleProp=['width','height','transform','transform-origin','transition','pointerEvents','position','left','top','minWidth','willChange'];/**
   * dd-droppable.ts 11.5.1
   * Copyright (c) 2021-2024  Alain Dumesny - see GridStack root license
   */ // let count = 0; // TEST
class DDDroppable extends DDBaseImplement{constructor(el,option={}){super();this.el=el;this.option=option;// create var event binding so we can easily remove and still look like TS methods (unlike anonymous functions)
this._mouseEnter=this._mouseEnter.bind(this);this._mouseLeave=this._mouseLeave.bind(this);this.enable();this._setupAccept();}on(event,callback){super.on(event,callback);}off(event){super.off(event);}enable(){if(this.disabled===false)return;super.enable();this.el.classList.add('ui-droppable');this.el.classList.remove('ui-droppable-disabled');this.el.addEventListener('mouseenter',this._mouseEnter);this.el.addEventListener('mouseleave',this._mouseLeave);if(isTouch){this.el.addEventListener('pointerenter',pointerenter);this.el.addEventListener('pointerleave',pointerleave);}}disable(forDestroy=false){if(this.disabled===true)return;super.disable();this.el.classList.remove('ui-droppable');if(!forDestroy)this.el.classList.add('ui-droppable-disabled');this.el.removeEventListener('mouseenter',this._mouseEnter);this.el.removeEventListener('mouseleave',this._mouseLeave);if(isTouch){this.el.removeEventListener('pointerenter',pointerenter);this.el.removeEventListener('pointerleave',pointerleave);}}destroy(){this.disable(true);this.el.classList.remove('ui-droppable');this.el.classList.remove('ui-droppable-disabled');super.destroy();}updateOption(opts){Object.keys(opts).forEach(key=>this.option[key]=opts[key]);this._setupAccept();return this;}/** @internal called when the cursor enters our area - prepare for a possible drop and track leaving */_mouseEnter(e){// console.log(`${count++} Enter ${this.el.id || (this.el as GridHTMLElement).gridstack.opts.id}`); // TEST
if(!DDManager.dragElement)return;if(!this._canDrop(DDManager.dragElement.el))return;e.preventDefault();e.stopPropagation();// make sure when we enter this, that the last one gets a leave FIRST to correctly cleanup as we don't always do
if(DDManager.dropElement&&DDManager.dropElement!==this){DDManager.dropElement._mouseLeave(e,true);// calledByEnter = true
}DDManager.dropElement=this;const ev=Utils.initEvent(e,{target:this.el,type:'dropover'});if(this.option.over){this.option.over(ev,this._ui(DDManager.dragElement));}this.triggerEvent('dropover',ev);this.el.classList.add('ui-droppable-over');// console.log('tracking'); // TEST
}/** @internal called when the item is leaving our area, stop tracking if we had moving item */_mouseLeave(e,calledByEnter=false){// console.log(`${count++} Leave ${this.el.id || (this.el as GridHTMLElement).gridstack.opts.id}`); // TEST
if(!DDManager.dragElement||DDManager.dropElement!==this)return;e.preventDefault();e.stopPropagation();const ev=Utils.initEvent(e,{target:this.el,type:'dropout'});if(this.option.out){this.option.out(ev,this._ui(DDManager.dragElement));}this.triggerEvent('dropout',ev);if(DDManager.dropElement===this){delete DDManager.dropElement;// console.log('not tracking'); // TEST
// if we're still over a parent droppable, send it an enter as we don't get one from leaving nested children
if(!calledByEnter){let parentDrop;let parent=this.el.parentElement;while(!parentDrop&&parent){parentDrop=parent.ddElement?.ddDroppable;parent=parent.parentElement;}if(parentDrop){parentDrop._mouseEnter(e);}}}}/** item is being dropped on us - called by the drag mouseup handler - this calls the client drop event */drop(e){e.preventDefault();const ev=Utils.initEvent(e,{target:this.el,type:'drop'});if(this.option.drop){this.option.drop(ev,this._ui(DDManager.dragElement));}this.triggerEvent('drop',ev);}/** @internal true if element matches the string/method accept option */_canDrop(el){return el&&(!this.accept||this.accept(el));}/** @internal */_setupAccept(){if(!this.option.accept)return this;if(typeof this.option.accept==='string'){this.accept=el=>el.classList.contains(this.option.accept)||el.matches(this.option.accept);}else{this.accept=this.option.accept;}return this;}/** @internal */_ui(drag){return{draggable:drag.el,...drag.ui()};}}/**
   * dd-elements.ts 11.5.1
   * Copyright (c) 2021-2024 Alain Dumesny - see GridStack root license
   */class DDElement{static init(el){if(!el.ddElement){el.ddElement=new DDElement(el);}return el.ddElement;}constructor(el){this.el=el;}on(eventName,callback){if(this.ddDraggable&&['drag','dragstart','dragstop'].indexOf(eventName)>-1){this.ddDraggable.on(eventName,callback);}else if(this.ddDroppable&&['drop','dropover','dropout'].indexOf(eventName)>-1){this.ddDroppable.on(eventName,callback);}else if(this.ddResizable&&['resizestart','resize','resizestop'].indexOf(eventName)>-1){this.ddResizable.on(eventName,callback);}return this;}off(eventName){if(this.ddDraggable&&['drag','dragstart','dragstop'].indexOf(eventName)>-1){this.ddDraggable.off(eventName);}else if(this.ddDroppable&&['drop','dropover','dropout'].indexOf(eventName)>-1){this.ddDroppable.off(eventName);}else if(this.ddResizable&&['resizestart','resize','resizestop'].indexOf(eventName)>-1){this.ddResizable.off(eventName);}return this;}setupDraggable(opts){if(!this.ddDraggable){this.ddDraggable=new DDDraggable(this.el,opts);}else{this.ddDraggable.updateOption(opts);}return this;}cleanDraggable(){if(this.ddDraggable){this.ddDraggable.destroy();delete this.ddDraggable;}return this;}setupResizable(opts){if(!this.ddResizable){this.ddResizable=new DDResizable(this.el,opts);}else{this.ddResizable.updateOption(opts);}return this;}cleanResizable(){if(this.ddResizable){this.ddResizable.destroy();delete this.ddResizable;}return this;}setupDroppable(opts){if(!this.ddDroppable){this.ddDroppable=new DDDroppable(this.el,opts);}else{this.ddDroppable.updateOption(opts);}return this;}cleanDroppable(){if(this.ddDroppable){this.ddDroppable.destroy();delete this.ddDroppable;}return this;}}/**
   * dd-gridstack.ts 11.5.1
   * Copyright (c) 2021-2024 Alain Dumesny - see GridStack root license
   */ // let count = 0; // TEST
/**
   * HTML Native Mouse and Touch Events Drag and Drop functionality.
   */class DDGridStack{resizable(el,opts,key,value){this._getDDElements(el,opts).forEach(dEl=>{if(opts==='disable'||opts==='enable'){dEl.ddResizable&&dEl.ddResizable[opts]();// can't create DD as it requires options for setupResizable()
}else if(opts==='destroy'){dEl.ddResizable&&dEl.cleanResizable();}else if(opts==='option'){dEl.setupResizable({[key]:value});}else{const n=dEl.el.gridstackNode;const grid=n.grid;let handles=dEl.el.getAttribute('gs-resize-handles')||grid.opts.resizable.handles||'e,s,se';if(handles==='all')handles='n,e,s,w,se,sw,ne,nw';// NOTE: keep the resize handles as e,w don't have enough space (10px) to show resize corners anyway. limit during drag instead
// restrict vertical resize if height is done to match content anyway... odd to have it spring back
// if (Utils.shouldSizeToContent(n, true)) {
//   const doE = handles.indexOf('e') !== -1;
//   const doW = handles.indexOf('w') !== -1;
//   handles = doE ? (doW ? 'e,w' : 'e') : (doW ? 'w' : '');
// }
const autoHide=!grid.opts.alwaysShowResizeHandle;dEl.setupResizable({...grid.opts.resizable,...{handles,autoHide},...{start:opts.start,stop:opts.stop,resize:opts.resize}});}});return this;}draggable(el,opts,key,value){this._getDDElements(el,opts).forEach(dEl=>{if(opts==='disable'||opts==='enable'){dEl.ddDraggable&&dEl.ddDraggable[opts]();// can't create DD as it requires options for setupDraggable()
}else if(opts==='destroy'){dEl.ddDraggable&&dEl.cleanDraggable();}else if(opts==='option'){dEl.setupDraggable({[key]:value});}else{const grid=dEl.el.gridstackNode.grid;dEl.setupDraggable({...grid.opts.draggable,...{// containment: (grid.parentGridNode && grid.opts.dragOut === false) ? grid.el.parentElement : (grid.opts.draggable.containment || null),
start:opts.start,stop:opts.stop,drag:opts.drag}});}});return this;}dragIn(el,opts){this._getDDElements(el).forEach(dEl=>dEl.setupDraggable(opts));return this;}droppable(el,opts,key,value){if(typeof opts.accept==='function'&&!opts._accept){opts._accept=opts.accept;opts.accept=el=>opts._accept(el);}this._getDDElements(el,opts).forEach(dEl=>{if(opts==='disable'||opts==='enable'){dEl.ddDroppable&&dEl.ddDroppable[opts]();}else if(opts==='destroy'){dEl.ddDroppable&&dEl.cleanDroppable();}else if(opts==='option'){dEl.setupDroppable({[key]:value});}else{dEl.setupDroppable(opts);}});return this;}/** true if element is droppable */isDroppable(el){return!!(el?.ddElement?.ddDroppable&&!el.ddElement.ddDroppable.disabled);}/** true if element is draggable */isDraggable(el){return!!(el?.ddElement?.ddDraggable&&!el.ddElement.ddDraggable.disabled);}/** true if element is draggable */isResizable(el){return!!(el?.ddElement?.ddResizable&&!el.ddElement.ddResizable.disabled);}on(el,name,callback){this._getDDElements(el).forEach(dEl=>dEl.on(name,event=>{callback(event,DDManager.dragElement?DDManager.dragElement.el:event.target,DDManager.dragElement?DDManager.dragElement.helper:null);}));return this;}off(el,name){this._getDDElements(el).forEach(dEl=>dEl.off(name));return this;}/** @internal returns a list of DD elements, creating them on the fly by default unless option is to destroy or disable */_getDDElements(els,opts){// don't force create if we're going to destroy it, unless it's a grid which is used as drop target for it's children
const create=els.gridstack||opts!=='destroy'&&opts!=='disable';const hosts=Utils.getElements(els);if(!hosts.length)return[];const list=hosts.map(e=>e.ddElement||(create?DDElement.init(e):null)).filter(d=>d);// remove nulls
return list;}}/*!
   * GridStack 11.5.1
   * https://gridstackjs.com/
   *
   * Copyright (c) 2021-2024  Alain Dumesny
   * see root license https://github.com/gridstack/gridstack.js/tree/master/LICENSE
   */const dd=new DDGridStack();/**
   * Main gridstack class - you will need to call `GridStack.init()` first to initialize your grid.
   * Note: your grid elements MUST have the following classes for the CSS layout to work:
   * @example
   * <div class="grid-stack">
   *   <div class="grid-stack-item">
   *     <div class="grid-stack-item-content">Item 1</div>
   *   </div>
   * </div>
   */class GridStack{/**
       * initializing the HTML element, or selector string, into a grid will return the grid. Calling it again will
       * simply return the existing instance (ignore any passed options). There is also an initAll() version that support
       * multiple grids initialization at once. Or you can use addGrid() to create the entire grid from JSON.
       * @param options grid options (optional)
       * @param elOrString element or CSS selector (first one used) to convert to a grid (default to '.grid-stack' class selector)
       *
       * @example
       * const grid = GridStack.init();
       *
       * Note: the HTMLElement (of type GridHTMLElement) will store a `gridstack: GridStack` value that can be retrieve later
       * const grid = document.querySelector('.grid-stack').gridstack;
       */static init(options={},elOrString='.grid-stack'){if(typeof document==='undefined')return null;// temp workaround SSR
const el=GridStack.getGridElement(elOrString);if(!el){if(typeof elOrString==='string'){void 0;}else{void 0;}return null;}if(!el.gridstack){el.gridstack=new GridStack(el,Utils.cloneDeep(options));}return el.gridstack;}/**
       * Will initialize a list of elements (given a selector) and return an array of grids.
       * @param options grid options (optional)
       * @param selector elements selector to convert to grids (default to '.grid-stack' class selector)
       *
       * @example
       * const grids = GridStack.initAll();
       * grids.forEach(...)
       */static initAll(options={},selector='.grid-stack'){const grids=[];if(typeof document==='undefined')return grids;// temp workaround SSR
GridStack.getGridElements(selector).forEach(el=>{if(!el.gridstack){el.gridstack=new GridStack(el,Utils.cloneDeep(options));}grids.push(el.gridstack);});if(grids.length===0){void 0;}return grids;}/**
       * call to create a grid with the given options, including loading any children from JSON structure. This will call GridStack.init(), then
       * grid.load() on any passed children (recursively). Great alternative to calling init() if you want entire grid to come from
       * JSON serialized data, including options.
       * @param parent HTML element parent to the grid
       * @param opt grids options used to initialize the grid, and list of children
       */static addGrid(parent,opt={}){if(!parent)return null;let el=parent;if(el.gridstack){// already a grid - set option and load data
const grid=el.gridstack;if(opt)grid.opts={...grid.opts,...opt};if(opt.children!==undefined)grid.load(opt.children);return grid;}// create the grid element, but check if the passed 'parent' already has grid styling and should be used instead
const parentIsGrid=parent.classList.contains('grid-stack');if(!parentIsGrid||GridStack.addRemoveCB){if(GridStack.addRemoveCB){el=GridStack.addRemoveCB(parent,opt,true,true);}else{el=Utils.createDiv(['grid-stack',opt.class],parent);}}// create grid class and load any children
const grid=GridStack.init(opt,el);return grid;}/** call this method to register your engine instead of the default one.
       * See instead `GridStackOptions.engineClass` if you only need to
       * replace just one instance.
       */static registerEngine(engineClass){GridStack.engineClass=engineClass;}/** @internal create placeholder DIV as needed */get placeholder(){if(!this._placeholder){this._placeholder=Utils.createDiv([this.opts.placeholderClass,gridDefaults.itemClass,this.opts.itemClass]);const placeholderChild=Utils.createDiv(['placeholder-content'],this._placeholder);if(this.opts.placeholderText){placeholderChild.textContent=this.opts.placeholderText;}}return this._placeholder;}/**
       * Construct a grid item from the given element and options
       * @param el the HTML element tied to this grid after it's been initialized
       * @param opts grid options - public for classes to access, but use methods to modify!
       */constructor(el,opts={}){this.el=el;this.opts=opts;/** time to wait for animation (if enabled) to be done so content sizing can happen */this.animationDelay=300+10;/** @internal */this._gsEventHandler={};/** @internal extra row added when dragging at the bottom of the grid */this._extraDragRow=0;/** @internal meant to store the scale of the active grid */this.dragTransform={xScale:1,yScale:1,xOffset:0,yOffset:0};el.gridstack=this;this.opts=opts=opts||{};// handles null/undefined/0
if(!el.classList.contains('grid-stack')){this.el.classList.add('grid-stack');}// if row property exists, replace minRow and maxRow instead
if(opts.row){opts.minRow=opts.maxRow=opts.row;delete opts.row;}const rowAttr=Utils.toNumber(el.getAttribute('gs-row'));// flag only valid in sub-grids (handled by parent, not here)
if(opts.column==='auto'){delete opts.column;}// save original setting so we can restore on save
if(opts.alwaysShowResizeHandle!==undefined){opts._alwaysShowResizeHandle=opts.alwaysShowResizeHandle;}let bk=opts.columnOpts?.breakpoints;// LEGACY: oneColumnMode stuff changed in v10.x - check if user explicitly set something to convert over
const oldOpts=opts;if(oldOpts.oneColumnModeDomSort){delete oldOpts.oneColumnModeDomSort;void 0;}if(oldOpts.oneColumnSize||oldOpts.disableOneColumnMode===false){const oneSize=oldOpts.oneColumnSize||768;delete oldOpts.oneColumnSize;delete oldOpts.disableOneColumnMode;opts.columnOpts=opts.columnOpts||{};bk=opts.columnOpts.breakpoints=opts.columnOpts.breakpoints||[];let oneColumn=bk.find(b=>b.c===1);if(!oneColumn){oneColumn={c:1,w:oneSize};bk.push(oneColumn,{c:12,w:oneSize+1});}else oneColumn.w=oneSize;}//...end LEGACY
// cleanup responsive opts (must have columnWidth | breakpoints) then sort breakpoints by size (so we can match during resize)
const resp=opts.columnOpts;if(resp){if(!resp.columnWidth&&!resp.breakpoints?.length){delete opts.columnOpts;bk=undefined;}else{resp.columnMax=resp.columnMax||12;}}if(bk?.length>1)bk.sort((a,b)=>(b.w||0)-(a.w||0));// elements DOM attributes override any passed options (like CSS style) - merge the two together
const defaults={...Utils.cloneDeep(gridDefaults),column:Utils.toNumber(el.getAttribute('gs-column'))||gridDefaults.column,minRow:rowAttr?rowAttr:Utils.toNumber(el.getAttribute('gs-min-row'))||gridDefaults.minRow,maxRow:rowAttr?rowAttr:Utils.toNumber(el.getAttribute('gs-max-row'))||gridDefaults.maxRow,staticGrid:Utils.toBool(el.getAttribute('gs-static'))||gridDefaults.staticGrid,sizeToContent:Utils.toBool(el.getAttribute('gs-size-to-content'))||undefined,draggable:{handle:(opts.handleClass?'.'+opts.handleClass:opts.handle?opts.handle:'')||gridDefaults.draggable.handle},removableOptions:{accept:opts.itemClass||gridDefaults.removableOptions.accept,decline:gridDefaults.removableOptions.decline}};if(el.getAttribute('gs-animate')){// default to true, but if set to false use that instead
defaults.animate=Utils.toBool(el.getAttribute('gs-animate'));}opts=Utils.defaults(opts,defaults);this._initMargin();// part of settings defaults...
// Now check if we're loading into 1 column mode FIRST so we don't do un-necessary work (like cellHeight = width / 12 then go 1 column)
this.checkDynamicColumn();this.el.classList.add('gs-'+opts.column);if(opts.rtl==='auto'){opts.rtl=el.style.direction==='rtl';}if(opts.rtl){this.el.classList.add('grid-stack-rtl');}// check if we're been nested, and if so update our style and keep pointer around (used during save)
const parentGridItem=this.el.closest('.'+gridDefaults.itemClass);const parentNode=parentGridItem?.gridstackNode;if(parentNode){parentNode.subGrid=this;this.parentGridNode=parentNode;this.el.classList.add('grid-stack-nested');parentNode.el.classList.add('grid-stack-sub-grid');}this._isAutoCellHeight=opts.cellHeight==='auto';if(this._isAutoCellHeight||opts.cellHeight==='initial'){// make the cell content square initially (will use resize/column event to keep it square)
this.cellHeight(undefined,false);}else{// append unit if any are set
if(typeof opts.cellHeight=='number'&&opts.cellHeightUnit&&opts.cellHeightUnit!==gridDefaults.cellHeightUnit){opts.cellHeight=opts.cellHeight+opts.cellHeightUnit;delete opts.cellHeightUnit;}this.cellHeight(opts.cellHeight,false);}// see if we need to adjust auto-hide
if(opts.alwaysShowResizeHandle==='mobile'){opts.alwaysShowResizeHandle=isTouch;}this._styleSheetClass='gs-id-'+GridStackEngine._idSeq++;this.el.classList.add(this._styleSheetClass);this._setStaticClass();const engineClass=opts.engineClass||GridStack.engineClass||GridStackEngine;this.engine=new engineClass({column:this.getColumn(),float:opts.float,maxRow:opts.maxRow,onChange:cbNodes=>{let maxH=0;this.engine.nodes.forEach(n=>{maxH=Math.max(maxH,n.y+n.h);});cbNodes.forEach(n=>{const el=n.el;if(!el)return;if(n._removeDOM){if(el)el.remove();delete n._removeDOM;}else{this._writePosAttr(el,n);}});this._updateStyles(false,maxH);// false = don't recreate, just append if need be
}});// create initial global styles BEFORE loading children so resizeToContent margin can be calculated correctly
this._updateStyles(false,0);if(opts.auto){this.batchUpdate();// prevent in between re-layout #1535 TODO: this only set float=true, need to prevent collision check...
this.engine._loading=true;// loading collision check
this.getGridItems().forEach(el=>this._prepareElement(el));delete this.engine._loading;this.batchUpdate(false);}// load any passed in children as well, which overrides any DOM layout done above
if(opts.children){const children=opts.children;delete opts.children;if(children.length)this.load(children);// don't load empty
}// if (this.engine.nodes.length) this._updateStyles(); // update based on # of children. done in engine onChange CB
this.setAnimation();// dynamic grids require pausing during drag to detect over to nest vs push
if(opts.subGridDynamic&&!DDManager.pauseDrag)DDManager.pauseDrag=true;if(opts.draggable?.pause!==undefined)DDManager.pauseDrag=opts.draggable.pause;this._setupRemoveDrop();this._setupAcceptWidget();this._updateResizeEvent();}/**
       * add a new widget and returns it.
       *
       * Widget will be always placed even if result height is more than actual grid height.
       * You need to use `willItFit()` before calling addWidget for additional check.
       * See also `makeWidget(el)` for DOM element.
       *
       * @example
       * const grid = GridStack.init();
       * grid.addWidget({w: 3, content: 'hello'});
       *
       * @param w GridStackWidget definition. used MakeWidget(el) if you have dom element instead.
       */addWidget(w){if(typeof w==='string'){void 0;return;}if(w.ELEMENT_NODE){void 0;return this.makeWidget(w);}let el;let node=w;node.grid=this;if(node?.el){el=node.el;// re-use element stored in the node
}else if(GridStack.addRemoveCB){el=GridStack.addRemoveCB(this.el,w,true,false);}else{el=this.createWidgetDivs(node);}if(!el)return;// if the caller ended up initializing the widget in addRemoveCB, or we stared with one already, skip the rest
node=el.gridstackNode;if(node&&el.parentElement===this.el&&this.engine.nodes.find(n=>n._id===node._id))return el;// Tempting to initialize the passed in opt with default and valid values, but this break knockout demos
// as the actual value are filled in when _prepareElement() calls el.getAttribute('gs-xyz') before adding the node.
// So make sure we load any DOM attributes that are not specified in passed in options (which override)
const domAttr=this._readAttr(el);Utils.defaults(w,domAttr);this.engine.prepareNode(w);// this._writeAttr(el, w); why write possibly incorrect values back when makeWidget() will ?
this.el.appendChild(el);this.makeWidget(el,w);return el;}/** create the default grid item divs, and content (possibly lazy loaded) by using GridStack.renderCB() */createWidgetDivs(n){const el=Utils.createDiv(['grid-stack-item',this.opts.itemClass]);const cont=Utils.createDiv(['grid-stack-item-content'],el);if(Utils.lazyLoad(n)){if(!n.visibleObservable){n.visibleObservable=new IntersectionObserver(([entry])=>{if(entry.isIntersecting){n.visibleObservable?.disconnect();delete n.visibleObservable;GridStack.renderCB(cont,n);n.grid?.prepareDragDrop(n.el);}});window.setTimeout(()=>n.visibleObservable?.observe(el));// wait until callee sets position attributes
}}else GridStack.renderCB(cont,n);return el;}/**
       * Convert an existing gridItem element into a sub-grid with the given (optional) options, else inherit them
       * from the parent's subGrid options.
       * @param el gridItem element to convert
       * @param ops (optional) sub-grid options, else default to node, then parent settings, else defaults
       * @param nodeToAdd (optional) node to add to the newly created sub grid (used when dragging over existing regular item)
       * @param saveContent if true (default) the html inside .grid-stack-content will be saved to child widget
       * @returns newly created grid
       */makeSubGrid(el,ops,nodeToAdd,saveContent=true){let node=el.gridstackNode;if(!node){node=this.makeWidget(el).gridstackNode;}if(node.subGrid?.el)return node.subGrid;// already done
// find the template subGrid stored on a parent as fallback...
let subGridTemplate;// eslint-disable-next-line @typescript-eslint/no-this-alias
let grid=this;while(grid&&!subGridTemplate){subGridTemplate=grid.opts?.subGridOpts;grid=grid.parentGridNode?.grid;}//... and set the create options
ops=Utils.cloneDeep({// by default sub-grid inherit from us | parent, other than id, children, etc...
...this.opts,id:undefined,children:undefined,column:'auto',columnOpts:undefined,layout:'list',subGridOpts:undefined,...(subGridTemplate||{}),...(ops||node.subGridOpts||{})});node.subGridOpts=ops;// if column special case it set, remember that flag and set default
let autoColumn;if(ops.column==='auto'){autoColumn=true;ops.column=Math.max(node.w||1,nodeToAdd?.w||1);delete ops.columnOpts;// driven by parent
}// if we're converting an existing full item, move over the content to be the first sub item in the new grid
let content=node.el.querySelector('.grid-stack-item-content');let newItem;let newItemOpt;if(saveContent){this._removeDD(node.el);// remove D&D since it's set on content div
newItemOpt={...node,x:0,y:0};Utils.removeInternalForSave(newItemOpt);delete newItemOpt.subGridOpts;if(node.content){newItemOpt.content=node.content;delete node.content;}if(GridStack.addRemoveCB){newItem=GridStack.addRemoveCB(this.el,newItemOpt,true,false);}else{newItem=Utils.createDiv(['grid-stack-item']);newItem.appendChild(content);content=Utils.createDiv(['grid-stack-item-content'],node.el);}this.prepareDragDrop(node.el);// ... and restore original D&D
}// if we're adding an additional item, make the container large enough to have them both
if(nodeToAdd){const w=autoColumn?ops.column:node.w;const h=node.h+nodeToAdd.h;const style=node.el.style;style.transition='none';// show up instantly so we don't see scrollbar with nodeToAdd
this.update(node.el,{w,h});setTimeout(()=>style.transition=null);// recover animation
}const subGrid=node.subGrid=GridStack.addGrid(content,ops);if(nodeToAdd?._moving)subGrid._isTemp=true;// prevent re-nesting as we add over
if(autoColumn)subGrid._autoColumn=true;// add the original content back as a child of hte newly created grid
if(saveContent){subGrid.makeWidget(newItem,newItemOpt);}// now add any additional node
if(nodeToAdd){if(nodeToAdd._moving){// create an artificial event even for the just created grid to receive this item
window.setTimeout(()=>Utils.simulateMouseEvent(nodeToAdd._event,'mouseenter',subGrid.el),0);}else{subGrid.makeWidget(node.el,node);}}// if sizedToContent, we need to re-calc the size of ourself
this.resizeToContentCheck(false,node);return subGrid;}/**
       * called when an item was converted into a nested grid to accommodate a dragged over item, but then item leaves - return back
       * to the original grid-item. Also called to remove empty sub-grids when last item is dragged out (since re-creating is simple)
       */removeAsSubGrid(nodeThatRemoved){const pGrid=this.parentGridNode?.grid;if(!pGrid)return;pGrid.batchUpdate();pGrid.removeWidget(this.parentGridNode.el,true,true);this.engine.nodes.forEach(n=>{// migrate any children over and offsetting by our location
n.x+=this.parentGridNode.x;n.y+=this.parentGridNode.y;pGrid.makeWidget(n.el,n);});pGrid.batchUpdate(false);if(this.parentGridNode)delete this.parentGridNode.subGrid;delete this.parentGridNode;// create an artificial event for the original grid now that this one is gone (got a leave, but won't get enter)
if(nodeThatRemoved){window.setTimeout(()=>Utils.simulateMouseEvent(nodeThatRemoved._event,'mouseenter',pGrid.el),0);}}/**
       * saves the current layout returning a list of widgets for serialization which might include any nested grids.
       * @param saveContent if true (default) the latest html inside .grid-stack-content will be saved to GridStackWidget.content field, else it will
       * be removed.
       * @param saveGridOpt if true (default false), save the grid options itself, so you can call the new GridStack.addGrid()
       * to recreate everything from scratch. GridStackOptions.children would then contain the widget list instead.
       * @param saveCB callback for each node -> widget, so application can insert additional data to be saved into the widget data structure.
       * @returns list of widgets or full grid option, including .children list of widgets
       */save(saveContent=true,saveGridOpt=false,saveCB=GridStack.saveCB){// return copied GridStackWidget (with optionally .el) we can modify at will...
const list=this.engine.save(saveContent,saveCB);// check for HTML content and nested grids
list.forEach(n=>{if(saveContent&&n.el&&!n.subGrid&&!saveCB){// sub-grid are saved differently, not plain content
const itemContent=n.el.querySelector('.grid-stack-item-content');n.content=itemContent?.innerHTML;if(!n.content)delete n.content;}else{if(!saveContent&&!saveCB){delete n.content;}// check for nested grid
if(n.subGrid?.el){const listOrOpt=n.subGrid.save(saveContent,saveGridOpt,saveCB);n.subGridOpts=saveGridOpt?listOrOpt:{children:listOrOpt};delete n.subGrid;}}delete n.el;});// check if save entire grid options (needed for recursive) + children...
if(saveGridOpt){const o=Utils.cloneDeep(this.opts);// delete default values that will be recreated on launch
if(o.marginBottom===o.marginTop&&o.marginRight===o.marginLeft&&o.marginTop===o.marginRight){o.margin=o.marginTop;delete o.marginTop;delete o.marginRight;delete o.marginBottom;delete o.marginLeft;}if(o.rtl===(this.el.style.direction==='rtl')){o.rtl='auto';}if(this._isAutoCellHeight){o.cellHeight='auto';}if(this._autoColumn){o.column='auto';}const origShow=o._alwaysShowResizeHandle;delete o._alwaysShowResizeHandle;if(origShow!==undefined){o.alwaysShowResizeHandle=origShow;}else{delete o.alwaysShowResizeHandle;}Utils.removeInternalAndSame(o,gridDefaults);o.children=list;return o;}return list;}/**
       * load the widgets from a list. This will call update() on each (matching by id) or add/remove widgets that are not there.
       *
       * @param items list of widgets definition to update/create
       * @param addRemove boolean (default true) or callback method can be passed to control if and how missing widgets can be added/removed, giving
       * the user control of insertion.
       *
       * @example
       * see http://gridstackjs.com/demo/serialization.html
       */load(items,addRemove=GridStack.addRemoveCB||true){items=Utils.cloneDeep(items);// so we can mod
const column=this.getColumn();// make sure size 1x1 (default) is present as it may need to override current sizes
items.forEach(n=>{n.w=n.w||1;n.h=n.h||1;});// sort items. those without coord will be appended last
items=Utils.sort(items);this.engine.skipCacheUpdate=this._ignoreLayoutsNodeChange=true;// skip layout update
// if we're loading a layout into for example 1 column and items don't fit, make sure to save
// the original wanted layout so we can scale back up correctly #1471
let maxColumn=0;items.forEach(n=>{maxColumn=Math.max(maxColumn,(n.x||0)+n.w);});if(maxColumn>this.engine.defaultColumn)this.engine.defaultColumn=maxColumn;if(maxColumn>column)this.engine.cacheLayout(items,maxColumn,true);// if given a different callback, temporally set it as global option so creating will use it
const prevCB=GridStack.addRemoveCB;if(typeof addRemove==='function')GridStack.addRemoveCB=addRemove;const removed=[];this.batchUpdate();// if we are loading from empty temporarily remove animation
const blank=!this.engine.nodes.length;if(blank)this.setAnimation(false);// see if any items are missing from new layout and need to be removed first
if(!blank&&addRemove){const copyNodes=[...this.engine.nodes];// don't loop through array you modify
copyNodes.forEach(n=>{if(!n.id)return;const item=Utils.find(items,n.id);if(!item){if(GridStack.addRemoveCB)GridStack.addRemoveCB(this.el,n,false,false);removed.push(n);// batch keep track
this.removeWidget(n.el,true,false);}});}// now add/update the widgets - starting with removing items in the new layout we will reposition
// to reduce collision and add no-coord ones at next available spot
this.engine._loading=true;// help with collision
const updateNodes=[];this.engine.nodes=this.engine.nodes.filter(n=>{if(Utils.find(items,n.id)){updateNodes.push(n);return false;}// remove if found from list
return true;});items.forEach(w=>{const item=Utils.find(updateNodes,w.id);if(item){// if item sizes to content, re-use the exiting height so it's a better guess at the final size (same if width doesn't change)
if(Utils.shouldSizeToContent(item))w.h=item.h;// check if missing coord, in which case find next empty slot with new (or old if missing) sizes
this.engine.nodeBoundFix(w);if(w.autoPosition||w.x===undefined||w.y===undefined){w.w=w.w||item.w;w.h=w.h||item.h;this.engine.findEmptyPosition(w);}// add back to current list BUT force a collision check if it 'appears' we didn't change to make sure we don't overlap others now
this.engine.nodes.push(item);if(Utils.samePos(item,w)&&this.engine.nodes.length>1){this.moveNode(item,{...w,forceCollide:true});Utils.copyPos(w,item);// use possily updated values before update() is called next (no-op since already moved)
}this.update(item.el,w);if(w.subGridOpts?.children){// update any sub grid as well
const sub=item.el.querySelector('.grid-stack');if(sub&&sub.gridstack){sub.gridstack.load(w.subGridOpts.children);// TODO: support updating grid options ?
}}}else if(addRemove){this.addWidget(w);}});delete this.engine._loading;// done loading
this.engine.removedNodes=removed;this.batchUpdate(false);// after commit, clear that flag
delete this._ignoreLayoutsNodeChange;delete this.engine.skipCacheUpdate;prevCB?GridStack.addRemoveCB=prevCB:delete GridStack.addRemoveCB;// delay adding animation back
if(blank&&this.opts?.animate)this.setAnimation(this.opts.animate,true);return this;}/**
       * use before calling a bunch of `addWidget()` to prevent un-necessary relayouts in between (more efficient)
       * and get a single event callback. You will see no changes until `batchUpdate(false)` is called.
       */batchUpdate(flag=true){this.engine.batchUpdate(flag);if(!flag){this._updateContainerHeight();this._triggerRemoveEvent();this._triggerAddEvent();this._triggerChangeEvent();}return this;}/**
       * Gets current cell height.
       */getCellHeight(forcePixel=false){if(this.opts.cellHeight&&this.opts.cellHeight!=='auto'&&(!forcePixel||!this.opts.cellHeightUnit||this.opts.cellHeightUnit==='px')){return this.opts.cellHeight;}// do rem/em/cm/mm to px conversion
if(this.opts.cellHeightUnit==='rem'){return this.opts.cellHeight*parseFloat(getComputedStyle(document.documentElement).fontSize);}if(this.opts.cellHeightUnit==='em'){return this.opts.cellHeight*parseFloat(getComputedStyle(this.el).fontSize);}if(this.opts.cellHeightUnit==='cm'){// 1cm = 96px/2.54. See https://www.w3.org/TR/css-values-3/#absolute-lengths
return this.opts.cellHeight*(96/2.54);}if(this.opts.cellHeightUnit==='mm'){return this.opts.cellHeight*(96/2.54)/10;}// else get first cell height
const el=this.el.querySelector('.'+this.opts.itemClass);if(el){const h=Utils.toNumber(el.getAttribute('gs-h'))||1;// since we don't write 1 anymore
return Math.round(el.offsetHeight/h);}// else do entire grid and # of rows (but doesn't work if min-height is the actual constrain)
const rows=parseInt(this.el.getAttribute('gs-current-row'));return rows?Math.round(this.el.getBoundingClientRect().height/rows):this.opts.cellHeight;}/**
       * Update current cell height - see `GridStackOptions.cellHeight` for format.
       * This method rebuilds an internal CSS style sheet.
       * Note: You can expect performance issues if call this method too often.
       *
       * @param val the cell height. If not passed (undefined), cells content will be made square (match width minus margin),
       * if pass 0 the CSS will be generated by the application instead.
       * @param update (Optional) if false, styles will not be updated
       *
       * @example
       * grid.cellHeight(100); // same as 100px
       * grid.cellHeight('70px');
       * grid.cellHeight(grid.cellWidth() * 1.2);
       */cellHeight(val,update=true){// if not called internally, check if we're changing mode
if(update&&val!==undefined){if(this._isAutoCellHeight!==(val==='auto')){this._isAutoCellHeight=val==='auto';this._updateResizeEvent();}}if(val==='initial'||val==='auto'){val=undefined;}// make item content be square
if(val===undefined){const marginDiff=-this.opts.marginRight-this.opts.marginLeft+this.opts.marginTop+this.opts.marginBottom;val=this.cellWidth()+marginDiff;}const data=Utils.parseHeight(val);if(this.opts.cellHeightUnit===data.unit&&this.opts.cellHeight===data.h){return this;}this.opts.cellHeightUnit=data.unit;this.opts.cellHeight=data.h;this.resizeToContentCheck();if(update){this._updateStyles(true);// true = force re-create for current # of rows
}return this;}/** Gets current cell width. */cellWidth(){return this._widthOrContainer()/this.getColumn();}/** return our expected width (or parent) , and optionally of window for dynamic column check */_widthOrContainer(forBreakpoint=false){// use `offsetWidth` or `clientWidth` (no scrollbar) ?
// https://stackoverflow.com/questions/21064101/understanding-offsetwidth-clientwidth-scrollwidth-and-height-respectively
return forBreakpoint&&this.opts.columnOpts?.breakpointForWindow?window.innerWidth:this.el.clientWidth||this.el.parentElement.clientWidth||window.innerWidth;}/** checks for dynamic column count for our current size, returning true if changed */checkDynamicColumn(){const resp=this.opts.columnOpts;if(!resp||!resp.columnWidth&&!resp.breakpoints?.length)return false;const column=this.getColumn();let newColumn=column;const w=this._widthOrContainer(true);if(resp.columnWidth){newColumn=Math.min(Math.round(w/resp.columnWidth)||1,resp.columnMax);}else{// find the closest breakpoint (already sorted big to small) that matches
newColumn=resp.columnMax;let i=0;while(i<resp.breakpoints.length&&w<=resp.breakpoints[i].w){newColumn=resp.breakpoints[i++].c||column;}}if(newColumn!==column){const bk=resp.breakpoints?.find(b=>b.c===newColumn);this.column(newColumn,bk?.layout||resp.layout);return true;}return false;}/**
       * re-layout grid items to reclaim any empty space. Options are:
       * 'list' keep the widget left->right order the same, even if that means leaving an empty slot if things don't fit
       * 'compact' might re-order items to fill any empty space
       *
       * doSort - 'false' to let you do your own sorting ahead in case you need to control a different order. (default to sort)
       */compact(layout='compact',doSort=true){this.engine.compact(layout,doSort);this._triggerChangeEvent();return this;}/**
       * set the number of columns in the grid. Will update existing widgets to conform to new number of columns,
       * as well as cache the original layout so you can revert back to previous positions without loss.
       * Requires `gridstack-extra.css` or `gridstack-extra.min.css` for [2-11],
       * else you will need to generate correct CSS (see https://github.com/gridstack/gridstack.js#change-grid-columns)
       * @param column - Integer > 0 (default 12).
       * @param layout specify the type of re-layout that will happen (position, size, etc...).
       * Note: items will never be outside of the current column boundaries. default ('moveScale'). Ignored for 1 column
       */column(column,layout='moveScale'){if(!column||column<1||this.opts.column===column)return this;const oldColumn=this.getColumn();this.opts.column=column;if(!this.engine)return this;// called in constructor, noting else to do
this.engine.column=column;this.el.classList.remove('gs-'+oldColumn);this.el.classList.add('gs-'+column);// update the items now, checking if we have a custom children layout
/*const newChildren = this.opts.columnOpts?.breakpoints?.find(r => r.c === column)?.children;
          if (newChildren) this.load(newChildren);
          else*/this.engine.columnChanged(oldColumn,column,layout);if(this._isAutoCellHeight)this.cellHeight();this.resizeToContentCheck(true);// wait for width resizing
// and trigger our event last...
this._ignoreLayoutsNodeChange=true;// skip layout update
this._triggerChangeEvent();delete this._ignoreLayoutsNodeChange;return this;}/**
       * get the number of columns in the grid (default 12)
       */getColumn(){return this.opts.column;}/** returns an array of grid HTML elements (no placeholder) - used to iterate through our children in DOM order */getGridItems(){return Array.from(this.el.children).filter(el=>el.matches('.'+this.opts.itemClass)&&!el.matches('.'+this.opts.placeholderClass));}/** true if changeCB should be ignored due to column change, sizeToContent, loading, etc... which caller can ignore for dirty flag case */isIgnoreChangeCB(){return this._ignoreLayoutsNodeChange;}/**
       * Destroys a grid instance. DO NOT CALL any methods or access any vars after this as it will free up members.
       * @param removeDOM if `false` grid and items HTML elements will not be removed from the DOM (Optional. Default `true`).
       */destroy(removeDOM=true){if(!this.el)return;// prevent multiple calls
this.offAll();this._updateResizeEvent(true);this.setStatic(true,false);// permanently removes DD but don't set CSS class (we're going away)
this.setAnimation(false);if(!removeDOM){this.removeAll(removeDOM);this.el.classList.remove(this._styleSheetClass);this.el.removeAttribute('gs-current-row');}else{this.el.parentNode.removeChild(this.el);}this._removeStylesheet();delete this.parentGridNode?.subGrid;delete this.parentGridNode;delete this.opts;delete this._placeholder?.gridstackNode;delete this._placeholder;delete this.engine;delete this.el.gridstack;// remove circular dependency that would prevent a freeing
delete this.el;return this;}/**
       * enable/disable floating widgets (default: `false`) See [example](http://gridstackjs.com/demo/float.html)
       */float(val){if(this.opts.float!==val){this.opts.float=this.engine.float=val;this._triggerChangeEvent();}return this;}/**
       * get the current float mode
       */getFloat(){return this.engine.float;}/**
       * Get the position of the cell under a pixel on screen.
       * @param position the position of the pixel to resolve in
       * absolute coordinates, as an object with top and left properties
       * @param useDocRelative if true, value will be based on document position vs parent position (Optional. Default false).
       * Useful when grid is within `position: relative` element
       *
       * Returns an object with properties `x` and `y` i.e. the column and row in the grid.
       */getCellFromPixel(position,useDocRelative=false){const box=this.el.getBoundingClientRect();// console.log(`getBoundingClientRect left: ${box.left} top: ${box.top} w: ${box.w} h: ${box.h}`)
let containerPos;if(useDocRelative){containerPos={top:box.top+document.documentElement.scrollTop,left:box.left};// console.log(`getCellFromPixel scrollTop: ${document.documentElement.scrollTop}`)
}else{containerPos={top:this.el.offsetTop,left:this.el.offsetLeft};// console.log(`getCellFromPixel offsetTop: ${containerPos.left} offsetLeft: ${containerPos.top}`)
}const relativeLeft=position.left-containerPos.left;const relativeTop=position.top-containerPos.top;const columnWidth=box.width/this.getColumn();const rowHeight=box.height/parseInt(this.el.getAttribute('gs-current-row'));return{x:Math.floor(relativeLeft/columnWidth),y:Math.floor(relativeTop/rowHeight)};}/** returns the current number of rows, which will be at least `minRow` if set */getRow(){return Math.max(this.engine.getRow(),this.opts.minRow);}/**
       * Checks if specified area is empty.
       * @param x the position x.
       * @param y the position y.
       * @param w the width of to check
       * @param h the height of to check
       */isAreaEmpty(x,y,w,h){return this.engine.isAreaEmpty(x,y,w,h);}/**
       * If you add elements to your grid by hand (or have some framework creating DOM), you have to tell gridstack afterwards to make them widgets.
       * If you want gridstack to add the elements for you, use `addWidget()` instead.
       * Makes the given element a widget and returns it.
       * @param els widget or single selector to convert.
       * @param options widget definition to use instead of reading attributes or using default sizing values
       *
       * @example
       * const grid = GridStack.init();
       * grid.el.innerHtml = '<div id="1" gs-w="3"></div><div id="2"></div>';
       * grid.makeWidget('1');
       * grid.makeWidget('2', {w:2, content: 'hello'});
       */makeWidget(els,options){const el=GridStack.getElement(els);if(!el)return;if(!el.parentElement)this.el.appendChild(el);this._prepareElement(el,true,options);const node=el.gridstackNode;this._updateContainerHeight();// see if there is a sub-grid to create
if(node.subGridOpts){this.makeSubGrid(el,node.subGridOpts,undefined,false);// node.subGrid will be used as option in method, no need to pass
}// if we're adding an item into 1 column make sure
// we don't override the larger 12 column layout that was already saved. #1985
let resetIgnoreLayoutsNodeChange;if(this.opts.column===1&&!this._ignoreLayoutsNodeChange){resetIgnoreLayoutsNodeChange=this._ignoreLayoutsNodeChange=true;}this._triggerAddEvent();this._triggerChangeEvent();if(resetIgnoreLayoutsNodeChange)delete this._ignoreLayoutsNodeChange;return el;}on(name,callback){// check for array of names being passed instead
if(name.indexOf(' ')!==-1){const names=name.split(' ');names.forEach(name=>this.on(name,callback));return this;}// native CustomEvent handlers - cash the generic handlers so we can easily remove
if(name==='change'||name==='added'||name==='removed'||name==='enable'||name==='disable'){const noData=name==='enable'||name==='disable';if(noData){this._gsEventHandler[name]=event=>callback(event);}else{this._gsEventHandler[name]=event=>{if(event.detail)callback(event,event.detail);};}this.el.addEventListener(name,this._gsEventHandler[name]);}else if(name==='drag'||name==='dragstart'||name==='dragstop'||name==='resizestart'||name==='resize'||name==='resizestop'||name==='dropped'||name==='resizecontent'){// drag&drop stop events NEED to be call them AFTER we update node attributes so handle them ourself.
// do same for start event to make it easier...
this._gsEventHandler[name]=callback;}else{void 0;}return this;}/**
       * unsubscribe from the 'on' event GridStackEvent
       * @param name of the event (see possible values) or list of names space separated
       */off(name){// check for array of names being passed instead
if(name.indexOf(' ')!==-1){const names=name.split(' ');names.forEach(name=>this.off(name));return this;}if(name==='change'||name==='added'||name==='removed'||name==='enable'||name==='disable'){// remove native CustomEvent handlers
if(this._gsEventHandler[name]){this.el.removeEventListener(name,this._gsEventHandler[name]);}}delete this._gsEventHandler[name];return this;}/** remove all event handlers */offAll(){Object.keys(this._gsEventHandler).forEach(key=>this.off(key));return this;}/**
       * Removes widget from the grid.
       * @param el  widget or selector to modify
       * @param removeDOM if `false` DOM element won't be removed from the tree (Default? true).
       * @param triggerEvent if `false` (quiet mode) element will not be added to removed list and no 'removed' callbacks will be called (Default? true).
       */removeWidget(els,removeDOM=true,triggerEvent=true){if(!els){void 0;return this;}GridStack.getElements(els).forEach(el=>{if(el.parentElement&&el.parentElement!==this.el)return;// not our child!
let node=el.gridstackNode;// For Meteor support: https://github.com/gridstack/gridstack.js/pull/272
if(!node){node=this.engine.nodes.find(n=>el===n.el);}if(!node)return;if(removeDOM&&GridStack.addRemoveCB){GridStack.addRemoveCB(this.el,node,false,false);}// remove our DOM data (circular link) and drag&drop permanently
delete el.gridstackNode;this._removeDD(el);this.engine.removeNode(node,removeDOM,triggerEvent);if(removeDOM&&el.parentElement){el.remove();// in batch mode engine.removeNode doesn't call back to remove DOM
}});if(triggerEvent){this._triggerRemoveEvent();this._triggerChangeEvent();}return this;}/**
       * Removes all widgets from the grid.
       * @param removeDOM if `false` DOM elements won't be removed from the tree (Default? `true`).
       * @param triggerEvent if `false` (quiet mode) element will not be added to removed list and no 'removed' callbacks will be called (Default? true).
       */removeAll(removeDOM=true,triggerEvent=true){// always remove our DOM data (circular link) before list gets emptied and drag&drop permanently
this.engine.nodes.forEach(n=>{if(removeDOM&&GridStack.addRemoveCB){GridStack.addRemoveCB(this.el,n,false,false);}delete n.el.gridstackNode;if(!this.opts.staticGrid)this._removeDD(n.el);});this.engine.removeAll(removeDOM,triggerEvent);if(triggerEvent)this._triggerRemoveEvent();return this;}/**
       * Toggle the grid animation state.  Toggles the `grid-stack-animate` class.
       * @param doAnimate if true the grid will animate.
       * @param delay if true setting will be set on next event loop.
       */setAnimation(doAnimate=this.opts.animate,delay){if(delay){// delay, but check to make sure grid (opt) is still around
setTimeout(()=>{if(this.opts)this.setAnimation(doAnimate);});}else if(doAnimate){this.el.classList.add('grid-stack-animate');}else{this.el.classList.remove('grid-stack-animate');}return this;}/** @internal */hasAnimationCSS(){return this.el.classList.contains('grid-stack-animate');}/**
       * Toggle the grid static state, which permanently removes/add Drag&Drop support, unlike disable()/enable() that just turns it off/on.
       * Also toggle the grid-stack-static class.
       * @param val if true the grid become static.
       * @param updateClass true (default) if css class gets updated
       * @param recurse true (default) if sub-grids also get updated
       */setStatic(val,updateClass=true,recurse=true){if(!!this.opts.staticGrid===val)return this;val?this.opts.staticGrid=true:delete this.opts.staticGrid;this._setupRemoveDrop();this._setupAcceptWidget();this.engine.nodes.forEach(n=>{this.prepareDragDrop(n.el);// either delete or init Drag&drop
if(n.subGrid&&recurse)n.subGrid.setStatic(val,updateClass,recurse);});if(updateClass){this._setStaticClass();}return this;}/**
       * Updates the passed in options on the grid (similar to update(widget) for for the grid options).
       * @param options PARTIAL grid options to update - only items specified will be updated.
       * NOTE: not all options updating are currently supported (lot of code, unlikely to change)
       */updateOptions(o){const opts=this.opts;if(o.acceptWidgets!==undefined)this._setupAcceptWidget();if(o.animate!==undefined)this.setAnimation();if(o.cellHeight){this.cellHeight(o.cellHeight,true);delete o.cellHeight;}if(o.class&&o.class!==opts.class){if(opts.class)this.el.classList.remove(opts.class);this.el.classList.add(o.class);}if(typeof o.column==='number'&&!o.columnOpts){this.column(o.column);delete o.column;}// responsive column take over actual count
if(o.margin!==undefined)this.margin(o.margin);if(o.staticGrid!==undefined)this.setStatic(o.staticGrid);if(o.disableDrag!==undefined&&!o.staticGrid)this.enableMove(!o.disableDrag);if(o.disableResize!==undefined&&!o.staticGrid)this.enableResize(!o.disableResize);if(o.float!==undefined)this.float(o.float);if(o.row!==undefined){opts.minRow=opts.maxRow=o.row;}if(o.children?.length){this.load(o.children);delete o.children;}// TBD if we have a real need for these (more complex code)
// alwaysShowResizeHandle, draggable, handle, handleClass, itemClass, layout, placeholderClass, placeholderText, resizable, removable, row,...
// rest are just copied over...
this.opts={...this.opts,...o};return this;}/**
       * Updates widget position/size and other info. Note: if you need to call this on all nodes, use load() instead which will update what changed.
       * @param els  widget or selector of objects to modify (note: setting the same x,y for multiple items will be indeterministic and likely unwanted)
       * @param opt new widget options (x,y,w,h, etc..). Only those set will be updated.
       */update(els,opt){GridStack.getElements(els).forEach(el=>{const n=el?.gridstackNode;if(!n)return;const w={...Utils.copyPos({},n),...Utils.cloneDeep(opt)};// make a copy we can modify in case they re-use it or multiple items
this.engine.nodeBoundFix(w);delete w.autoPosition;// move/resize widget if anything changed
const keys=['x','y','w','h'];let m;if(keys.some(k=>w[k]!==undefined&&w[k]!==n[k])){m={};keys.forEach(k=>{m[k]=w[k]!==undefined?w[k]:n[k];delete w[k];});}// for a move as well IFF there is any min/max fields set
if(!m&&(w.minW||w.minH||w.maxW||w.maxH)){m={};// will use node position but validate values
}// check for content changing
if(w.content!==undefined){const itemContent=el.querySelector('.grid-stack-item-content');if(itemContent&&itemContent.textContent!==w.content){n.content=w.content;GridStack.renderCB(itemContent,w);// restore any sub-grid back
if(n.subGrid?.el){itemContent.appendChild(n.subGrid.el);if(!n.subGrid.opts.styleInHead)n.subGrid._updateStyles(true);// force create
}}delete w.content;}// any remaining fields are assigned, but check for dragging changes, resize constrain
let changed=false;let ddChanged=false;for(const key in w){if(key[0]!=='_'&&n[key]!==w[key]){n[key]=w[key];changed=true;ddChanged=ddChanged||!this.opts.staticGrid&&(key==='noResize'||key==='noMove'||key==='locked');}}Utils.sanitizeMinMax(n);// finally move the widget and update attr
if(m){const widthChanged=m.w!==undefined&&m.w!==n.w;this.moveNode(n,m);if(widthChanged&&n.subGrid){// if we're animating the client size hasn't changed yet, so force a change (not exact size)
n.subGrid.onResize(this.hasAnimationCSS()?n.w:undefined);}else{this.resizeToContentCheck(widthChanged,n);}delete n._orig;// clear out original position now that we moved #2669
}if(m||changed){this._writeAttr(el,n);}if(ddChanged){this.prepareDragDrop(n.el);}});return this;}moveNode(n,m){const wasUpdating=n._updating;if(!wasUpdating)this.engine.cleanNodes().beginUpdate(n);this.engine.moveNode(n,m);this._updateContainerHeight();if(!wasUpdating){this._triggerChangeEvent();this.engine.endUpdate();}}/**
       * Updates widget height to match the content height to avoid v-scrollbar or dead space.
       * Note: this assumes only 1 child under resizeToContentParent='.grid-stack-item-content' (sized to gridItem minus padding) that is at the entire content size wanted.
       * @param el grid item element
       * @param useNodeH set to true if GridStackNode.h should be used instead of actual container height when we don't need to wait for animation to finish to get actual DOM heights
       */resizeToContent(el){if(!el)return;el.classList.remove('size-to-content-max');if(!el.clientHeight)return;// 0 when hidden, skip
const n=el.gridstackNode;if(!n)return;const grid=n.grid;if(!grid||el.parentElement!==grid.el)return;// skip if we are not inside a grid
const cell=grid.getCellHeight(true);if(!cell)return;let height=n.h?n.h*cell:el.clientHeight;// getBoundingClientRect().height seem to flicker back and forth
let item;if(n.resizeToContentParent)item=el.querySelector(n.resizeToContentParent);if(!item)item=el.querySelector(GridStack.resizeToContentParent);if(!item)return;const padding=el.clientHeight-item.clientHeight;// full - available height to our child (minus border, padding...)
const itemH=n.h?n.h*cell-padding:item.clientHeight;// calculated to what cellHeight is or will become (rather than actual to prevent waiting for animation to finish)
let wantedH;if(n.subGrid){// sub-grid - use their actual row count * their cell height, BUT append any content outside of the grid (eg: above text)
wantedH=n.subGrid.getRow()*n.subGrid.getCellHeight(true);const subRec=n.subGrid.el.getBoundingClientRect();const parentRec=n.subGrid.el.parentElement.getBoundingClientRect();wantedH+=subRec.top-parentRec.top;}else if(n.subGridOpts?.children?.length){// not sub-grid just yet (case above) wait until we do
return;}else{// NOTE: clientHeight & getBoundingClientRect() is undefined for text and other leaf nodes. use <div> container!
const child=item.firstElementChild;if(!child){void 0;return;}wantedH=child.getBoundingClientRect().height||itemH;}if(itemH===wantedH)return;height+=wantedH-itemH;let h=Math.ceil(height/cell);// check for min/max and special sizing
const softMax=Number.isInteger(n.sizeToContent)?n.sizeToContent:0;if(softMax&&h>softMax){h=softMax;el.classList.add('size-to-content-max');// get v-scroll back
}if(n.minH&&h<n.minH)h=n.minH;else if(n.maxH&&h>n.maxH)h=n.maxH;if(h!==n.h){grid._ignoreLayoutsNodeChange=true;grid.moveNode(n,{h});delete grid._ignoreLayoutsNodeChange;}}/** call the user resize (so they can do extra work) else our build in version */resizeToContentCBCheck(el){if(GridStack.resizeToContentCB)GridStack.resizeToContentCB(el);else this.resizeToContent(el);}/** rotate (by swapping w & h) the passed in node - called when user press 'r' during dragging
       * @param els  widget or selector of objects to modify
       * @param relative optional pixel coord relative to upper/left corner to rotate around (will keep that cell under cursor)
       */rotate(els,relative){GridStack.getElements(els).forEach(el=>{const n=el.gridstackNode;if(!Utils.canBeRotated(n))return;const rot={w:n.h,h:n.w,minH:n.minW,minW:n.minH,maxH:n.maxW,maxW:n.maxH};// if given an offset, adjust x/y by column/row bounds when user presses 'r' during dragging
if(relative){const pivotX=relative.left>0?Math.floor(relative.left/this.cellWidth()):0;const pivotY=relative.top>0?Math.floor(relative.top/this.opts.cellHeight):0;rot.x=n.x+pivotX-(n.h-(pivotY+1));rot.y=n.y+pivotY-pivotX;}Object.keys(rot).forEach(k=>{if(rot[k]===undefined)delete rot[k];});const _orig=n._orig;this.update(el,rot);n._orig=_orig;// restore as move() will delete it
});return this;}/**
       * Updates the margins which will set all 4 sides at once - see `GridStackOptions.margin` for format options (CSS string format of 1,2,4 values or single number).
       * @param value margin value
       */margin(value){const isMultiValue=typeof value==='string'&&value.split(' ').length>1;// check if we can skip re-creating our CSS file... won't check if multi values (too much hassle)
if(!isMultiValue){const data=Utils.parseHeight(value);if(this.opts.marginUnit===data.unit&&this.opts.margin===data.h)return;}// re-use existing margin handling
this.opts.margin=value;this.opts.marginTop=this.opts.marginBottom=this.opts.marginLeft=this.opts.marginRight=undefined;this._initMargin();this._updateStyles(true);// true = force re-create
return this;}/** returns current margin number value (undefined if 4 sides don't match) */getMargin(){return this.opts.margin;}/**
       * Returns true if the height of the grid will be less than the vertical
       * constraint. Always returns true if grid doesn't have height constraint.
       * @param node contains x,y,w,h,auto-position options
       *
       * @example
       * if (grid.willItFit(newWidget)) {
       *   grid.addWidget(newWidget);
       * } else {
       *   alert('Not enough free space to place the widget');
       * }
       */willItFit(node){// support legacy call for now
if(arguments.length>1){void 0;// eslint-disable-next-line prefer-rest-params
const a=arguments;let i=0,w={x:a[i++],y:a[i++],w:a[i++],h:a[i++],autoPosition:a[i++]};return this.willItFit(w);}return this.engine.willItFit(node);}/** @internal */_triggerChangeEvent(){if(this.engine.batchMode)return this;const elements=this.engine.getDirtyNodes(true);// verify they really changed
if(elements&&elements.length){if(!this._ignoreLayoutsNodeChange){this.engine.layoutsNodesChange(elements);}this._triggerEvent('change',elements);}this.engine.saveInitial();// we called, now reset initial values & dirty flags
return this;}/** @internal */_triggerAddEvent(){if(this.engine.batchMode)return this;if(this.engine.addedNodes?.length){if(!this._ignoreLayoutsNodeChange){this.engine.layoutsNodesChange(this.engine.addedNodes);}// prevent added nodes from also triggering 'change' event (which is called next)
this.engine.addedNodes.forEach(n=>{delete n._dirty;});const addedNodes=[...this.engine.addedNodes];this.engine.addedNodes=[];this._triggerEvent('added',addedNodes);}return this;}/** @internal */_triggerRemoveEvent(){if(this.engine.batchMode)return this;if(this.engine.removedNodes?.length){const removedNodes=[...this.engine.removedNodes];this.engine.removedNodes=[];this._triggerEvent('removed',removedNodes);}return this;}/** @internal */_triggerEvent(type,data){const event=data?new CustomEvent(type,{bubbles:false,detail:data}):new Event(type);this.el.dispatchEvent(event);return this;}/** @internal called to delete the current dynamic style sheet used for our layout */_removeStylesheet(){if(this._styles){const styleLocation=this.opts.styleInHead?undefined:this.el.parentNode;Utils.removeStylesheet(this._styleSheetClass,styleLocation);delete this._styles;}return this;}/** @internal updated/create the CSS styles for row based layout and initial margin setting */_updateStyles(forceUpdate=false,maxH){// call to delete existing one if we change cellHeight / margin
if(forceUpdate){this._removeStylesheet();}if(maxH===undefined)maxH=this.getRow();this._updateContainerHeight();// if user is telling us they will handle the CSS themselves by setting heights to 0. Do we need this opts really ??
if(this.opts.cellHeight===0){return this;}const cellHeight=this.opts.cellHeight;const cellHeightUnit=this.opts.cellHeightUnit;const prefix=`.${this._styleSheetClass} > .${this.opts.itemClass}`;// create one as needed
if(!this._styles){// insert style to parent (instead of 'head' by default) to support WebComponent
const styleLocation=this.opts.styleInHead?undefined:this.el.parentNode;this._styles=Utils.createStylesheet(this._styleSheetClass,styleLocation,{nonce:this.opts.nonce});if(!this._styles)return this;this._styles._max=0;// these are done once only
Utils.addCSSRule(this._styles,prefix,`height: ${cellHeight}${cellHeightUnit}`);// content margins
const top=this.opts.marginTop+this.opts.marginUnit;const bottom=this.opts.marginBottom+this.opts.marginUnit;const right=this.opts.marginRight+this.opts.marginUnit;const left=this.opts.marginLeft+this.opts.marginUnit;const content=`${prefix} > .grid-stack-item-content`;const placeholder=`.${this._styleSheetClass} > .grid-stack-placeholder > .placeholder-content`;Utils.addCSSRule(this._styles,content,`top: ${top}; right: ${right}; bottom: ${bottom}; left: ${left};`);Utils.addCSSRule(this._styles,placeholder,`top: ${top}; right: ${right}; bottom: ${bottom}; left: ${left};`);// resize handles offset (to match margin)
Utils.addCSSRule(this._styles,`${prefix} > .ui-resizable-n`,`top: ${top};`);Utils.addCSSRule(this._styles,`${prefix} > .ui-resizable-s`,`bottom: ${bottom}`);Utils.addCSSRule(this._styles,`${prefix} > .ui-resizable-ne`,`right: ${right}; top: ${top}`);Utils.addCSSRule(this._styles,`${prefix} > .ui-resizable-e`,`right: ${right}`);Utils.addCSSRule(this._styles,`${prefix} > .ui-resizable-se`,`right: ${right}; bottom: ${bottom}`);Utils.addCSSRule(this._styles,`${prefix} > .ui-resizable-nw`,`left: ${left}; top: ${top}`);Utils.addCSSRule(this._styles,`${prefix} > .ui-resizable-w`,`left: ${left}`);Utils.addCSSRule(this._styles,`${prefix} > .ui-resizable-sw`,`left: ${left}; bottom: ${bottom}`);}// now update the height specific fields
maxH=maxH||this._styles._max;if(maxH>this._styles._max){const getHeight=rows=>cellHeight*rows+cellHeightUnit;for(let i=this._styles._max+1;i<=maxH;i++){// start at 1
Utils.addCSSRule(this._styles,`${prefix}[gs-y="${i}"]`,`top: ${getHeight(i)}`);Utils.addCSSRule(this._styles,`${prefix}[gs-h="${i+1}"]`,`height: ${getHeight(i+1)}`);// start at 2
}this._styles._max=maxH;}return this;}/** @internal */_updateContainerHeight(){if(!this.engine||this.engine.batchMode)return this;const parent=this.parentGridNode;let row=this.getRow()+this._extraDragRow;// this checks for minRow already
const cellHeight=this.opts.cellHeight;const unit=this.opts.cellHeightUnit;if(!cellHeight)return this;// check for css min height (non nested grid). TODO: support mismatch, say: min % while unit is px.
if(!parent){const cssMinHeight=Utils.parseHeight(getComputedStyle(this.el)['minHeight']);if(cssMinHeight.h>0&&cssMinHeight.unit===unit){const minRow=Math.floor(cssMinHeight.h/cellHeight);if(row<minRow){row=minRow;}}}this.el.setAttribute('gs-current-row',String(row));this.el.style.removeProperty('min-height');this.el.style.removeProperty('height');if(row){// nested grids have 'insert:0' to fill the space of parent by default, but we may be taller so use min-height for possible scrollbars
this.el.style[parent?'minHeight':'height']=row*cellHeight+unit;}// if we're a nested grid inside an sizeToContent item, tell it to resize itself too
if(parent&&!parent.grid.engine.batchMode&&Utils.shouldSizeToContent(parent)){parent.grid.resizeToContentCBCheck(parent.el);}return this;}/** @internal */_prepareElement(el,triggerAddEvent=false,node){node=node||this._readAttr(el);el.gridstackNode=node;node.el=el;node.grid=this;node=this.engine.addNode(node,triggerAddEvent);// write the dom sizes and class
this._writeAttr(el,node);el.classList.add(gridDefaults.itemClass,this.opts.itemClass);const sizeToContent=Utils.shouldSizeToContent(node);sizeToContent?el.classList.add('size-to-content'):el.classList.remove('size-to-content');if(sizeToContent)this.resizeToContentCheck(false,node);if(!Utils.lazyLoad(node))this.prepareDragDrop(node.el);return this;}/** @internal call to write position x,y,w,h attributes back to element */_writePosAttr(el,n){if(n.x!==undefined&&n.x!==null){el.setAttribute('gs-x',String(n.x));}if(n.y!==undefined&&n.y!==null){el.setAttribute('gs-y',String(n.y));}n.w>1?el.setAttribute('gs-w',String(n.w)):el.removeAttribute('gs-w');n.h>1?el.setAttribute('gs-h',String(n.h)):el.removeAttribute('gs-h');return this;}/** @internal call to write any default attributes back to element */_writeAttr(el,node){if(!node)return this;this._writePosAttr(el,node);const attrs/*: GridStackWidget but strings */={// autoPosition: 'gs-auto-position', // no need to write out as already in node and doesn't affect CSS
noResize:'gs-no-resize',noMove:'gs-no-move',locked:'gs-locked',id:'gs-id',sizeToContent:'gs-size-to-content'};for(const key in attrs){if(node[key]){// 0 is valid for x,y only but done above already and not in list anyway
el.setAttribute(attrs[key],String(node[key]));}else{el.removeAttribute(attrs[key]);}}return this;}/** @internal call to read any default attributes from element */_readAttr(el,clearDefaultAttr=true){const n={};n.x=Utils.toNumber(el.getAttribute('gs-x'));n.y=Utils.toNumber(el.getAttribute('gs-y'));n.w=Utils.toNumber(el.getAttribute('gs-w'));n.h=Utils.toNumber(el.getAttribute('gs-h'));n.autoPosition=Utils.toBool(el.getAttribute('gs-auto-position'));n.noResize=Utils.toBool(el.getAttribute('gs-no-resize'));n.noMove=Utils.toBool(el.getAttribute('gs-no-move'));n.locked=Utils.toBool(el.getAttribute('gs-locked'));const attr=el.getAttribute('gs-size-to-content');if(attr){if(attr==='true'||attr==='false')n.sizeToContent=Utils.toBool(attr);else n.sizeToContent=parseInt(attr,10);}n.id=el.getAttribute('gs-id');// read but never written out
n.maxW=Utils.toNumber(el.getAttribute('gs-max-w'));n.minW=Utils.toNumber(el.getAttribute('gs-min-w'));n.maxH=Utils.toNumber(el.getAttribute('gs-max-h'));n.minH=Utils.toNumber(el.getAttribute('gs-min-h'));// v8.x optimization to reduce un-needed attr that don't render or are default CSS
if(clearDefaultAttr){if(n.w===1)el.removeAttribute('gs-w');if(n.h===1)el.removeAttribute('gs-h');if(n.maxW)el.removeAttribute('gs-max-w');if(n.minW)el.removeAttribute('gs-min-w');if(n.maxH)el.removeAttribute('gs-max-h');if(n.minH)el.removeAttribute('gs-min-h');}// remove any key not found (null or false which is default, unless sizeToContent=false override)
for(const key in n){if(!n.hasOwnProperty(key))return;if(!n[key]&&n[key]!==0&&key!=='gs-size-to-content'){// 0 can be valid value (x,y only really)
delete n[key];}}return n;}/** @internal */_setStaticClass(){const classes=['grid-stack-static'];if(this.opts.staticGrid){this.el.classList.add(...classes);this.el.setAttribute('gs-static','true');}else{this.el.classList.remove(...classes);this.el.removeAttribute('gs-static');}return this;}/**
       * called when we are being resized - check if the one Column Mode needs to be turned on/off
       * and remember the prev columns we used, or get our count from parent, as well as check for cellHeight==='auto' (square)
       * or `sizeToContent` gridItem options.
       */onResize(clientWidth=this.el?.clientWidth){if(!clientWidth)return;// return if we're gone or no size yet (will get called again)
if(this.prevWidth===clientWidth)return;// no-op
this.prevWidth=clientWidth;// console.log('onResize ', clientWidth);
this.batchUpdate();// see if we're nested and take our column count from our parent....
let columnChanged=false;if(this._autoColumn&&this.parentGridNode){if(this.opts.column!==this.parentGridNode.w){this.column(this.parentGridNode.w,this.opts.layout||'list');columnChanged=true;}}else{// else check for dynamic column
columnChanged=this.checkDynamicColumn();}// make the cells content square again
if(this._isAutoCellHeight)this.cellHeight();// update any nested grids, or items size
this.engine.nodes.forEach(n=>{if(n.subGrid)n.subGrid.onResize();});if(!this._skipInitialResize)this.resizeToContentCheck(columnChanged);// wait for anim of column changed (DOM reflow before we can size correctly)
delete this._skipInitialResize;this.batchUpdate(false);return this;}/** resizes content for given node (or all) if shouldSizeToContent() is true */resizeToContentCheck(delay=false,n=undefined){if(!this.engine)return;// we've been deleted in between!
// update any gridItem height with sizeToContent, but wait for DOM $animation_speed to settle if we changed column count
// TODO: is there a way to know what the final (post animation) size of the content will be so we can animate the column width and height together rather than sequentially ?
if(delay&&this.hasAnimationCSS())return setTimeout(()=>this.resizeToContentCheck(false,n),this.animationDelay);if(n){if(Utils.shouldSizeToContent(n))this.resizeToContentCBCheck(n.el);}else if(this.engine.nodes.some(n=>Utils.shouldSizeToContent(n))){const nodes=[...this.engine.nodes];// in case order changes while resizing one
this.batchUpdate();nodes.forEach(n=>{if(Utils.shouldSizeToContent(n))this.resizeToContentCBCheck(n.el);});this.batchUpdate(false);}// call this regardless of shouldSizeToContent because widget might need to stretch to take available space after a resize
if(this._gsEventHandler['resizecontent'])this._gsEventHandler['resizecontent'](null,n?[n]:this.engine.nodes);}/** add or remove the grid element size event handler */_updateResizeEvent(forceRemove=false){// only add event if we're not nested (parent will call us) and we're auto sizing cells or supporting dynamic column (i.e. doing work)
// or supporting new sizeToContent option.
const trackSize=!this.parentGridNode&&(this._isAutoCellHeight||this.opts.sizeToContent||this.opts.columnOpts||this.engine.nodes.find(n=>n.sizeToContent));if(!forceRemove&&trackSize&&!this.resizeObserver){this._sizeThrottle=Utils.throttle(()=>this.onResize(),this.opts.cellHeightThrottle);this.resizeObserver=new ResizeObserver(()=>this._sizeThrottle());this.resizeObserver.observe(this.el);this._skipInitialResize=true;// makeWidget will originally have called on startup
}else if((forceRemove||!trackSize)&&this.resizeObserver){this.resizeObserver.disconnect();delete this.resizeObserver;delete this._sizeThrottle;}return this;}/** @internal convert a potential selector into actual element */static getElement(els='.grid-stack-item'){return Utils.getElement(els);}/** @internal */static getElements(els='.grid-stack-item'){return Utils.getElements(els);}/** @internal */static getGridElement(els){return GridStack.getElement(els);}/** @internal */static getGridElements(els){return Utils.getElements(els);}/** @internal initialize margin top/bottom/left/right and units */_initMargin(){let data;let margin=0;// support passing multiple values like CSS (ex: '5px 10px 0 20px')
let margins=[];if(typeof this.opts.margin==='string'){margins=this.opts.margin.split(' ');}if(margins.length===2){// top/bot, left/right like CSS
this.opts.marginTop=this.opts.marginBottom=margins[0];this.opts.marginLeft=this.opts.marginRight=margins[1];}else if(margins.length===4){// Clockwise like CSS
this.opts.marginTop=margins[0];this.opts.marginRight=margins[1];this.opts.marginBottom=margins[2];this.opts.marginLeft=margins[3];}else{data=Utils.parseHeight(this.opts.margin);this.opts.marginUnit=data.unit;margin=this.opts.margin=data.h;}// see if top/bottom/left/right need to be set as well
if(this.opts.marginTop===undefined){this.opts.marginTop=margin;}else{data=Utils.parseHeight(this.opts.marginTop);this.opts.marginTop=data.h;delete this.opts.margin;}if(this.opts.marginBottom===undefined){this.opts.marginBottom=margin;}else{data=Utils.parseHeight(this.opts.marginBottom);this.opts.marginBottom=data.h;delete this.opts.margin;}if(this.opts.marginRight===undefined){this.opts.marginRight=margin;}else{data=Utils.parseHeight(this.opts.marginRight);this.opts.marginRight=data.h;delete this.opts.margin;}if(this.opts.marginLeft===undefined){this.opts.marginLeft=margin;}else{data=Utils.parseHeight(this.opts.marginLeft);this.opts.marginLeft=data.h;delete this.opts.margin;}this.opts.marginUnit=data.unit;// in case side were spelled out, use those units instead...
if(this.opts.marginTop===this.opts.marginBottom&&this.opts.marginLeft===this.opts.marginRight&&this.opts.marginTop===this.opts.marginRight){this.opts.margin=this.opts.marginTop;// makes it easier to check for no-ops in setMargin()
}return this;}/* ===========================================================================================
       * drag&drop methods that used to be stubbed out and implemented in dd-gridstack.ts
       * but caused loading issues in prod - see https://github.com/gridstack/gridstack.js/issues/2039
       * ===========================================================================================
       */ /** get the global (but static to this code) DD implementation */static getDD(){return dd;}/**
       * call to setup dragging in from the outside (say toolbar), by specifying the class selection and options.
       * Called during GridStack.init() as options, but can also be called directly (last param are used) in case the toolbar
       * is dynamically create and needs to be set later.
       * @param dragIn string selector (ex: '.sidebar-item') or list of dom elements
       * @param dragInOptions options - see DDDragOpt. (default: {handle: '.grid-stack-item-content', appendTo: 'body'}
       * @param widgets GridStackWidget def to assign to each element which defines what to create on drop
       * @param root optional root which defaults to document (for shadow dom pass the parent HTMLDocument)
       */static setupDragIn(dragIn,dragInOptions,widgets,root=document){if(dragInOptions?.pause!==undefined){DDManager.pauseDrag=dragInOptions.pause;}dragInOptions={appendTo:'body',helper:'clone',...(dragInOptions||{})};// default to handle:undefined = drag by the whole item
const els=typeof dragIn==='string'?Utils.getElements(dragIn,root):dragIn;els.forEach((el,i)=>{if(!dd.isDraggable(el))dd.dragIn(el,dragInOptions);if(widgets?.[i])el.gridstackNode=widgets[i];});}/**
       * Enables/Disables dragging by the user of specific grid element. If you want all items, and have it affect future items, use enableMove() instead. No-op for static grids.
       * IF you are looking to prevent an item from moving (due to being pushed around by another during collision) use locked property instead.
       * @param els widget or selector to modify.
       * @param val if true widget will be draggable, assuming the parent grid isn't noMove or static.
       */movable(els,val){if(this.opts.staticGrid)return this;// can't move a static grid!
GridStack.getElements(els).forEach(el=>{const n=el.gridstackNode;if(!n)return;val?delete n.noMove:n.noMove=true;this.prepareDragDrop(n.el);// init DD if need be, and adjust
});return this;}/**
       * Enables/Disables user resizing of specific grid element. If you want all items, and have it affect future items, use enableResize() instead. No-op for static grids.
       * @param els  widget or selector to modify
       * @param val  if true widget will be resizable, assuming the parent grid isn't noResize or static.
       */resizable(els,val){if(this.opts.staticGrid)return this;// can't resize a static grid!
GridStack.getElements(els).forEach(el=>{const n=el.gridstackNode;if(!n)return;val?delete n.noResize:n.noResize=true;this.prepareDragDrop(n.el);// init DD if need be, and adjust
});return this;}/**
       * Temporarily disables widgets moving/resizing.
       * If you want a more permanent way (which freezes up resources) use `setStatic(true)` instead.
       * Note: no-op for static grid
       * This is a shortcut for:
       * @example
       *  grid.enableMove(false);
       *  grid.enableResize(false);
       * @param recurse true (default) if sub-grids also get updated
       */disable(recurse=true){if(this.opts.staticGrid)return;this.enableMove(false,recurse);this.enableResize(false,recurse);this._triggerEvent('disable');return this;}/**
       * Re-enables widgets moving/resizing - see disable().
       * Note: no-op for static grid.
       * This is a shortcut for:
       * @example
       *  grid.enableMove(true);
       *  grid.enableResize(true);
       * @param recurse true (default) if sub-grids also get updated
       */enable(recurse=true){if(this.opts.staticGrid)return;this.enableMove(true,recurse);this.enableResize(true,recurse);this._triggerEvent('enable');return this;}/**
       * Enables/disables widget moving. No-op for static grids, and locally defined items still overrule
       * @param recurse true (default) if sub-grids also get updated
       */enableMove(doEnable,recurse=true){if(this.opts.staticGrid)return this;// can't move a static grid!
doEnable?delete this.opts.disableDrag:this.opts.disableDrag=true;// FIRST before we update children as grid overrides #1658
this.engine.nodes.forEach(n=>{this.prepareDragDrop(n.el);if(n.subGrid&&recurse)n.subGrid.enableMove(doEnable,recurse);});return this;}/**
       * Enables/disables widget resizing. No-op for static grids.
       * @param recurse true (default) if sub-grids also get updated
       */enableResize(doEnable,recurse=true){if(this.opts.staticGrid)return this;// can't size a static grid!
doEnable?delete this.opts.disableResize:this.opts.disableResize=true;// FIRST before we update children as grid overrides #1658
this.engine.nodes.forEach(n=>{this.prepareDragDrop(n.el);if(n.subGrid&&recurse)n.subGrid.enableResize(doEnable,recurse);});return this;}/** @internal call when drag (and drop) needs to be cancelled (Esc key) */cancelDrag(){const n=this._placeholder?.gridstackNode;if(!n)return;if(n._isExternal){// remove any newly inserted nodes (from outside)
n._isAboutToRemove=true;this.engine.removeNode(n);}else if(n._isAboutToRemove){// restore any temp removed (dragged over trash)
GridStack._itemRemoving(n.el,false);}this.engine.restoreInitial();}/** @internal removes any drag&drop present (called during destroy) */_removeDD(el){dd.draggable(el,'destroy').resizable(el,'destroy');if(el.gridstackNode){delete el.gridstackNode._initDD;// reset our DD init flag
}delete el.ddElement;return this;}/** @internal called to add drag over to support widgets being added externally */_setupAcceptWidget(){// check if we need to disable things
if(this.opts.staticGrid||!this.opts.acceptWidgets&&!this.opts.removable){dd.droppable(this.el,'destroy');return this;}// vars shared across all methods
let cellHeight,cellWidth;const onDrag=(event,el,helper)=>{helper=helper||el;const node=helper.gridstackNode;if(!node)return;// if the element is being dragged from outside, scale it down to match the grid's scale
// and slightly adjust its position relative to the mouse
if(!node.grid?.el){// this scales the helper down
helper.style.transform=`scale(${1/this.dragTransform.xScale},${1/this.dragTransform.yScale})`;// this makes it so that the helper is well positioned relative to the mouse after scaling
const helperRect=helper.getBoundingClientRect();helper.style.left=helperRect.x+(this.dragTransform.xScale-1)*(event.clientX-helperRect.x)/this.dragTransform.xScale+'px';helper.style.top=helperRect.y+(this.dragTransform.yScale-1)*(event.clientY-helperRect.y)/this.dragTransform.yScale+'px';helper.style.transformOrigin=`0px 0px`;}let{top,left}=helper.getBoundingClientRect();const rect=this.el.getBoundingClientRect();left-=rect.left;top-=rect.top;const ui={position:{top:top*this.dragTransform.xScale,left:left*this.dragTransform.yScale}};if(node._temporaryRemoved){node.x=Math.max(0,Math.round(left/cellWidth));node.y=Math.max(0,Math.round(top/cellHeight));delete node.autoPosition;this.engine.nodeBoundFix(node);// don't accept *initial* location if doesn't fit #1419 (locked drop region, or can't grow), but maybe try if it will go somewhere
if(!this.engine.willItFit(node)){node.autoPosition=true;// ignore x,y and try for any slot...
if(!this.engine.willItFit(node)){dd.off(el,'drag');// stop calling us
return;// full grid or can't grow
}if(node._willFitPos){// use the auto position instead #1687
Utils.copyPos(node,node._willFitPos);delete node._willFitPos;}}// re-use the existing node dragging method
this._onStartMoving(helper,event,ui,node,cellWidth,cellHeight);}else{// re-use the existing node dragging that does so much of the collision detection
this._dragOrResize(helper,event,ui,node,cellWidth,cellHeight);}};dd.droppable(this.el,{accept:el=>{const node=el.gridstackNode||this._readAttr(el,false);// set accept drop to true on ourself (which we ignore) so we don't get "can't drop" icon in HTML5 mode while moving
if(node?.grid===this)return true;if(!this.opts.acceptWidgets)return false;// check for accept method or class matching
let canAccept=true;if(typeof this.opts.acceptWidgets==='function'){canAccept=this.opts.acceptWidgets(el);}else{const selector=this.opts.acceptWidgets===true?'.grid-stack-item':this.opts.acceptWidgets;canAccept=el.matches(selector);}// finally check to make sure we actually have space left #1571 #2633
if(canAccept&&node&&this.opts.maxRow){const n={w:node.w,h:node.h,minW:node.minW,minH:node.minH};// only width/height matters and autoPosition
canAccept=this.engine.willItFit(n);}return canAccept;}})/**
               * entering our grid area
               */.on(this.el,'dropover',(event,el,helper)=>{// console.log(`over ${this.el.gridstack.opts.id} ${count++}`); // TEST
let node=helper?.gridstackNode||el.gridstackNode;// ignore drop enter on ourself (unless we temporarily removed) which happens on a simple drag of our item
if(node?.grid===this&&!node._temporaryRemoved){// delete node._added; // reset this to track placeholder again in case we were over other grid #1484 (dropout doesn't always clear)
return false;// prevent parent from receiving msg (which may be a grid as well)
}// If sidebar item, restore the sidebar node size to ensure consistent behavior when dragging between grids
if(node?._sidebarOrig){node.w=node._sidebarOrig.w;node.h=node._sidebarOrig.h;}// fix #1578 when dragging fast, we may not get a leave on the previous grid so force one now
if(node?.grid&&node.grid!==this&&!node._temporaryRemoved){// console.log('dropover without leave'); // TEST
const otherGrid=node.grid;otherGrid._leave(el,helper);}helper=helper||el;// cache cell dimensions (which don't change), position can animate if we removed an item in otherGrid that affects us...
cellWidth=this.cellWidth();cellHeight=this.getCellHeight(true);// sidebar items: load any element attributes if we don't have a node on first enter from the sidebar
if(!node){const attr=helper.getAttribute('data-gs-widget')||helper.getAttribute('gridstacknode');// TBD: temp support for old V11.0.0 attribute
if(attr){try{node=JSON.parse(attr);}catch(error){void 0;}helper.removeAttribute('data-gs-widget');helper.removeAttribute('gridstacknode');}if(!node)node=this._readAttr(helper);// used to pass false for #2354, but now we clone top level node
// On first grid enter from sidebar, set the initial sidebar item size properties for the node
node._sidebarOrig={w:node.w,h:node.h};}if(!node.grid){// sidebar item
if(!node.el)node={...node};// clone first time we're coming from sidebar (since 'clone' doesn't copy vars)
node._isExternal=true;helper.gridstackNode=node;}// calculate the grid size based on element outer size
const w=node.w||Math.round(helper.offsetWidth/cellWidth)||1;const h=node.h||Math.round(helper.offsetHeight/cellHeight)||1;// if the item came from another grid, make a copy and save the original info in case we go back there
if(node.grid&&node.grid!==this){// copy the node original values (min/max/id/etc...) but override width/height/other flags which are this grid specific
// console.log('dropover cloning node'); // TEST
if(!el._gridstackNodeOrig)el._gridstackNodeOrig=node;// shouldn't have multiple nested!
el.gridstackNode=node={...node,w,h,grid:this};delete node.x;delete node.y;this.engine.cleanupNode(node).nodeBoundFix(node);// restore some internal fields we need after clearing them all
node._initDD=node._isExternal=// DOM needs to be re-parented on a drop
node._temporaryRemoved=true;// so it can be inserted onDrag below
}else{node.w=w;node.h=h;node._temporaryRemoved=true;// so we can insert it
}// clear any marked for complete removal (Note: don't check _isAboutToRemove as that is cleared above - just do it)
GridStack._itemRemoving(node.el,false);dd.on(el,'drag',onDrag);// make sure this is called at least once when going fast #1578
onDrag(event,el,helper);return false;// prevent parent from receiving msg (which may be a grid as well)
})/**
               * Leaving our grid area...
               */.on(this.el,'dropout',(event,el,helper)=>{// console.log(`out ${this.el.gridstack.opts.id} ${count++}`); // TEST
const node=helper?.gridstackNode||el.gridstackNode;if(!node)return false;// fix #1578 when dragging fast, we might get leave after other grid gets enter (which calls us to clean)
// so skip this one if we're not the active grid really..
if(!node.grid||node.grid===this){this._leave(el,helper);// if we were created as temporary nested grid, go back to before state
if(this._isTemp){this.removeAsSubGrid(node);}}return false;// prevent parent from receiving msg (which may be grid as well)
})/**
               * end - releasing the mouse
               */.on(this.el,'drop',(event,el,helper)=>{const node=helper?.gridstackNode||el.gridstackNode;// ignore drop on ourself from ourself that didn't come from the outside - dragend will handle the simple move instead
if(node?.grid===this&&!node._isExternal)return false;const wasAdded=!!this.placeholder.parentElement;// skip items not actually added to us because of constrains, but do cleanup #1419
const wasSidebar=el!==helper;this.placeholder.remove();delete this.placeholder.gridstackNode;// disable animation when replacing a placeholder (already positioned) with actual content
const noAnim=wasAdded&&this.opts.animate;if(noAnim)this.setAnimation(false);// notify previous grid of removal
// console.log('drop delete _gridstackNodeOrig') // TEST
const origNode=el._gridstackNodeOrig;delete el._gridstackNodeOrig;if(wasAdded&&origNode?.grid&&origNode.grid!==this){const oGrid=origNode.grid;oGrid.engine.removeNodeFromLayoutCache(origNode);oGrid.engine.removedNodes.push(origNode);oGrid._triggerRemoveEvent()._triggerChangeEvent();// if it's an empty sub-grid that got auto-created, nuke it
if(oGrid.parentGridNode&&!oGrid.engine.nodes.length&&oGrid.opts.subGridDynamic){oGrid.removeAsSubGrid();}}if(!node)return false;// use existing placeholder node as it's already in our list with drop location
if(wasAdded){this.engine.cleanupNode(node);// removes all internal _xyz values
node.grid=this;}delete node.grid?._isTemp;dd.off(el,'drag');// if we made a copy insert that instead of the original (sidebar item)
if(helper!==el){helper.remove();el=helper;}else{el.remove();// reduce flicker as we change depth here, and size further down
}this._removeDD(el);if(!wasAdded)return false;const subGrid=node.subGrid?.el?.gridstack;// set when actual sub-grid present
Utils.copyPos(node,this._readAttr(this.placeholder));// placeholder values as moving VERY fast can throw things off #1578
Utils.removePositioningStyles(el);// give the user a chance to alter the widget that will get inserted if new sidebar item
if(wasSidebar&&(node.content||node.subGridOpts||GridStack.addRemoveCB)){delete node.el;el=this.addWidget(node);}else{this._prepareElement(el,true,node);this.el.appendChild(el);// resizeToContent is skipped in _prepareElement() until node is visible (clientHeight=0) so call it now
this.resizeToContentCheck(false,node);if(subGrid){subGrid.parentGridNode=node;if(!subGrid.opts.styleInHead)subGrid._updateStyles(true);// re-create sub-grid styles now that we've moved
}this._updateContainerHeight();}this.engine.addedNodes.push(node);this._triggerAddEvent();this._triggerChangeEvent();this.engine.endUpdate();if(this._gsEventHandler['dropped']){this._gsEventHandler['dropped']({...event,type:'dropped'},origNode&&origNode.grid?origNode:undefined,node);}// delay adding animation back
if(noAnim)this.setAnimation(this.opts.animate,true);return false;// prevent parent from receiving msg (which may be grid as well)
});return this;}/** @internal mark item for removal */static _itemRemoving(el,remove){if(!el)return;const node=el?el.gridstackNode:undefined;if(!node?.grid||el.classList.contains(node.grid.opts.removableOptions.decline))return;remove?node._isAboutToRemove=true:delete node._isAboutToRemove;remove?el.classList.add('grid-stack-item-removing'):el.classList.remove('grid-stack-item-removing');}/** @internal called to setup a trash drop zone if the user specifies it */_setupRemoveDrop(){if(typeof this.opts.removable!=='string')return this;const trashEl=document.querySelector(this.opts.removable);if(!trashEl)return this;// only register ONE static drop-over/dropout callback for the 'trash', and it will
// update the passed in item and parent grid because the '.trash' is a shared resource anyway,
// and Native DD only has 1 event CB (having a list and technically a per grid removableOptions complicates things greatly)
if(!this.opts.staticGrid&&!dd.isDroppable(trashEl)){dd.droppable(trashEl,this.opts.removableOptions).on(trashEl,'dropover',(event,el)=>GridStack._itemRemoving(el,true)).on(trashEl,'dropout',(event,el)=>GridStack._itemRemoving(el,false));}return this;}/**
       * prepares the element for drag&drop - this is normally called by makeWidget() unless are are delay loading
       * @param el GridItemHTMLElement of the widget
       * @param [force=false]
       * */prepareDragDrop(el,force=false){const node=el?.gridstackNode;if(!node)return;const noMove=node.noMove||this.opts.disableDrag;const noResize=node.noResize||this.opts.disableResize;// check for disabled grid first
const disable=this.opts.staticGrid||noMove&&noResize;if(force||disable){if(node._initDD){this._removeDD(el);// nukes everything instead of just disable, will add some styles back next
delete node._initDD;}if(disable)el.classList.add('ui-draggable-disabled','ui-resizable-disabled');// add styles one might depend on #1435
if(!force)return this;}if(!node._initDD){// variables used/cashed between the 3 start/move/end methods, in addition to node passed above
let cellWidth;let cellHeight;/** called when item starts moving/resizing */const onStartMoving=(event,ui)=>{// trigger any 'dragstart' / 'resizestart' manually
if(this._gsEventHandler[event.type]){this._gsEventHandler[event.type](event,event.target);}cellWidth=this.cellWidth();cellHeight=this.getCellHeight(true);// force pixels for calculations
this._onStartMoving(el,event,ui,node,cellWidth,cellHeight);};/** called when item is being dragged/resized */const dragOrResize=(event,ui)=>{this._dragOrResize(el,event,ui,node,cellWidth,cellHeight);};/** called when the item stops moving/resizing */const onEndMoving=event=>{this.placeholder.remove();delete this.placeholder.gridstackNode;delete node._moving;delete node._event;delete node._lastTried;const widthChanged=node.w!==node._orig.w;// if the item has moved to another grid, we're done here
const target=event.target;if(!target.gridstackNode||target.gridstackNode.grid!==this)return;node.el=target;if(node._isAboutToRemove){const grid=el.gridstackNode.grid;if(grid._gsEventHandler[event.type]){grid._gsEventHandler[event.type](event,target);}grid.engine.nodes.push(node);// temp add it back so we can proper remove it next
grid.removeWidget(el,true,true);}else{Utils.removePositioningStyles(target);if(node._temporaryRemoved){// got removed - restore item back to before dragging position
Utils.copyPos(node,node._orig);// @ts-ignore
this._writePosAttr(target,node);this.engine.addNode(node);}else{// move to new placeholder location
this._writePosAttr(target,node);}if(this._gsEventHandler[event.type]){this._gsEventHandler[event.type](event,target);}}// @ts-ignore
this._extraDragRow=0;// @ts-ignore
this._updateContainerHeight();// @ts-ignore
this._triggerChangeEvent();this.engine.endUpdate();if(event.type==='resizestop'){if(Number.isInteger(node.sizeToContent))node.sizeToContent=node.h;// new soft limit
this.resizeToContentCheck(widthChanged,node);// wait for width animation if changed
}};dd.draggable(el,{start:onStartMoving,stop:onEndMoving,drag:dragOrResize}).resizable(el,{start:onStartMoving,stop:onEndMoving,resize:dragOrResize});node._initDD=true;// we've set DD support now
}// finally fine tune move vs resize by disabling any part...
dd.draggable(el,noMove?'disable':'enable').resizable(el,noResize?'disable':'enable');return this;}/** @internal handles actual drag/resize start */_onStartMoving(el,event,ui,node,cellWidth,cellHeight){this.engine.cleanNodes().beginUpdate(node);// @ts-ignore
this._writePosAttr(this.placeholder,node);this.el.appendChild(this.placeholder);this.placeholder.gridstackNode=node;// console.log('_onStartMoving placeholder') // TEST
// if the element is inside a grid, it has already been scaled
// we can use that as a scale reference
if(node.grid?.el){this.dragTransform=Utils.getValuesFromTransformedElement(el);}// if the element is being dragged from outside (not from any grid)
// we use the grid as the transformation reference, since the helper is not subject to transformation
else if(this.placeholder&&this.placeholder.closest('.grid-stack')){const gridEl=this.placeholder.closest('.grid-stack');this.dragTransform=Utils.getValuesFromTransformedElement(gridEl);}// Fallback
else{this.dragTransform={xScale:1,xOffset:0,yScale:1,yOffset:0};}node.el=this.placeholder;node._lastUiPosition=ui.position;node._prevYPix=ui.position.top;node._moving=event.type==='dragstart';// 'dropover' are not initially moving so they can go exactly where they enter (will push stuff out of the way)
delete node._lastTried;if(event.type==='dropover'&&node._temporaryRemoved){// console.log('engine.addNode x=' + node.x); // TEST
this.engine.addNode(node);// will add, fix collisions, update attr and clear _temporaryRemoved
node._moving=true;// AFTER, mark as moving object (wanted fix location before)
}// set the min/max resize info taking into account the column count and position (so we don't resize outside the grid)
this.engine.cacheRects(cellWidth,cellHeight,this.opts.marginTop,this.opts.marginRight,this.opts.marginBottom,this.opts.marginLeft);if(event.type==='resizestart'){const colLeft=this.getColumn()-node.x;const rowLeft=(this.opts.maxRow||Number.MAX_SAFE_INTEGER)-node.y;dd.resizable(el,'option','minWidth',cellWidth*Math.min(node.minW||1,colLeft)).resizable(el,'option','minHeight',cellHeight*Math.min(node.minH||1,rowLeft)).resizable(el,'option','maxWidth',cellWidth*Math.min(node.maxW||Number.MAX_SAFE_INTEGER,colLeft)).resizable(el,'option','maxWidthMoveLeft',cellWidth*Math.min(node.maxW||Number.MAX_SAFE_INTEGER,node.x+node.w)).resizable(el,'option','maxHeight',cellHeight*Math.min(node.maxH||Number.MAX_SAFE_INTEGER,rowLeft)).resizable(el,'option','maxHeightMoveUp',cellHeight*Math.min(node.maxH||Number.MAX_SAFE_INTEGER,node.y+node.h));}}/** @internal handles actual drag/resize */_dragOrResize(el,event,ui,node,cellWidth,cellHeight){const p={...node._orig};// could be undefined (_isExternal) which is ok (drag only set x,y and w,h will default to node value)
let resizing;let mLeft=this.opts.marginLeft,mRight=this.opts.marginRight,mTop=this.opts.marginTop,mBottom=this.opts.marginBottom;// if margins (which are used to pass mid point by) are large relative to cell height/width, reduce them down #1855
const mHeight=Math.round(cellHeight*0.1),mWidth=Math.round(cellWidth*0.1);mLeft=Math.min(mLeft,mWidth);mRight=Math.min(mRight,mWidth);mTop=Math.min(mTop,mHeight);mBottom=Math.min(mBottom,mHeight);if(event.type==='drag'){if(node._temporaryRemoved)return;// handled by dropover
const distance=ui.position.top-node._prevYPix;node._prevYPix=ui.position.top;if(this.opts.draggable.scroll!==false){Utils.updateScrollPosition(el,ui.position,distance);}// get new position taking into account the margin in the direction we are moving! (need to pass mid point by margin)
const left=ui.position.left+(ui.position.left>node._lastUiPosition.left?-mRight:mLeft);const top=ui.position.top+(ui.position.top>node._lastUiPosition.top?-mBottom:mTop);p.x=Math.round(left/cellWidth);p.y=Math.round(top/cellHeight);// @ts-ignore// if we're at the bottom hitting something else, grow the grid so cursor doesn't leave when trying to place below others
const prev=this._extraDragRow;if(this.engine.collide(node,p)){const row=this.getRow();let extra=Math.max(0,p.y+node.h-row);if(this.opts.maxRow&&row+extra>this.opts.maxRow){extra=Math.max(0,this.opts.maxRow-row);}// @ts-ignore
this._extraDragRow=extra;// @ts-ignore
}else this._extraDragRow=0;// @ts-ignore
if(this._extraDragRow!==prev)this._updateContainerHeight();if(node.x===p.x&&node.y===p.y)return;// skip same
// DON'T skip one we tried as we might have failed because of coverage <50% before
// if (node._lastTried && node._lastTried.x === x && node._lastTried.y === y) return;
}else if(event.type==='resize'){if(p.x<0)return;// Scrolling page if needed
Utils.updateScrollResize(event,el,cellHeight);// get new size
p.w=Math.round((ui.size.width-mLeft)/cellWidth);p.h=Math.round((ui.size.height-mTop)/cellHeight);if(node.w===p.w&&node.h===p.h)return;if(node._lastTried&&node._lastTried.w===p.w&&node._lastTried.h===p.h)return;// skip one we tried (but failed)
// if we size on left/top side this might move us, so get possible new position as well
const left=ui.position.left+mLeft;const top=ui.position.top+mTop;p.x=Math.round(left/cellWidth);p.y=Math.round(top/cellHeight);resizing=true;}node._event=event;node._lastTried=p;// set as last tried (will nuke if we go there)
const rect={x:ui.position.left+mLeft,y:ui.position.top+mTop,w:(ui.size?ui.size.width:node.w*cellWidth)-mLeft-mRight,h:(ui.size?ui.size.height:node.h*cellHeight)-mTop-mBottom};if(this.engine.moveNodeCheck(node,{...p,cellWidth,cellHeight,rect,resizing})){node._lastUiPosition=ui.position;this.engine.cacheRects(cellWidth,cellHeight,mTop,mRight,mBottom,mLeft);delete node._skipDown;if(resizing&&node.subGrid)node.subGrid.onResize();this._extraDragRow=0;// @ts-ignore
this._updateContainerHeight();const target=event.target;// @ts-ignore
// Do not write sidebar item attributes back to the original sidebar el
if(!node._sidebarOrig){this._writePosAttr(target,node);}if(this._gsEventHandler[event.type]){this._gsEventHandler[event.type](event,target);}}}/** @internal called when item leaving our area by either cursor dropout event
       * or shape is outside our boundaries. remove it from us, and mark temporary if this was
       * our item to start with else restore prev node values from prev grid it came from.
       */_leave(el,helper){helper=helper||el;const node=helper.gridstackNode;if(!node)return;// remove the scale of the helper on leave
helper.style.transform=helper.style.transformOrigin=null;dd.off(el,'drag');// no need to track while being outside
// this gets called when cursor leaves and shape is outside, so only do this once
if(node._temporaryRemoved)return;node._temporaryRemoved=true;this.engine.removeNode(node);// remove placeholder as well, otherwise it's a sign node is not in our list, which is a bigger issue
node.el=node._isExternal&&helper?helper:el;// point back to real item being dragged
const sidebarOrig=node._sidebarOrig;if(node._isExternal)this.engine.cleanupNode(node);// Restore sidebar item initial size info to stay consistent when dragging between multiple grids
node._sidebarOrig=sidebarOrig;if(this.opts.removable===true){// boolean vs a class string
// item leaving us and we are supposed to remove on leave (no need to drag onto trash) mark it so
GridStack._itemRemoving(el,true);}// finally if item originally came from another grid, but left us, restore things back to prev info
if(el._gridstackNodeOrig){// console.log('leave delete _gridstackNodeOrig') // TEST
el.gridstackNode=el._gridstackNodeOrig;delete el._gridstackNodeOrig;}else if(node._isExternal){// item came from outside restore all nodes back to original
this.engine.restoreInitial();}}// legacy method removed
commit(){obsolete(this,this.batchUpdate(false),'commit','batchUpdate','5.2');return this;}}/**
   * callback to create the content of widgets so the app can control how to store and restore it
   * By default this lib will do 'el.textContent = w.content' forcing text only support for avoiding potential XSS issues.
   */GridStack.renderCB=(el,w)=>{if(el&&w?.content)el.textContent=w.content;};/** parent class for sizing content. defaults to '.grid-stack-item-content' */GridStack.resizeToContentParent='.grid-stack-item-content';/** scoping so users can call GridStack.Utils.sort() for example */GridStack.Utils=Utils;/** scoping so users can call new GridStack.Engine(12) for example */GridStack.Engine=GridStackEngine;GridStack.GDRev='11.5.1';var opts={animate:false,float:false,margin:'0.75rem',staticGrid:true,cellHeight:'8rem',columnOpts:{breakpoints:[{w:768,c:1}]}};function calcColumnCount(){var width=$('#content').innerWidth();if(typeof width==="undefined"||width<768){return 1;}if(width<1080){return 8;}return 12;}var Dashboard=/** @class */function(){function Dashboard(){var _this=this;this.grid=GridStack.init(opts);this.resizeGrid();$(window).on('resize',function(){return _this.resizeGrid();});this.manager=new Manager();this.manager.load().refreshAll();$('.refresh-all, .update-filtering').on('click',function(){return _this.manager.refreshAll();});}Dashboard.prototype.getGridStack=function(){return this.grid;};Dashboard.prototype.getManager=function(){return this.manager;};Dashboard.prototype.resizeGrid=function(){this.grid.column(calcColumnCount(),function(column,prevColumn,newNodes,nodes){nodes.forEach(function(node){if(typeof node.x!=="undefined"){node.x=column===1?0:node.x>=column?node.x-column:node.x;}if(typeof node.w!=="undefined"){node.w=column===1||prevColumn===1?1:column<12&&node.w>4?8:node.w;}newNodes.push(node);});});};return Dashboard;}();exports.Dashboard=Dashboard;exports.Manager=Manager;});