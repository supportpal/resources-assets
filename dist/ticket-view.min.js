!function (e, t) {
  "object" == typeof exports && "undefined" != typeof module ? t(exports, require("@supportpal/sweetalert2")) : "function" == typeof define && define.amd ? define(["exports", "@supportpal/sweetalert2"], t) : t((e = "undefined" != typeof globalThis ? globalThis : e || self).SpTicket = {}, e.Swal);
}(this, function (e, t) {
  "use strict";

  var s = function () {
      function e() {
        this.editors = {};
      }
      return e.prototype.initEditor = function (e, t, s, a) {
        void 0 === a && (a = !0);
        var n = $.Deferred(),
          o = this;
        if (this.isInitialised(e)) return a && !this.isFocused(e) && this.editors[e].editor.focus(), this.editors[e].editor.fire("ResizeWindow"), n.resolve(this.editors[e].editor).promise();
        s = $.extend({}, {
          setup: function (s) {
            s.on("init", function () {
              o.loadEditorContent(e, t, s).then(function () {
                a && !o.isFocused(e) && s.focus(), o.setEditor(e, a, s), $(e).trigger("loaded-editor-content", [e, t, s]), n.resolve(s);
              });
            });
          }
        }, s);
        var r = $(e).editor(s);
        return this.setEditor(e, !1, r), n.promise();
      }, e.prototype.destroy = function (e) {
        this.isInitialised(e) && (delete this.editors[e], $(e).editor().remove());
      }, e.prototype.loadEditorContent = function (e, t, s) {
        var a,
          n = $.Deferred(),
          o = $(e).data("route");
        if ("string" != typeof o || "" === o) return n.resolve();
        (t = t.find(".reply-form")).after('<div class="sp-editor-container"></div>');
        var r = t.next(".sp-editor-container"),
          i = $('<div class="sp-editor-preview sp-editor-content"></div>').hide();
        return r.append(i), i.html("").css(null !== (a = t.position()) && void 0 !== a ? a : {}).css("width", t.outerWidth()).css("height", t.outerHeight(!0)).addClass("loadinggif").show(), $.get(o).done(function (e) {
          s.setContent(e.data.purified_text), n.resolve();
        }).always(function () {
          i.hide();
        }), n.promise();
      }, e.prototype.isInitialised = function (e) {
        return this.editors.hasOwnProperty(e) && this.editors[e].hasOwnProperty("initialised") && this.editors[e].initialised;
      }, e.prototype.isFocused = function (e) {
        return this.editors.hasOwnProperty(e) && this.editors[e].hasOwnProperty("focused") && this.editors[e].focused;
      }, e.prototype.setEditor = function (e, t, s) {
        this.editors[e] = {
          initialised: !0,
          focused: t,
          editor: s
        };
      }, e;
    }(),
    a = function () {
      function e(e, t) {
        void 0 === t && (t = "ASC"), this.ticket = e, this.replyOrder = t, this.scrollToMessage() || this.addCollapsedMessageGroup(), e.loadAttachmentPreviews($(".sp-message.sp-message-collapsible")), e.showDownloadAllButton(), $(".sp-message").length > 2 && $(".expand-messages").show(), this.registerListeners();
      }
      return e.prototype.print = function () {
        var e = $(".sp-print-ticket a");
        0 !== e.length && window.open(e.attr("href"), "_blank");
      }, e.prototype.addCollapsedMessageGroup = function () {
        if (!($(".sp-message.sp-message-collapsed").length <= 2 || $(".sp-collapsed-messages").length)) {
          for (var e = [".sp-messages-container[data-position='top']", ".sp-messages-container[data-position='inline']"], t = 0; t < e.length; t++) {
            var s,
              a = $(e[t] + " > .sp-message.sp-message-collapsed");
            if (a.length > 2) (s = "ASC" == this.replyOrder ? a.not(":first").not(":eq(-1)") : a.not(":last").not(":eq(0)")).wrapAll("<div class='sp-collapsed-messages'><span>" + Lang.get("ticket.older_messages", {
              count: s.length
            }) + "</span></div>");
          }
          $(".sp-collapsed-messages").children().children().hide();
        }
      }, e.removeCollapsedMessageGroup = function () {
        $(".sp-collapsed-messages").each(function () {
          $(this).replaceWith(function () {
            return $(this).find(".sp-message").show();
          });
        });
      }, e.prototype.expand = function (e) {
        this.ticket.loadMessage(e), this.ticket.showMessage(e);
      }, e.collapse = function (e) {
        e.hasClass("sp-message-collapsible") && e.find(".sp-message-text-edit").is(":visible") && (e.find(".sp-message-text").show(), e.find(".sp-message-text-edit").hide()), e.find(".sp-message-text").children(".sp-message-text-original").addClass("sp-hidden"), e.find(".sp-message-text").children(".sp-message-text-trimmed").removeClass("sp-hidden"), e.addClass("sp-message-collapsed"), e.removeClass("sp-message-collapsible");
      }, e.prototype.expandAll = function () {
        var t = this;
        e.removeCollapsedMessageGroup(), $(".sp-messages-container .sp-message-collapsed").each(function () {
          t.expand($(this));
        }), $(".expand-messages, .collapse-messages").toggle();
      }, e.prototype.collapseAll = function () {
        $(".sp-messages-container .sp-message-collapsible").each(function () {
          e.collapse($(this));
        }), this.addCollapsedMessageGroup(), $(".expand-messages, .collapse-messages").toggle();
      }, e.prototype.scrollToMessage = function () {
        var e = this,
          t = window.location.hash.substring(1),
          s = this.ticket.getMessage(t),
          a = !1;
        if (!1 !== s) {
          var n = s;
          a = !0, setTimeout(function () {
            return e.ticket.scrollToMessage(n);
          }, 1e3);
        }
        return a;
      }, e.prototype.registerListeners = function () {
        var t = this.ticket.getMessagesContainer();
        $(".sp-collapsed-messages").on("click", e.removeCollapsedMessageGroup), $(document).on("click", ".sp-message-collapsed .sp-message-header-interactive, .sp-message-collapsible .sp-message-header .sp-message-header-interactive", function (e) {
          e.stopPropagation();
        });
        var s = this;
        $(document).on("click", ".sp-message-collapsed", function () {
          s.expand($(this));
        }), $(document).on("click", ".sp-message-collapsible .sp-message-header", function () {
          e.collapse($(this).parents(".sp-message-collapsible"));
        }), $(".expand-messages").on("click", s.expandAll.bind(s)), $(".collapse-messages").on("click", s.collapseAll.bind(s)), $(".sp-message-collapsible").each(function () {
          s.ticket.removeExpandable($(this)), s.ticket.loadMessage($(this));
        }), t.on("click", ".sp-download-all", function () {
          var e = $(this).parents("ul.sp-attachments").find("li"),
            t = s.ticket.getSubject();
          new ZipFile().create(e, t);
        }), t.on("click", ".expandable", function () {
          $(this).next().toggle();
        }).on("click", ".sp-message .sp-message-text a", function () {
          $(this).attr("target", "_blank").attr("rel", "noopener");
        });
      }, e;
    }(),
    n = function (e, t) {
      return n = Object.setPrototypeOf || {
        __proto__: []
      } instanceof Array && function (e, t) {
        e.__proto__ = t;
      } || function (e, t) {
        for (var s in t) Object.prototype.hasOwnProperty.call(t, s) && (e[s] = t[s]);
      }, n(e, t);
    };
  function o(e, t) {
    if ("function" != typeof t && null !== t) throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
    function s() {
      this.constructor = e;
    }
    n(e, t), e.prototype = null === t ? Object.create(t) : (s.prototype = t.prototype, new s());
  }
  "function" == typeof SuppressedError && SuppressedError;
  var r = function () {
      function e() {
        this.autoSaveDraftTime = 3e4, this.drafts = {};
        for (var e = 0, t = this.getTextEditors(); e < t.length; e++) {
          var s = t[e];
          this.drafts[s] = "";
        }
        this.registerListeners();
      }
      return e.prototype.getDrafts = function () {
        return this.drafts;
      }, e.prototype.setDraft = function (e, t) {
        this.drafts[e] = t;
      }, e.prototype.draftHasChanged = function (t, s) {
        return s = e.normaliseMessage(s), e.normaliseMessage(this.drafts[t]) !== s && "" !== s;
      }, e.prototype.addAttachmentsToData = function (e, t) {
        return e.find('input[name^="attachment["]:not(:disabled)').serializeArray().forEach(function (e) {
          t[e.name] = e.value;
        }), t;
      }, e.prototype.storeDraftUsingBeacon = function (e) {
        "sendBeacon" in navigator && navigator.sendBeacon(this.getStoreRoute(), new URLSearchParams($.param(e)));
      }, e.prototype.storeDraftUsingAjax = function (e, t) {
        return $.post(this.getStoreRoute(), t).then(function (t) {
          if (void 0 !== t.status && "success" == t.status) {
            e.find(".draft-success").text(t.message).show(), e.find(".discard-draft").show();
            var s = t.data.attachments;
            for (var a in s) if (s.hasOwnProperty(a)) {
              var n = s[a];
              e.find(".sp-delete-attachment").each(function () {
                $(this).data("hash") !== a && $(this).prop("data-hash") !== a || $(this).data("attachment-id", n);
              });
            }
          }
        });
      }, e.prototype.discardDraft = function (e) {
        return e.find('input[name="attachment[]"]:not(:first)').remove(), e.find(".sp-attached-files li:not(:first) .sp-delete-attachment").attr("data-silent", !0).trigger("click"), $.post(this.getDiscardRoute(), this.getDiscardData(e)).then(function (t) {
          return "success" == t.status ? ($(".sp-ticket-update.sp-alert-success").show(500).delay(5e3).hide(500), e.find(".discard-draft, .draft-success").hide()) : $(".sp-ticket-update.sp-alert-error").show(500).delay(5e3).hide(500), t;
        });
      }, e.normaliseMessage = function (e) {
        return e.replace("<p></p>", "<p>&nbsp;</p>");
      }, e.prototype.autoSave = function (e) {
        for (var t in this.autoSaveDraftTimer && clearTimeout(this.autoSaveDraftTimer), this.drafts) {
          var s = $("#" + t),
            a = s.parents("form");
          if (this.drafts.hasOwnProperty(t) && 0 !== a.find(".save-draft").length && tinymce.get(t) && !a.find('input[type="submit"]').prop("disabled")) {
            var n = this.drafts[t],
              o = s.editor().getContent({
                withoutCursorMarker: !0
              });
            null !== n && this.draftHasChanged(t, o) && (a.find(".save-draft").prop("disabled", !0), this.saveDraft(a, e), a.find(".save-draft").prop("disabled", !1));
          }
        }
        this.autoSaveDraftTimer = setTimeout(this.autoSave.bind(this), this.autoSaveDraftTime);
      }, e.prototype.registerListeners = function () {
        this.autoSave(!1);
        var e = this;
        window.addEventListener("visibilitychange", function () {
          "hidden" === document.visibilityState && e.autoSave(!0);
        });
        var t = Object.keys(this.drafts).map(function (e) {
          return "#" + e;
        }).join(",");
        $(t).on("loaded-editor-content", function (t, s, a, n) {
          var o = $(s).attr("id");
          if ("string" != typeof o) throw new Error("Invalid id attribute.");
          e.setDraft(o, n.getContent({
            withoutCursorMarker: !0
          }));
        }), $(".save-draft").on("click", function (t) {
          e.saveDraft($(this).parents("form"), !1);
        }), $(".discard-draft").on("click", function () {
          e.discardDraft($(this).parents("form"));
        });
      }, e;
    }(),
    i = function (e) {
      function t() {
        return null !== e && e.apply(this, arguments) || this;
      }
      return o(t, e), t.prototype.getTextEditors = function () {
        return [t.messageId];
      }, t.prototype.saveDraft = function (e, s) {
        var a = e.find("textarea:not(.CodeMirror textarea):eq(0)").editor(),
          n = a.getContent({
            withoutCursorMarker: !0
          }),
          o = a.getContent();
        this.setDraft(t.messageId, n);
        var r = {
          _token: $("meta[name=csrf_token]").prop("content"),
          ticket_number: e.find('input[name="ticket_number"]').val(),
          is_draft: 1,
          text: o
        };
        this.addAttachmentsToData(e, r), s ? this.storeDraftUsingBeacon(r) : this.storeDraftUsingAjax(e, r);
      }, t.prototype.getStoreRoute = function () {
        return laroute.route("ticket.frontend.draft.store");
      }, t.prototype.getDiscardRoute = function () {
        return laroute.route("ticket.frontend.draft.discard");
      }, t.prototype.getDiscardData = function (e) {
        return {
          ticket_number: e.find('input[name="ticket_number"]').val()
        };
      }, t.prototype.discardDraft = function (s) {
        var a = this;
        return e.prototype.discardDraft.call(this, s).then(function (e) {
          if ("success" == e.status) {
            var s = $("#" + t.messageId).editor();
            s.setContent(""), a.setDraft(t.messageId, s.getContent({
              withoutCursorMarker: !0
            }));
          }
          return e;
        });
      }, t.messageId = "newMessage", t;
    }(r);
  var d = function () {
      function e() {
        this.messageDfd = $.Deferred(), this.messageDfdNext = this.messageDfd, this.messageDfd.resolve();
      }
      return e.prototype.print = function () {
        var e = this;
        t.fire({
          title: Lang.get("general.loading"),
          allowOutsideClick: !1,
          didOpen: function () {
            t.showLoading();
            var s = [];
            $(".sp-message").each(function (t, a) {
              s.push(e.loadMessage($(a)));
            }), $.when.apply($, s).then(function () {
              return t.close();
            });
          },
          didClose: function () {
            setTimeout(window.print, 100);
          }
        });
      }, e.prototype.loadMessage = function (e, s) {
        void 0 === s && (s = null);
        var a = this,
          n = e.find(".sp-message-text");
        return e.hasClass("sp-message-text-loading") || n.children(".sp-message-text-original").hasClass("sp-message-text-loaded") ? (this.removeExpandable(e), this.loadAttachmentPreviews(e), "function" == typeof s && s(), this.messageDfdNext) : (e.find(".sp-message-text").append('<span class="sp-loading sp-description"><i class="fas fa-spinner fa-pulse"></i>&nbsp; ' + Lang.get("general.loading") + "...</span>"), e.addClass("sp-message-text-loading"), this.messageDfdNext = this.messageDfdNext.then(function () {
          return $.get(a.getLoadMessageRoute(e)).done(function (t) {
            n.children(".sp-message-text-original").html(t.data.purified_text).addClass("sp-message-text-loaded"), a.removeExpandable(e), a.loadAttachmentPreviews(e), "function" == typeof s && s();
          }).fail(function () {
            t.fire(Lang.get("messages.error"), Lang.get("messages.error_loading_message"), "error");
          }).always(function () {
            e.removeClass("sp-message-text-loading"), e.find(".sp-message-text .sp-loading").remove();
          });
        }), this.messageDfdNext);
      }, e.prototype.showMessage = function (e) {
        e.removeClass("sp-message-collapsed").addClass("sp-message-collapsible"), e.find(".sp-message-text").children(".sp-message-text-trimmed").addClass("sp-hidden"), e.find(".sp-message-text").children(".sp-message-text-original").removeClass("sp-hidden"), this.removeExpandable(e);
      }, e.prototype.loadAttachmentPreviews = function (e) {
        App.attachments.loadPreviews(e);
      }, e.prototype.removeExpandable = function (e) {
        var t = e.find(".supportpal_quote:first");
        if (0 !== t.length) {
          var s = e.children(".sp-message-text").children(".sp-message-text-original").text();
          s.substring(0, s.indexOf(t.text())).trim().length || (t.removeClass("supportpal_quote"), t.prev(".expandable").remove());
        }
      }, e.prototype.scrollToMessage = function (e) {
        var t, s, n;
        a.removeCollapsedMessageGroup(), this.loadMessage(e), e.hasClass("sp-message-collapsed") && e.toggleClass("sp-message-collapsible sp-message-collapsed").find(".sp-message-text").children(".sp-message-text-original, .sp-message-text-trimmed").toggle(), e.addClass("sp-new-message"), setTimeout(function () {
          e.removeClass("sp-new-message");
        }, 3e3), t = e.position().top, s = $(".sp-alert-sticky:visible"), n = s.length ? -48 : 0, s.each(function () {
          var e = $(this).outerHeight();
          void 0 !== e && (n += e);
        }), $("#content").animate({
          scrollTop: t + n - 12
        }, 1e3);
      }, e.prototype.showDownloadAllButton = function () {
        ZipFile.isSupported() && this.getMessagesContainer().find("ul.sp-attachments").each(function () {
          $(this).find("li").length > 1 && $(this).find(".sp-download-all").show();
        });
      }, e;
    }(),
    p = function (e) {
      function t() {
        return null !== e && e.apply(this, arguments) || this;
      }
      return o(t, e), t.prototype.getSubject = function () {
        return $('meta[name="ticket-subject"]').prop("content");
      }, t.prototype.getMessagesContainer = function () {
        return $(".sp-message-block");
      }, t.prototype.getMessage = function (e) {
        var t = e.split("-");
        if (2 !== t.length || !/^\d+$/.test(t[1])) return !1;
        var s = $(".sp-message-" + t[1]);
        return s.length >= 1 && s.first();
      }, t.prototype.getLoadMessageRoute = function (e) {
        var t = $('meta[name="token"]').prop("content"),
          s = laroute.route("ticket.frontend.message.showJson", {
            id: e.data("id")
          });
        return 0 !== t.length && (s += "?token=" + t), s;
      }, t;
    }(d),
    l = function (e) {
      function t(t) {
        var s = e.call(this) || this;
        return s.replyTemplate = t, s;
      }
      return o(t, e), t.prototype.getTextEditors = function () {
        return [t.messageId, t.noteId, t.forwardId];
      }, t.prototype.getStoreRoute = function () {
        return laroute.route("ticket.operator.message.store");
      }, t.prototype.getDiscardRoute = function () {
        return laroute.route("ticket.operator.message.discard");
      }, t.prototype.getDiscardData = function (e) {
        var t = e.find('input[name="reply_type"]').val();
        return {
          ticket_id: e.data("ticket-id"),
          reply_type: t
        };
      }, t.prototype.setMessageDraft = function (e) {
        this.setDraft(t.messageId, e);
      }, t.prototype.setNoteDraft = function (e) {
        this.setDraft(t.noteId, e);
      }, t.prototype.setForwardDraft = function (e) {
        this.setDraft(t.forwardId, e);
      }, t.prototype.saveDraft = function (e, t) {
        var s = e.find("textarea:not(.CodeMirror textarea):eq(0)").editor(),
          a = s.getContent({
            withoutCursorMarker: !0
          }),
          n = s.getContent(),
          o = e.find('input[name="reply_type"]').val();
        "1" == o ? this.setNoteDraft(a) : "2" == o ? this.setForwardDraft(a) : this.setMessageDraft(a);
        var r = e.find('input[name="cannedresponse_usage[]"]'),
          i = {
            _token: $("meta[name=csrf_token]").prop("content"),
            ticket: [e.data("ticket-id")],
            reply_type: o,
            is_draft: 1,
            text: n,
            from_address: "2" == o ? e.find('select[name="from_address"]').val() : null,
            to_address: "2" == o ? e.find('select[name="to_address[]"]').val() : null,
            cc_address: "2" == o ? e.find('select[name="cc_address[]"]').val() : null,
            bcc_address: "2" == o ? e.find('select[name="bcc_address[]"]').val() : null,
            subject: "2" == o ? e.find('input[name="subject"]').val() : null,
            cannedresponse_usage: r.val()
          };
        r.remove(), this.addAttachmentsToData(e, i), t ? this.storeDraftUsingBeacon(i) : this.storeDraftUsingAjax(e, i).then(function () {
          $(".sp-reply-type .sp-action[data-type=" + o + "] .sp-draft-icon").removeClass("sp-hidden");
        });
      }, t.prototype.discardDraft = function (t) {
        var s = this,
          a = t.find('input[name="reply_type"]').val();
        return e.prototype.discardDraft.call(this, t).then(function (e) {
          return "success" == e.status && ($(".sp-reply-type .sp-action[data-type=" + a + "] .sp-draft-icon").addClass("sp-hidden"), 1 == a ? ($("#newNote").editor().setContent(""), s.setNoteDraft($("#newNote").editor().getContent({
            withoutCursorMarker: !0
          }))) : 2 == a ? ($("#newForward").editor().setContent(""), s.setForwardDraft($("#newForward").editor().getContent({
            withoutCursorMarker: !0
          }))) : ($("#newMessage").editor().setContent(s.replyTemplate), $("#newMessage").editor().focus(), s.setMessageDraft($("#newMessage").editor().getContent({
            withoutCursorMarker: !0
          })))), e;
        });
      }, t.messageId = "newMessage", t.noteId = "newNote", t.forwardId = "newForward", t;
    }(r),
    c = function (e) {
      function t() {
        return null !== e && e.apply(this, arguments) || this;
      }
      return o(t, e), t.prototype.getSubject = function () {
        return $(".sp-ticket-subject").text();
      }, t.prototype.getMessagesContainer = function () {
        return $("#tabMessages");
      }, t.prototype.getMessage = function (e) {
        var t = e.split("-");
        if (2 !== t.length || !/^\d+$/.test(t[1])) return !1;
        var s = t[0].toUpperCase() === this.getNotesPlaceholder().replace("-%ID%", "").toUpperCase(),
          a = this,
          n = $(".sp-message-" + t[1]).filter(function () {
            var e = "inline" === a.getMessagePosition($(this));
            return s ? !e : e;
          });
        return n.length >= 1 && n.first();
      }, t.prototype.getMessagePosition = function (e) {
        return e.parents(".sp-messages-container[data-position='top']").length ? "top" : "inline";
      }, t.prototype.getId = function (e) {
        return "top" === this.getMessagePosition(e) ? this.getNotesPlaceholder().replace("%ID%", e.data("id")) : this.getMessagesPlaceholder().replace("%ID%", e.data("id"));
      }, t.prototype.getNotesPlaceholder = function () {
        return $('meta[name="notes-url-id"]').prop("content");
      }, t.prototype.getMessagesPlaceholder = function () {
        return $('meta[name="messages-url-id"]').prop("content");
      }, t.prototype.getLoadMessageRoute = function (e) {
        return laroute.route("ticket.operator.message.showJson", {
          id: e.data("id")
        });
      }, t;
    }(d);
  e.Editor = s, e.FrontendDraftMessage = i, e.FrontendTicket = p, e.OperatorDraftMessage = l, e.OperatorTicket = c, e.TicketView = a;
});